# Makefile.in generated by automake 1.15.1 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2017 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Copyright (c) 2013-2016 The Bitcoin Core developers
# Distributed under the MIT software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.

# - All variables are namespaced with MINISKETCH_ to avoid colliding with
#     downstream makefiles.
# - All Variables ending in _HEADERS or _SOURCES confuse automake, so the
#     _INT postfix is applied.
# - Convenience variables, for example a MINISKETCH_FIELDS_DIR should not be used
#     as they interfere with automatic dependency generation
# - The %reldir% is the relative path from the Makefile.am. This allows
#   downstreams to use these variables without having to manually account for
#   the path change.

# Copyright (c) 2019 The Bitcoin Core developers
# Distributed under the MIT software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.

# Copyright (c) 2016 The Bitcoin Core developers
# Distributed under the MIT software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.

# Copyright (c) 2013-2019 The Bitcoin Core developers
# Distributed under the MIT software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.

# Copyright (c) 2013-2020 The Bitcoin Core developers
# Distributed under the MIT software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.

# Copyright (c) 2013-2016 The Bitcoin Core developers
# Distributed under the MIT software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.

# Copyright (c) 2015-2016 The Bitcoin Core developers
# Distributed under the MIT software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.

# Copyright (c) 2013-2016 The Bitcoin Core developers
# Distributed under the MIT software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.

# Copyright (c) 2013-2016 The Bitcoin Core developers
# Distributed under the MIT software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.

# - All variables are namespaced with UNIVALUE_ to avoid colliding with
#     downstream makefiles.
# - All Variables ending in _HEADERS or _SOURCES confuse automake, so the
#     _INT postfix is applied.
# - Convenience variables, for example a UNIVALUE_TEST_DIR should not be used
#     as they interfere with automatic dependency generation
# - The %reldir% is the relative path from the Makefile.am. This allows
#   downstreams to use these variables without having to manually account for
#   the path change.




am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/bitcoin
pkgincludedir = $(includedir)/bitcoin
pkglibdir = $(libdir)/bitcoin
pkglibexecdir = $(libexecdir)/bitcoin
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
bin_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_2) $(am__EXEEXT_3) \
	$(am__EXEEXT_4) $(am__EXEEXT_5) $(am__EXEEXT_6) \
	$(am__EXEEXT_7) $(am__EXEEXT_8) $(am__EXEEXT_9) \
	$(am__EXEEXT_10) $(am__EXEEXT_11) $(am__EXEEXT_12)
noinst_PROGRAMS = $(am__EXEEXT_14) $(am__EXEEXT_15) $(am__EXEEXT_17)
TESTS = $(am__EXEEXT_18) $(am__EXEEXT_12)
am__append_1 = $(LIBBITCOIN_CRYPTO_SSE41)
am__append_2 = $(LIBBITCOIN_CRYPTO_AVX2)
am__append_3 = $(LIBBITCOIN_CRYPTO_X86_SHANI)
#am__append_4 = $(LIBBITCOIN_CRYPTO_ARM_SHANI)
am__append_5 = bitcoind
#am__append_6 = bitcoin-node
am__append_7 = bitcoin-cli
am__append_8 = bitcoin-tx
#am__append_9 = bitcoin-wallet
am__append_10 = bitcoin-util
#am__append_11 = bitcoin-chainstate
#am__append_12 = wallet/init.cpp
#am__append_13 = $(BDB_CPPFLAGS)
am__append_14 = dummywallet.cpp
#am__append_15 = wallet/sqlite.cpp
#am__append_16 = wallet/bdb.cpp wallet/salvage.cpp
am__append_17 = crypto/sha256_sse4.cpp
am__append_18 = util/url.cpp
#am__append_19 = bitcoind-res.rc
#am__append_20 = bitcoin-cli-res.rc
#am__append_21 = bitcoin-tx-res.rc
#am__append_22 = bitcoin-wallet-res.rc
#am__append_23 = bitcoin-util-res.rc
#

# bitcoinkernel library #
#am__append_24 = $(LIBBITCOINKERNEL)

# TODO: For now, Specify -static in both CXXFLAGS and LDFLAGS when building for
#       windows targets so libtool will only build a static version of this
#       library. There are unresolved problems when building dll's for mingw-w64
#       and attempting to statically embed libstdc++, libpthread, etc.
##am__append_25 = -static
##am__append_26 = -static
#

# bitcoinconsensus library #
am__append_27 = $(LIBBITCOINCONSENSUS)
#am__append_28 = $(libbitcoin_ipc_mpgen_output)
am__append_29 = -DHAVE_CLMUL
am__append_30 = $(LIBMINISKETCH_CLMUL)
am__append_31 = -DHAVE_CLZ
am__append_32 =  \
	$(MINISKETCH_TEST) \
	$(UNIVALUE_TESTS)
am__append_33 = $(MINISKETCH_TEST)
am__append_34 = -DHAVE_SSE42=1
#am__append_35 = -DHAVE_SSE42=0
#am__append_36 = -DHAVE_ARM64_CRC32C=1
am__append_37 = -DHAVE_ARM64_CRC32C=0
#am__append_38 = -DBYTE_ORDER_BIG_ENDIAN=1
am__append_39 = -DBYTE_ORDER_BIG_ENDIAN=0
am__append_40 = $(LIBCRC32C_SSE42_INT)
am__append_41 = $(LIBCRC32C_SSE42_INT)
#am__append_42 = $(LIBCRC32C_ARM_CRC_INT)
#am__append_43 = $(LIBCRC32C_ARM_CRC_INT)
#am__append_44 = -DLEVELDB_IS_BIG_ENDIAN=1
am__append_45 = -DLEVELDB_IS_BIG_ENDIAN=0
#am__append_46 = -DLEVELDB_PLATFORM_WINDOWS -D_UNICODE -DUNICODE -D__USE_MINGW_ANSI_STDIO=1
am__append_47 = -DLEVELDB_PLATFORM_POSIX
#am__append_48 = leveldb/util/env_windows.cc
am__append_49 = leveldb/util/env_posix.cc
am__append_50 = test/fuzz/fuzz
am__append_51 = test/test_bitcoin
am__append_52 = $(MINIUPNPC_LIBS)
#am__append_53 = $(NATPMP_LIBS)
#am__append_54 = \
#  wallet/test/psbt_wallet_tests.cpp \
#  wallet/test/spend_tests.cpp \
#  wallet/test/wallet_tests.cpp \
#  wallet/test/walletdb_tests.cpp \
#  wallet/test/wallet_crypto_tests.cpp \
#  wallet/test/wallet_transaction_tests.cpp \
#  wallet/test/coinselector_tests.cpp \
#  wallet/test/init_tests.cpp \
#  wallet/test/ismine_tests.cpp \
#  wallet/test/scriptpubkeyman_tests.cpp

#am__append_55 = \
# $(SQLITE_LIBS) \
# $(BDB_LIBS)

##am__append_56 = wallet/test/db_tests.cpp
##am__append_57 = \
## wallet/test/fuzz/notifications.cpp

#am__append_58 = \
#  wallet/test/util.cpp \
#  wallet/test/util.h \
#  wallet/test/wallet_test_fixture.cpp \
#  wallet/test/wallet_test_fixture.h \
#  wallet/test/init_test_fixture.cpp \
#  wallet/test/init_test_fixture.h

#am__append_59 = $(LIBBITCOIN_WALLET)
#am__append_60 = $(BDB_CPPFLAGS)
am__append_61 = $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)
am__append_62 = $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)
am__append_63 = $(CLEAN_BITCOIN_TEST)
am__append_64 = $(UNIVALUE_TESTS)
am__append_65 = bench/bench_bitcoin
am__append_66 = $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)
#am__append_67 = bench/coin_selection.cpp \
#	bench/wallet_balance.cpp \
#	bench/wallet_loading.cpp
am__append_68 = $(CLEAN_BITCOIN_BENCH)
#am__append_69 = qt/bitcoin-qt
##am__append_70 = bitcoin-gui
#am__append_71 = qt/libbitcoinqt.a
##am__append_72 = $(BITCOIN_QT_WINDOWS_CPP)
##am__append_73 = $(BITCOIN_QT_WALLET_CPP)
##am__append_74 = $(BITCOIN_MM)
##am__append_75 = $(BITCOIN_QT_RC)
##am__append_76 = $(LIBBITCOIN_UTIL) $(LIBBITCOIN_WALLET)
#am__append_77 = $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)
#am__append_78 = $(CLEAN_QT)
#am__append_79 = qt/test/test_bitcoin-qt
#am__append_80 = qt/test/test_bitcoin-qt
##am__append_81 = \
##  qt/test/moc_addressbooktests.cpp \
##  qt/test/moc_wallettests.cpp

##am__append_82 = \
##  qt/test/addressbooktests.cpp \
##  qt/test/wallettests.cpp \
##  wallet/test/wallet_test_fixture.cpp

##am__append_83 = $(LIBBITCOIN_UTIL) $(LIBBITCOIN_WALLET)
#am__append_84 = $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)
#am__append_85 = $(CLEAN_BITCOIN_QT_TEST)
subdir = src
SUBDIRS =
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/build-aux/m4/ax_boost_base.m4 \
	$(top_srcdir)/build-aux/m4/ax_check_compile_flag.m4 \
	$(top_srcdir)/build-aux/m4/ax_check_link_flag.m4 \
	$(top_srcdir)/build-aux/m4/ax_check_preproc_flag.m4 \
	$(top_srcdir)/build-aux/m4/ax_cxx_compile_stdcxx.m4 \
	$(top_srcdir)/build-aux/m4/ax_pthread.m4 \
	$(top_srcdir)/build-aux/m4/bitcoin_find_bdb48.m4 \
	$(top_srcdir)/build-aux/m4/bitcoin_qt.m4 \
	$(top_srcdir)/build-aux/m4/bitcoin_runtime_lib.m4 \
	$(top_srcdir)/build-aux/m4/bitcoin_subdir_to_include.m4 \
	$(top_srcdir)/build-aux/m4/l_atomic.m4 \
	$(top_srcdir)/build-aux/m4/l_filesystem.m4 \
	$(top_srcdir)/build-aux/m4/l_socket.m4 \
	$(top_srcdir)/build-aux/m4/libtool.m4 \
	$(top_srcdir)/build-aux/m4/ltoptions.m4 \
	$(top_srcdir)/build-aux/m4/ltsugar.m4 \
	$(top_srcdir)/build-aux/m4/ltversion.m4 \
	$(top_srcdir)/build-aux/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__include_HEADERS_DIST) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/src/config/bitcoin-config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES = .bear-tidy-config .clang-tidy
AM_V_AR = $(am__v_AR_$(V))
am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libbitcoin_cli_a_AR = $(AR) $(ARFLAGS)
libbitcoin_cli_a_LIBADD =
am__dirstamp = $(am__leading_dot)dirstamp
am__objects_1 =
am_libbitcoin_cli_a_OBJECTS = compat/libbitcoin_cli_a-stdin.$(OBJEXT) \
	rpc/libbitcoin_cli_a-client.$(OBJEXT) $(am__objects_1)
libbitcoin_cli_a_OBJECTS = $(am_libbitcoin_cli_a_OBJECTS)
libbitcoin_common_a_AR = $(AR) $(ARFLAGS)
libbitcoin_common_a_LIBADD =
am_libbitcoin_common_a_OBJECTS = libbitcoin_common_a-base58.$(OBJEXT) \
	libbitcoin_common_a-bech32.$(OBJEXT) \
	libbitcoin_common_a-chainparams.$(OBJEXT) \
	libbitcoin_common_a-coins.$(OBJEXT) \
	common/libbitcoin_common_a-bloom.$(OBJEXT) \
	libbitcoin_common_a-compressor.$(OBJEXT) \
	libbitcoin_common_a-core_read.$(OBJEXT) \
	libbitcoin_common_a-core_write.$(OBJEXT) \
	libbitcoin_common_a-deploymentinfo.$(OBJEXT) \
	libbitcoin_common_a-external_signer.$(OBJEXT) \
	init/libbitcoin_common_a-common.$(OBJEXT) \
	libbitcoin_common_a-key.$(OBJEXT) \
	libbitcoin_common_a-key_io.$(OBJEXT) \
	libbitcoin_common_a-merkleblock.$(OBJEXT) \
	libbitcoin_common_a-net_types.$(OBJEXT) \
	libbitcoin_common_a-netaddress.$(OBJEXT) \
	libbitcoin_common_a-netbase.$(OBJEXT) \
	libbitcoin_common_a-net_permissions.$(OBJEXT) \
	libbitcoin_common_a-outputtype.$(OBJEXT) \
	policy/libbitcoin_common_a-feerate.$(OBJEXT) \
	policy/libbitcoin_common_a-policy.$(OBJEXT) \
	libbitcoin_common_a-protocol.$(OBJEXT) \
	libbitcoin_common_a-psbt.$(OBJEXT) \
	rpc/libbitcoin_common_a-rawtransaction_util.$(OBJEXT) \
	rpc/libbitcoin_common_a-external_signer.$(OBJEXT) \
	rpc/libbitcoin_common_a-util.$(OBJEXT) \
	libbitcoin_common_a-scheduler.$(OBJEXT) \
	script/libbitcoin_common_a-descriptor.$(OBJEXT) \
	script/libbitcoin_common_a-miniscript.$(OBJEXT) \
	script/libbitcoin_common_a-sign.$(OBJEXT) \
	script/libbitcoin_common_a-signingprovider.$(OBJEXT) \
	script/libbitcoin_common_a-standard.$(OBJEXT) \
	libbitcoin_common_a-warnings.$(OBJEXT) $(am__objects_1)
libbitcoin_common_a_OBJECTS = $(am_libbitcoin_common_a_OBJECTS)
libbitcoin_consensus_a_AR = $(AR) $(ARFLAGS)
libbitcoin_consensus_a_LIBADD =
am_libbitcoin_consensus_a_OBJECTS =  \
	libbitcoin_consensus_a-arith_uint256.$(OBJEXT) \
	consensus/libbitcoin_consensus_a-merkle.$(OBJEXT) \
	consensus/libbitcoin_consensus_a-tx_check.$(OBJEXT) \
	libbitcoin_consensus_a-hash.$(OBJEXT) \
	primitives/libbitcoin_consensus_a-block.$(OBJEXT) \
	primitives/libbitcoin_consensus_a-transaction.$(OBJEXT) \
	libbitcoin_consensus_a-pubkey.$(OBJEXT) \
	script/libbitcoin_consensus_a-bitcoinconsensus.$(OBJEXT) \
	script/libbitcoin_consensus_a-interpreter.$(OBJEXT) \
	script/libbitcoin_consensus_a-script.$(OBJEXT) \
	script/libbitcoin_consensus_a-script_error.$(OBJEXT) \
	libbitcoin_consensus_a-uint256.$(OBJEXT) \
	util/libbitcoin_consensus_a-strencodings.$(OBJEXT)
libbitcoin_consensus_a_OBJECTS = $(am_libbitcoin_consensus_a_OBJECTS)
libbitcoin_ipc_a_AR = $(AR) $(ARFLAGS)
libbitcoin_ipc_a_LIBADD =
am__libbitcoin_ipc_a_SOURCES_DIST = ipc/capnp/context.h \
	ipc/capnp/init-types.h ipc/capnp/protocol.cpp \
	ipc/capnp/protocol.h ipc/context.h ipc/exception.h \
	ipc/interfaces.cpp ipc/process.cpp ipc/process.h \
	ipc/protocol.h
#am_libbitcoin_ipc_a_OBJECTS = ipc/capnp/libbitcoin_ipc_a-protocol.$(OBJEXT) \
#	ipc/libbitcoin_ipc_a-interfaces.$(OBJEXT) \
#	ipc/libbitcoin_ipc_a-process.$(OBJEXT)
am__objects_2 = ipc/capnp/libbitcoin_ipc_a-echo.capnp.$(OBJEXT) \
	ipc/capnp/libbitcoin_ipc_a-init.capnp.$(OBJEXT)
am__objects_3 =  \
	ipc/capnp/libbitcoin_ipc_a-echo.capnp.proxy-client.$(OBJEXT) \
	ipc/capnp/libbitcoin_ipc_a-init.capnp.proxy-client.$(OBJEXT)
am__objects_4 =  \
	ipc/capnp/libbitcoin_ipc_a-echo.capnp.proxy-server.$(OBJEXT) \
	ipc/capnp/libbitcoin_ipc_a-init.capnp.proxy-server.$(OBJEXT)
am__objects_5 =  \
	ipc/capnp/libbitcoin_ipc_a-echo.capnp.proxy-types.$(OBJEXT) \
	ipc/capnp/libbitcoin_ipc_a-init.capnp.proxy-types.$(OBJEXT)
#am__objects_6 = $(am__objects_2) \
#	$(am__objects_1) $(am__objects_3) \
#	$(am__objects_4) $(am__objects_5) \
#	$(am__objects_1) $(am__objects_1)
#nodist_libbitcoin_ipc_a_OBJECTS =  \
#	$(am__objects_6)
libbitcoin_ipc_a_OBJECTS = $(am_libbitcoin_ipc_a_OBJECTS) \
	$(nodist_libbitcoin_ipc_a_OBJECTS)
libbitcoin_node_a_AR = $(AR) $(ARFLAGS)
libbitcoin_node_a_LIBADD =
am__libbitcoin_node_a_SOURCES_DIST = addrdb.cpp addrman.cpp banman.cpp \
	blockencodings.cpp blockfilter.cpp chain.cpp \
	consensus/tx_verify.cpp dbwrapper.cpp deploymentstatus.cpp \
	flatfile.cpp httprpc.cpp httpserver.cpp i2p.cpp index/base.cpp \
	index/blockfilterindex.cpp index/coinstatsindex.cpp \
	index/txindex.cpp init.cpp kernel/checks.cpp \
	kernel/coinstats.cpp kernel/context.cpp mapport.cpp net.cpp \
	netgroup.cpp net_processing.cpp node/blockstorage.cpp \
	node/caches.cpp node/chainstate.cpp node/coin.cpp \
	node/context.cpp node/interfaces.cpp node/miner.cpp \
	node/minisketchwrapper.cpp node/psbt.cpp node/transaction.cpp \
	node/ui_interface.cpp noui.cpp policy/fees.cpp \
	policy/packages.cpp policy/rbf.cpp policy/settings.cpp pow.cpp \
	rest.cpp rpc/blockchain.cpp rpc/fees.cpp rpc/mempool.cpp \
	rpc/mining.cpp rpc/node.cpp rpc/net.cpp rpc/output_script.cpp \
	rpc/rawtransaction.cpp rpc/server.cpp rpc/server_util.cpp \
	rpc/signmessage.cpp rpc/txoutproof.cpp script/sigcache.cpp \
	shutdown.cpp signet.cpp timedata.cpp torcontrol.cpp txdb.cpp \
	txmempool.cpp txorphanage.cpp txrequest.cpp validation.cpp \
	validationinterface.cpp versionbits.cpp addrdb.h addrman.h \
	addrman_impl.h attributes.h banman.h base58.h bech32.h \
	blockencodings.h blockfilter.h chain.h chainparams.h \
	chainparamsbase.h chainparamsseeds.h checkqueue.h \
	clientversion.h coins.h common/bloom.h compat.h \
	compat/assumptions.h compat/byteswap.h compat/cpuid.h \
	compat/endian.h compressor.h consensus/consensus.h \
	consensus/tx_check.h consensus/tx_verify.h core_io.h \
	core_memusage.h cuckoocache.h dbwrapper.h deploymentinfo.h \
	deploymentstatus.h external_signer.h flatfile.h fs.h httprpc.h \
	httpserver.h i2p.h index/base.h index/blockfilterindex.h \
	index/coinstatsindex.h index/disktxpos.h index/txindex.h \
	indirectmap.h init.h init/common.h interfaces/chain.h \
	interfaces/echo.h interfaces/handler.h interfaces/init.h \
	interfaces/ipc.h interfaces/node.h interfaces/wallet.h \
	kernel/chainstatemanager_opts.h kernel/checks.h \
	kernel/coinstats.h kernel/context.h key.h key_io.h logging.h \
	logging/timer.h mapport.h memusage.h merkleblock.h net.h \
	net_permissions.h net_processing.h net_types.h netaddress.h \
	netbase.h netgroup.h netmessagemaker.h node/blockstorage.h \
	node/caches.h node/chainstate.h node/coin.h node/context.h \
	node/miner.h node/minisketchwrapper.h node/psbt.h \
	node/transaction.h node/ui_interface.h node/utxo_snapshot.h \
	noui.h outputtype.h policy/feerate.h policy/fees.h \
	policy/packages.h policy/policy.h policy/rbf.h \
	policy/settings.h pow.h protocol.h psbt.h random.h randomenv.h \
	rest.h reverse_iterator.h rpc/blockchain.h rpc/client.h \
	rpc/mempool.h rpc/mining.h rpc/protocol.h \
	rpc/rawtransaction_util.h rpc/register.h rpc/request.h \
	rpc/server.h rpc/server_util.h rpc/util.h scheduler.h \
	script/descriptor.h script/keyorigin.h script/miniscript.h \
	script/sigcache.h script/sign.h script/signingprovider.h \
	script/standard.h shutdown.h signet.h streams.h \
	support/allocators/secure.h support/allocators/zeroafterfree.h \
	support/cleanse.h support/events.h support/lockedpool.h sync.h \
	threadinterrupt.h threadsafety.h timedata.h torcontrol.h \
	txdb.h txmempool.h txorphanage.h txrequest.h undo.h \
	util/asmap.h util/bip32.h util/bytevectorhash.h util/check.h \
	util/designator.h util/epochguard.h util/error.h \
	util/fastrange.h util/fees.h util/getuniquepath.h \
	util/golombrice.h util/hash_type.h util/hasher.h util/macros.h \
	util/message.h util/moneystr.h util/overflow.h \
	util/overloaded.h util/rbf.h util/readwritefile.h \
	util/serfloat.h util/settings.h util/sock.h util/spanparsing.h \
	util/string.h util/syscall_sandbox.h util/syserror.h \
	util/system.h util/thread.h util/threadnames.h util/time.h \
	util/tokenpipe.h util/trace.h util/translation.h util/types.h \
	util/ui_change_type.h util/url.h util/vector.h validation.h \
	validationinterface.h versionbits.h wallet/bdb.h \
	wallet/coincontrol.h wallet/coinselection.h wallet/context.h \
	wallet/crypter.h wallet/db.h wallet/dump.h \
	wallet/external_signer_scriptpubkeyman.h wallet/feebumper.h \
	wallet/fees.h wallet/ismine.h wallet/load.h wallet/receive.h \
	wallet/rpc/util.h wallet/rpc/wallet.h wallet/salvage.h \
	wallet/scriptpubkeyman.h wallet/spend.h wallet/sqlite.h \
	wallet/transaction.h wallet/wallet.h wallet/walletdb.h \
	wallet/wallettool.h wallet/walletutil.h walletinitinterface.h \
	warnings.h zmq/zmqabstractnotifier.h \
	zmq/zmqnotificationinterface.h zmq/zmqpublishnotifier.h \
	zmq/zmqrpc.h zmq/zmqutil.h wallet/init.cpp dummywallet.cpp
#am__objects_7 =  \
#	wallet/libbitcoin_node_a-init.$(OBJEXT)
am__objects_8 =  \
	libbitcoin_node_a-dummywallet.$(OBJEXT)
am_libbitcoin_node_a_OBJECTS = libbitcoin_node_a-addrdb.$(OBJEXT) \
	libbitcoin_node_a-addrman.$(OBJEXT) \
	libbitcoin_node_a-banman.$(OBJEXT) \
	libbitcoin_node_a-blockencodings.$(OBJEXT) \
	libbitcoin_node_a-blockfilter.$(OBJEXT) \
	libbitcoin_node_a-chain.$(OBJEXT) \
	consensus/libbitcoin_node_a-tx_verify.$(OBJEXT) \
	libbitcoin_node_a-dbwrapper.$(OBJEXT) \
	libbitcoin_node_a-deploymentstatus.$(OBJEXT) \
	libbitcoin_node_a-flatfile.$(OBJEXT) \
	libbitcoin_node_a-httprpc.$(OBJEXT) \
	libbitcoin_node_a-httpserver.$(OBJEXT) \
	libbitcoin_node_a-i2p.$(OBJEXT) \
	index/libbitcoin_node_a-base.$(OBJEXT) \
	index/libbitcoin_node_a-blockfilterindex.$(OBJEXT) \
	index/libbitcoin_node_a-coinstatsindex.$(OBJEXT) \
	index/libbitcoin_node_a-txindex.$(OBJEXT) \
	libbitcoin_node_a-init.$(OBJEXT) \
	kernel/libbitcoin_node_a-checks.$(OBJEXT) \
	kernel/libbitcoin_node_a-coinstats.$(OBJEXT) \
	kernel/libbitcoin_node_a-context.$(OBJEXT) \
	libbitcoin_node_a-mapport.$(OBJEXT) \
	libbitcoin_node_a-net.$(OBJEXT) \
	libbitcoin_node_a-netgroup.$(OBJEXT) \
	libbitcoin_node_a-net_processing.$(OBJEXT) \
	node/libbitcoin_node_a-blockstorage.$(OBJEXT) \
	node/libbitcoin_node_a-caches.$(OBJEXT) \
	node/libbitcoin_node_a-chainstate.$(OBJEXT) \
	node/libbitcoin_node_a-coin.$(OBJEXT) \
	node/libbitcoin_node_a-context.$(OBJEXT) \
	node/libbitcoin_node_a-interfaces.$(OBJEXT) \
	node/libbitcoin_node_a-miner.$(OBJEXT) \
	node/libbitcoin_node_a-minisketchwrapper.$(OBJEXT) \
	node/libbitcoin_node_a-psbt.$(OBJEXT) \
	node/libbitcoin_node_a-transaction.$(OBJEXT) \
	node/libbitcoin_node_a-ui_interface.$(OBJEXT) \
	libbitcoin_node_a-noui.$(OBJEXT) \
	policy/libbitcoin_node_a-fees.$(OBJEXT) \
	policy/libbitcoin_node_a-packages.$(OBJEXT) \
	policy/libbitcoin_node_a-rbf.$(OBJEXT) \
	policy/libbitcoin_node_a-settings.$(OBJEXT) \
	libbitcoin_node_a-pow.$(OBJEXT) \
	libbitcoin_node_a-rest.$(OBJEXT) \
	rpc/libbitcoin_node_a-blockchain.$(OBJEXT) \
	rpc/libbitcoin_node_a-fees.$(OBJEXT) \
	rpc/libbitcoin_node_a-mempool.$(OBJEXT) \
	rpc/libbitcoin_node_a-mining.$(OBJEXT) \
	rpc/libbitcoin_node_a-node.$(OBJEXT) \
	rpc/libbitcoin_node_a-net.$(OBJEXT) \
	rpc/libbitcoin_node_a-output_script.$(OBJEXT) \
	rpc/libbitcoin_node_a-rawtransaction.$(OBJEXT) \
	rpc/libbitcoin_node_a-server.$(OBJEXT) \
	rpc/libbitcoin_node_a-server_util.$(OBJEXT) \
	rpc/libbitcoin_node_a-signmessage.$(OBJEXT) \
	rpc/libbitcoin_node_a-txoutproof.$(OBJEXT) \
	script/libbitcoin_node_a-sigcache.$(OBJEXT) \
	libbitcoin_node_a-shutdown.$(OBJEXT) \
	libbitcoin_node_a-signet.$(OBJEXT) \
	libbitcoin_node_a-timedata.$(OBJEXT) \
	libbitcoin_node_a-torcontrol.$(OBJEXT) \
	libbitcoin_node_a-txdb.$(OBJEXT) \
	libbitcoin_node_a-txmempool.$(OBJEXT) \
	libbitcoin_node_a-txorphanage.$(OBJEXT) \
	libbitcoin_node_a-txrequest.$(OBJEXT) \
	libbitcoin_node_a-validation.$(OBJEXT) \
	libbitcoin_node_a-validationinterface.$(OBJEXT) \
	libbitcoin_node_a-versionbits.$(OBJEXT) $(am__objects_1) \
	$(am__objects_7) $(am__objects_8)
libbitcoin_node_a_OBJECTS = $(am_libbitcoin_node_a_OBJECTS)
libbitcoin_util_a_AR = $(AR) $(ARFLAGS)
libbitcoin_util_a_LIBADD =
am__libbitcoin_util_a_SOURCES_DIST = support/lockedpool.cpp \
	chainparamsbase.cpp clientversion.cpp fs.cpp \
	interfaces/echo.cpp interfaces/handler.cpp interfaces/init.cpp \
	logging.cpp random.cpp randomenv.cpp rpc/request.cpp \
	support/cleanse.cpp sync.cpp threadinterrupt.cpp \
	util/asmap.cpp util/bip32.cpp util/bytevectorhash.cpp \
	util/check.cpp util/error.cpp util/fees.cpp \
	util/getuniquepath.cpp util/hasher.cpp util/sock.cpp \
	util/syserror.cpp util/system.cpp util/message.cpp \
	util/moneystr.cpp util/rbf.cpp util/readwritefile.cpp \
	util/settings.cpp util/thread.cpp util/threadnames.cpp \
	util/serfloat.cpp util/spanparsing.cpp util/strencodings.cpp \
	util/string.cpp util/syscall_sandbox.cpp util/time.cpp \
	util/tokenpipe.cpp addrdb.h addrman.h addrman_impl.h \
	attributes.h banman.h base58.h bech32.h blockencodings.h \
	blockfilter.h chain.h chainparams.h chainparamsbase.h \
	chainparamsseeds.h checkqueue.h clientversion.h coins.h \
	common/bloom.h compat.h compat/assumptions.h compat/byteswap.h \
	compat/cpuid.h compat/endian.h compressor.h \
	consensus/consensus.h consensus/tx_check.h \
	consensus/tx_verify.h core_io.h core_memusage.h cuckoocache.h \
	dbwrapper.h deploymentinfo.h deploymentstatus.h \
	external_signer.h flatfile.h fs.h httprpc.h httpserver.h i2p.h \
	index/base.h index/blockfilterindex.h index/coinstatsindex.h \
	index/disktxpos.h index/txindex.h indirectmap.h init.h \
	init/common.h interfaces/chain.h interfaces/echo.h \
	interfaces/handler.h interfaces/init.h interfaces/ipc.h \
	interfaces/node.h interfaces/wallet.h \
	kernel/chainstatemanager_opts.h kernel/checks.h \
	kernel/coinstats.h kernel/context.h key.h key_io.h logging.h \
	logging/timer.h mapport.h memusage.h merkleblock.h net.h \
	net_permissions.h net_processing.h net_types.h netaddress.h \
	netbase.h netgroup.h netmessagemaker.h node/blockstorage.h \
	node/caches.h node/chainstate.h node/coin.h node/context.h \
	node/miner.h node/minisketchwrapper.h node/psbt.h \
	node/transaction.h node/ui_interface.h node/utxo_snapshot.h \
	noui.h outputtype.h policy/feerate.h policy/fees.h \
	policy/packages.h policy/policy.h policy/rbf.h \
	policy/settings.h pow.h protocol.h psbt.h random.h randomenv.h \
	rest.h reverse_iterator.h rpc/blockchain.h rpc/client.h \
	rpc/mempool.h rpc/mining.h rpc/protocol.h \
	rpc/rawtransaction_util.h rpc/register.h rpc/request.h \
	rpc/server.h rpc/server_util.h rpc/util.h scheduler.h \
	script/descriptor.h script/keyorigin.h script/miniscript.h \
	script/sigcache.h script/sign.h script/signingprovider.h \
	script/standard.h shutdown.h signet.h streams.h \
	support/allocators/secure.h support/allocators/zeroafterfree.h \
	support/cleanse.h support/events.h support/lockedpool.h sync.h \
	threadinterrupt.h threadsafety.h timedata.h torcontrol.h \
	txdb.h txmempool.h txorphanage.h txrequest.h undo.h \
	util/asmap.h util/bip32.h util/bytevectorhash.h util/check.h \
	util/designator.h util/epochguard.h util/error.h \
	util/fastrange.h util/fees.h util/getuniquepath.h \
	util/golombrice.h util/hash_type.h util/hasher.h util/macros.h \
	util/message.h util/moneystr.h util/overflow.h \
	util/overloaded.h util/rbf.h util/readwritefile.h \
	util/serfloat.h util/settings.h util/sock.h util/spanparsing.h \
	util/string.h util/syscall_sandbox.h util/syserror.h \
	util/system.h util/thread.h util/threadnames.h util/time.h \
	util/tokenpipe.h util/trace.h util/translation.h util/types.h \
	util/ui_change_type.h util/url.h util/vector.h validation.h \
	validationinterface.h versionbits.h wallet/bdb.h \
	wallet/coincontrol.h wallet/coinselection.h wallet/context.h \
	wallet/crypter.h wallet/db.h wallet/dump.h \
	wallet/external_signer_scriptpubkeyman.h wallet/feebumper.h \
	wallet/fees.h wallet/ismine.h wallet/load.h wallet/receive.h \
	wallet/rpc/util.h wallet/rpc/wallet.h wallet/salvage.h \
	wallet/scriptpubkeyman.h wallet/spend.h wallet/sqlite.h \
	wallet/transaction.h wallet/wallet.h wallet/walletdb.h \
	wallet/wallettool.h wallet/walletutil.h walletinitinterface.h \
	warnings.h zmq/zmqabstractnotifier.h \
	zmq/zmqnotificationinterface.h zmq/zmqpublishnotifier.h \
	zmq/zmqrpc.h zmq/zmqutil.h util/url.cpp
am__objects_9 =  \
	util/libbitcoin_util_a-url.$(OBJEXT)
am_libbitcoin_util_a_OBJECTS =  \
	support/libbitcoin_util_a-lockedpool.$(OBJEXT) \
	libbitcoin_util_a-chainparamsbase.$(OBJEXT) \
	libbitcoin_util_a-clientversion.$(OBJEXT) \
	libbitcoin_util_a-fs.$(OBJEXT) \
	interfaces/libbitcoin_util_a-echo.$(OBJEXT) \
	interfaces/libbitcoin_util_a-handler.$(OBJEXT) \
	interfaces/libbitcoin_util_a-init.$(OBJEXT) \
	libbitcoin_util_a-logging.$(OBJEXT) \
	libbitcoin_util_a-random.$(OBJEXT) \
	libbitcoin_util_a-randomenv.$(OBJEXT) \
	rpc/libbitcoin_util_a-request.$(OBJEXT) \
	support/libbitcoin_util_a-cleanse.$(OBJEXT) \
	libbitcoin_util_a-sync.$(OBJEXT) \
	libbitcoin_util_a-threadinterrupt.$(OBJEXT) \
	util/libbitcoin_util_a-asmap.$(OBJEXT) \
	util/libbitcoin_util_a-bip32.$(OBJEXT) \
	util/libbitcoin_util_a-bytevectorhash.$(OBJEXT) \
	util/libbitcoin_util_a-check.$(OBJEXT) \
	util/libbitcoin_util_a-error.$(OBJEXT) \
	util/libbitcoin_util_a-fees.$(OBJEXT) \
	util/libbitcoin_util_a-getuniquepath.$(OBJEXT) \
	util/libbitcoin_util_a-hasher.$(OBJEXT) \
	util/libbitcoin_util_a-sock.$(OBJEXT) \
	util/libbitcoin_util_a-syserror.$(OBJEXT) \
	util/libbitcoin_util_a-system.$(OBJEXT) \
	util/libbitcoin_util_a-message.$(OBJEXT) \
	util/libbitcoin_util_a-moneystr.$(OBJEXT) \
	util/libbitcoin_util_a-rbf.$(OBJEXT) \
	util/libbitcoin_util_a-readwritefile.$(OBJEXT) \
	util/libbitcoin_util_a-settings.$(OBJEXT) \
	util/libbitcoin_util_a-thread.$(OBJEXT) \
	util/libbitcoin_util_a-threadnames.$(OBJEXT) \
	util/libbitcoin_util_a-serfloat.$(OBJEXT) \
	util/libbitcoin_util_a-spanparsing.$(OBJEXT) \
	util/libbitcoin_util_a-strencodings.$(OBJEXT) \
	util/libbitcoin_util_a-string.$(OBJEXT) \
	util/libbitcoin_util_a-syscall_sandbox.$(OBJEXT) \
	util/libbitcoin_util_a-time.$(OBJEXT) \
	util/libbitcoin_util_a-tokenpipe.$(OBJEXT) $(am__objects_1) \
	$(am__objects_9)
nodist_libbitcoin_util_a_OBJECTS =
libbitcoin_util_a_OBJECTS = $(am_libbitcoin_util_a_OBJECTS) \
	$(nodist_libbitcoin_util_a_OBJECTS)
libbitcoin_wallet_a_AR = $(AR) $(ARFLAGS)
libbitcoin_wallet_a_LIBADD =
am__libbitcoin_wallet_a_SOURCES_DIST = wallet/coincontrol.cpp \
	wallet/context.cpp wallet/crypter.cpp wallet/db.cpp \
	wallet/dump.cpp wallet/external_signer_scriptpubkeyman.cpp \
	wallet/feebumper.cpp wallet/fees.cpp wallet/interfaces.cpp \
	wallet/load.cpp wallet/receive.cpp wallet/rpc/addresses.cpp \
	wallet/rpc/backup.cpp wallet/rpc/coins.cpp \
	wallet/rpc/encrypt.cpp wallet/rpc/spend.cpp \
	wallet/rpc/signmessage.cpp wallet/rpc/transactions.cpp \
	wallet/rpc/util.cpp wallet/rpc/wallet.cpp \
	wallet/scriptpubkeyman.cpp wallet/spend.cpp \
	wallet/transaction.cpp wallet/wallet.cpp wallet/walletdb.cpp \
	wallet/walletutil.cpp wallet/coinselection.cpp addrdb.h \
	addrman.h addrman_impl.h attributes.h banman.h base58.h \
	bech32.h blockencodings.h blockfilter.h chain.h chainparams.h \
	chainparamsbase.h chainparamsseeds.h checkqueue.h \
	clientversion.h coins.h common/bloom.h compat.h \
	compat/assumptions.h compat/byteswap.h compat/cpuid.h \
	compat/endian.h compressor.h consensus/consensus.h \
	consensus/tx_check.h consensus/tx_verify.h core_io.h \
	core_memusage.h cuckoocache.h dbwrapper.h deploymentinfo.h \
	deploymentstatus.h external_signer.h flatfile.h fs.h httprpc.h \
	httpserver.h i2p.h index/base.h index/blockfilterindex.h \
	index/coinstatsindex.h index/disktxpos.h index/txindex.h \
	indirectmap.h init.h init/common.h interfaces/chain.h \
	interfaces/echo.h interfaces/handler.h interfaces/init.h \
	interfaces/ipc.h interfaces/node.h interfaces/wallet.h \
	kernel/chainstatemanager_opts.h kernel/checks.h \
	kernel/coinstats.h kernel/context.h key.h key_io.h logging.h \
	logging/timer.h mapport.h memusage.h merkleblock.h net.h \
	net_permissions.h net_processing.h net_types.h netaddress.h \
	netbase.h netgroup.h netmessagemaker.h node/blockstorage.h \
	node/caches.h node/chainstate.h node/coin.h node/context.h \
	node/miner.h node/minisketchwrapper.h node/psbt.h \
	node/transaction.h node/ui_interface.h node/utxo_snapshot.h \
	noui.h outputtype.h policy/feerate.h policy/fees.h \
	policy/packages.h policy/policy.h policy/rbf.h \
	policy/settings.h pow.h protocol.h psbt.h random.h randomenv.h \
	rest.h reverse_iterator.h rpc/blockchain.h rpc/client.h \
	rpc/mempool.h rpc/mining.h rpc/protocol.h \
	rpc/rawtransaction_util.h rpc/register.h rpc/request.h \
	rpc/server.h rpc/server_util.h rpc/util.h scheduler.h \
	script/descriptor.h script/keyorigin.h script/miniscript.h \
	script/sigcache.h script/sign.h script/signingprovider.h \
	script/standard.h shutdown.h signet.h streams.h \
	support/allocators/secure.h support/allocators/zeroafterfree.h \
	support/cleanse.h support/events.h support/lockedpool.h sync.h \
	threadinterrupt.h threadsafety.h timedata.h torcontrol.h \
	txdb.h txmempool.h txorphanage.h txrequest.h undo.h \
	util/asmap.h util/bip32.h util/bytevectorhash.h util/check.h \
	util/designator.h util/epochguard.h util/error.h \
	util/fastrange.h util/fees.h util/getuniquepath.h \
	util/golombrice.h util/hash_type.h util/hasher.h util/macros.h \
	util/message.h util/moneystr.h util/overflow.h \
	util/overloaded.h util/rbf.h util/readwritefile.h \
	util/serfloat.h util/settings.h util/sock.h util/spanparsing.h \
	util/string.h util/syscall_sandbox.h util/syserror.h \
	util/system.h util/thread.h util/threadnames.h util/time.h \
	util/tokenpipe.h util/trace.h util/translation.h util/types.h \
	util/ui_change_type.h util/url.h util/vector.h validation.h \
	validationinterface.h versionbits.h wallet/bdb.h \
	wallet/coincontrol.h wallet/coinselection.h wallet/context.h \
	wallet/crypter.h wallet/db.h wallet/dump.h \
	wallet/external_signer_scriptpubkeyman.h wallet/feebumper.h \
	wallet/fees.h wallet/ismine.h wallet/load.h wallet/receive.h \
	wallet/rpc/util.h wallet/rpc/wallet.h wallet/salvage.h \
	wallet/scriptpubkeyman.h wallet/spend.h wallet/sqlite.h \
	wallet/transaction.h wallet/wallet.h wallet/walletdb.h \
	wallet/wallettool.h wallet/walletutil.h walletinitinterface.h \
	warnings.h zmq/zmqabstractnotifier.h \
	zmq/zmqnotificationinterface.h zmq/zmqpublishnotifier.h \
	zmq/zmqrpc.h zmq/zmqutil.h wallet/sqlite.cpp wallet/bdb.cpp \
	wallet/salvage.cpp
#am__objects_10 =  \
#	wallet/libbitcoin_wallet_a-sqlite.$(OBJEXT)
#am__objects_11 =  \
#	wallet/libbitcoin_wallet_a-bdb.$(OBJEXT) \
#	wallet/libbitcoin_wallet_a-salvage.$(OBJEXT)
am_libbitcoin_wallet_a_OBJECTS =  \
	wallet/libbitcoin_wallet_a-coincontrol.$(OBJEXT) \
	wallet/libbitcoin_wallet_a-context.$(OBJEXT) \
	wallet/libbitcoin_wallet_a-crypter.$(OBJEXT) \
	wallet/libbitcoin_wallet_a-db.$(OBJEXT) \
	wallet/libbitcoin_wallet_a-dump.$(OBJEXT) \
	wallet/libbitcoin_wallet_a-external_signer_scriptpubkeyman.$(OBJEXT) \
	wallet/libbitcoin_wallet_a-feebumper.$(OBJEXT) \
	wallet/libbitcoin_wallet_a-fees.$(OBJEXT) \
	wallet/libbitcoin_wallet_a-interfaces.$(OBJEXT) \
	wallet/libbitcoin_wallet_a-load.$(OBJEXT) \
	wallet/libbitcoin_wallet_a-receive.$(OBJEXT) \
	wallet/rpc/libbitcoin_wallet_a-addresses.$(OBJEXT) \
	wallet/rpc/libbitcoin_wallet_a-backup.$(OBJEXT) \
	wallet/rpc/libbitcoin_wallet_a-coins.$(OBJEXT) \
	wallet/rpc/libbitcoin_wallet_a-encrypt.$(OBJEXT) \
	wallet/rpc/libbitcoin_wallet_a-spend.$(OBJEXT) \
	wallet/rpc/libbitcoin_wallet_a-signmessage.$(OBJEXT) \
	wallet/rpc/libbitcoin_wallet_a-transactions.$(OBJEXT) \
	wallet/rpc/libbitcoin_wallet_a-util.$(OBJEXT) \
	wallet/rpc/libbitcoin_wallet_a-wallet.$(OBJEXT) \
	wallet/libbitcoin_wallet_a-scriptpubkeyman.$(OBJEXT) \
	wallet/libbitcoin_wallet_a-spend.$(OBJEXT) \
	wallet/libbitcoin_wallet_a-transaction.$(OBJEXT) \
	wallet/libbitcoin_wallet_a-wallet.$(OBJEXT) \
	wallet/libbitcoin_wallet_a-walletdb.$(OBJEXT) \
	wallet/libbitcoin_wallet_a-walletutil.$(OBJEXT) \
	wallet/libbitcoin_wallet_a-coinselection.$(OBJEXT) \
	$(am__objects_1) $(am__objects_10) $(am__objects_11)
libbitcoin_wallet_a_OBJECTS = $(am_libbitcoin_wallet_a_OBJECTS)
libbitcoin_wallet_tool_a_AR = $(AR) $(ARFLAGS)
libbitcoin_wallet_tool_a_LIBADD =
am_libbitcoin_wallet_tool_a_OBJECTS =  \
	wallet/libbitcoin_wallet_tool_a-wallettool.$(OBJEXT) \
	$(am__objects_1)
libbitcoin_wallet_tool_a_OBJECTS =  \
	$(am_libbitcoin_wallet_tool_a_OBJECTS)
libbitcoin_zmq_a_AR = $(AR) $(ARFLAGS)
libbitcoin_zmq_a_LIBADD =
am__libbitcoin_zmq_a_SOURCES_DIST = zmq/zmqabstractnotifier.cpp \
	zmq/zmqnotificationinterface.cpp zmq/zmqpublishnotifier.cpp \
	zmq/zmqrpc.cpp zmq/zmqutil.cpp
am_libbitcoin_zmq_a_OBJECTS = zmq/libbitcoin_zmq_a-zmqabstractnotifier.$(OBJEXT) \
	zmq/libbitcoin_zmq_a-zmqnotificationinterface.$(OBJEXT) \
	zmq/libbitcoin_zmq_a-zmqpublishnotifier.$(OBJEXT) \
	zmq/libbitcoin_zmq_a-zmqrpc.$(OBJEXT) \
	zmq/libbitcoin_zmq_a-zmqutil.$(OBJEXT)
libbitcoin_zmq_a_OBJECTS = $(am_libbitcoin_zmq_a_OBJECTS)
libtest_fuzz_a_AR = $(AR) $(ARFLAGS)
libtest_fuzz_a_LIBADD =
am_libtest_fuzz_a_OBJECTS = test/fuzz/libtest_fuzz_a-fuzz.$(OBJEXT) \
	test/fuzz/libtest_fuzz_a-util.$(OBJEXT) $(am__objects_1)
libtest_fuzz_a_OBJECTS = $(am_libtest_fuzz_a_OBJECTS)
libtest_util_a_AR = $(AR) $(ARFLAGS)
libtest_util_a_LIBADD =
am_libtest_util_a_OBJECTS =  \
	test/util/libtest_util_a-blockfilter.$(OBJEXT) \
	test/util/libtest_util_a-logging.$(OBJEXT) \
	test/util/libtest_util_a-mining.$(OBJEXT) \
	test/util/libtest_util_a-net.$(OBJEXT) \
	test/util/libtest_util_a-script.$(OBJEXT) \
	test/util/libtest_util_a-setup_common.$(OBJEXT) \
	test/util/libtest_util_a-str.$(OBJEXT) \
	test/util/libtest_util_a-transaction_utils.$(OBJEXT) \
	test/util/libtest_util_a-validation.$(OBJEXT) \
	test/util/libtest_util_a-wallet.$(OBJEXT) $(am__objects_1)
libtest_util_a_OBJECTS = $(am_libtest_util_a_OBJECTS)
minisketch_libminisketch_a_AR = $(AR) $(ARFLAGS)
minisketch_libminisketch_a_LIBADD =
am__objects_12 = minisketch/src/fields/minisketch_libminisketch_a-generic_1byte.$(OBJEXT) \
	minisketch/src/fields/minisketch_libminisketch_a-generic_2bytes.$(OBJEXT) \
	minisketch/src/fields/minisketch_libminisketch_a-generic_3bytes.$(OBJEXT) \
	minisketch/src/fields/minisketch_libminisketch_a-generic_4bytes.$(OBJEXT) \
	minisketch/src/fields/minisketch_libminisketch_a-generic_5bytes.$(OBJEXT) \
	minisketch/src/fields/minisketch_libminisketch_a-generic_6bytes.$(OBJEXT) \
	minisketch/src/fields/minisketch_libminisketch_a-generic_7bytes.$(OBJEXT) \
	minisketch/src/fields/minisketch_libminisketch_a-generic_8bytes.$(OBJEXT)
am__objects_13 = minisketch/src/minisketch_libminisketch_a-minisketch.$(OBJEXT)
am_minisketch_libminisketch_a_OBJECTS = $(am__objects_12) \
	$(am__objects_13) $(am__objects_1) $(am__objects_1) \
	$(am__objects_1)
minisketch_libminisketch_a_OBJECTS =  \
	$(am_minisketch_libminisketch_a_OBJECTS)
minisketch_libminisketch_clmul_a_AR = $(AR) $(ARFLAGS)
minisketch_libminisketch_clmul_a_LIBADD =
am__objects_14 = minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_1byte.$(OBJEXT) \
	minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_2bytes.$(OBJEXT) \
	minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_3bytes.$(OBJEXT) \
	minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_4bytes.$(OBJEXT) \
	minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_5bytes.$(OBJEXT) \
	minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_6bytes.$(OBJEXT) \
	minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_7bytes.$(OBJEXT) \
	minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_8bytes.$(OBJEXT)
am_minisketch_libminisketch_clmul_a_OBJECTS = $(am__objects_14) \
	$(am__objects_1)
minisketch_libminisketch_clmul_a_OBJECTS =  \
	$(am_minisketch_libminisketch_clmul_a_OBJECTS)
qt_libbitcoinqt_a_AR = $(AR) $(ARFLAGS)
qt_libbitcoinqt_a_LIBADD =
am__qt_libbitcoinqt_a_SOURCES_DIST = qt/bantablemodel.cpp \
	qt/bitcoin.cpp qt/bitcoinaddressvalidator.cpp \
	qt/bitcoinamountfield.cpp qt/bitcoingui.cpp \
	qt/bitcoinunits.cpp qt/clientmodel.cpp qt/csvmodelwriter.cpp \
	qt/guiutil.cpp qt/initexecutor.cpp qt/intro.cpp \
	qt/modaloverlay.cpp qt/networkstyle.cpp qt/notificator.cpp \
	qt/optionsdialog.cpp qt/optionsmodel.cpp qt/peertablemodel.cpp \
	qt/peertablesortproxy.cpp qt/platformstyle.cpp \
	qt/qvalidatedlineedit.cpp qt/qvaluecombobox.cpp \
	qt/rpcconsole.cpp qt/splashscreen.cpp \
	qt/trafficgraphwidget.cpp qt/utilitydialog.cpp \
	qt/winshutdownmonitor.cpp qt/addressbookpage.cpp \
	qt/addresstablemodel.cpp qt/askpassphrasedialog.cpp \
	qt/coincontroldialog.cpp qt/coincontroltreewidget.cpp \
	qt/createwalletdialog.cpp qt/editaddressdialog.cpp \
	qt/openuridialog.cpp qt/overviewpage.cpp qt/paymentserver.cpp \
	qt/psbtoperationsdialog.cpp qt/qrimagewidget.cpp \
	qt/receivecoinsdialog.cpp qt/receiverequestdialog.cpp \
	qt/recentrequeststablemodel.cpp qt/sendcoinsdialog.cpp \
	qt/sendcoinsentry.cpp qt/signverifymessagedialog.cpp \
	qt/transactiondesc.cpp qt/transactiondescdialog.cpp \
	qt/transactionfilterproxy.cpp qt/transactionrecord.cpp \
	qt/transactiontablemodel.cpp qt/transactionview.cpp \
	qt/walletcontroller.cpp qt/walletframe.cpp qt/walletmodel.cpp \
	qt/walletmodeltransaction.cpp qt/walletview.cpp \
	qt/addressbookpage.h qt/addresstablemodel.h \
	qt/askpassphrasedialog.h qt/bantablemodel.h qt/bitcoin.h \
	qt/bitcoinaddressvalidator.h qt/bitcoinamountfield.h \
	qt/bitcoingui.h qt/bitcoinunits.h qt/clientmodel.h \
	qt/coincontroldialog.h qt/coincontroltreewidget.h \
	qt/createwalletdialog.h qt/csvmodelwriter.h \
	qt/editaddressdialog.h qt/guiconstants.h qt/guiutil.h \
	qt/initexecutor.h qt/intro.h qt/macdockiconhandler.h \
	qt/macnotificationhandler.h qt/macos_appnap.h \
	qt/modaloverlay.h qt/networkstyle.h qt/notificator.h \
	qt/openuridialog.h qt/optionsdialog.h qt/optionsmodel.h \
	qt/overviewpage.h qt/paymentserver.h qt/peertablemodel.h \
	qt/peertablesortproxy.h qt/platformstyle.h \
	qt/psbtoperationsdialog.h qt/qrimagewidget.h \
	qt/qvalidatedlineedit.h qt/qvaluecombobox.h \
	qt/receivecoinsdialog.h qt/receiverequestdialog.h \
	qt/recentrequeststablemodel.h qt/rpcconsole.h \
	qt/sendcoinsdialog.h qt/sendcoinsentry.h \
	qt/sendcoinsrecipient.h qt/signverifymessagedialog.h \
	qt/splashscreen.h qt/trafficgraphwidget.h qt/transactiondesc.h \
	qt/transactiondescdialog.h qt/transactionfilterproxy.h \
	qt/transactionoverviewwidget.h qt/transactionrecord.h \
	qt/transactiontablemodel.h qt/transactionview.h \
	qt/utilitydialog.h qt/walletcontroller.h qt/walletframe.h \
	qt/walletmodel.h qt/walletmodeltransaction.h qt/walletview.h \
	qt/winshutdownmonitor.h qt/forms/addressbookpage.ui \
	qt/forms/askpassphrasedialog.ui qt/forms/coincontroldialog.ui \
	qt/forms/createwalletdialog.ui qt/forms/editaddressdialog.ui \
	qt/forms/helpmessagedialog.ui qt/forms/intro.ui \
	qt/forms/modaloverlay.ui qt/forms/openuridialog.ui \
	qt/forms/optionsdialog.ui qt/forms/overviewpage.ui \
	qt/forms/psbtoperationsdialog.ui \
	qt/forms/receivecoinsdialog.ui \
	qt/forms/receiverequestdialog.ui qt/forms/debugwindow.ui \
	qt/forms/sendcoinsdialog.ui qt/forms/sendcoinsentry.ui \
	qt/forms/signverifymessagedialog.ui \
	qt/forms/transactiondescdialog.ui qt/bitcoin.qrc \
	qt/bitcoin_locale.qrc qt/locale/bitcoin_am.ts \
	qt/locale/bitcoin_ar.ts qt/locale/bitcoin_az.ts \
	qt/locale/bitcoin_be.ts qt/locale/bitcoin_bg.ts \
	qt/locale/bitcoin_bn.ts qt/locale/bitcoin_bs.ts \
	qt/locale/bitcoin_ca.ts qt/locale/bitcoin_cs.ts \
	qt/locale/bitcoin_cy.ts qt/locale/bitcoin_da.ts \
	qt/locale/bitcoin_de.ts qt/locale/bitcoin_el.ts \
	qt/locale/bitcoin_en.ts qt/locale/bitcoin_eo.ts \
	qt/locale/bitcoin_es.ts qt/locale/bitcoin_es_CL.ts \
	qt/locale/bitcoin_es_CO.ts qt/locale/bitcoin_es_DO.ts \
	qt/locale/bitcoin_es_MX.ts qt/locale/bitcoin_es_VE.ts \
	qt/locale/bitcoin_et.ts qt/locale/bitcoin_eu.ts \
	qt/locale/bitcoin_fa.ts qt/locale/bitcoin_fi.ts \
	qt/locale/bitcoin_fil.ts qt/locale/bitcoin_fr.ts \
	qt/locale/bitcoin_ga.ts qt/locale/bitcoin_gd.ts \
	qt/locale/bitcoin_gl.ts qt/locale/bitcoin_gl_ES.ts \
	qt/locale/bitcoin_gu.ts qt/locale/bitcoin_he.ts \
	qt/locale/bitcoin_hr.ts qt/locale/bitcoin_hu.ts \
	qt/locale/bitcoin_id.ts qt/locale/bitcoin_is.ts \
	qt/locale/bitcoin_it.ts qt/locale/bitcoin_ja.ts \
	qt/locale/bitcoin_ka.ts qt/locale/bitcoin_kk.ts \
	qt/locale/bitcoin_kl.ts qt/locale/bitcoin_km.ts \
	qt/locale/bitcoin_ko.ts qt/locale/bitcoin_ku_IQ.ts \
	qt/locale/bitcoin_ky.ts qt/locale/bitcoin_la.ts \
	qt/locale/bitcoin_lt.ts qt/locale/bitcoin_lv.ts \
	qt/locale/bitcoin_mk.ts qt/locale/bitcoin_ml.ts \
	qt/locale/bitcoin_mn.ts qt/locale/bitcoin_mr_IN.ts \
	qt/locale/bitcoin_ms.ts qt/locale/bitcoin_my.ts \
	qt/locale/bitcoin_nb.ts qt/locale/bitcoin_ne.ts \
	qt/locale/bitcoin_nl.ts qt/locale/bitcoin_no.ts \
	qt/locale/bitcoin_pam.ts qt/locale/bitcoin_pl.ts \
	qt/locale/bitcoin_pt.ts qt/locale/bitcoin_pt_BR.ts \
	qt/locale/bitcoin_ro.ts qt/locale/bitcoin_ru.ts \
	qt/locale/bitcoin_sc.ts qt/locale/bitcoin_si.ts \
	qt/locale/bitcoin_sk.ts qt/locale/bitcoin_sl.ts \
	qt/locale/bitcoin_sn.ts qt/locale/bitcoin_sq.ts \
	qt/locale/bitcoin_sr.ts qt/locale/bitcoin_sr@latin.ts \
	qt/locale/bitcoin_sv.ts qt/locale/bitcoin_sw.ts \
	qt/locale/bitcoin_szl.ts qt/locale/bitcoin_ta.ts \
	qt/locale/bitcoin_te.ts qt/locale/bitcoin_th.ts \
	qt/locale/bitcoin_tr.ts qt/locale/bitcoin_ug.ts \
	qt/locale/bitcoin_uk.ts qt/locale/bitcoin_ur.ts \
	qt/locale/bitcoin_uz@Cyrl.ts qt/locale/bitcoin_uz@Latn.ts \
	qt/locale/bitcoin_vi.ts qt/locale/bitcoin_yo.ts \
	qt/locale/bitcoin_zh-Hans.ts qt/locale/bitcoin_zh.ts \
	qt/locale/bitcoin_zh_CN.ts qt/locale/bitcoin_zh_HK.ts \
	qt/locale/bitcoin_zh_TW.ts qt/locale/bitcoin_zu.ts \
	qt/res/fonts/RobotoMono-Bold.ttf qt/res/icons/add.png \
	qt/res/icons/address-book.png qt/res/icons/bitcoin.ico \
	qt/res/icons/bitcoin_testnet.ico qt/res/icons/bitcoin.png \
	qt/res/icons/chevron.png qt/res/icons/clock1.png \
	qt/res/icons/clock2.png qt/res/icons/clock3.png \
	qt/res/icons/clock4.png qt/res/icons/clock5.png \
	qt/res/icons/connect0.png qt/res/icons/connect1.png \
	qt/res/icons/connect2.png qt/res/icons/connect3.png \
	qt/res/icons/connect4.png qt/res/icons/edit.png \
	qt/res/icons/editcopy.png qt/res/icons/editpaste.png \
	qt/res/icons/export.png qt/res/icons/eye.png \
	qt/res/icons/eye_minus.png qt/res/icons/eye_plus.png \
	qt/res/icons/fontbigger.png qt/res/icons/fontsmaller.png \
	qt/res/icons/hd_disabled.png qt/res/icons/hd_enabled.png \
	qt/res/icons/history.png qt/res/icons/lock_closed.png \
	qt/res/icons/lock_open.png qt/res/icons/network_disabled.png \
	qt/res/icons/overview.png qt/res/icons/proxy.png \
	qt/res/icons/receive.png qt/res/icons/remove.png \
	qt/res/icons/send.png qt/res/icons/synced.png \
	qt/res/icons/transaction0.png qt/res/icons/transaction2.png \
	qt/res/icons/transaction_abandoned.png \
	qt/res/icons/transaction_conflicted.png \
	qt/res/icons/tx_inout.png qt/res/icons/tx_input.png \
	qt/res/icons/tx_output.png qt/res/icons/tx_mined.png \
	qt/res/icons/warning.png $(wildcard \
	$(srcdir)/qt/res/animation/spinner-*.png) \
	qt/macdockiconhandler.mm qt/macnotificationhandler.mm \
	qt/macos_appnap.mm
#am__objects_15 =  \
#	qt/qt_libbitcoinqt_a-bantablemodel.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-bitcoin.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-bitcoinaddressvalidator.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-bitcoinamountfield.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-bitcoingui.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-bitcoinunits.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-clientmodel.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-csvmodelwriter.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-guiutil.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-initexecutor.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-intro.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-modaloverlay.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-networkstyle.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-notificator.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-optionsdialog.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-optionsmodel.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-peertablemodel.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-peertablesortproxy.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-platformstyle.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-qvalidatedlineedit.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-qvaluecombobox.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-rpcconsole.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-splashscreen.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-trafficgraphwidget.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-utilitydialog.$(OBJEXT)
#am__objects_16 = qt/qt_libbitcoinqt_a-winshutdownmonitor.$(OBJEXT)
##am__objects_17 =  \
##	$(am__objects_16)
#am__objects_18 = qt/qt_libbitcoinqt_a-addressbookpage.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-addresstablemodel.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-askpassphrasedialog.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-coincontroldialog.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-coincontroltreewidget.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-createwalletdialog.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-editaddressdialog.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-openuridialog.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-overviewpage.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-paymentserver.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-psbtoperationsdialog.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-qrimagewidget.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-receivecoinsdialog.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-receiverequestdialog.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-recentrequeststablemodel.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-sendcoinsdialog.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-sendcoinsentry.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-signverifymessagedialog.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-transactiondesc.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-transactiondescdialog.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-transactionfilterproxy.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-transactionrecord.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-transactiontablemodel.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-transactionview.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-walletcontroller.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-walletframe.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-walletmodel.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-walletmodeltransaction.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-walletview.$(OBJEXT)
##am__objects_19 =  \
##	$(am__objects_18)
#am__objects_20 = $(am__objects_15) $(am__objects_17) \
#	$(am__objects_19)
#am__objects_21 = qt/qt_libbitcoinqt_a-macdockiconhandler.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-macnotificationhandler.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-macos_appnap.$(OBJEXT)
##am__objects_22 =  \
##	$(am__objects_21)
#am_qt_libbitcoinqt_a_OBJECTS = $(am__objects_20) \
#	$(am__objects_1) $(am__objects_1) \
#	$(am__objects_1) $(am__objects_1) \
#	$(am__objects_1) $(am__objects_1) \
#	$(am__objects_1) $(am__objects_1) \
#	$(am__objects_22)
#am__objects_23 = qt/qt_libbitcoinqt_a-moc_addressbookpage.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-moc_addresstablemodel.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-moc_askpassphrasedialog.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-moc_createwalletdialog.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-moc_bantablemodel.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-moc_bitcoin.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-moc_bitcoinaddressvalidator.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-moc_bitcoinamountfield.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-moc_bitcoingui.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-moc_bitcoinunits.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-moc_clientmodel.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-moc_coincontroldialog.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-moc_coincontroltreewidget.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-moc_csvmodelwriter.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-moc_editaddressdialog.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-moc_guiutil.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-moc_initexecutor.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-moc_intro.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-moc_macdockiconhandler.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-moc_macnotificationhandler.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-moc_modaloverlay.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-moc_notificator.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-moc_openuridialog.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-moc_optionsdialog.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-moc_optionsmodel.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-moc_overviewpage.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-moc_peertablemodel.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-moc_peertablesortproxy.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-moc_paymentserver.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-moc_psbtoperationsdialog.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-moc_qrimagewidget.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-moc_qvalidatedlineedit.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-moc_qvaluecombobox.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-moc_receivecoinsdialog.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-moc_receiverequestdialog.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-moc_recentrequeststablemodel.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-moc_rpcconsole.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-moc_sendcoinsdialog.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-moc_sendcoinsentry.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-moc_signverifymessagedialog.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-moc_splashscreen.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-moc_trafficgraphwidget.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-moc_transactiondesc.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-moc_transactiondescdialog.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-moc_transactionfilterproxy.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-moc_transactionoverviewwidget.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-moc_transactiontablemodel.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-moc_transactionview.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-moc_utilitydialog.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-moc_walletcontroller.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-moc_walletframe.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-moc_walletmodel.$(OBJEXT) \
#	qt/qt_libbitcoinqt_a-moc_walletview.$(OBJEXT)
#am__objects_24 =  \
#	qt/qt_libbitcoinqt_a-qrc_bitcoin.$(OBJEXT)
#am__objects_25 = qt/qt_libbitcoinqt_a-qrc_bitcoin_locale.$(OBJEXT)
#nodist_qt_libbitcoinqt_a_OBJECTS = $(am__objects_23) \
#	$(am__objects_1) $(am__objects_24) \
#	$(am__objects_25)
qt_libbitcoinqt_a_OBJECTS = $(am_qt_libbitcoinqt_a_OBJECTS) \
	$(nodist_qt_libbitcoinqt_a_OBJECTS)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(includedir)"
LTLIBRARIES = $(lib_LTLIBRARIES) $(noinst_LTLIBRARIES)
crc32c_libcrc32c_la_LIBADD =
am_crc32c_libcrc32c_la_OBJECTS =  \
	crc32c/src/crc32c_libcrc32c_la-crc32c.lo \
	crc32c/src/crc32c_libcrc32c_la-crc32c_portable.lo
crc32c_libcrc32c_la_OBJECTS = $(am_crc32c_libcrc32c_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
crc32c_libcrc32c_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(crc32c_libcrc32c_la_CXXFLAGS) $(CXXFLAGS) \
	$(crc32c_libcrc32c_la_LDFLAGS) $(LDFLAGS) -o $@
crc32c_libcrc32c_arm_crc_la_LIBADD =
am__crc32c_libcrc32c_arm_crc_la_SOURCES_DIST =  \
	crc32c/src/crc32c_arm64.cc
#am_crc32c_libcrc32c_arm_crc_la_OBJECTS = crc32c/src/crc32c_libcrc32c_arm_crc_la-crc32c_arm64.lo
crc32c_libcrc32c_arm_crc_la_OBJECTS =  \
	$(am_crc32c_libcrc32c_arm_crc_la_OBJECTS)
crc32c_libcrc32c_arm_crc_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(crc32c_libcrc32c_arm_crc_la_CXXFLAGS) $(CXXFLAGS) \
	$(crc32c_libcrc32c_arm_crc_la_LDFLAGS) $(LDFLAGS) -o $@
#am_crc32c_libcrc32c_arm_crc_la_rpath =
crc32c_libcrc32c_sse42_la_LIBADD =
am__crc32c_libcrc32c_sse42_la_SOURCES_DIST =  \
	crc32c/src/crc32c_sse42.cc
am_crc32c_libcrc32c_sse42_la_OBJECTS = crc32c/src/crc32c_libcrc32c_sse42_la-crc32c_sse42.lo
crc32c_libcrc32c_sse42_la_OBJECTS =  \
	$(am_crc32c_libcrc32c_sse42_la_OBJECTS)
crc32c_libcrc32c_sse42_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(crc32c_libcrc32c_sse42_la_CXXFLAGS) $(CXXFLAGS) \
	$(crc32c_libcrc32c_sse42_la_LDFLAGS) $(LDFLAGS) -o $@
am_crc32c_libcrc32c_sse42_la_rpath =
crypto_libbitcoin_crypto_arm_shani_la_LIBADD =
am_crypto_libbitcoin_crypto_arm_shani_la_OBJECTS = crypto/crypto_libbitcoin_crypto_arm_shani_la-sha256_arm_shani.lo
crypto_libbitcoin_crypto_arm_shani_la_OBJECTS =  \
	$(am_crypto_libbitcoin_crypto_arm_shani_la_OBJECTS)
crypto_libbitcoin_crypto_arm_shani_la_LINK = $(LIBTOOL) $(AM_V_lt) \
	--tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CXXLD) $(crypto_libbitcoin_crypto_arm_shani_la_CXXFLAGS) \
	$(CXXFLAGS) $(crypto_libbitcoin_crypto_arm_shani_la_LDFLAGS) \
	$(LDFLAGS) -o $@
#am_crypto_libbitcoin_crypto_arm_shani_la_rpath =
crypto_libbitcoin_crypto_avx2_la_LIBADD =
am_crypto_libbitcoin_crypto_avx2_la_OBJECTS =  \
	crypto/crypto_libbitcoin_crypto_avx2_la-sha256_avx2.lo
crypto_libbitcoin_crypto_avx2_la_OBJECTS =  \
	$(am_crypto_libbitcoin_crypto_avx2_la_OBJECTS)
crypto_libbitcoin_crypto_avx2_la_LINK = $(LIBTOOL) $(AM_V_lt) \
	--tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CXXLD) $(crypto_libbitcoin_crypto_avx2_la_CXXFLAGS) \
	$(CXXFLAGS) $(crypto_libbitcoin_crypto_avx2_la_LDFLAGS) \
	$(LDFLAGS) -o $@
am_crypto_libbitcoin_crypto_avx2_la_rpath =
crypto_libbitcoin_crypto_base_la_LIBADD =
am__crypto_libbitcoin_crypto_base_la_SOURCES_DIST = crypto/aes.cpp \
	crypto/aes.h crypto/chacha_poly_aead.h \
	crypto/chacha_poly_aead.cpp crypto/chacha20.h \
	crypto/chacha20.cpp crypto/common.h crypto/hkdf_sha256_32.cpp \
	crypto/hkdf_sha256_32.h crypto/hmac_sha256.cpp \
	crypto/hmac_sha256.h crypto/hmac_sha512.cpp \
	crypto/hmac_sha512.h crypto/poly1305.h crypto/poly1305.cpp \
	crypto/muhash.h crypto/muhash.cpp crypto/ripemd160.cpp \
	crypto/ripemd160.h crypto/sha1.cpp crypto/sha1.h \
	crypto/sha256.cpp crypto/sha256.h crypto/sha3.cpp \
	crypto/sha3.h crypto/sha512.cpp crypto/sha512.h \
	crypto/siphash.cpp crypto/siphash.h crypto/sha256_sse4.cpp
am__objects_26 = crypto/crypto_libbitcoin_crypto_base_la-sha256_sse4.lo
am_crypto_libbitcoin_crypto_base_la_OBJECTS =  \
	crypto/crypto_libbitcoin_crypto_base_la-aes.lo \
	crypto/crypto_libbitcoin_crypto_base_la-chacha_poly_aead.lo \
	crypto/crypto_libbitcoin_crypto_base_la-chacha20.lo \
	crypto/crypto_libbitcoin_crypto_base_la-hkdf_sha256_32.lo \
	crypto/crypto_libbitcoin_crypto_base_la-hmac_sha256.lo \
	crypto/crypto_libbitcoin_crypto_base_la-hmac_sha512.lo \
	crypto/crypto_libbitcoin_crypto_base_la-poly1305.lo \
	crypto/crypto_libbitcoin_crypto_base_la-muhash.lo \
	crypto/crypto_libbitcoin_crypto_base_la-ripemd160.lo \
	crypto/crypto_libbitcoin_crypto_base_la-sha1.lo \
	crypto/crypto_libbitcoin_crypto_base_la-sha256.lo \
	crypto/crypto_libbitcoin_crypto_base_la-sha3.lo \
	crypto/crypto_libbitcoin_crypto_base_la-sha512.lo \
	crypto/crypto_libbitcoin_crypto_base_la-siphash.lo \
	$(am__objects_26)
crypto_libbitcoin_crypto_base_la_OBJECTS =  \
	$(am_crypto_libbitcoin_crypto_base_la_OBJECTS)
crypto_libbitcoin_crypto_base_la_LINK = $(LIBTOOL) $(AM_V_lt) \
	--tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CXXLD) $(crypto_libbitcoin_crypto_base_la_CXXFLAGS) \
	$(CXXFLAGS) $(crypto_libbitcoin_crypto_base_la_LDFLAGS) \
	$(LDFLAGS) -o $@
crypto_libbitcoin_crypto_sse41_la_LIBADD =
am_crypto_libbitcoin_crypto_sse41_la_OBJECTS =  \
	crypto/crypto_libbitcoin_crypto_sse41_la-sha256_sse41.lo
crypto_libbitcoin_crypto_sse41_la_OBJECTS =  \
	$(am_crypto_libbitcoin_crypto_sse41_la_OBJECTS)
crypto_libbitcoin_crypto_sse41_la_LINK = $(LIBTOOL) $(AM_V_lt) \
	--tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CXXLD) $(crypto_libbitcoin_crypto_sse41_la_CXXFLAGS) \
	$(CXXFLAGS) $(crypto_libbitcoin_crypto_sse41_la_LDFLAGS) \
	$(LDFLAGS) -o $@
am_crypto_libbitcoin_crypto_sse41_la_rpath =
crypto_libbitcoin_crypto_x86_shani_la_LIBADD =
am_crypto_libbitcoin_crypto_x86_shani_la_OBJECTS = crypto/crypto_libbitcoin_crypto_x86_shani_la-sha256_x86_shani.lo
crypto_libbitcoin_crypto_x86_shani_la_OBJECTS =  \
	$(am_crypto_libbitcoin_crypto_x86_shani_la_OBJECTS)
crypto_libbitcoin_crypto_x86_shani_la_LINK = $(LIBTOOL) $(AM_V_lt) \
	--tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CXXLD) $(crypto_libbitcoin_crypto_x86_shani_la_CXXFLAGS) \
	$(CXXFLAGS) $(crypto_libbitcoin_crypto_x86_shani_la_LDFLAGS) \
	$(LDFLAGS) -o $@
am_crypto_libbitcoin_crypto_x86_shani_la_rpath =
leveldb_libleveldb_la_LIBADD =
am__leveldb_libleveldb_la_SOURCES_DIST = leveldb/port/port_stdcxx.h \
	leveldb/port/port.h leveldb/port/thread_annotations.h \
	leveldb/include/leveldb/db.h leveldb/include/leveldb/options.h \
	leveldb/include/leveldb/comparator.h \
	leveldb/include/leveldb/filter_policy.h \
	leveldb/include/leveldb/slice.h \
	leveldb/include/leveldb/table_builder.h \
	leveldb/include/leveldb/env.h leveldb/include/leveldb/export.h \
	leveldb/include/leveldb/c.h leveldb/include/leveldb/iterator.h \
	leveldb/include/leveldb/cache.h \
	leveldb/include/leveldb/dumpfile.h \
	leveldb/include/leveldb/table.h \
	leveldb/include/leveldb/write_batch.h \
	leveldb/include/leveldb/status.h leveldb/db/log_format.h \
	leveldb/db/memtable.h leveldb/db/version_set.h \
	leveldb/db/write_batch_internal.h leveldb/db/filename.h \
	leveldb/db/version_edit.h leveldb/db/dbformat.h \
	leveldb/db/builder.h leveldb/db/log_writer.h \
	leveldb/db/db_iter.h leveldb/db/skiplist.h \
	leveldb/db/db_impl.h leveldb/db/table_cache.h \
	leveldb/db/snapshot.h leveldb/db/log_reader.h \
	leveldb/table/filter_block.h leveldb/table/block_builder.h \
	leveldb/table/block.h leveldb/table/two_level_iterator.h \
	leveldb/table/merger.h leveldb/table/format.h \
	leveldb/table/iterator_wrapper.h leveldb/util/crc32c.h \
	leveldb/util/env_posix_test_helper.h \
	leveldb/util/env_windows_test_helper.h leveldb/util/arena.h \
	leveldb/util/random.h leveldb/util/posix_logger.h \
	leveldb/util/hash.h leveldb/util/histogram.h \
	leveldb/util/coding.h leveldb/util/testutil.h \
	leveldb/util/mutexlock.h leveldb/util/logging.h \
	leveldb/util/no_destructor.h leveldb/util/testharness.h \
	leveldb/util/windows_logger.h leveldb/db/builder.cc \
	leveldb/db/c.cc leveldb/db/dbformat.cc leveldb/db/db_impl.cc \
	leveldb/db/db_iter.cc leveldb/db/dumpfile.cc \
	leveldb/db/filename.cc leveldb/db/log_reader.cc \
	leveldb/db/log_writer.cc leveldb/db/memtable.cc \
	leveldb/db/repair.cc leveldb/db/table_cache.cc \
	leveldb/db/version_edit.cc leveldb/db/version_set.cc \
	leveldb/db/write_batch.cc leveldb/table/block_builder.cc \
	leveldb/table/block.cc leveldb/table/filter_block.cc \
	leveldb/table/format.cc leveldb/table/iterator.cc \
	leveldb/table/merger.cc leveldb/table/table_builder.cc \
	leveldb/table/table.cc leveldb/table/two_level_iterator.cc \
	leveldb/util/arena.cc leveldb/util/bloom.cc \
	leveldb/util/cache.cc leveldb/util/coding.cc \
	leveldb/util/comparator.cc leveldb/util/crc32c.cc \
	leveldb/util/env.cc leveldb/util/filter_policy.cc \
	leveldb/util/hash.cc leveldb/util/histogram.cc \
	leveldb/util/logging.cc leveldb/util/options.cc \
	leveldb/util/status.cc leveldb/util/env_windows.cc \
	leveldb/util/env_posix.cc
#am__objects_27 = leveldb/util/leveldb_libleveldb_la-env_windows.lo
am__objects_28 = leveldb/util/leveldb_libleveldb_la-env_posix.lo
am_leveldb_libleveldb_la_OBJECTS =  \
	leveldb/db/leveldb_libleveldb_la-builder.lo \
	leveldb/db/leveldb_libleveldb_la-c.lo \
	leveldb/db/leveldb_libleveldb_la-dbformat.lo \
	leveldb/db/leveldb_libleveldb_la-db_impl.lo \
	leveldb/db/leveldb_libleveldb_la-db_iter.lo \
	leveldb/db/leveldb_libleveldb_la-dumpfile.lo \
	leveldb/db/leveldb_libleveldb_la-filename.lo \
	leveldb/db/leveldb_libleveldb_la-log_reader.lo \
	leveldb/db/leveldb_libleveldb_la-log_writer.lo \
	leveldb/db/leveldb_libleveldb_la-memtable.lo \
	leveldb/db/leveldb_libleveldb_la-repair.lo \
	leveldb/db/leveldb_libleveldb_la-table_cache.lo \
	leveldb/db/leveldb_libleveldb_la-version_edit.lo \
	leveldb/db/leveldb_libleveldb_la-version_set.lo \
	leveldb/db/leveldb_libleveldb_la-write_batch.lo \
	leveldb/table/leveldb_libleveldb_la-block_builder.lo \
	leveldb/table/leveldb_libleveldb_la-block.lo \
	leveldb/table/leveldb_libleveldb_la-filter_block.lo \
	leveldb/table/leveldb_libleveldb_la-format.lo \
	leveldb/table/leveldb_libleveldb_la-iterator.lo \
	leveldb/table/leveldb_libleveldb_la-merger.lo \
	leveldb/table/leveldb_libleveldb_la-table_builder.lo \
	leveldb/table/leveldb_libleveldb_la-table.lo \
	leveldb/table/leveldb_libleveldb_la-two_level_iterator.lo \
	leveldb/util/leveldb_libleveldb_la-arena.lo \
	leveldb/util/leveldb_libleveldb_la-bloom.lo \
	leveldb/util/leveldb_libleveldb_la-cache.lo \
	leveldb/util/leveldb_libleveldb_la-coding.lo \
	leveldb/util/leveldb_libleveldb_la-comparator.lo \
	leveldb/util/leveldb_libleveldb_la-crc32c.lo \
	leveldb/util/leveldb_libleveldb_la-env.lo \
	leveldb/util/leveldb_libleveldb_la-filter_policy.lo \
	leveldb/util/leveldb_libleveldb_la-hash.lo \
	leveldb/util/leveldb_libleveldb_la-histogram.lo \
	leveldb/util/leveldb_libleveldb_la-logging.lo \
	leveldb/util/leveldb_libleveldb_la-options.lo \
	leveldb/util/leveldb_libleveldb_la-status.lo $(am__objects_27) \
	$(am__objects_28)
leveldb_libleveldb_la_OBJECTS = $(am_leveldb_libleveldb_la_OBJECTS)
leveldb_libleveldb_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) \
	$(leveldb_libleveldb_la_LDFLAGS) $(LDFLAGS) -o $@
leveldb_libmemenv_la_LIBADD =
am_leveldb_libmemenv_la_OBJECTS =  \
	leveldb/helpers/memenv/leveldb_libmemenv_la-memenv.lo
leveldb_libmemenv_la_OBJECTS = $(am_leveldb_libmemenv_la_OBJECTS)
leveldb_libmemenv_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(leveldb_libmemenv_la_CXXFLAGS) $(CXXFLAGS) \
	$(leveldb_libmemenv_la_LDFLAGS) $(LDFLAGS) -o $@
libbitcoinconsensus_la_DEPENDENCIES =  \
	$(LIBSECP256K1)
am__libbitcoinconsensus_la_SOURCES_DIST = support/cleanse.cpp \
	crypto/aes.cpp crypto/aes.h crypto/chacha_poly_aead.h \
	crypto/chacha_poly_aead.cpp crypto/chacha20.h \
	crypto/chacha20.cpp crypto/common.h crypto/hkdf_sha256_32.cpp \
	crypto/hkdf_sha256_32.h crypto/hmac_sha256.cpp \
	crypto/hmac_sha256.h crypto/hmac_sha512.cpp \
	crypto/hmac_sha512.h crypto/poly1305.h crypto/poly1305.cpp \
	crypto/muhash.h crypto/muhash.cpp crypto/ripemd160.cpp \
	crypto/ripemd160.h crypto/sha1.cpp crypto/sha1.h \
	crypto/sha256.cpp crypto/sha256.h crypto/sha3.cpp \
	crypto/sha3.h crypto/sha512.cpp crypto/sha512.h \
	crypto/siphash.cpp crypto/siphash.h crypto/sha256_sse4.cpp \
	arith_uint256.cpp arith_uint256.h consensus/amount.h \
	consensus/merkle.cpp consensus/merkle.h consensus/params.h \
	consensus/tx_check.cpp consensus/validation.h hash.cpp hash.h \
	prevector.h primitives/block.cpp primitives/block.h \
	primitives/transaction.cpp primitives/transaction.h pubkey.cpp \
	pubkey.h script/bitcoinconsensus.cpp script/interpreter.cpp \
	script/interpreter.h script/script.cpp script/script.h \
	script/script_error.cpp script/script_error.h serialize.h \
	span.h tinyformat.h uint256.cpp uint256.h \
	util/strencodings.cpp util/strencodings.h version.h
am__objects_29 =  \
	crypto/libbitcoinconsensus_la-sha256_sse4.lo
am__objects_30 = crypto/libbitcoinconsensus_la-aes.lo \
	crypto/libbitcoinconsensus_la-chacha_poly_aead.lo \
	crypto/libbitcoinconsensus_la-chacha20.lo \
	crypto/libbitcoinconsensus_la-hkdf_sha256_32.lo \
	crypto/libbitcoinconsensus_la-hmac_sha256.lo \
	crypto/libbitcoinconsensus_la-hmac_sha512.lo \
	crypto/libbitcoinconsensus_la-poly1305.lo \
	crypto/libbitcoinconsensus_la-muhash.lo \
	crypto/libbitcoinconsensus_la-ripemd160.lo \
	crypto/libbitcoinconsensus_la-sha1.lo \
	crypto/libbitcoinconsensus_la-sha256.lo \
	crypto/libbitcoinconsensus_la-sha3.lo \
	crypto/libbitcoinconsensus_la-sha512.lo \
	crypto/libbitcoinconsensus_la-siphash.lo $(am__objects_29)
am__objects_31 = libbitcoinconsensus_la-arith_uint256.lo \
	consensus/libbitcoinconsensus_la-merkle.lo \
	consensus/libbitcoinconsensus_la-tx_check.lo \
	libbitcoinconsensus_la-hash.lo \
	primitives/libbitcoinconsensus_la-block.lo \
	primitives/libbitcoinconsensus_la-transaction.lo \
	libbitcoinconsensus_la-pubkey.lo \
	script/libbitcoinconsensus_la-bitcoinconsensus.lo \
	script/libbitcoinconsensus_la-interpreter.lo \
	script/libbitcoinconsensus_la-script.lo \
	script/libbitcoinconsensus_la-script_error.lo \
	libbitcoinconsensus_la-uint256.lo \
	util/libbitcoinconsensus_la-strencodings.lo
am_libbitcoinconsensus_la_OBJECTS = support/libbitcoinconsensus_la-cleanse.lo \
	$(am__objects_30) $(am__objects_31)
libbitcoinconsensus_la_OBJECTS = $(am_libbitcoinconsensus_la_OBJECTS)
libbitcoinconsensus_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) \
	$(libbitcoinconsensus_la_LDFLAGS) $(LDFLAGS) -o $@
am_libbitcoinconsensus_la_rpath = -rpath \
	$(libdir)
#libbitcoinkernel_la_DEPENDENCIES =  \
#	$(LIBBITCOIN_CRYPTO) \
#	$(LIBUNIVALUE) $(LIBLEVELDB) \
#	$(LIBMEMENV) $(LIBSECP256K1)
am__libbitcoinkernel_la_SOURCES_DIST = kernel/bitcoinkernel.cpp \
	arith_uint256.cpp chain.cpp chainparamsbase.cpp \
	chainparams.cpp clientversion.cpp coins.cpp compressor.cpp \
	consensus/merkle.cpp consensus/tx_check.cpp \
	consensus/tx_verify.cpp core_read.cpp dbwrapper.cpp \
	deploymentinfo.cpp deploymentstatus.cpp flatfile.cpp fs.cpp \
	hash.cpp kernel/checks.cpp kernel/coinstats.cpp \
	kernel/context.cpp key.cpp logging.cpp node/blockstorage.cpp \
	node/chainstate.cpp node/ui_interface.cpp policy/feerate.cpp \
	policy/fees.cpp policy/packages.cpp policy/policy.cpp \
	policy/rbf.cpp policy/settings.cpp pow.cpp \
	primitives/block.cpp primitives/transaction.cpp pubkey.cpp \
	random.cpp randomenv.cpp scheduler.cpp script/interpreter.cpp \
	script/script.cpp script/script_error.cpp script/sigcache.cpp \
	script/standard.cpp shutdown.cpp signet.cpp \
	support/cleanse.cpp support/lockedpool.cpp sync.cpp \
	threadinterrupt.cpp txdb.cpp txmempool.cpp uint256.cpp \
	util/bytevectorhash.cpp util/check.cpp util/getuniquepath.cpp \
	util/hasher.cpp util/moneystr.cpp util/rbf.cpp \
	util/serfloat.cpp util/settings.cpp util/strencodings.cpp \
	util/string.cpp util/syscall_sandbox.cpp util/syserror.cpp \
	util/system.cpp util/thread.cpp util/threadnames.cpp \
	util/time.cpp util/tokenpipe.cpp validation.cpp \
	validationinterface.cpp versionbits.cpp warnings.cpp
#am_libbitcoinkernel_la_OBJECTS = kernel/libbitcoinkernel_la-bitcoinkernel.lo \
#	libbitcoinkernel_la-arith_uint256.lo \
#	libbitcoinkernel_la-chain.lo \
#	libbitcoinkernel_la-chainparamsbase.lo \
#	libbitcoinkernel_la-chainparams.lo \
#	libbitcoinkernel_la-clientversion.lo \
#	libbitcoinkernel_la-coins.lo \
#	libbitcoinkernel_la-compressor.lo \
#	consensus/libbitcoinkernel_la-merkle.lo \
#	consensus/libbitcoinkernel_la-tx_check.lo \
#	consensus/libbitcoinkernel_la-tx_verify.lo \
#	libbitcoinkernel_la-core_read.lo \
#	libbitcoinkernel_la-dbwrapper.lo \
#	libbitcoinkernel_la-deploymentinfo.lo \
#	libbitcoinkernel_la-deploymentstatus.lo \
#	libbitcoinkernel_la-flatfile.lo \
#	libbitcoinkernel_la-fs.lo \
#	libbitcoinkernel_la-hash.lo \
#	kernel/libbitcoinkernel_la-checks.lo \
#	kernel/libbitcoinkernel_la-coinstats.lo \
#	kernel/libbitcoinkernel_la-context.lo \
#	libbitcoinkernel_la-key.lo \
#	libbitcoinkernel_la-logging.lo \
#	node/libbitcoinkernel_la-blockstorage.lo \
#	node/libbitcoinkernel_la-chainstate.lo \
#	node/libbitcoinkernel_la-ui_interface.lo \
#	policy/libbitcoinkernel_la-feerate.lo \
#	policy/libbitcoinkernel_la-fees.lo \
#	policy/libbitcoinkernel_la-packages.lo \
#	policy/libbitcoinkernel_la-policy.lo \
#	policy/libbitcoinkernel_la-rbf.lo \
#	policy/libbitcoinkernel_la-settings.lo \
#	libbitcoinkernel_la-pow.lo \
#	primitives/libbitcoinkernel_la-block.lo \
#	primitives/libbitcoinkernel_la-transaction.lo \
#	libbitcoinkernel_la-pubkey.lo \
#	libbitcoinkernel_la-random.lo \
#	libbitcoinkernel_la-randomenv.lo \
#	libbitcoinkernel_la-scheduler.lo \
#	script/libbitcoinkernel_la-interpreter.lo \
#	script/libbitcoinkernel_la-script.lo \
#	script/libbitcoinkernel_la-script_error.lo \
#	script/libbitcoinkernel_la-sigcache.lo \
#	script/libbitcoinkernel_la-standard.lo \
#	libbitcoinkernel_la-shutdown.lo \
#	libbitcoinkernel_la-signet.lo \
#	support/libbitcoinkernel_la-cleanse.lo \
#	support/libbitcoinkernel_la-lockedpool.lo \
#	libbitcoinkernel_la-sync.lo \
#	libbitcoinkernel_la-threadinterrupt.lo \
#	libbitcoinkernel_la-txdb.lo \
#	libbitcoinkernel_la-txmempool.lo \
#	libbitcoinkernel_la-uint256.lo \
#	util/libbitcoinkernel_la-bytevectorhash.lo \
#	util/libbitcoinkernel_la-check.lo \
#	util/libbitcoinkernel_la-getuniquepath.lo \
#	util/libbitcoinkernel_la-hasher.lo \
#	util/libbitcoinkernel_la-moneystr.lo \
#	util/libbitcoinkernel_la-rbf.lo \
#	util/libbitcoinkernel_la-serfloat.lo \
#	util/libbitcoinkernel_la-settings.lo \
#	util/libbitcoinkernel_la-strencodings.lo \
#	util/libbitcoinkernel_la-string.lo \
#	util/libbitcoinkernel_la-syscall_sandbox.lo \
#	util/libbitcoinkernel_la-syserror.lo \
#	util/libbitcoinkernel_la-system.lo \
#	util/libbitcoinkernel_la-thread.lo \
#	util/libbitcoinkernel_la-threadnames.lo \
#	util/libbitcoinkernel_la-time.lo \
#	util/libbitcoinkernel_la-tokenpipe.lo \
#	libbitcoinkernel_la-validation.lo \
#	libbitcoinkernel_la-validationinterface.lo \
#	libbitcoinkernel_la-versionbits.lo \
#	libbitcoinkernel_la-warnings.lo
libbitcoinkernel_la_OBJECTS = $(am_libbitcoinkernel_la_OBJECTS)
libbitcoinkernel_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) \
	$(libbitcoinkernel_la_LDFLAGS) $(LDFLAGS) -o $@
#am_libbitcoinkernel_la_rpath = -rpath \
#	$(libdir)
libunivalue_la_LIBADD =
am__objects_32 = univalue/lib/libunivalue_la-univalue.lo \
	univalue/lib/libunivalue_la-univalue_get.lo \
	univalue/lib/libunivalue_la-univalue_read.lo \
	univalue/lib/libunivalue_la-univalue_write.lo
am_libunivalue_la_OBJECTS = $(am__objects_32) $(am__objects_1) \
	$(am__objects_1) $(am__objects_1)
libunivalue_la_OBJECTS = $(am_libunivalue_la_OBJECTS)
am__EXEEXT_1 = bitcoind$(EXEEXT)
#am__EXEEXT_2 = bitcoin-node$(EXEEXT)
am__EXEEXT_3 = bitcoin-cli$(EXEEXT)
am__EXEEXT_4 = bitcoin-tx$(EXEEXT)
#am__EXEEXT_5 = bitcoin-wallet$(EXEEXT)
am__EXEEXT_6 = bitcoin-util$(EXEEXT)
#am__EXEEXT_7 =  \
#	bitcoin-chainstate$(EXEEXT)
am__EXEEXT_8 = test/test_bitcoin$(EXEEXT)
am__EXEEXT_9 = bench/bench_bitcoin$(EXEEXT)
#am__EXEEXT_10 = qt/bitcoin-qt$(EXEEXT)
##am__EXEEXT_11 =  \
##	bitcoin-gui$(EXEEXT)
#am__EXEEXT_12 =  \
#	qt/test/test_bitcoin-qt$(EXEEXT)
am__EXEEXT_13 = minisketch/test$(EXEEXT)
am__EXEEXT_14 =  \
	$(am__EXEEXT_13)
am__EXEEXT_15 = test/fuzz/fuzz$(EXEEXT)
am__EXEEXT_16 = univalue/test/object$(EXEEXT) \
	univalue/test/unitester$(EXEEXT) \
	univalue/test/no_nul$(EXEEXT)
am__EXEEXT_17 =  \
	$(am__EXEEXT_16)
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
am__bench_bench_bitcoin_SOURCES_DIST = bench/data/block413567.raw \
	bench/addrman.cpp bench/base58.cpp bench/bech32.cpp \
	bench/bench.cpp bench/bench.h bench/bench_bitcoin.cpp \
	bench/block_assemble.cpp bench/ccoins_caching.cpp \
	bench/chacha20.cpp bench/chacha_poly_aead.cpp \
	bench/checkblock.cpp bench/checkqueue.cpp \
	bench/crypto_hash.cpp bench/data.cpp bench/data.h \
	bench/duplicate_inputs.cpp bench/examples.cpp \
	bench/gcs_filter.cpp bench/hashpadding.cpp \
	bench/lockedpool.cpp bench/logging.cpp \
	bench/mempool_eviction.cpp bench/mempool_stress.cpp \
	bench/merkle_root.cpp bench/nanobench.cpp bench/nanobench.h \
	bench/peer_eviction.cpp bench/poly1305.cpp bench/prevector.cpp \
	bench/rollingbloom.cpp bench/rpc_blockchain.cpp \
	bench/rpc_mempool.cpp bench/strencodings.cpp \
	bench/util_time.cpp bench/verify_script.cpp \
	bench/coin_selection.cpp bench/wallet_balance.cpp \
	bench/wallet_loading.cpp
#am__objects_33 = bench/bench_bench_bitcoin-coin_selection.$(OBJEXT) \
#	bench/bench_bench_bitcoin-wallet_balance.$(OBJEXT) \
#	bench/bench_bench_bitcoin-wallet_loading.$(OBJEXT)
am_bench_bench_bitcoin_OBJECTS = $(am__objects_1) \
	bench/bench_bench_bitcoin-addrman.$(OBJEXT) \
	bench/bench_bench_bitcoin-base58.$(OBJEXT) \
	bench/bench_bench_bitcoin-bech32.$(OBJEXT) \
	bench/bench_bench_bitcoin-bench.$(OBJEXT) \
	bench/bench_bench_bitcoin-bench_bitcoin.$(OBJEXT) \
	bench/bench_bench_bitcoin-block_assemble.$(OBJEXT) \
	bench/bench_bench_bitcoin-ccoins_caching.$(OBJEXT) \
	bench/bench_bench_bitcoin-chacha20.$(OBJEXT) \
	bench/bench_bench_bitcoin-chacha_poly_aead.$(OBJEXT) \
	bench/bench_bench_bitcoin-checkblock.$(OBJEXT) \
	bench/bench_bench_bitcoin-checkqueue.$(OBJEXT) \
	bench/bench_bench_bitcoin-crypto_hash.$(OBJEXT) \
	bench/bench_bench_bitcoin-data.$(OBJEXT) \
	bench/bench_bench_bitcoin-duplicate_inputs.$(OBJEXT) \
	bench/bench_bench_bitcoin-examples.$(OBJEXT) \
	bench/bench_bench_bitcoin-gcs_filter.$(OBJEXT) \
	bench/bench_bench_bitcoin-hashpadding.$(OBJEXT) \
	bench/bench_bench_bitcoin-lockedpool.$(OBJEXT) \
	bench/bench_bench_bitcoin-logging.$(OBJEXT) \
	bench/bench_bench_bitcoin-mempool_eviction.$(OBJEXT) \
	bench/bench_bench_bitcoin-mempool_stress.$(OBJEXT) \
	bench/bench_bench_bitcoin-merkle_root.$(OBJEXT) \
	bench/bench_bench_bitcoin-nanobench.$(OBJEXT) \
	bench/bench_bench_bitcoin-peer_eviction.$(OBJEXT) \
	bench/bench_bench_bitcoin-poly1305.$(OBJEXT) \
	bench/bench_bench_bitcoin-prevector.$(OBJEXT) \
	bench/bench_bench_bitcoin-rollingbloom.$(OBJEXT) \
	bench/bench_bench_bitcoin-rpc_blockchain.$(OBJEXT) \
	bench/bench_bench_bitcoin-rpc_mempool.$(OBJEXT) \
	bench/bench_bench_bitcoin-strencodings.$(OBJEXT) \
	bench/bench_bench_bitcoin-util_time.$(OBJEXT) \
	bench/bench_bench_bitcoin-verify_script.$(OBJEXT) \
	$(am__objects_33)
am__objects_34 = $(am__objects_1)
nodist_bench_bench_bitcoin_OBJECTS =  \
	$(am__objects_34)
bench_bench_bitcoin_OBJECTS = $(am_bench_bench_bitcoin_OBJECTS) \
	$(nodist_bench_bench_bitcoin_OBJECTS)
am__DEPENDENCIES_1 =
am__DEPENDENCIES_2 =  \
	$(LIBBITCOIN_ZMQ) \
	$(am__DEPENDENCIES_1)
bench_bench_bitcoin_DEPENDENCIES = $(LIBTEST_UTIL) \
	$(LIBBITCOIN_NODE) $(LIBBITCOIN_WALLET) \
	$(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) \
	$(LIBBITCOIN_CONSENSUS) \
	$(LIBBITCOIN_CRYPTO) $(LIBLEVELDB) \
	$(LIBMEMENV) $(LIBSECP256K1) $(LIBUNIVALUE) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
bench_bench_bitcoin_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) \
	$(bench_bench_bitcoin_LDFLAGS) $(LDFLAGS) -o $@
am_bitcoin_chainstate_OBJECTS =  \
	bitcoin_chainstate-bitcoin-chainstate.$(OBJEXT)
bitcoin_chainstate_OBJECTS = $(am_bitcoin_chainstate_OBJECTS)
bitcoin_chainstate_DEPENDENCIES = $(LIBBITCOINKERNEL)
bitcoin_chainstate_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(bitcoin_chainstate_CXXFLAGS) $(CXXFLAGS) \
	$(bitcoin_chainstate_LDFLAGS) $(LDFLAGS) -o $@
am__bitcoin_cli_SOURCES_DIST = bitcoin-cli.cpp bitcoin-cli-res.rc
#am__objects_35 = bitcoin-cli-res.$(OBJEXT)
am_bitcoin_cli_OBJECTS = bitcoin_cli-bitcoin-cli.$(OBJEXT) \
	$(am__objects_35)
bitcoin_cli_OBJECTS = $(am_bitcoin_cli_OBJECTS)
bitcoin_cli_DEPENDENCIES = $(LIBBITCOIN_CLI) $(LIBUNIVALUE) \
	$(LIBBITCOIN_UTIL) $(LIBBITCOIN_CRYPTO) $(am__DEPENDENCIES_1)
bitcoin_cli_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(bitcoin_cli_CXXFLAGS) \
	$(CXXFLAGS) $(bitcoin_cli_LDFLAGS) $(LDFLAGS) -o $@
am__bitcoin_gui_SOURCES_DIST = qt/main.cpp qt/res/bitcoin-qt-res.rc \
	init/bitcoin-gui.cpp
#am__objects_36 = qt/res/bitcoin-qt-res.$(OBJEXT)
##am__objects_37 =  \
##	$(am__objects_36)
#am__objects_38 = qt/bitcoin_gui-main.$(OBJEXT) \
#	$(am__objects_37)
#am_bitcoin_gui_OBJECTS = $(am__objects_38) \
#	init/bitcoin_gui-bitcoin-gui.$(OBJEXT)
bitcoin_gui_OBJECTS = $(am_bitcoin_gui_OBJECTS)
#am__DEPENDENCIES_3 =  \
#	$(LIBBITCOIN_ZMQ) \
#	$(am__DEPENDENCIES_1)
#am__DEPENDENCIES_4 = qt/libbitcoinqt.a \
#	$(LIBBITCOIN_NODE) $(am__append_76) \
#	$(am__DEPENDENCIES_3) $(LIBBITCOIN_CLI) \
#	$(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) \
#	$(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) \
#	$(LIBUNIVALUE) $(LIBLEVELDB) $(LIBMEMENV) \
#	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
#	$(LIBSECP256K1) $(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
#bitcoin_gui_DEPENDENCIES = $(am__DEPENDENCIES_4) \
#	$(LIBBITCOIN_IPC) $(LIBBITCOIN_UTIL) \
#	$(am__DEPENDENCIES_1)
bitcoin_gui_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(bitcoin_gui_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CXXLD) $(bitcoin_gui_CXXFLAGS) $(CXXFLAGS) \
	$(bitcoin_gui_LDFLAGS) $(LDFLAGS) -o $@
am__bitcoin_node_SOURCES_DIST = bitcoind.cpp bitcoind-res.rc \
	init/bitcoin-node.cpp
#am__objects_39 = bitcoind-res.$(OBJEXT)
am__objects_40 = bitcoin_node-bitcoind.$(OBJEXT) $(am__objects_39)
am_bitcoin_node_OBJECTS = $(am__objects_40) \
	init/bitcoin_node-bitcoin-node.$(OBJEXT)
bitcoin_node_OBJECTS = $(am_bitcoin_node_OBJECTS)
am__DEPENDENCIES_5 = $(LIBBITCOIN_WALLET) $(LIBBITCOIN_COMMON) \
	$(LIBBITCOIN_UTIL) $(LIBUNIVALUE) $(LIBBITCOIN_ZMQ) \
	$(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBLEVELDB) \
	$(LIBMEMENV) $(LIBSECP256K1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
bitcoin_node_DEPENDENCIES = $(LIBBITCOIN_NODE) $(am__DEPENDENCIES_5) \
	$(LIBBITCOIN_IPC) $(am__DEPENDENCIES_1)
bitcoin_node_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(bitcoin_node_CXXFLAGS) \
	$(CXXFLAGS) $(bitcoin_node_LDFLAGS) $(LDFLAGS) -o $@
am__bitcoin_tx_SOURCES_DIST = bitcoin-tx.cpp bitcoin-tx-res.rc
#am__objects_41 = bitcoin-tx-res.$(OBJEXT)
am_bitcoin_tx_OBJECTS = bitcoin_tx-bitcoin-tx.$(OBJEXT) \
	$(am__objects_41)
bitcoin_tx_OBJECTS = $(am_bitcoin_tx_OBJECTS)
bitcoin_tx_DEPENDENCIES = $(LIBUNIVALUE) $(LIBBITCOIN_COMMON) \
	$(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) \
	$(LIBBITCOIN_CRYPTO) $(LIBSECP256K1)
bitcoin_tx_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(bitcoin_tx_CXXFLAGS) \
	$(CXXFLAGS) $(bitcoin_tx_LDFLAGS) $(LDFLAGS) -o $@
am__bitcoin_util_SOURCES_DIST = bitcoin-util.cpp bitcoin-util-res.rc
#am__objects_42 = bitcoin-util-res.$(OBJEXT)
am_bitcoin_util_OBJECTS = bitcoin_util-bitcoin-util.$(OBJEXT) \
	$(am__objects_42)
bitcoin_util_OBJECTS = $(am_bitcoin_util_OBJECTS)
bitcoin_util_DEPENDENCIES = $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) \
	$(LIBUNIVALUE) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) \
	$(LIBSECP256K1)
bitcoin_util_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(bitcoin_util_CXXFLAGS) \
	$(CXXFLAGS) $(bitcoin_util_LDFLAGS) $(LDFLAGS) -o $@
am__bitcoin_wallet_SOURCES_DIST = bitcoin-wallet.cpp \
	init/bitcoin-wallet.cpp bitcoin-wallet-res.rc
#am__objects_43 = bitcoin-wallet-res.$(OBJEXT)
am_bitcoin_wallet_OBJECTS = bitcoin_wallet-bitcoin-wallet.$(OBJEXT) \
	init/bitcoin_wallet-bitcoin-wallet.$(OBJEXT) $(am__objects_43)
bitcoin_wallet_OBJECTS = $(am_bitcoin_wallet_OBJECTS)
bitcoin_wallet_DEPENDENCIES = $(LIBBITCOIN_WALLET_TOOL) \
	$(LIBBITCOIN_WALLET) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) \
	$(LIBUNIVALUE) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) \
	$(LIBSECP256K1) $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
bitcoin_wallet_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(bitcoin_wallet_CXXFLAGS) $(CXXFLAGS) \
	$(bitcoin_wallet_LDFLAGS) $(LDFLAGS) -o $@
am__bitcoind_SOURCES_DIST = bitcoind.cpp bitcoind-res.rc \
	init/bitcoind.cpp
am__objects_44 = bitcoind-bitcoind.$(OBJEXT) $(am__objects_39)
am_bitcoind_OBJECTS = $(am__objects_44) \
	init/bitcoind-bitcoind.$(OBJEXT)
bitcoind_OBJECTS = $(am_bitcoind_OBJECTS)
bitcoind_DEPENDENCIES = $(LIBBITCOIN_NODE) $(am__DEPENDENCIES_5)
bitcoind_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(bitcoind_CXXFLAGS) \
	$(CXXFLAGS) $(bitcoind_LDFLAGS) $(LDFLAGS) -o $@
am__minisketch_test_SOURCES_DIST = minisketch/src/test.cpp
am__objects_45 = minisketch/src/minisketch_test-test.$(OBJEXT)
am_minisketch_test_OBJECTS =  \
	$(am__objects_45)
minisketch_test_OBJECTS = $(am_minisketch_test_OBJECTS)
minisketch_test_DEPENDENCIES =  \
	$(MINISKETCH_LIBS)
minisketch_test_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(minisketch_test_CXXFLAGS) $(CXXFLAGS) \
	$(minisketch_test_LDFLAGS) $(LDFLAGS) -o $@
am__qt_bitcoin_qt_SOURCES_DIST = qt/main.cpp qt/res/bitcoin-qt-res.rc \
	init/bitcoin-qt.cpp
#am__objects_46 = qt/qt_bitcoin_qt-main.$(OBJEXT) \
#	$(am__objects_37)
#am_qt_bitcoin_qt_OBJECTS = $(am__objects_46) \
#	init/qt_bitcoin_qt-bitcoin-qt.$(OBJEXT)
qt_bitcoin_qt_OBJECTS = $(am_qt_bitcoin_qt_OBJECTS)
#qt_bitcoin_qt_DEPENDENCIES = $(am__DEPENDENCIES_4)
qt_bitcoin_qt_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(qt_bitcoin_qt_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
	$(CXXLD) $(qt_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) \
	$(qt_bitcoin_qt_LDFLAGS) $(LDFLAGS) -o $@
am__qt_test_test_bitcoin_qt_SOURCES_DIST = init/bitcoin-qt.cpp \
	qt/test/apptests.cpp qt/test/optiontests.cpp \
	qt/test/rpcnestedtests.cpp qt/test/test_main.cpp \
	qt/test/uritests.cpp qt/test/util.cpp \
	qt/test/addressbooktests.h qt/test/apptests.h \
	qt/test/optiontests.h qt/test/rpcnestedtests.h \
	qt/test/uritests.h qt/test/util.h qt/test/wallettests.h \
	qt/test/addressbooktests.cpp qt/test/wallettests.cpp \
	wallet/test/wallet_test_fixture.cpp
##am__objects_47 = qt/test/qt_test_test_bitcoin_qt-addressbooktests.$(OBJEXT) \
##	qt/test/qt_test_test_bitcoin_qt-wallettests.$(OBJEXT) \
##	wallet/test/qt_test_test_bitcoin_qt-wallet_test_fixture.$(OBJEXT)
#am_qt_test_test_bitcoin_qt_OBJECTS = init/qt_test_test_bitcoin_qt-bitcoin-qt.$(OBJEXT) \
#	qt/test/qt_test_test_bitcoin_qt-apptests.$(OBJEXT) \
#	qt/test/qt_test_test_bitcoin_qt-optiontests.$(OBJEXT) \
#	qt/test/qt_test_test_bitcoin_qt-rpcnestedtests.$(OBJEXT) \
#	qt/test/qt_test_test_bitcoin_qt-test_main.$(OBJEXT) \
#	qt/test/qt_test_test_bitcoin_qt-uritests.$(OBJEXT) \
#	qt/test/qt_test_test_bitcoin_qt-util.$(OBJEXT) \
#	$(am__objects_1) $(am__objects_47)
##am__objects_48 = qt/test/qt_test_test_bitcoin_qt-moc_addressbooktests.$(OBJEXT) \
##	qt/test/qt_test_test_bitcoin_qt-moc_wallettests.$(OBJEXT)
#am__objects_49 = qt/test/qt_test_test_bitcoin_qt-moc_apptests.$(OBJEXT) \
#	qt/test/qt_test_test_bitcoin_qt-moc_optiontests.$(OBJEXT) \
#	qt/test/qt_test_test_bitcoin_qt-moc_rpcnestedtests.$(OBJEXT) \
#	qt/test/qt_test_test_bitcoin_qt-moc_uritests.$(OBJEXT) \
#	$(am__objects_48)
#nodist_qt_test_test_bitcoin_qt_OBJECTS =  \
#	$(am__objects_49)
qt_test_test_bitcoin_qt_OBJECTS =  \
	$(am_qt_test_test_bitcoin_qt_OBJECTS) \
	$(nodist_qt_test_test_bitcoin_qt_OBJECTS)
#am__DEPENDENCIES_6 =  \
#	$(LIBBITCOIN_ZMQ) \
#	$(am__DEPENDENCIES_1)
#qt_test_test_bitcoin_qt_DEPENDENCIES =  \
#	$(LIBBITCOINQT) $(LIBBITCOIN_NODE) \
#	$(LIBTEST_UTIL) $(am__append_83) \
#	$(am__DEPENDENCIES_6) $(LIBBITCOIN_CLI) \
#	$(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) \
#	$(LIBBITCOIN_CONSENSUS) \
#	$(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) \
#	$(LIBLEVELDB) $(LIBMEMENV) \
#	$(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1) $(LIBSECP256K1) \
#	$(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1)
qt_test_test_bitcoin_qt_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) \
	$(qt_test_test_bitcoin_qt_LDFLAGS) $(LDFLAGS) -o $@
am__test_fuzz_fuzz_SOURCES_DIST = wallet/test/fuzz/coinselection.cpp \
	wallet/test/fuzz/notifications.cpp \
	test/fuzz/addition_overflow.cpp test/fuzz/addrman.cpp \
	test/fuzz/asmap.cpp test/fuzz/asmap_direct.cpp \
	test/fuzz/autofile.cpp test/fuzz/banman.cpp \
	test/fuzz/base_encode_decode.cpp test/fuzz/bech32.cpp \
	test/fuzz/block.cpp test/fuzz/block_header.cpp \
	test/fuzz/blockfilter.cpp test/fuzz/bloom_filter.cpp \
	test/fuzz/buffered_file.cpp test/fuzz/chain.cpp \
	test/fuzz/checkqueue.cpp test/fuzz/coins_view.cpp \
	test/fuzz/connman.cpp test/fuzz/crypto.cpp \
	test/fuzz/crypto_aes256.cpp test/fuzz/crypto_aes256cbc.cpp \
	test/fuzz/crypto_chacha20.cpp \
	test/fuzz/crypto_chacha20_poly1305_aead.cpp \
	test/fuzz/crypto_common.cpp \
	test/fuzz/crypto_diff_fuzz_chacha20.cpp \
	test/fuzz/crypto_hkdf_hmac_sha256_l32.cpp \
	test/fuzz/crypto_poly1305.cpp test/fuzz/cuckoocache.cpp \
	test/fuzz/decode_tx.cpp test/fuzz/descriptor_parse.cpp \
	test/fuzz/deserialize.cpp test/fuzz/eval_script.cpp \
	test/fuzz/fee_rate.cpp test/fuzz/fees.cpp \
	test/fuzz/flatfile.cpp test/fuzz/float.cpp \
	test/fuzz/golomb_rice.cpp test/fuzz/hex.cpp \
	test/fuzz/http_request.cpp test/fuzz/i2p.cpp \
	test/fuzz/integer.cpp test/fuzz/key.cpp test/fuzz/key_io.cpp \
	test/fuzz/kitchen_sink.cpp \
	test/fuzz/load_external_block_file.cpp test/fuzz/locale.cpp \
	test/fuzz/merkleblock.cpp test/fuzz/message.cpp \
	test/fuzz/miniscript.cpp test/fuzz/minisketch.cpp \
	test/fuzz/muhash.cpp test/fuzz/multiplication_overflow.cpp \
	test/fuzz/net.cpp test/fuzz/net_permissions.cpp \
	test/fuzz/netaddress.cpp test/fuzz/netbase_dns_lookup.cpp \
	test/fuzz/node_eviction.cpp \
	test/fuzz/p2p_transport_serialization.cpp \
	test/fuzz/parse_hd_keypath.cpp test/fuzz/parse_iso8601.cpp \
	test/fuzz/parse_numbers.cpp test/fuzz/parse_script.cpp \
	test/fuzz/parse_univalue.cpp test/fuzz/policy_estimator.cpp \
	test/fuzz/policy_estimator_io.cpp test/fuzz/pow.cpp \
	test/fuzz/prevector.cpp test/fuzz/primitives_transaction.cpp \
	test/fuzz/process_message.cpp test/fuzz/process_messages.cpp \
	test/fuzz/protocol.cpp test/fuzz/psbt.cpp test/fuzz/random.cpp \
	test/fuzz/rbf.cpp test/fuzz/rolling_bloom_filter.cpp \
	test/fuzz/rpc.cpp test/fuzz/script.cpp \
	test/fuzz/script_assets_test_minimizer.cpp \
	test/fuzz/script_bitcoin_consensus.cpp \
	test/fuzz/script_descriptor_cache.cpp \
	test/fuzz/script_flags.cpp test/fuzz/script_format.cpp \
	test/fuzz/script_interpreter.cpp test/fuzz/script_ops.cpp \
	test/fuzz/script_sigcache.cpp test/fuzz/script_sign.cpp \
	test/fuzz/scriptnum_ops.cpp \
	test/fuzz/secp256k1_ec_seckey_import_export_der.cpp \
	test/fuzz/secp256k1_ecdsa_signature_parse_der_lax.cpp \
	test/fuzz/signature_checker.cpp test/fuzz/signet.cpp \
	test/fuzz/socks5.cpp test/fuzz/span.cpp \
	test/fuzz/spanparsing.cpp test/fuzz/string.cpp \
	test/fuzz/strprintf.cpp test/fuzz/system.cpp \
	test/fuzz/timedata.cpp test/fuzz/torcontrol.cpp \
	test/fuzz/transaction.cpp test/fuzz/tx_in.cpp \
	test/fuzz/tx_out.cpp test/fuzz/tx_pool.cpp \
	test/fuzz/txrequest.cpp test/fuzz/utxo_snapshot.cpp \
	test/fuzz/validation_load_mempool.cpp \
	test/fuzz/versionbits.cpp
##am__objects_50 = wallet/test/fuzz/test_fuzz_fuzz-notifications.$(OBJEXT)
#am__objects_51 = wallet/test/fuzz/test_fuzz_fuzz-coinselection.$(OBJEXT) \
#	$(am__objects_50)
am_test_fuzz_fuzz_OBJECTS =  \
	$(am__objects_51) \
	test/fuzz/test_fuzz_fuzz-addition_overflow.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-addrman.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-asmap.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-asmap_direct.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-autofile.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-banman.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-base_encode_decode.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-bech32.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-block.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-block_header.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-blockfilter.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-bloom_filter.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-buffered_file.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-chain.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-checkqueue.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-coins_view.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-connman.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-crypto.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-crypto_aes256.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-crypto_aes256cbc.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-crypto_chacha20.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-crypto_chacha20_poly1305_aead.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-crypto_common.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-crypto_diff_fuzz_chacha20.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-crypto_hkdf_hmac_sha256_l32.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-crypto_poly1305.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-cuckoocache.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-decode_tx.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-descriptor_parse.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-deserialize.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-eval_script.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-fee_rate.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-fees.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-flatfile.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-float.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-golomb_rice.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-hex.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-http_request.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-i2p.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-integer.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-key.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-key_io.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-kitchen_sink.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-load_external_block_file.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-locale.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-merkleblock.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-message.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-miniscript.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-minisketch.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-muhash.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-multiplication_overflow.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-net.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-net_permissions.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-netaddress.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-netbase_dns_lookup.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-node_eviction.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-p2p_transport_serialization.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-parse_hd_keypath.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-parse_iso8601.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-parse_numbers.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-parse_script.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-parse_univalue.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-policy_estimator.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-policy_estimator_io.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-pow.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-prevector.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-primitives_transaction.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-process_message.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-process_messages.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-protocol.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-psbt.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-random.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-rbf.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-rolling_bloom_filter.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-rpc.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-script.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-script_assets_test_minimizer.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-script_bitcoin_consensus.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-script_descriptor_cache.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-script_flags.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-script_format.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-script_interpreter.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-script_ops.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-script_sigcache.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-script_sign.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-scriptnum_ops.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-secp256k1_ec_seckey_import_export_der.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-secp256k1_ecdsa_signature_parse_der_lax.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-signature_checker.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-signet.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-socks5.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-span.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-spanparsing.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-string.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-strprintf.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-system.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-timedata.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-torcontrol.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-transaction.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-tx_in.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-tx_out.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-tx_pool.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-txrequest.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-utxo_snapshot.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-validation_load_mempool.$(OBJEXT) \
	test/fuzz/test_fuzz_fuzz-versionbits.$(OBJEXT)
test_fuzz_fuzz_OBJECTS = $(am_test_fuzz_fuzz_OBJECTS)
am__DEPENDENCIES_7 =  \
	$(am__DEPENDENCIES_1)
#am__DEPENDENCIES_8 =  \
#	$(am__DEPENDENCIES_1)
#am__DEPENDENCIES_9 =  \
#	$(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1)
am__DEPENDENCIES_10 =  \
	$(LIBBITCOIN_ZMQ) \
	$(am__DEPENDENCIES_1)
am__DEPENDENCIES_11 = $(LIBTEST_UTIL) \
	$(LIBTEST_FUZZ) $(LIBBITCOIN_NODE) \
	$(LIBBITCOIN_WALLET) $(LIBBITCOIN_COMMON) \
	$(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) \
	$(LIBBITCOIN_CRYPTO) $(LIBBITCOIN_CLI) \
	$(LIBUNIVALUE) $(LIBLEVELDB) $(LIBMEMENV) \
	$(LIBSECP256K1) $(MINISKETCH_LIBS) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_7) $(am__DEPENDENCIES_8) \
	$(am__DEPENDENCIES_9) \
	$(am__DEPENDENCIES_10)
test_fuzz_fuzz_DEPENDENCIES = $(am__DEPENDENCIES_11)
test_fuzz_fuzz_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) \
	$(test_fuzz_fuzz_LDFLAGS) $(LDFLAGS) -o $@
am__test_test_bitcoin_SOURCES_DIST = test/main.cpp \
	test/util/blockfilter.h test/util/chainstate.h \
	test/util/logging.h test/util/mining.h test/util/net.h \
	test/util/script.h test/util/setup_common.h test/util/str.h \
	test/util/transaction_utils.h test/util/validation.h \
	test/util/wallet.h wallet/test/util.cpp wallet/test/util.h \
	wallet/test/wallet_test_fixture.cpp \
	wallet/test/wallet_test_fixture.h \
	wallet/test/init_test_fixture.cpp \
	wallet/test/init_test_fixture.h test/addrman_tests.cpp \
	test/allocator_tests.cpp test/amount_tests.cpp \
	test/arith_uint256_tests.cpp test/banman_tests.cpp \
	test/base32_tests.cpp test/base58_tests.cpp \
	test/base64_tests.cpp test/bech32_tests.cpp \
	test/bip32_tests.cpp test/blockchain_tests.cpp \
	test/blockencodings_tests.cpp test/blockfilter_index_tests.cpp \
	test/blockfilter_tests.cpp test/bloom_tests.cpp \
	test/bswap_tests.cpp test/checkqueue_tests.cpp \
	test/coins_tests.cpp test/coinstatsindex_tests.cpp \
	test/compilerbug_tests.cpp test/compress_tests.cpp \
	test/crypto_tests.cpp test/cuckoocache_tests.cpp \
	test/dbwrapper_tests.cpp test/denialofservice_tests.cpp \
	test/descriptor_tests.cpp test/flatfile_tests.cpp \
	test/fs_tests.cpp test/getarg_tests.cpp test/hash_tests.cpp \
	test/httpserver_tests.cpp test/i2p_tests.cpp \
	test/interfaces_tests.cpp test/key_io_tests.cpp \
	test/key_tests.cpp test/logging_tests.cpp \
	test/mempool_tests.cpp test/merkle_tests.cpp \
	test/merkleblock_tests.cpp test/miner_tests.cpp \
	test/miniscript_tests.cpp test/minisketch_tests.cpp \
	test/multisig_tests.cpp test/net_peer_eviction_tests.cpp \
	test/net_tests.cpp test/netbase_tests.cpp \
	test/orphanage_tests.cpp test/pmt_tests.cpp \
	test/policy_fee_tests.cpp test/policyestimator_tests.cpp \
	test/pow_tests.cpp test/prevector_tests.cpp \
	test/raii_event_tests.cpp test/random_tests.cpp \
	test/rest_tests.cpp test/reverselock_tests.cpp \
	test/rpc_tests.cpp test/sanity_tests.cpp \
	test/scheduler_tests.cpp test/script_p2sh_tests.cpp \
	test/script_parse_tests.cpp test/script_segwit_tests.cpp \
	test/script_standard_tests.cpp test/script_tests.cpp \
	test/scriptnum10.h test/scriptnum_tests.cpp \
	test/serfloat_tests.cpp test/serialize_tests.cpp \
	test/settings_tests.cpp test/sighash_tests.cpp \
	test/sigopcount_tests.cpp test/skiplist_tests.cpp \
	test/sock_tests.cpp test/streams_tests.cpp test/sync_tests.cpp \
	test/system_tests.cpp test/timedata_tests.cpp \
	test/torcontrol_tests.cpp test/transaction_tests.cpp \
	test/txindex_tests.cpp test/txpackage_tests.cpp \
	test/txrequest_tests.cpp test/txvalidation_tests.cpp \
	test/txvalidationcache_tests.cpp test/uint256_tests.cpp \
	test/util_tests.cpp test/util_threadnames_tests.cpp \
	test/validation_block_tests.cpp \
	test/validation_chainstate_tests.cpp \
	test/validation_chainstatemanager_tests.cpp \
	test/validation_flush_tests.cpp test/validation_tests.cpp \
	test/validationinterface_tests.cpp test/versionbits_tests.cpp \
	wallet/test/psbt_wallet_tests.cpp wallet/test/spend_tests.cpp \
	wallet/test/wallet_tests.cpp wallet/test/walletdb_tests.cpp \
	wallet/test/wallet_crypto_tests.cpp \
	wallet/test/wallet_transaction_tests.cpp \
	wallet/test/coinselector_tests.cpp wallet/test/init_tests.cpp \
	wallet/test/ismine_tests.cpp \
	wallet/test/scriptpubkeyman_tests.cpp wallet/test/db_tests.cpp \
	test/data/script_tests.json \
	test/data/bip341_wallet_vectors.json \
	test/data/base58_encode_decode.json \
	test/data/blockfilters.json test/data/key_io_valid.json \
	test/data/key_io_invalid.json test/data/sighash.json \
	test/data/tx_invalid.json test/data/tx_valid.json \
	test/data/asmap.raw
#am__objects_52 = wallet/test/test_test_bitcoin-util.$(OBJEXT) \
#	wallet/test/test_test_bitcoin-wallet_test_fixture.$(OBJEXT) \
#	wallet/test/test_test_bitcoin-init_test_fixture.$(OBJEXT)
am__objects_53 =  \
	test/test_test_bitcoin-main.$(OBJEXT) \
	$(am__objects_1) $(am__objects_52)
#am__objects_54 = wallet/test/test_test_bitcoin-psbt_wallet_tests.$(OBJEXT) \
#	wallet/test/test_test_bitcoin-spend_tests.$(OBJEXT) \
#	wallet/test/test_test_bitcoin-wallet_tests.$(OBJEXT) \
#	wallet/test/test_test_bitcoin-walletdb_tests.$(OBJEXT) \
#	wallet/test/test_test_bitcoin-wallet_crypto_tests.$(OBJEXT) \
#	wallet/test/test_test_bitcoin-wallet_transaction_tests.$(OBJEXT) \
#	wallet/test/test_test_bitcoin-coinselector_tests.$(OBJEXT) \
#	wallet/test/test_test_bitcoin-init_tests.$(OBJEXT) \
#	wallet/test/test_test_bitcoin-ismine_tests.$(OBJEXT) \
#	wallet/test/test_test_bitcoin-scriptpubkeyman_tests.$(OBJEXT)
##am__objects_55 = wallet/test/test_test_bitcoin-db_tests.$(OBJEXT)
am__objects_56 = test/test_test_bitcoin-addrman_tests.$(OBJEXT) \
	test/test_test_bitcoin-allocator_tests.$(OBJEXT) \
	test/test_test_bitcoin-amount_tests.$(OBJEXT) \
	test/test_test_bitcoin-arith_uint256_tests.$(OBJEXT) \
	test/test_test_bitcoin-banman_tests.$(OBJEXT) \
	test/test_test_bitcoin-base32_tests.$(OBJEXT) \
	test/test_test_bitcoin-base58_tests.$(OBJEXT) \
	test/test_test_bitcoin-base64_tests.$(OBJEXT) \
	test/test_test_bitcoin-bech32_tests.$(OBJEXT) \
	test/test_test_bitcoin-bip32_tests.$(OBJEXT) \
	test/test_test_bitcoin-blockchain_tests.$(OBJEXT) \
	test/test_test_bitcoin-blockencodings_tests.$(OBJEXT) \
	test/test_test_bitcoin-blockfilter_index_tests.$(OBJEXT) \
	test/test_test_bitcoin-blockfilter_tests.$(OBJEXT) \
	test/test_test_bitcoin-bloom_tests.$(OBJEXT) \
	test/test_test_bitcoin-bswap_tests.$(OBJEXT) \
	test/test_test_bitcoin-checkqueue_tests.$(OBJEXT) \
	test/test_test_bitcoin-coins_tests.$(OBJEXT) \
	test/test_test_bitcoin-coinstatsindex_tests.$(OBJEXT) \
	test/test_test_bitcoin-compilerbug_tests.$(OBJEXT) \
	test/test_test_bitcoin-compress_tests.$(OBJEXT) \
	test/test_test_bitcoin-crypto_tests.$(OBJEXT) \
	test/test_test_bitcoin-cuckoocache_tests.$(OBJEXT) \
	test/test_test_bitcoin-dbwrapper_tests.$(OBJEXT) \
	test/test_test_bitcoin-denialofservice_tests.$(OBJEXT) \
	test/test_test_bitcoin-descriptor_tests.$(OBJEXT) \
	test/test_test_bitcoin-flatfile_tests.$(OBJEXT) \
	test/test_test_bitcoin-fs_tests.$(OBJEXT) \
	test/test_test_bitcoin-getarg_tests.$(OBJEXT) \
	test/test_test_bitcoin-hash_tests.$(OBJEXT) \
	test/test_test_bitcoin-httpserver_tests.$(OBJEXT) \
	test/test_test_bitcoin-i2p_tests.$(OBJEXT) \
	test/test_test_bitcoin-interfaces_tests.$(OBJEXT) \
	test/test_test_bitcoin-key_io_tests.$(OBJEXT) \
	test/test_test_bitcoin-key_tests.$(OBJEXT) \
	test/test_test_bitcoin-logging_tests.$(OBJEXT) \
	test/test_test_bitcoin-mempool_tests.$(OBJEXT) \
	test/test_test_bitcoin-merkle_tests.$(OBJEXT) \
	test/test_test_bitcoin-merkleblock_tests.$(OBJEXT) \
	test/test_test_bitcoin-miner_tests.$(OBJEXT) \
	test/test_test_bitcoin-miniscript_tests.$(OBJEXT) \
	test/test_test_bitcoin-minisketch_tests.$(OBJEXT) \
	test/test_test_bitcoin-multisig_tests.$(OBJEXT) \
	test/test_test_bitcoin-net_peer_eviction_tests.$(OBJEXT) \
	test/test_test_bitcoin-net_tests.$(OBJEXT) \
	test/test_test_bitcoin-netbase_tests.$(OBJEXT) \
	test/test_test_bitcoin-orphanage_tests.$(OBJEXT) \
	test/test_test_bitcoin-pmt_tests.$(OBJEXT) \
	test/test_test_bitcoin-policy_fee_tests.$(OBJEXT) \
	test/test_test_bitcoin-policyestimator_tests.$(OBJEXT) \
	test/test_test_bitcoin-pow_tests.$(OBJEXT) \
	test/test_test_bitcoin-prevector_tests.$(OBJEXT) \
	test/test_test_bitcoin-raii_event_tests.$(OBJEXT) \
	test/test_test_bitcoin-random_tests.$(OBJEXT) \
	test/test_test_bitcoin-rest_tests.$(OBJEXT) \
	test/test_test_bitcoin-reverselock_tests.$(OBJEXT) \
	test/test_test_bitcoin-rpc_tests.$(OBJEXT) \
	test/test_test_bitcoin-sanity_tests.$(OBJEXT) \
	test/test_test_bitcoin-scheduler_tests.$(OBJEXT) \
	test/test_test_bitcoin-script_p2sh_tests.$(OBJEXT) \
	test/test_test_bitcoin-script_parse_tests.$(OBJEXT) \
	test/test_test_bitcoin-script_segwit_tests.$(OBJEXT) \
	test/test_test_bitcoin-script_standard_tests.$(OBJEXT) \
	test/test_test_bitcoin-script_tests.$(OBJEXT) \
	test/test_test_bitcoin-scriptnum_tests.$(OBJEXT) \
	test/test_test_bitcoin-serfloat_tests.$(OBJEXT) \
	test/test_test_bitcoin-serialize_tests.$(OBJEXT) \
	test/test_test_bitcoin-settings_tests.$(OBJEXT) \
	test/test_test_bitcoin-sighash_tests.$(OBJEXT) \
	test/test_test_bitcoin-sigopcount_tests.$(OBJEXT) \
	test/test_test_bitcoin-skiplist_tests.$(OBJEXT) \
	test/test_test_bitcoin-sock_tests.$(OBJEXT) \
	test/test_test_bitcoin-streams_tests.$(OBJEXT) \
	test/test_test_bitcoin-sync_tests.$(OBJEXT) \
	test/test_test_bitcoin-system_tests.$(OBJEXT) \
	test/test_test_bitcoin-timedata_tests.$(OBJEXT) \
	test/test_test_bitcoin-torcontrol_tests.$(OBJEXT) \
	test/test_test_bitcoin-transaction_tests.$(OBJEXT) \
	test/test_test_bitcoin-txindex_tests.$(OBJEXT) \
	test/test_test_bitcoin-txpackage_tests.$(OBJEXT) \
	test/test_test_bitcoin-txrequest_tests.$(OBJEXT) \
	test/test_test_bitcoin-txvalidation_tests.$(OBJEXT) \
	test/test_test_bitcoin-txvalidationcache_tests.$(OBJEXT) \
	test/test_test_bitcoin-uint256_tests.$(OBJEXT) \
	test/test_test_bitcoin-util_tests.$(OBJEXT) \
	test/test_test_bitcoin-util_threadnames_tests.$(OBJEXT) \
	test/test_test_bitcoin-validation_block_tests.$(OBJEXT) \
	test/test_test_bitcoin-validation_chainstate_tests.$(OBJEXT) \
	test/test_test_bitcoin-validation_chainstatemanager_tests.$(OBJEXT) \
	test/test_test_bitcoin-validation_flush_tests.$(OBJEXT) \
	test/test_test_bitcoin-validation_tests.$(OBJEXT) \
	test/test_test_bitcoin-validationinterface_tests.$(OBJEXT) \
	test/test_test_bitcoin-versionbits_tests.$(OBJEXT) \
	$(am__objects_54) $(am__objects_55)
am_test_test_bitcoin_OBJECTS = $(am__objects_53) \
	$(am__objects_56) $(am__objects_1) \
	$(am__objects_1)
am__objects_57 = $(am__objects_1) $(am__objects_1)
nodist_test_test_bitcoin_OBJECTS =  \
	$(am__objects_57)
test_test_bitcoin_OBJECTS = $(am_test_test_bitcoin_OBJECTS) \
	$(nodist_test_test_bitcoin_OBJECTS)
test_test_bitcoin_DEPENDENCIES = $(LIBTEST_UTIL) \
	$(am__append_59) $(LIBBITCOIN_NODE) \
	$(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) \
	$(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) \
	$(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) \
	$(LIBLEVELDB) $(LIBMEMENV) $(LIBSECP256K1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(MINISKETCH_LIBS) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_10)
test_test_bitcoin_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) \
	$(test_test_bitcoin_LDFLAGS) $(LDFLAGS) -o $@
am__univalue_test_no_nul_SOURCES_DIST = univalue/test/no_nul.cpp
am__objects_58 = univalue/test/univalue_test_no_nul-no_nul.$(OBJEXT)
am_univalue_test_no_nul_OBJECTS =  \
	$(am__objects_58)
univalue_test_no_nul_OBJECTS = $(am_univalue_test_no_nul_OBJECTS)
univalue_test_no_nul_DEPENDENCIES =  \
	$(LIBUNIVALUE)
univalue_test_no_nul_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(univalue_test_no_nul_LDFLAGS) \
	$(LDFLAGS) -o $@
am__univalue_test_object_SOURCES_DIST = univalue/test/object.cpp
am__objects_59 = univalue/test/univalue_test_object-object.$(OBJEXT)
am_univalue_test_object_OBJECTS =  \
	$(am__objects_59)
univalue_test_object_OBJECTS = $(am_univalue_test_object_OBJECTS)
univalue_test_object_DEPENDENCIES =  \
	$(LIBUNIVALUE)
univalue_test_object_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(univalue_test_object_LDFLAGS) \
	$(LDFLAGS) -o $@
am__univalue_test_unitester_SOURCES_DIST =  \
	univalue/test/unitester.cpp
am__objects_60 =  \
	univalue/test/univalue_test_unitester-unitester.$(OBJEXT)
am_univalue_test_unitester_OBJECTS =  \
	$(am__objects_60)
univalue_test_unitester_OBJECTS =  \
	$(am_univalue_test_unitester_OBJECTS)
univalue_test_unitester_DEPENDENCIES =  \
	$(LIBUNIVALUE)
univalue_test_unitester_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(univalue_test_unitester_LDFLAGS) \
	$(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)/src/config
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
OBJCXXCOMPILE = $(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS)
LTOBJCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(OBJCXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_OBJCXXFLAGS) $(OBJCXXFLAGS)
AM_V_OBJCXX = $(am__v_OBJCXX_$(V))
am__v_OBJCXX_ = $(am__v_OBJCXX_$(AM_DEFAULT_VERBOSITY))
am__v_OBJCXX_0 = @echo "  OBJCXX  " $@;
am__v_OBJCXX_1 = 
OBJCXXLD = $(OBJCXX)
OBJCXXLINK = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(OBJCXXLD) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_OBJCXXLD = $(am__v_OBJCXXLD_$(V))
am__v_OBJCXXLD_ = $(am__v_OBJCXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_OBJCXXLD_0 = @echo "  OBJCXXLD" $@;
am__v_OBJCXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libbitcoin_cli_a_SOURCES) $(libbitcoin_common_a_SOURCES) \
	$(libbitcoin_consensus_a_SOURCES) $(libbitcoin_ipc_a_SOURCES) \
	$(nodist_libbitcoin_ipc_a_SOURCES) \
	$(libbitcoin_node_a_SOURCES) $(libbitcoin_util_a_SOURCES) \
	$(nodist_libbitcoin_util_a_SOURCES) \
	$(libbitcoin_wallet_a_SOURCES) \
	$(libbitcoin_wallet_tool_a_SOURCES) \
	$(libbitcoin_zmq_a_SOURCES) $(libtest_fuzz_a_SOURCES) \
	$(libtest_util_a_SOURCES) \
	$(minisketch_libminisketch_a_SOURCES) \
	$(minisketch_libminisketch_clmul_a_SOURCES) \
	$(qt_libbitcoinqt_a_SOURCES) \
	$(nodist_qt_libbitcoinqt_a_SOURCES) \
	$(crc32c_libcrc32c_la_SOURCES) \
	$(crc32c_libcrc32c_arm_crc_la_SOURCES) \
	$(crc32c_libcrc32c_sse42_la_SOURCES) \
	$(crypto_libbitcoin_crypto_arm_shani_la_SOURCES) \
	$(crypto_libbitcoin_crypto_avx2_la_SOURCES) \
	$(crypto_libbitcoin_crypto_base_la_SOURCES) \
	$(crypto_libbitcoin_crypto_sse41_la_SOURCES) \
	$(crypto_libbitcoin_crypto_x86_shani_la_SOURCES) \
	$(leveldb_libleveldb_la_SOURCES) \
	$(leveldb_libmemenv_la_SOURCES) \
	$(libbitcoinconsensus_la_SOURCES) \
	$(libbitcoinkernel_la_SOURCES) $(libunivalue_la_SOURCES) \
	$(bench_bench_bitcoin_SOURCES) \
	$(nodist_bench_bench_bitcoin_SOURCES) \
	$(bitcoin_chainstate_SOURCES) $(bitcoin_cli_SOURCES) \
	$(bitcoin_gui_SOURCES) $(bitcoin_node_SOURCES) \
	$(bitcoin_tx_SOURCES) $(bitcoin_util_SOURCES) \
	$(bitcoin_wallet_SOURCES) $(bitcoind_SOURCES) \
	$(minisketch_test_SOURCES) $(qt_bitcoin_qt_SOURCES) \
	$(qt_test_test_bitcoin_qt_SOURCES) \
	$(nodist_qt_test_test_bitcoin_qt_SOURCES) \
	$(test_fuzz_fuzz_SOURCES) $(test_test_bitcoin_SOURCES) \
	$(nodist_test_test_bitcoin_SOURCES) \
	$(univalue_test_no_nul_SOURCES) \
	$(univalue_test_object_SOURCES) \
	$(univalue_test_unitester_SOURCES)
DIST_SOURCES = $(libbitcoin_cli_a_SOURCES) \
	$(libbitcoin_common_a_SOURCES) \
	$(libbitcoin_consensus_a_SOURCES) \
	$(am__libbitcoin_ipc_a_SOURCES_DIST) \
	$(am__libbitcoin_node_a_SOURCES_DIST) \
	$(am__libbitcoin_util_a_SOURCES_DIST) \
	$(am__libbitcoin_wallet_a_SOURCES_DIST) \
	$(libbitcoin_wallet_tool_a_SOURCES) \
	$(am__libbitcoin_zmq_a_SOURCES_DIST) $(libtest_fuzz_a_SOURCES) \
	$(libtest_util_a_SOURCES) \
	$(minisketch_libminisketch_a_SOURCES) \
	$(minisketch_libminisketch_clmul_a_SOURCES) \
	$(am__qt_libbitcoinqt_a_SOURCES_DIST) \
	$(crc32c_libcrc32c_la_SOURCES) \
	$(am__crc32c_libcrc32c_arm_crc_la_SOURCES_DIST) \
	$(am__crc32c_libcrc32c_sse42_la_SOURCES_DIST) \
	$(crypto_libbitcoin_crypto_arm_shani_la_SOURCES) \
	$(crypto_libbitcoin_crypto_avx2_la_SOURCES) \
	$(am__crypto_libbitcoin_crypto_base_la_SOURCES_DIST) \
	$(crypto_libbitcoin_crypto_sse41_la_SOURCES) \
	$(crypto_libbitcoin_crypto_x86_shani_la_SOURCES) \
	$(am__leveldb_libleveldb_la_SOURCES_DIST) \
	$(leveldb_libmemenv_la_SOURCES) \
	$(am__libbitcoinconsensus_la_SOURCES_DIST) \
	$(am__libbitcoinkernel_la_SOURCES_DIST) \
	$(libunivalue_la_SOURCES) \
	$(am__bench_bench_bitcoin_SOURCES_DIST) \
	$(bitcoin_chainstate_SOURCES) $(am__bitcoin_cli_SOURCES_DIST) \
	$(am__bitcoin_gui_SOURCES_DIST) \
	$(am__bitcoin_node_SOURCES_DIST) \
	$(am__bitcoin_tx_SOURCES_DIST) \
	$(am__bitcoin_util_SOURCES_DIST) \
	$(am__bitcoin_wallet_SOURCES_DIST) \
	$(am__bitcoind_SOURCES_DIST) \
	$(am__minisketch_test_SOURCES_DIST) \
	$(am__qt_bitcoin_qt_SOURCES_DIST) \
	$(am__qt_test_test_bitcoin_qt_SOURCES_DIST) \
	$(am__test_fuzz_fuzz_SOURCES_DIST) \
	$(am__test_test_bitcoin_SOURCES_DIST) \
	$(am__univalue_test_no_nul_SOURCES_DIST) \
	$(am__univalue_test_object_SOURCES_DIST) \
	$(am__univalue_test_unitester_SOURCES_DIST)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__include_HEADERS_DIST = script/bitcoinconsensus.h
HEADERS = $(include_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	check recheck distdir
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
am__EXEEXT_18 =  \
	$(am__EXEEXT_13) \
	$(am__EXEEXT_16)
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS =  .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__DIST_COMMON = $(srcdir)/.bear-tidy-config $(srcdir)/.clang-tidy \
	$(srcdir)/Makefile.bench.include \
	$(srcdir)/Makefile.crc32c.include $(srcdir)/Makefile.in \
	$(srcdir)/Makefile.leveldb.include \
	$(srcdir)/Makefile.minisketch.include \
	$(srcdir)/Makefile.qt.include \
	$(srcdir)/Makefile.qt_locale.include \
	$(srcdir)/Makefile.qttest.include \
	$(srcdir)/Makefile.test.include \
	$(srcdir)/Makefile.test_fuzz.include \
	$(srcdir)/Makefile.test_util.include \
	$(srcdir)/Makefile.univalue.include \
	$(srcdir)/minisketch/sources.mk $(srcdir)/univalue/sources.mk \
	$(top_srcdir)/build-aux/depcomp \
	$(top_srcdir)/build-aux/test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = ${SHELL} /home/daslab/nfs/hyw/mike_bitcoin_source_code_modified_v1/build-aux/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
ANDROID_ARCH = 
AR = /usr/bin/ar
ARFLAGS = cr
ARM_CRC_CXXFLAGS = 
ARM_SHANI_CXXFLAGS = 
AS = as
AUTOCONF = ${SHELL} /home/daslab/nfs/hyw/mike_bitcoin_source_code_modified_v1/build-aux/missing autoconf
AUTOHEADER = ${SHELL} /home/daslab/nfs/hyw/mike_bitcoin_source_code_modified_v1/build-aux/missing autoheader
AUTOMAKE = ${SHELL} /home/daslab/nfs/hyw/mike_bitcoin_source_code_modified_v1/build-aux/missing automake-1.15
AVX2_CXXFLAGS = -mavx -mavx2
AWK = gawk
BDB_CFLAGS = 
BDB_CPPFLAGS = 
BDB_LIBS = 
BITCOIN_CHAINSTATE_NAME = bitcoin-chainstate
BITCOIN_CLI_NAME = bitcoin-cli
BITCOIN_DAEMON_NAME = bitcoind
BITCOIN_GUI_NAME = bitcoin-qt
BITCOIN_MP_GUI_NAME = bitcoin-gui
BITCOIN_MP_NODE_NAME = bitcoin-node
BITCOIN_TX_NAME = bitcoin-tx
BITCOIN_UTIL_NAME = bitcoin-util
BITCOIN_WALLET_TOOL_NAME = bitcoin-wallet
BOOST_CPPFLAGS = -I/usr/include -DBOOST_MULTI_INDEX_DISABLE_SERIALIZATION
BOOST_LDFLAGS = -L/usr/lib/x86_64-linux-gnu
BREW = 
CC = gcc
CCACHE = 
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CLIENT_VERSION_BUILD = 0
CLIENT_VERSION_IS_RELEASE = false
CLIENT_VERSION_MAJOR = 23
CLIENT_VERSION_MINOR = 99
CLMUL_CXXFLAGS = -mpclmul
COPYRIGHT_HOLDERS = The %s developers
COPYRIGHT_HOLDERS_FINAL = The Bitcoin Core developers
COPYRIGHT_HOLDERS_SUBSTITUTION = Bitcoin Core
COPYRIGHT_YEAR = 2022
CORE_CPPFLAGS =  -DHAVE_BUILD_INFO -DPROVIDE_FUZZ_MAIN_FUNCTION
CORE_CXXFLAGS =  -fno-extended-identifiers
CORE_LDFLAGS = 
COV_TOOL = 
COV_TOOL_WRAPPER = 
CPP = gcc -E
CPPFLAGS = 
CXX = g++ -std=c++17
CXXCPP = g++ -std=c++17 -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEBUG_CPPFLAGS = 
DEBUG_CXXFLAGS = 
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DOXYGEN = 
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
ENABLE_EXTERNAL_SIGNER = 
ERROR_CXXFLAGS = 
EVENT_CFLAGS = 
EVENT_LIBS = -levent
EVENT_PTHREADS_CFLAGS = -pthread
EVENT_PTHREADS_LIBS = -levent_pthreads -levent
EXEEXT = 
EXTENDED_FUNCTIONAL_TESTS = 
FGREP = /bin/grep -F
GCOV = /usr/bin/gcov
GENHTML = /usr/bin/genhtml
GIT = /usr/bin/git
GPROF_CXXFLAGS = 
GPROF_LDFLAGS = 
GREP = /bin/grep
HARDENED_CPPFLAGS =  -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=2
HARDENED_CXXFLAGS =  -fstack-reuse=none -Wstack-protector -fstack-protector-all -fcf-protection=full -fstack-clash-protection
HARDENED_LDFLAGS =  -Wl,-z,relro -Wl,-z,now -Wl,-z,separate-code -pie
HAVE_BUILTIN_PREFETCH = 1
HAVE_CXX17 = 1
HAVE_CXX20 = 
HAVE_EVHTTP_CONNECTION_GET_PEER_CONST_CHAR = 
HAVE_FDATASYNC = 1
HAVE_FULLFSYNC = 0
HAVE_GMTIME_R = 
HAVE_MM_PREFETCH = 1
HAVE_O_CLOEXEC = 1
HAVE_STRONG_GETAUXVAL = 1
HEXDUMP = /usr/bin/hexdump
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_NAME_TOOL = 
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LCONVERT = 
LCOV = /usr/bin/lcov
LCOV_OPTS = 
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBMULTIPROCESS_CFLAGS = 
LIBMULTIPROCESS_LIBS = 
LIBOBJS = 
LIBS =  -lstdc++fs
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBTOOL_APP_LDFLAGS = 
LIPO = 
LLVM_COV = /usr/bin/llvm-cov
LN_S = ln -s
LRELEASE = 
LTLIBOBJS = 
LTO_CXXFLAGS = 
LTO_LDFLAGS = 
LT_SYS_LIBRARY_PATH = 
LUPDATE = 
MAINT = 
MAKEINFO = ${SHELL} /home/daslab/nfs/hyw/mike_bitcoin_source_code_modified_v1/build-aux/missing makeinfo
MAKENSIS = 
MANIFEST_TOOL = :
MINIUPNPC_CPPFLAGS = 
MINIUPNPC_LIBS =  -lminiupnpc -lminiupnpc -lminiupnpc
MKDIR_P = /bin/mkdir -p
MOC = 
MOC_DEFS = -DHAVE_CONFIG_H -I$(srcdir)
MPGEN_PREFIX = 
NATPMP_CPPFLAGS = 
NATPMP_LIBS = 
NM = /usr/bin/nm -B
NMEDIT = 
NOWARN_CXXFLAGS =  -Wno-unused-parameter
OBJCOPY = /usr/bin/objcopy
OBJCXX = g++ -std=c++17
OBJCXXDEPMODE = depmode=gcc3
OBJCXXFLAGS = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = bitcoin
PACKAGE_BUGREPORT = https://github.com/bitcoin/bitcoin/issues
PACKAGE_NAME = Bitcoin Core
PACKAGE_STRING = Bitcoin Core 23.99.0
PACKAGE_TARNAME = bitcoin
PACKAGE_URL = https://bitcoincore.org/
PACKAGE_VERSION = 23.99.0
PATH_SEPARATOR = :
PIC_FLAGS = -fPIC
PIE_FLAGS = -fPIE
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
PTHREAD_CC = gcc
PTHREAD_CFLAGS = -pthread
PTHREAD_CXX = g++ -std=c++17
PTHREAD_LIBS = -lpthread
PYTHON = /usr/bin/python3.6
PYTHONPATH = /usr/local/lib/python3.6/dist-packages:/home/daslab/.local/lib/python3.6/site-packages:
QR_CFLAGS = 
QR_LIBS = 
QT_ACCESSIBILITY_CFLAGS = 
QT_ACCESSIBILITY_LIBS = 
QT_CLIPBOARD_CFLAGS = 
QT_CLIPBOARD_LIBS = 
QT_CORE_CFLAGS = 
QT_CORE_LIBS = 
QT_DBUS_CFLAGS = 
QT_DBUS_INCLUDES = 
QT_DBUS_LIBS = 
QT_DEVICEDISCOVERY_CFLAGS = 
QT_DEVICEDISCOVERY_LIBS = 
QT_EDID_CFLAGS = 
QT_EDID_LIBS = 
QT_EGL_CFLAGS = 
QT_EGL_LIBS = 
QT_EVENTDISPATCHER_CFLAGS = 
QT_EVENTDISPATCHER_LIBS = 
QT_FB_CFLAGS = 
QT_FB_LIBS = 
QT_FONTDATABASE_CFLAGS = 
QT_FONTDATABASE_LIBS = 
QT_GRAPHICS_CFLAGS = 
QT_GRAPHICS_LIBS = 
QT_GUI_CFLAGS = 
QT_GUI_LIBS = 
QT_INCLUDES = 
QT_INPUT_CFLAGS = 
QT_INPUT_LIBS = 
QT_LDFLAGS = 
QT_LIBS = 
QT_NETWORK_CFLAGS = 
QT_NETWORK_LIBS = 
QT_PIE_FLAGS = 
QT_SELECT = qt5
QT_SERVICE_CFLAGS = 
QT_SERVICE_LIBS = 
QT_TEST_CFLAGS = 
QT_TEST_INCLUDES = 
QT_TEST_LIBS = 
QT_THEME_CFLAGS = 
QT_THEME_LIBS = 
QT_TRANSLATION_DIR = 
QT_WIDGETS_CFLAGS = 
QT_WIDGETS_LIBS = 
QT_WINDOWSUIAUTOMATION_CFLAGS = 
QT_WINDOWSUIAUTOMATION_LIBS = 
QT_XCBQPA_CFLAGS = 
QT_XCBQPA_LIBS = 
QT_XKBCOMMON_CFLAGS = 
QT_XKBCOMMON_LIBS = 
RANLIB = ranlib
RCC = 
RELDFLAGS = 
RUNTIME_LDFLAGS = 
SANITIZER_CXXFLAGS = 
SANITIZER_LDFLAGS = 
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
SQLITE_CFLAGS = 
SQLITE_LIBS = 
SSE41_CXXFLAGS = -msse4.1
SSE42_CXXFLAGS = -msse4.2
STRIP = strip
TESTDEFS = 
UIC = 
USE_BDB = 
USE_QRCODE = 
USE_SQLITE = 
USE_UPNP = 
VERSION = 23.99.0
WARN_CXXFLAGS =  -Wall -Wextra -Wformat -Wformat-security -Wvla -Wredundant-decls -Wdate-time -Wduplicated-branches -Wduplicated-cond -Wlogical-op -Woverloaded-virtual -Wimplicit-fallthrough
WINDRES = 
X86_SHANI_CXXFLAGS = -msse4 -msha
XGETTEXT = 
XORRISOFS = 
ZMQ_CFLAGS = 
ZMQ_LIBS = -lzmq
abs_builddir = /home/daslab/nfs/hyw/mike_bitcoin_source_code_modified_v1/src
abs_srcdir = /home/daslab/nfs/hyw/mike_bitcoin_source_code_modified_v1/src
abs_top_builddir = /home/daslab/nfs/hyw/mike_bitcoin_source_code_modified_v1
abs_top_srcdir = /home/daslab/nfs/hyw/mike_bitcoin_source_code_modified_v1
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
ac_ct_OBJCXX = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
ax_pthread_config = 
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/daslab/nfs/hyw/mike_bitcoin_source_code_modified_v1/build-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
subdirs =  src/secp256k1
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
DIST_SUBDIRS = secp256k1
AM_LDFLAGS = $(LIBTOOL_LDFLAGS) $(HARDENED_LDFLAGS) $(GPROF_LDFLAGS) $(SANITIZER_LDFLAGS) $(LTO_LDFLAGS) $(CORE_LDFLAGS)
AM_CXXFLAGS = $(DEBUG_CXXFLAGS) $(HARDENED_CXXFLAGS) $(WARN_CXXFLAGS) $(NOWARN_CXXFLAGS) $(ERROR_CXXFLAGS) $(GPROF_CXXFLAGS) $(SANITIZER_CXXFLAGS) $(LTO_CXXFLAGS) $(CORE_CXXFLAGS)
AM_CPPFLAGS = $(DEBUG_CPPFLAGS) $(HARDENED_CPPFLAGS) $(CORE_CPPFLAGS)
AM_LIBTOOLFLAGS = --preserve-dup-deps
PTHREAD_FLAGS = $(PTHREAD_CFLAGS) $(PTHREAD_LIBS)

# Make is not made aware of per-object dependencies to avoid limiting building parallelization
# But to build the less dependent modules first, we manually select their order here:
EXTRA_LIBRARIES = $(LIBBITCOIN_UTIL) $(LIBBITCOIN_COMMON) \
	$(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_NODE) $(LIBBITCOIN_CLI) \
	$(LIBBITCOIN_IPC) $(LIBBITCOIN_WALLET) \
	$(LIBBITCOIN_WALLET_TOOL) $(LIBBITCOIN_ZMQ) $(MINISKETCH_LIBS) \
	$(LIBTEST_UTIL) $(LIBTEST_FUZZ) $(am__append_71)
lib_LTLIBRARIES = $(am__append_24) $(am__append_27)
noinst_LTLIBRARIES = $(LIBBITCOIN_CRYPTO) $(LIBCRC32C_INT) \
	$(am__append_40) $(am__append_42) $(LIBLEVELDB_INT) \
	$(LIBMEMENV_INT) $(LIBUNIVALUE)
BENCHMARKS = 
BITCOIN_INCLUDES = -I$(builddir) -I$(srcdir)/$(MINISKETCH_INCLUDE_DIR_INT) -I$(srcdir)/secp256k1/include -I$(srcdir)/$(UNIVALUE_INCLUDE_DIR_INT) $(BOOST_CPPFLAGS) $(LEVELDB_CPPFLAGS)
LIBBITCOIN_NODE = libbitcoin_node.a
LIBBITCOIN_COMMON = libbitcoin_common.a
LIBBITCOIN_CONSENSUS = libbitcoin_consensus.a
LIBBITCOIN_CLI = libbitcoin_cli.a
LIBBITCOIN_KERNEL = libbitcoin_kernel.a
LIBBITCOIN_UTIL = libbitcoin_util.a
LIBBITCOIN_CRYPTO_BASE = crypto/libbitcoin_crypto_base.la
LIBBITCOINQT = qt/libbitcoinqt.a
LIBSECP256K1 = secp256k1/libsecp256k1.la
LIBBITCOIN_ZMQ = libbitcoin_zmq.a
LIBBITCOINCONSENSUS = libbitcoinconsensus.la
#LIBBITCOINKERNEL = libbitcoinkernel.la
#LIBBITCOIN_WALLET = libbitcoin_wallet.a
#LIBBITCOIN_WALLET_TOOL = libbitcoin_wallet_tool.a
LIBBITCOIN_CRYPTO = $(LIBBITCOIN_CRYPTO_BASE) $(am__append_1) \
	$(am__append_2) $(am__append_3) $(am__append_4)
LIBBITCOIN_CRYPTO_SSE41 = crypto/libbitcoin_crypto_sse41.la
LIBBITCOIN_CRYPTO_AVX2 = crypto/libbitcoin_crypto_avx2.la
LIBBITCOIN_CRYPTO_X86_SHANI = crypto/libbitcoin_crypto_x86_shani.la
#LIBBITCOIN_CRYPTO_ARM_SHANI = crypto/libbitcoin_crypto_arm_shani.la
# bitcoin core #
BITCOIN_CORE_H = \
  addrdb.h \
  addrman.h \
  addrman_impl.h \
  attributes.h \
  banman.h \
  base58.h \
  bech32.h \
  blockencodings.h \
  blockfilter.h \
  chain.h \
  chainparams.h \
  chainparamsbase.h \
  chainparamsseeds.h \
  checkqueue.h \
  clientversion.h \
  coins.h \
  common/bloom.h \
  compat.h \
  compat/assumptions.h \
  compat/byteswap.h \
  compat/cpuid.h \
  compat/endian.h \
  compressor.h \
  consensus/consensus.h \
  consensus/tx_check.h \
  consensus/tx_verify.h \
  core_io.h \
  core_memusage.h \
  cuckoocache.h \
  dbwrapper.h \
  deploymentinfo.h \
  deploymentstatus.h \
  external_signer.h \
  flatfile.h \
  fs.h \
  httprpc.h \
  httpserver.h \
  i2p.h \
  index/base.h \
  index/blockfilterindex.h \
  index/coinstatsindex.h \
  index/disktxpos.h \
  index/txindex.h \
  indirectmap.h \
  init.h \
  init/common.h \
  interfaces/chain.h \
  interfaces/echo.h \
  interfaces/handler.h \
  interfaces/init.h \
  interfaces/ipc.h \
  interfaces/node.h \
  interfaces/wallet.h \
  kernel/chainstatemanager_opts.h \
  kernel/checks.h \
  kernel/coinstats.h \
  kernel/context.h \
  key.h \
  key_io.h \
  logging.h \
  logging/timer.h \
  mapport.h \
  memusage.h \
  merkleblock.h \
  net.h \
  net_permissions.h \
  net_processing.h \
  net_types.h \
  netaddress.h \
  netbase.h \
  netgroup.h \
  netmessagemaker.h \
  node/blockstorage.h \
  node/caches.h \
  node/chainstate.h \
  node/coin.h \
  node/context.h \
  node/miner.h \
  node/minisketchwrapper.h \
  node/psbt.h \
  node/transaction.h \
  node/ui_interface.h \
  node/utxo_snapshot.h \
  noui.h \
  outputtype.h \
  policy/feerate.h \
  policy/fees.h \
  policy/packages.h \
  policy/policy.h \
  policy/rbf.h \
  policy/settings.h \
  pow.h \
  protocol.h \
  psbt.h \
  random.h \
  randomenv.h \
  rest.h \
  reverse_iterator.h \
  rpc/blockchain.h \
  rpc/client.h \
  rpc/mempool.h \
  rpc/mining.h \
  rpc/protocol.h \
  rpc/rawtransaction_util.h \
  rpc/register.h \
  rpc/request.h \
  rpc/server.h \
  rpc/server_util.h \
  rpc/util.h \
  scheduler.h \
  script/descriptor.h \
  script/keyorigin.h \
  script/miniscript.h \
  script/sigcache.h \
  script/sign.h \
  script/signingprovider.h \
  script/standard.h \
  shutdown.h \
  signet.h \
  streams.h \
  support/allocators/secure.h \
  support/allocators/zeroafterfree.h \
  support/cleanse.h \
  support/events.h \
  support/lockedpool.h \
  sync.h \
  threadinterrupt.h \
  threadsafety.h \
  timedata.h \
  torcontrol.h \
  txdb.h \
  txmempool.h \
  txorphanage.h \
  txrequest.h \
  undo.h \
  util/asmap.h \
  util/bip32.h \
  util/bytevectorhash.h \
  util/check.h \
  util/designator.h \
  util/epochguard.h \
  util/error.h \
  util/fastrange.h \
  util/fees.h \
  util/getuniquepath.h \
  util/golombrice.h \
  util/hash_type.h \
  util/hasher.h \
  util/macros.h \
  util/message.h \
  util/moneystr.h \
  util/overflow.h \
  util/overloaded.h \
  util/rbf.h \
  util/readwritefile.h \
  util/serfloat.h \
  util/settings.h \
  util/sock.h \
  util/spanparsing.h \
  util/string.h \
  util/syscall_sandbox.h \
  util/syserror.h \
  util/system.h \
  util/thread.h \
  util/threadnames.h \
  util/time.h \
  util/tokenpipe.h \
  util/trace.h \
  util/translation.h \
  util/types.h \
  util/ui_change_type.h \
  util/url.h \
  util/vector.h \
  validation.h \
  validationinterface.h \
  versionbits.h \
  wallet/bdb.h \
  wallet/coincontrol.h \
  wallet/coinselection.h \
  wallet/context.h \
  wallet/crypter.h \
  wallet/db.h \
  wallet/dump.h \
  wallet/external_signer_scriptpubkeyman.h \
  wallet/feebumper.h \
  wallet/fees.h \
  wallet/ismine.h \
  wallet/load.h \
  wallet/receive.h \
  wallet/rpc/util.h \
  wallet/rpc/wallet.h \
  wallet/salvage.h \
  wallet/scriptpubkeyman.h \
  wallet/spend.h \
  wallet/sqlite.h \
  wallet/transaction.h \
  wallet/wallet.h \
  wallet/walletdb.h \
  wallet/wallettool.h \
  wallet/walletutil.h \
  walletinitinterface.h \
  warnings.h \
  zmq/zmqabstractnotifier.h \
  zmq/zmqnotificationinterface.h \
  zmq/zmqpublishnotifier.h \
  zmq/zmqrpc.h \
  zmq/zmqutil.h


# server: shared between bitcoind and bitcoin-qt
# Contains code accessing mempool and chain state that is meant to be separated
# from wallet and gui code (see node/README.md). Shared code should go in
# libbitcoin_common or libbitcoin_util libraries, instead.
libbitcoin_node_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) \
	$(MINIUPNPC_CPPFLAGS) $(NATPMP_CPPFLAGS) $(EVENT_CFLAGS) \
	$(EVENT_PTHREADS_CFLAGS) $(am__append_13)
libbitcoin_node_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
libbitcoin_node_a_SOURCES = addrdb.cpp addrman.cpp banman.cpp \
	blockencodings.cpp blockfilter.cpp chain.cpp \
	consensus/tx_verify.cpp dbwrapper.cpp deploymentstatus.cpp \
	flatfile.cpp httprpc.cpp httpserver.cpp i2p.cpp index/base.cpp \
	index/blockfilterindex.cpp index/coinstatsindex.cpp \
	index/txindex.cpp init.cpp kernel/checks.cpp \
	kernel/coinstats.cpp kernel/context.cpp mapport.cpp net.cpp \
	netgroup.cpp net_processing.cpp node/blockstorage.cpp \
	node/caches.cpp node/chainstate.cpp node/coin.cpp \
	node/context.cpp node/interfaces.cpp node/miner.cpp \
	node/minisketchwrapper.cpp node/psbt.cpp node/transaction.cpp \
	node/ui_interface.cpp noui.cpp policy/fees.cpp \
	policy/packages.cpp policy/rbf.cpp policy/settings.cpp pow.cpp \
	rest.cpp rpc/blockchain.cpp rpc/fees.cpp rpc/mempool.cpp \
	rpc/mining.cpp rpc/node.cpp rpc/net.cpp rpc/output_script.cpp \
	rpc/rawtransaction.cpp rpc/server.cpp rpc/server_util.cpp \
	rpc/signmessage.cpp rpc/txoutproof.cpp script/sigcache.cpp \
	shutdown.cpp signet.cpp timedata.cpp torcontrol.cpp txdb.cpp \
	txmempool.cpp txorphanage.cpp txrequest.cpp validation.cpp \
	validationinterface.cpp versionbits.cpp $(BITCOIN_CORE_H) \
	$(am__append_12) $(am__append_14)
libbitcoin_zmq_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(ZMQ_CFLAGS)
libbitcoin_zmq_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
libbitcoin_zmq_a_SOURCES = \
  zmq/zmqabstractnotifier.cpp \
  zmq/zmqnotificationinterface.cpp \
  zmq/zmqpublishnotifier.cpp \
  zmq/zmqrpc.cpp \
  zmq/zmqutil.cpp


# wallet: shared between bitcoind and bitcoin-qt, but only linked
# when wallet enabled
libbitcoin_wallet_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BDB_CPPFLAGS) $(SQLITE_CFLAGS)
libbitcoin_wallet_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
libbitcoin_wallet_a_SOURCES = wallet/coincontrol.cpp \
	wallet/context.cpp wallet/crypter.cpp wallet/db.cpp \
	wallet/dump.cpp wallet/external_signer_scriptpubkeyman.cpp \
	wallet/feebumper.cpp wallet/fees.cpp wallet/interfaces.cpp \
	wallet/load.cpp wallet/receive.cpp wallet/rpc/addresses.cpp \
	wallet/rpc/backup.cpp wallet/rpc/coins.cpp \
	wallet/rpc/encrypt.cpp wallet/rpc/spend.cpp \
	wallet/rpc/signmessage.cpp wallet/rpc/transactions.cpp \
	wallet/rpc/util.cpp wallet/rpc/wallet.cpp \
	wallet/scriptpubkeyman.cpp wallet/spend.cpp \
	wallet/transaction.cpp wallet/wallet.cpp wallet/walletdb.cpp \
	wallet/walletutil.cpp wallet/coinselection.cpp \
	$(BITCOIN_CORE_H) $(am__append_15) $(am__append_16)
libbitcoin_wallet_tool_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)
libbitcoin_wallet_tool_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
libbitcoin_wallet_tool_a_SOURCES = \
  wallet/wallettool.cpp \
  $(BITCOIN_CORE_H)


# crypto primitives library
crypto_libbitcoin_crypto_base_la_CPPFLAGS = $(AM_CPPFLAGS)

# Specify -static in both CXXFLAGS and LDFLAGS so libtool will only build a
# static version of this library. We don't need a dynamic version, and a dynamic
# version can't be used on windows anyway because the library doesn't currently
# export DLL symbols.
crypto_libbitcoin_crypto_base_la_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS) -static
crypto_libbitcoin_crypto_base_la_LDFLAGS = $(AM_LDFLAGS) -static
crypto_libbitcoin_crypto_base_la_SOURCES = crypto/aes.cpp crypto/aes.h \
	crypto/chacha_poly_aead.h crypto/chacha_poly_aead.cpp \
	crypto/chacha20.h crypto/chacha20.cpp crypto/common.h \
	crypto/hkdf_sha256_32.cpp crypto/hkdf_sha256_32.h \
	crypto/hmac_sha256.cpp crypto/hmac_sha256.h \
	crypto/hmac_sha512.cpp crypto/hmac_sha512.h crypto/poly1305.h \
	crypto/poly1305.cpp crypto/muhash.h crypto/muhash.cpp \
	crypto/ripemd160.cpp crypto/ripemd160.h crypto/sha1.cpp \
	crypto/sha1.h crypto/sha256.cpp crypto/sha256.h \
	crypto/sha3.cpp crypto/sha3.h crypto/sha512.cpp \
	crypto/sha512.h crypto/siphash.cpp crypto/siphash.h \
	$(am__append_17)

# See explanation for -static in crypto_libbitcoin_crypto_base_la's LDFLAGS and
# CXXFLAGS above
crypto_libbitcoin_crypto_sse41_la_LDFLAGS = $(AM_LDFLAGS) -static
crypto_libbitcoin_crypto_sse41_la_CXXFLAGS = $(AM_CXXFLAGS) \
	$(PIE_FLAGS) -static $(SSE41_CXXFLAGS)
crypto_libbitcoin_crypto_sse41_la_CPPFLAGS = $(AM_CPPFLAGS) \
	-DENABLE_SSE41
crypto_libbitcoin_crypto_sse41_la_SOURCES = crypto/sha256_sse41.cpp

# See explanation for -static in crypto_libbitcoin_crypto_base_la's LDFLAGS and
# CXXFLAGS above
crypto_libbitcoin_crypto_avx2_la_LDFLAGS = $(AM_LDFLAGS) -static
crypto_libbitcoin_crypto_avx2_la_CXXFLAGS = $(AM_CXXFLAGS) \
	$(PIE_FLAGS) -static $(AVX2_CXXFLAGS)
crypto_libbitcoin_crypto_avx2_la_CPPFLAGS = $(AM_CPPFLAGS) \
	-DENABLE_AVX2
crypto_libbitcoin_crypto_avx2_la_SOURCES = crypto/sha256_avx2.cpp

# See explanation for -static in crypto_libbitcoin_crypto_base_la's LDFLAGS and
# CXXFLAGS above
crypto_libbitcoin_crypto_x86_shani_la_LDFLAGS = $(AM_LDFLAGS) -static
crypto_libbitcoin_crypto_x86_shani_la_CXXFLAGS = $(AM_CXXFLAGS) \
	$(PIE_FLAGS) -static $(X86_SHANI_CXXFLAGS)
crypto_libbitcoin_crypto_x86_shani_la_CPPFLAGS = $(AM_CPPFLAGS) \
	-DENABLE_X86_SHANI
crypto_libbitcoin_crypto_x86_shani_la_SOURCES = crypto/sha256_x86_shani.cpp

# See explanation for -static in crypto_libbitcoin_crypto_base_la's LDFLAGS and
# CXXFLAGS above
crypto_libbitcoin_crypto_arm_shani_la_LDFLAGS = $(AM_LDFLAGS) -static
crypto_libbitcoin_crypto_arm_shani_la_CXXFLAGS = $(AM_CXXFLAGS) \
	$(PIE_FLAGS) -static $(ARM_SHANI_CXXFLAGS)
crypto_libbitcoin_crypto_arm_shani_la_CPPFLAGS = $(AM_CPPFLAGS) \
	-DENABLE_ARM_SHANI
crypto_libbitcoin_crypto_arm_shani_la_SOURCES = crypto/sha256_arm_shani.cpp

# consensus: shared between all executables that validate any consensus rules.
libbitcoin_consensus_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)
libbitcoin_consensus_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
libbitcoin_consensus_a_SOURCES = \
  arith_uint256.cpp \
  arith_uint256.h \
  consensus/amount.h \
  consensus/merkle.cpp \
  consensus/merkle.h \
  consensus/params.h \
  consensus/tx_check.cpp \
  consensus/validation.h \
  hash.cpp \
  hash.h \
  prevector.h \
  primitives/block.cpp \
  primitives/block.h \
  primitives/transaction.cpp \
  primitives/transaction.h \
  pubkey.cpp \
  pubkey.h \
  script/bitcoinconsensus.cpp \
  script/interpreter.cpp \
  script/interpreter.h \
  script/script.cpp \
  script/script.h \
  script/script_error.cpp \
  script/script_error.h \
  serialize.h \
  span.h \
  tinyformat.h \
  uint256.cpp \
  uint256.h \
  util/strencodings.cpp \
  util/strencodings.h \
  version.h


# common: shared between bitcoind, and bitcoin-qt and non-server tools
libbitcoin_common_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)
libbitcoin_common_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
libbitcoin_common_a_SOURCES = \
  base58.cpp \
  bech32.cpp \
  chainparams.cpp \
  coins.cpp \
  common/bloom.cpp \
  compressor.cpp \
  core_read.cpp \
  core_write.cpp \
  deploymentinfo.cpp \
  external_signer.cpp \
  init/common.cpp \
  key.cpp \
  key_io.cpp \
  merkleblock.cpp \
  net_types.cpp \
  netaddress.cpp \
  netbase.cpp \
  net_permissions.cpp \
  outputtype.cpp \
  policy/feerate.cpp \
  policy/policy.cpp \
  protocol.cpp \
  psbt.cpp \
  rpc/rawtransaction_util.cpp \
  rpc/external_signer.cpp \
  rpc/util.cpp \
  scheduler.cpp \
  script/descriptor.cpp \
  script/miniscript.cpp \
  script/sign.cpp \
  script/signingprovider.cpp \
  script/standard.cpp \
  warnings.cpp \
  $(BITCOIN_CORE_H)


# util: shared between all executables.
libbitcoin_util_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)
libbitcoin_util_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
libbitcoin_util_a_SOURCES = support/lockedpool.cpp chainparamsbase.cpp \
	clientversion.cpp fs.cpp interfaces/echo.cpp \
	interfaces/handler.cpp interfaces/init.cpp logging.cpp \
	random.cpp randomenv.cpp rpc/request.cpp support/cleanse.cpp \
	sync.cpp threadinterrupt.cpp util/asmap.cpp util/bip32.cpp \
	util/bytevectorhash.cpp util/check.cpp util/error.cpp \
	util/fees.cpp util/getuniquepath.cpp util/hasher.cpp \
	util/sock.cpp util/syserror.cpp util/system.cpp \
	util/message.cpp util/moneystr.cpp util/rbf.cpp \
	util/readwritefile.cpp util/settings.cpp util/thread.cpp \
	util/threadnames.cpp util/serfloat.cpp util/spanparsing.cpp \
	util/strencodings.cpp util/string.cpp util/syscall_sandbox.cpp \
	util/time.cpp util/tokenpipe.cpp $(BITCOIN_CORE_H) \
	$(am__append_18)

# cli: shared between bitcoin-cli and bitcoin-qt
libbitcoin_cli_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)
libbitcoin_cli_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
libbitcoin_cli_a_SOURCES = \
  compat/stdin.h \
  compat/stdin.cpp \
  rpc/client.cpp \
  $(BITCOIN_CORE_H)

nodist_libbitcoin_util_a_SOURCES = $(srcdir)/obj/build.h
#

# bitcoind & bitcoin-node binaries #
bitcoin_daemon_sources = bitcoind.cpp $(am__append_19)
bitcoin_bin_cppflags = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)
bitcoin_bin_cxxflags = $(AM_CXXFLAGS) $(PIE_FLAGS)
bitcoin_bin_ldflags = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) $(PTHREAD_FLAGS)
bitcoin_bin_ldadd = $(LIBBITCOIN_WALLET) $(LIBBITCOIN_COMMON) \
	$(LIBBITCOIN_UTIL) $(LIBUNIVALUE) $(LIBBITCOIN_ZMQ) \
	$(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBLEVELDB) \
	$(LIBMEMENV) $(LIBSECP256K1) $(BDB_LIBS) $(MINIUPNPC_LIBS) \
	$(NATPMP_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) \
	$(ZMQ_LIBS) $(SQLITE_LIBS)
bitcoind_SOURCES = $(bitcoin_daemon_sources) init/bitcoind.cpp
bitcoind_CPPFLAGS = $(bitcoin_bin_cppflags)
bitcoind_CXXFLAGS = $(bitcoin_bin_cxxflags)
bitcoind_LDFLAGS = $(bitcoin_bin_ldflags)
bitcoind_LDADD = $(LIBBITCOIN_NODE) $(bitcoin_bin_ldadd)
bitcoin_node_SOURCES = $(bitcoin_daemon_sources) init/bitcoin-node.cpp
bitcoin_node_CPPFLAGS = $(bitcoin_bin_cppflags)
bitcoin_node_CXXFLAGS = $(bitcoin_bin_cxxflags)
bitcoin_node_LDFLAGS = $(bitcoin_bin_ldflags)
bitcoin_node_LDADD = $(LIBBITCOIN_NODE) $(bitcoin_bin_ldadd) $(LIBBITCOIN_IPC) $(LIBMULTIPROCESS_LIBS)

# bitcoin-cli binary #
bitcoin_cli_SOURCES = bitcoin-cli.cpp $(am__append_20)
bitcoin_cli_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(EVENT_CFLAGS)
bitcoin_cli_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
bitcoin_cli_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) $(PTHREAD_FLAGS)
bitcoin_cli_LDADD = $(LIBBITCOIN_CLI) $(LIBUNIVALUE) \
	$(LIBBITCOIN_UTIL) $(LIBBITCOIN_CRYPTO) $(EVENT_LIBS)
#

# bitcoin-tx binary #
bitcoin_tx_SOURCES = bitcoin-tx.cpp $(am__append_21)
bitcoin_tx_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)
bitcoin_tx_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
bitcoin_tx_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) $(PTHREAD_FLAGS)
bitcoin_tx_LDADD = \
  $(LIBUNIVALUE) \
  $(LIBBITCOIN_COMMON) \
  $(LIBBITCOIN_UTIL) \
  $(LIBBITCOIN_CONSENSUS) \
  $(LIBBITCOIN_CRYPTO) \
  $(LIBSECP256K1)

#

# bitcoin-wallet binary #
bitcoin_wallet_SOURCES = bitcoin-wallet.cpp init/bitcoin-wallet.cpp \
	$(am__append_22)
bitcoin_wallet_CPPFLAGS = $(bitcoin_bin_cppflags)
bitcoin_wallet_CXXFLAGS = $(bitcoin_bin_cxxflags)
bitcoin_wallet_LDFLAGS = $(bitcoin_bin_ldflags)
bitcoin_wallet_LDADD = \
  $(LIBBITCOIN_WALLET_TOOL) \
  $(LIBBITCOIN_WALLET) \
  $(LIBBITCOIN_COMMON) \
  $(LIBBITCOIN_UTIL) \
  $(LIBUNIVALUE) \
  $(LIBBITCOIN_CONSENSUS) \
  $(LIBBITCOIN_CRYPTO) \
  $(LIBSECP256K1) \
  $(BDB_LIBS) \
  $(SQLITE_LIBS)

#

# bitcoin-util binary #
bitcoin_util_SOURCES = bitcoin-util.cpp $(am__append_23)
bitcoin_util_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)
bitcoin_util_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
bitcoin_util_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) $(PTHREAD_FLAGS)
bitcoin_util_LDADD = \
  $(LIBBITCOIN_COMMON) \
  $(LIBBITCOIN_UTIL) \
  $(LIBUNIVALUE) \
  $(LIBBITCOIN_CONSENSUS) \
  $(LIBBITCOIN_CRYPTO) \
  $(LIBSECP256K1)

#

# bitcoin-chainstate binary #
bitcoin_chainstate_SOURCES = bitcoin-chainstate.cpp
bitcoin_chainstate_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)
bitcoin_chainstate_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)

# $(LIBTOOL_APP_LDFLAGS) deliberately omitted here so that we can test linking
# bitcoin-chainstate against libbitcoinkernel as a shared or static library by
# setting --{en,dis}able-shared.
bitcoin_chainstate_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(PTHREAD_FLAGS)
bitcoin_chainstate_LDADD = $(LIBBITCOINKERNEL)
#libbitcoinkernel_la_LDFLAGS =  \
#	$(AM_LDFLAGS) -no-undefined \
#	$(RELDFLAGS) $(PTHREAD_FLAGS) \
#	$(am__append_25)
#libbitcoinkernel_la_LIBADD = $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBMEMENV) $(LIBSECP256K1)
#libbitcoinkernel_la_CPPFLAGS = $(AM_CPPFLAGS) -I$(builddir)/obj -I$(srcdir)/secp256k1/include -DBUILD_BITCOIN_INTERNAL $(BOOST_CPPFLAGS) $(LEVELDB_CPPFLAGS) -I$(srcdir)/$(UNIVALUE_INCLUDE_DIR_INT)

# libbitcoinkernel requires default symbol visibility, explicitly specify that
# here so that things still work even when user configures with
#   --enable-reduce-exports
#
# Note this is a quick hack that will be removed as we incrementally define what
# to export from the library.
#libbitcoinkernel_la_CXXFLAGS =  \
#	$(AM_CXXFLAGS) $(PIE_FLAGS) \
#	-fvisibility=default \
#	$(am__append_26)

# TODO: libbitcoinkernel is a work in progress consensus engine library, as more
#       and more modules are decoupled from the consensus engine, this list will
#       shrink to only those which are absolutely necessary. For example, things
#       like index/*.cpp will be removed.
#libbitcoinkernel_la_SOURCES = \
#  kernel/bitcoinkernel.cpp \
#  arith_uint256.cpp \
#  chain.cpp \
#  chainparamsbase.cpp \
#  chainparams.cpp \
#  clientversion.cpp \
#  coins.cpp \
#  compressor.cpp \
#  consensus/merkle.cpp \
#  consensus/tx_check.cpp \
#  consensus/tx_verify.cpp \
#  core_read.cpp \
#  dbwrapper.cpp \
#  deploymentinfo.cpp \
#  deploymentstatus.cpp \
#  flatfile.cpp \
#  fs.cpp \
#  hash.cpp \
#  kernel/checks.cpp \
#  kernel/coinstats.cpp \
#  kernel/context.cpp \
#  key.cpp \
#  logging.cpp \
#  node/blockstorage.cpp \
#  node/chainstate.cpp \
#  node/ui_interface.cpp \
#  policy/feerate.cpp \
#  policy/fees.cpp \
#  policy/packages.cpp \
#  policy/policy.cpp \
#  policy/rbf.cpp \
#  policy/settings.cpp \
#  pow.cpp \
#  primitives/block.cpp \
#  primitives/transaction.cpp \
#  pubkey.cpp \
#  random.cpp \
#  randomenv.cpp \
#  scheduler.cpp \
#  script/interpreter.cpp \
#  script/script.cpp \
#  script/script_error.cpp \
#  script/sigcache.cpp \
#  script/standard.cpp \
#  shutdown.cpp \
#  signet.cpp \
#  support/cleanse.cpp \
#  support/lockedpool.cpp \
#  sync.cpp \
#  threadinterrupt.cpp \
#  txdb.cpp \
#  txmempool.cpp \
#  uint256.cpp \
#  util/bytevectorhash.cpp \
#  util/check.cpp \
#  util/getuniquepath.cpp \
#  util/hasher.cpp \
#  util/moneystr.cpp \
#  util/rbf.cpp \
#  util/serfloat.cpp \
#  util/settings.cpp \
#  util/strencodings.cpp \
#  util/string.cpp \
#  util/syscall_sandbox.cpp \
#  util/syserror.cpp \
#  util/system.cpp \
#  util/thread.cpp \
#  util/threadnames.cpp \
#  util/time.cpp \
#  util/tokenpipe.cpp \
#  validation.cpp \
#  validationinterface.cpp \
#  versionbits.cpp \
#  warnings.cpp

include_HEADERS = script/bitcoinconsensus.h
libbitcoinconsensus_la_SOURCES = support/cleanse.cpp $(crypto_libbitcoin_crypto_base_la_SOURCES) $(libbitcoin_consensus_a_SOURCES)
libbitcoinconsensus_la_LDFLAGS = $(AM_LDFLAGS) -no-undefined $(RELDFLAGS)
libbitcoinconsensus_la_LIBADD = $(LIBSECP256K1)
libbitcoinconsensus_la_CPPFLAGS = $(AM_CPPFLAGS) -I$(builddir)/obj -I$(srcdir)/secp256k1/include -DBUILD_BITCOIN_INTERNAL
libbitcoinconsensus_la_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)

#
CTAES_DIST = crypto/ctaes/bench.c crypto/ctaes/ctaes.c \
	crypto/ctaes/ctaes.h crypto/ctaes/README.md \
	crypto/ctaes/test.c
CLEANFILES = $(EXTRA_LIBRARIES) *.gcda *.gcno compat/*.gcda \
	compat/*.gcno consensus/*.gcda consensus/*.gcno \
	crc32c/src/*.gcda crc32c/src/*.gcno crypto/*.gcda \
	crypto/*.gcno index/*.gcda index/*.gcno interfaces/*.gcda \
	interfaces/*.gcno node/*.gcda node/*.gcno policy/*.gcda \
	policy/*.gcno primitives/*.gcda primitives/*.gcno rpc/*.gcda \
	rpc/*.gcno script/*.gcda script/*.gcno support/*.gcda \
	support/*.gcno univalue/*.gcda univalue/*.gcno util/*.gcda \
	util/*.gcno wallet/*.gcda wallet/*.gcno wallet/test/*.gcda \
	wallet/test/*.gcno zmq/*.gcda zmq/*.gcno obj/build.h \
	$(am__append_28) $(am__append_63) $(am__append_68) \
	$(am__append_78) $(am__append_85)
EXTRA_DIST = $(CTAES_DIST) $(libbitcoin_ipc_mpgen_input)
libbitcoin_ipc_mpgen_input = \
  ipc/capnp/echo.capnp \
  ipc/capnp/init.capnp

#LIBBITCOIN_IPC = libbitcoin_ipc.a
#libbitcoin_ipc_a_SOURCES = \
#  ipc/capnp/context.h \
#  ipc/capnp/init-types.h \
#  ipc/capnp/protocol.cpp \
#  ipc/capnp/protocol.h \
#  ipc/context.h \
#  ipc/exception.h \
#  ipc/interfaces.cpp \
#  ipc/process.cpp \
#  ipc/process.h \
#  ipc/protocol.h

#libbitcoin_ipc_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)
#libbitcoin_ipc_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS) $(LIBMULTIPROCESS_CFLAGS)
#libbitcoin_ipc_mpgen_output = \
#  $(libbitcoin_ipc_mpgen_input:=.c++) \
#  $(libbitcoin_ipc_mpgen_input:=.h) \
#  $(libbitcoin_ipc_mpgen_input:=.proxy-client.c++) \
#  $(libbitcoin_ipc_mpgen_input:=.proxy-server.c++) \
#  $(libbitcoin_ipc_mpgen_input:=.proxy-types.c++) \
#  $(libbitcoin_ipc_mpgen_input:=.proxy-types.h) \
#  $(libbitcoin_ipc_mpgen_input:=.proxy.h)

#nodist_libbitcoin_ipc_a_SOURCES = $(libbitcoin_ipc_mpgen_output)
MINISKETCH_INCLUDE_DIR_INT = minisketch/include
MINISKETCH_DIST_HEADERS_INT = minisketch/include/minisketch.h
MINISKETCH_LIB_HEADERS_INT = minisketch/src/false_positives.h \
	minisketch/src/fielddefines.h minisketch/src/int_utils.h \
	minisketch/src/lintrans.h minisketch/src/sketch.h \
	minisketch/src/sketch_impl.h minisketch/src/util.h
MINISKETCH_LIB_SOURCES_INT = minisketch/src/minisketch.cpp
MINISKETCH_FIELD_GENERIC_HEADERS_INT =  \
	minisketch/src/fields/generic_common_impl.h
MINISKETCH_FIELD_GENERIC_SOURCES_INT =  \
	minisketch/src/fields/generic_1byte.cpp \
	minisketch/src/fields/generic_2bytes.cpp \
	minisketch/src/fields/generic_3bytes.cpp \
	minisketch/src/fields/generic_4bytes.cpp \
	minisketch/src/fields/generic_5bytes.cpp \
	minisketch/src/fields/generic_6bytes.cpp \
	minisketch/src/fields/generic_7bytes.cpp \
	minisketch/src/fields/generic_8bytes.cpp
MINISKETCH_FIELD_CLMUL_HEADERS_INT =  \
	minisketch/src/fields/clmul_common_impl.h
MINISKETCH_FIELD_CLMUL_SOURCES_INT =  \
	minisketch/src/fields/clmul_1byte.cpp \
	minisketch/src/fields/clmul_2bytes.cpp \
	minisketch/src/fields/clmul_3bytes.cpp \
	minisketch/src/fields/clmul_4bytes.cpp \
	minisketch/src/fields/clmul_5bytes.cpp \
	minisketch/src/fields/clmul_6bytes.cpp \
	minisketch/src/fields/clmul_7bytes.cpp \
	minisketch/src/fields/clmul_8bytes.cpp
MINISKETCH_BENCH_SOURCES_INT = minisketch/src/bench.cpp
MINISKETCH_TEST_SOURCES_INT = minisketch/src/test.cpp
LIBMINISKETCH_CPPFLAGS = -DDISABLE_DEFAULT_FIELDS -DENABLE_FIELD_32 \
	$(am__append_29) $(am__append_31)
LIBMINISKETCH = minisketch/libminisketch.a
MINISKETCH_LIBS = $(LIBMINISKETCH) $(am__append_30)
LIBMINISKETCH_CLMUL = minisketch/libminisketch_clmul.a
minisketch_libminisketch_clmul_a_SOURCES = $(MINISKETCH_FIELD_CLMUL_SOURCES_INT) $(MINISKETCH_FIELD_CLMUL_HEADERS_INT)
minisketch_libminisketch_clmul_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS) $(CLMUL_CXXFLAGS)
minisketch_libminisketch_clmul_a_CPPFLAGS = $(AM_CPPFLAGS) $(LIBMINISKETCH_CPPFLAGS)
minisketch_libminisketch_a_SOURCES =  \
	$(MINISKETCH_FIELD_GENERIC_SOURCES_INT) \
	$(MINISKETCH_LIB_SOURCES_INT) \
	$(MINISKETCH_FIELD_GENERIC_HEADERS_INT) \
	$(MINISKETCH_LIB_HEADERS_INT) $(MINISKETCH_DIST_HEADERS_INT)
minisketch_libminisketch_a_CPPFLAGS = $(AM_CPPFLAGS) $(LIBMINISKETCH_CPPFLAGS)
minisketch_libminisketch_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
MINISKETCH_TEST = minisketch/test
minisketch_test_SOURCES = $(MINISKETCH_TEST_SOURCES_INT)
minisketch_test_CPPFLAGS = $(AM_CPPFLAGS) $(LIBMINISKETCH_CPPFLAGS)
minisketch_test_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
minisketch_test_LDADD = $(MINISKETCH_LIBS)
minisketch_test_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) $(PTHREAD_FLAGS)
LIBCRC32C_INT = crc32c/libcrc32c.la
LIBCRC32C = $(LIBCRC32C_INT) $(am__append_41) $(am__append_43)
CRC32C_CPPFLAGS_INT = -I$(srcdir)/crc32c/include \
	-DHAVE_BUILTIN_PREFETCH=1 \
	-DHAVE_MM_PREFETCH=1 \
	-DHAVE_STRONG_GETAUXVAL=1 \
	-DCRC32C_TESTS_BUILT_WITH_GLOG=0 $(am__append_34) \
	$(am__append_35) $(am__append_36) $(am__append_37) \
	$(am__append_38) $(am__append_39)
crc32c_libcrc32c_la_CPPFLAGS = $(AM_CPPFLAGS) $(CRC32C_CPPFLAGS_INT) $(CRC32C_CPPFLAGS)

# Specify -static in both CXXFLAGS and LDFLAGS so libtool will only build a
# static version of this library. We don't need a dynamic version, and a dynamic
# version can't be used on windows anyway because the library doesn't currently
# export DLL symbols.
crc32c_libcrc32c_la_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS) -static
crc32c_libcrc32c_la_LDFLAGS = $(AM_LDFLAGS) -static
crc32c_libcrc32c_la_SOURCES = crc32c/include/crc32c/crc32c.h \
	crc32c/src/crc32c_arm64.h crc32c/src/crc32c_arm64_check.h \
	crc32c/src/crc32c_internal.h crc32c/src/crc32c_prefetch.h \
	crc32c/src/crc32c_read_le.h crc32c/src/crc32c_round_up.h \
	crc32c/src/crc32c_sse42_check.h crc32c/src/crc32c_sse42.h \
	crc32c/src/crc32c.cc crc32c/src/crc32c_portable.cc
LIBCRC32C_SSE42_INT = crc32c/libcrc32c_sse42.la
crc32c_libcrc32c_sse42_la_CPPFLAGS = $(crc32c_libcrc32c_la_CPPFLAGS)
crc32c_libcrc32c_sse42_la_CXXFLAGS = $(crc32c_libcrc32c_la_CXXFLAGS) $(SSE42_CXXFLAGS)
crc32c_libcrc32c_sse42_la_LDFLAGS = $(crc32c_libcrc32c_la_LDFLAGS)
crc32c_libcrc32c_sse42_la_SOURCES = crc32c/src/crc32c_sse42.cc
#LIBCRC32C_ARM_CRC_INT = crc32c/libcrc32c_arm_crc.la
#crc32c_libcrc32c_arm_crc_la_CPPFLAGS = $(crc32c_libcrc32c_la_CPPFLAGS)
#crc32c_libcrc32c_arm_crc_la_CXXFLAGS = $(crc32c_libcrc32c_la_CXXFLAGS) $(ARM_CRC_CXXFLAGS)
#crc32c_libcrc32c_arm_crc_la_LDFLAGS = $(crc32c_libcrc32c_la_LDFLAGS)
#crc32c_libcrc32c_arm_crc_la_SOURCES = crc32c/src/crc32c_arm64.cc
LIBLEVELDB_INT = leveldb/libleveldb.la
LIBMEMENV_INT = leveldb/libmemenv.la
LIBLEVELDB = $(LIBLEVELDB_INT) $(LIBCRC32C)
LIBMEMENV = $(LIBMEMENV_INT)
LEVELDB_CPPFLAGS = -I$(srcdir)/leveldb/include \
	-I$(srcdir)/leveldb/helpers/memenv
LEVELDB_CPPFLAGS_INT = -I$(srcdir)/leveldb -I$(srcdir)/crc32c/include \
	-D__STDC_LIMIT_MACROS -DHAVE_SNAPPY=0 -DHAVE_CRC32C=1 \
	-DHAVE_FDATASYNC=1 \
	-DHAVE_FULLFSYNC=0 \
	-DHAVE_O_CLOEXEC=1 \
	-DFALLTHROUGH_INTENDED=[[fallthrough]] $(am__append_44) \
	$(am__append_45) $(am__append_46) $(am__append_47)
leveldb_libleveldb_la_CPPFLAGS = $(AM_CPPFLAGS) $(LEVELDB_CPPFLAGS_INT) $(LEVELDB_CPPFLAGS)

# Specify -static in both CXXFLAGS and LDFLAGS so libtool will only build a
# static version of this library. We don't need a dynamic version, and a dynamic
# version can't be used on windows anyway because the library doesn't currently
# export DLL symbols.
leveldb_libleveldb_la_CXXFLAGS = $(filter-out -Wconditional-uninitialized -Werror=conditional-uninitialized -Wsuggest-override -Werror=suggest-override, $(AM_CXXFLAGS)) $(PIE_FLAGS) -static
leveldb_libleveldb_la_LDFLAGS = $(AM_LDFLAGS) -static
leveldb_libleveldb_la_SOURCES = leveldb/port/port_stdcxx.h \
	leveldb/port/port.h leveldb/port/thread_annotations.h \
	leveldb/include/leveldb/db.h leveldb/include/leveldb/options.h \
	leveldb/include/leveldb/comparator.h \
	leveldb/include/leveldb/filter_policy.h \
	leveldb/include/leveldb/slice.h \
	leveldb/include/leveldb/table_builder.h \
	leveldb/include/leveldb/env.h leveldb/include/leveldb/export.h \
	leveldb/include/leveldb/c.h leveldb/include/leveldb/iterator.h \
	leveldb/include/leveldb/cache.h \
	leveldb/include/leveldb/dumpfile.h \
	leveldb/include/leveldb/table.h \
	leveldb/include/leveldb/write_batch.h \
	leveldb/include/leveldb/status.h leveldb/db/log_format.h \
	leveldb/db/memtable.h leveldb/db/version_set.h \
	leveldb/db/write_batch_internal.h leveldb/db/filename.h \
	leveldb/db/version_edit.h leveldb/db/dbformat.h \
	leveldb/db/builder.h leveldb/db/log_writer.h \
	leveldb/db/db_iter.h leveldb/db/skiplist.h \
	leveldb/db/db_impl.h leveldb/db/table_cache.h \
	leveldb/db/snapshot.h leveldb/db/log_reader.h \
	leveldb/table/filter_block.h leveldb/table/block_builder.h \
	leveldb/table/block.h leveldb/table/two_level_iterator.h \
	leveldb/table/merger.h leveldb/table/format.h \
	leveldb/table/iterator_wrapper.h leveldb/util/crc32c.h \
	leveldb/util/env_posix_test_helper.h \
	leveldb/util/env_windows_test_helper.h leveldb/util/arena.h \
	leveldb/util/random.h leveldb/util/posix_logger.h \
	leveldb/util/hash.h leveldb/util/histogram.h \
	leveldb/util/coding.h leveldb/util/testutil.h \
	leveldb/util/mutexlock.h leveldb/util/logging.h \
	leveldb/util/no_destructor.h leveldb/util/testharness.h \
	leveldb/util/windows_logger.h leveldb/db/builder.cc \
	leveldb/db/c.cc leveldb/db/dbformat.cc leveldb/db/db_impl.cc \
	leveldb/db/db_iter.cc leveldb/db/dumpfile.cc \
	leveldb/db/filename.cc leveldb/db/log_reader.cc \
	leveldb/db/log_writer.cc leveldb/db/memtable.cc \
	leveldb/db/repair.cc leveldb/db/table_cache.cc \
	leveldb/db/version_edit.cc leveldb/db/version_set.cc \
	leveldb/db/write_batch.cc leveldb/table/block_builder.cc \
	leveldb/table/block.cc leveldb/table/filter_block.cc \
	leveldb/table/format.cc leveldb/table/iterator.cc \
	leveldb/table/merger.cc leveldb/table/table_builder.cc \
	leveldb/table/table.cc leveldb/table/two_level_iterator.cc \
	leveldb/util/arena.cc leveldb/util/bloom.cc \
	leveldb/util/cache.cc leveldb/util/coding.cc \
	leveldb/util/comparator.cc leveldb/util/crc32c.cc \
	leveldb/util/env.cc leveldb/util/filter_policy.cc \
	leveldb/util/hash.cc leveldb/util/histogram.cc \
	leveldb/util/logging.cc leveldb/util/options.cc \
	leveldb/util/status.cc $(am__append_48) $(am__append_49)
leveldb_libmemenv_la_CPPFLAGS = $(leveldb_libleveldb_la_CPPFLAGS)
leveldb_libmemenv_la_CXXFLAGS = $(leveldb_libleveldb_la_CXXFLAGS)
leveldb_libmemenv_la_LDFLAGS = $(leveldb_libleveldb_la_LDFLAGS)
leveldb_libmemenv_la_SOURCES = leveldb/helpers/memenv/memenv.cc \
	leveldb/helpers/memenv/memenv.h
LIBTEST_UTIL = libtest_util.a
TEST_UTIL_H = \
    test/util/blockfilter.h \
    test/util/chainstate.h \
    test/util/logging.h \
    test/util/mining.h \
    test/util/net.h \
    test/util/script.h \
    test/util/setup_common.h \
    test/util/str.h \
    test/util/transaction_utils.h \
    test/util/validation.h \
    test/util/wallet.h

libtest_util_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(MINIUPNPC_CPPFLAGS) $(NATPMP_CPPFLAGS) $(EVENT_CFLAGS) $(EVENT_PTHREADS_CFLAGS)
libtest_util_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
libtest_util_a_SOURCES = \
  test/util/blockfilter.cpp \
  test/util/logging.cpp \
  test/util/mining.cpp \
  test/util/net.cpp \
  test/util/script.cpp \
  test/util/setup_common.cpp \
  test/util/str.cpp \
  test/util/transaction_utils.cpp \
  test/util/validation.cpp \
  test/util/wallet.cpp \
  $(TEST_UTIL_H)

LIBTEST_FUZZ = libtest_fuzz.a
TEST_FUZZ_H = \
    test/fuzz/fuzz.h \
    test/fuzz/FuzzedDataProvider.h \
    test/fuzz/util.h

libtest_fuzz_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(MINIUPNPC_CPPFLAGS) $(NATPMP_CPPFLAGS) $(EVENT_CFLAGS) $(EVENT_PTHREADS_CFLAGS)
libtest_fuzz_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
libtest_fuzz_a_SOURCES = \
  test/fuzz/fuzz.cpp \
  test/fuzz/util.cpp \
  $(TEST_FUZZ_H)

TEST_SRCDIR = test
TEST_BINARY = test/test_bitcoin$(EXEEXT)
FUZZ_BINARY = test/fuzz/fuzz$(EXEEXT)
JSON_TEST_FILES = \
  test/data/script_tests.json \
  test/data/bip341_wallet_vectors.json \
  test/data/base58_encode_decode.json \
  test/data/blockfilters.json \
  test/data/key_io_valid.json \
  test/data/key_io_invalid.json \
  test/data/script_tests.json \
  test/data/sighash.json \
  test/data/tx_invalid.json \
  test/data/tx_valid.json

RAW_TEST_FILES = \
  test/data/asmap.raw

GENERATED_TEST_FILES = $(JSON_TEST_FILES:.json=.json.h) $(RAW_TEST_FILES:.raw=.raw.h)
BITCOIN_TEST_SUITE = test/main.cpp $(TEST_UTIL_H) \
	$(am__append_58)
FUZZ_SUITE_LD_COMMON = $(LIBTEST_UTIL) \
	$(LIBTEST_FUZZ) $(LIBBITCOIN_NODE) \
	$(LIBBITCOIN_WALLET) $(LIBBITCOIN_COMMON) \
	$(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) \
	$(LIBBITCOIN_CRYPTO) $(LIBBITCOIN_CLI) \
	$(LIBUNIVALUE) $(LIBLEVELDB) $(LIBMEMENV) \
	$(LIBSECP256K1) $(MINISKETCH_LIBS) \
	$(EVENT_LIBS) $(EVENT_PTHREADS_LIBS) \
	$(am__append_52) $(am__append_53) \
	$(am__append_55) $(am__append_62)

# test_bitcoin binary #
BITCOIN_TESTS = test/addrman_tests.cpp \
	test/allocator_tests.cpp \
	test/amount_tests.cpp \
	test/arith_uint256_tests.cpp \
	test/banman_tests.cpp test/base32_tests.cpp \
	test/base58_tests.cpp test/base64_tests.cpp \
	test/bech32_tests.cpp test/bip32_tests.cpp \
	test/blockchain_tests.cpp \
	test/blockencodings_tests.cpp \
	test/blockfilter_index_tests.cpp \
	test/blockfilter_tests.cpp \
	test/bloom_tests.cpp test/bswap_tests.cpp \
	test/checkqueue_tests.cpp \
	test/coins_tests.cpp \
	test/coinstatsindex_tests.cpp \
	test/compilerbug_tests.cpp \
	test/compress_tests.cpp \
	test/crypto_tests.cpp \
	test/cuckoocache_tests.cpp \
	test/dbwrapper_tests.cpp \
	test/denialofservice_tests.cpp \
	test/descriptor_tests.cpp \
	test/flatfile_tests.cpp test/fs_tests.cpp \
	test/getarg_tests.cpp test/hash_tests.cpp \
	test/httpserver_tests.cpp \
	test/i2p_tests.cpp \
	test/interfaces_tests.cpp \
	test/key_io_tests.cpp test/key_tests.cpp \
	test/logging_tests.cpp \
	test/mempool_tests.cpp \
	test/merkle_tests.cpp \
	test/merkleblock_tests.cpp \
	test/miner_tests.cpp \
	test/miniscript_tests.cpp \
	test/minisketch_tests.cpp \
	test/multisig_tests.cpp \
	test/net_peer_eviction_tests.cpp \
	test/net_tests.cpp test/netbase_tests.cpp \
	test/orphanage_tests.cpp test/pmt_tests.cpp \
	test/policy_fee_tests.cpp \
	test/policyestimator_tests.cpp \
	test/pow_tests.cpp test/prevector_tests.cpp \
	test/raii_event_tests.cpp \
	test/random_tests.cpp test/rest_tests.cpp \
	test/reverselock_tests.cpp \
	test/rpc_tests.cpp test/sanity_tests.cpp \
	test/scheduler_tests.cpp \
	test/script_p2sh_tests.cpp \
	test/script_parse_tests.cpp \
	test/script_segwit_tests.cpp \
	test/script_standard_tests.cpp \
	test/script_tests.cpp test/scriptnum10.h \
	test/scriptnum_tests.cpp \
	test/serfloat_tests.cpp \
	test/serialize_tests.cpp \
	test/settings_tests.cpp \
	test/sighash_tests.cpp \
	test/sigopcount_tests.cpp \
	test/skiplist_tests.cpp test/sock_tests.cpp \
	test/streams_tests.cpp test/sync_tests.cpp \
	test/system_tests.cpp \
	test/timedata_tests.cpp \
	test/torcontrol_tests.cpp \
	test/transaction_tests.cpp \
	test/txindex_tests.cpp \
	test/txpackage_tests.cpp \
	test/txrequest_tests.cpp \
	test/txvalidation_tests.cpp \
	test/txvalidationcache_tests.cpp \
	test/uint256_tests.cpp test/util_tests.cpp \
	test/util_threadnames_tests.cpp \
	test/validation_block_tests.cpp \
	test/validation_chainstate_tests.cpp \
	test/validation_chainstatemanager_tests.cpp \
	test/validation_flush_tests.cpp \
	test/validation_tests.cpp \
	test/validationinterface_tests.cpp \
	test/versionbits_tests.cpp $(am__append_54) \
	$(am__append_56)
#FUZZ_WALLET_SRC = wallet/test/fuzz/coinselection.cpp \
#	$(am__append_57)
test_test_bitcoin_SOURCES = $(BITCOIN_TEST_SUITE) $(BITCOIN_TESTS) $(JSON_TEST_FILES) $(RAW_TEST_FILES)
test_test_bitcoin_CPPFLAGS = $(AM_CPPFLAGS) \
	$(BITCOIN_INCLUDES) $(TESTDEFS) \
	$(EVENT_CFLAGS) $(am__append_60)
test_test_bitcoin_LDADD = $(LIBTEST_UTIL) \
	$(am__append_59) $(LIBBITCOIN_NODE) \
	$(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) \
	$(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) \
	$(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) \
	$(LIBLEVELDB) $(LIBMEMENV) $(LIBSECP256K1) \
	$(EVENT_LIBS) $(EVENT_PTHREADS_LIBS) \
	$(MINISKETCH_LIBS) $(BDB_LIBS) \
	$(MINIUPNPC_LIBS) $(NATPMP_LIBS) \
	$(SQLITE_LIBS) $(am__append_61)
test_test_bitcoin_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
test_test_bitcoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) $(PTHREAD_FLAGS) -static
test_fuzz_fuzz_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)
test_fuzz_fuzz_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
test_fuzz_fuzz_LDADD = $(FUZZ_SUITE_LD_COMMON)
test_fuzz_fuzz_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) $(PTHREAD_FLAGS) $(RUNTIME_LDFLAGS)
test_fuzz_fuzz_SOURCES = \
 $(FUZZ_WALLET_SRC) \
 test/fuzz/addition_overflow.cpp \
 test/fuzz/addrman.cpp \
 test/fuzz/asmap.cpp \
 test/fuzz/asmap_direct.cpp \
 test/fuzz/autofile.cpp \
 test/fuzz/banman.cpp \
 test/fuzz/base_encode_decode.cpp \
 test/fuzz/bech32.cpp \
 test/fuzz/block.cpp \
 test/fuzz/block_header.cpp \
 test/fuzz/blockfilter.cpp \
 test/fuzz/bloom_filter.cpp \
 test/fuzz/buffered_file.cpp \
 test/fuzz/chain.cpp \
 test/fuzz/checkqueue.cpp \
 test/fuzz/coins_view.cpp \
 test/fuzz/connman.cpp \
 test/fuzz/crypto.cpp \
 test/fuzz/crypto_aes256.cpp \
 test/fuzz/crypto_aes256cbc.cpp \
 test/fuzz/crypto_chacha20.cpp \
 test/fuzz/crypto_chacha20_poly1305_aead.cpp \
 test/fuzz/crypto_common.cpp \
 test/fuzz/crypto_diff_fuzz_chacha20.cpp \
 test/fuzz/crypto_hkdf_hmac_sha256_l32.cpp \
 test/fuzz/crypto_poly1305.cpp \
 test/fuzz/cuckoocache.cpp \
 test/fuzz/decode_tx.cpp \
 test/fuzz/descriptor_parse.cpp \
 test/fuzz/deserialize.cpp \
 test/fuzz/eval_script.cpp \
 test/fuzz/fee_rate.cpp \
 test/fuzz/fees.cpp \
 test/fuzz/flatfile.cpp \
 test/fuzz/float.cpp \
 test/fuzz/golomb_rice.cpp \
 test/fuzz/hex.cpp \
 test/fuzz/http_request.cpp \
 test/fuzz/i2p.cpp \
 test/fuzz/integer.cpp \
 test/fuzz/key.cpp \
 test/fuzz/key_io.cpp \
 test/fuzz/kitchen_sink.cpp \
 test/fuzz/load_external_block_file.cpp \
 test/fuzz/locale.cpp \
 test/fuzz/merkleblock.cpp \
 test/fuzz/message.cpp \
 test/fuzz/miniscript.cpp \
 test/fuzz/minisketch.cpp \
 test/fuzz/muhash.cpp \
 test/fuzz/multiplication_overflow.cpp \
 test/fuzz/net.cpp \
 test/fuzz/net_permissions.cpp \
 test/fuzz/netaddress.cpp \
 test/fuzz/netbase_dns_lookup.cpp \
 test/fuzz/node_eviction.cpp \
 test/fuzz/p2p_transport_serialization.cpp \
 test/fuzz/parse_hd_keypath.cpp \
 test/fuzz/parse_iso8601.cpp \
 test/fuzz/parse_numbers.cpp \
 test/fuzz/parse_script.cpp \
 test/fuzz/parse_univalue.cpp \
 test/fuzz/policy_estimator.cpp \
 test/fuzz/policy_estimator_io.cpp \
 test/fuzz/pow.cpp \
 test/fuzz/prevector.cpp \
 test/fuzz/primitives_transaction.cpp \
 test/fuzz/process_message.cpp \
 test/fuzz/process_messages.cpp \
 test/fuzz/protocol.cpp \
 test/fuzz/psbt.cpp \
 test/fuzz/random.cpp \
 test/fuzz/rbf.cpp \
 test/fuzz/rolling_bloom_filter.cpp \
 test/fuzz/rpc.cpp \
 test/fuzz/script.cpp \
 test/fuzz/script_assets_test_minimizer.cpp \
 test/fuzz/script_bitcoin_consensus.cpp \
 test/fuzz/script_descriptor_cache.cpp \
 test/fuzz/script_flags.cpp \
 test/fuzz/script_format.cpp \
 test/fuzz/script_interpreter.cpp \
 test/fuzz/script_ops.cpp \
 test/fuzz/script_sigcache.cpp \
 test/fuzz/script_sign.cpp \
 test/fuzz/scriptnum_ops.cpp \
 test/fuzz/secp256k1_ec_seckey_import_export_der.cpp \
 test/fuzz/secp256k1_ecdsa_signature_parse_der_lax.cpp \
 test/fuzz/signature_checker.cpp \
 test/fuzz/signet.cpp \
 test/fuzz/socks5.cpp \
 test/fuzz/span.cpp \
 test/fuzz/spanparsing.cpp \
 test/fuzz/string.cpp \
 test/fuzz/strprintf.cpp \
 test/fuzz/system.cpp \
 test/fuzz/timedata.cpp \
 test/fuzz/torcontrol.cpp \
 test/fuzz/transaction.cpp \
 test/fuzz/tx_in.cpp \
 test/fuzz/tx_out.cpp \
 test/fuzz/tx_pool.cpp \
 test/fuzz/txrequest.cpp \
 test/fuzz/utxo_snapshot.cpp \
 test/fuzz/validation_load_mempool.cpp \
 test/fuzz/versionbits.cpp

nodist_test_test_bitcoin_SOURCES = $(GENERATED_TEST_FILES)
CLEAN_BITCOIN_TEST = test/*.gcda test/*.gcno test/fuzz/*.gcda test/fuzz/*.gcno test/util/*.gcda test/util/*.gcno $(GENERATED_TEST_FILES) $(BITCOIN_TESTS:=.log)
UNIVALUE_TESTS = univalue/test/object univalue/test/unitester univalue/test/no_nul
univalue_test_unitester_SOURCES = $(UNIVALUE_TEST_UNITESTER_INT)
univalue_test_unitester_LDADD = $(LIBUNIVALUE)
univalue_test_unitester_CPPFLAGS = -I$(srcdir)/$(UNIVALUE_INCLUDE_DIR_INT) -DJSON_TEST_SRC=\"$(srcdir)/$(UNIVALUE_TEST_DATA_DIR_INT)\"
univalue_test_unitester_LDFLAGS = -static $(LIBTOOL_APP_LDFLAGS)
univalue_test_no_nul_SOURCES = $(UNIVALUE_TEST_NO_NUL_INT)
univalue_test_no_nul_LDADD = $(LIBUNIVALUE)
univalue_test_no_nul_CPPFLAGS = -I$(srcdir)/$(UNIVALUE_INCLUDE_DIR_INT)
univalue_test_no_nul_LDFLAGS = -static $(LIBTOOL_APP_LDFLAGS)
univalue_test_object_SOURCES = $(UNIVALUE_TEST_OBJECT_INT)
univalue_test_object_LDADD = $(LIBUNIVALUE)
univalue_test_object_CPPFLAGS = -I$(srcdir)/$(UNIVALUE_INCLUDE_DIR_INT)
univalue_test_object_LDFLAGS = -static $(LIBTOOL_APP_LDFLAGS)
BENCH_SRCDIR = bench
BENCH_BINARY = bench/bench_bitcoin$(EXEEXT)
RAW_BENCH_FILES = \
  bench/data/block413567.raw

GENERATED_BENCH_FILES = $(RAW_BENCH_FILES:.raw=.raw.h)
bench_bench_bitcoin_SOURCES = $(RAW_BENCH_FILES) \
	bench/addrman.cpp bench/base58.cpp \
	bench/bech32.cpp bench/bench.cpp \
	bench/bench.h bench/bench_bitcoin.cpp \
	bench/block_assemble.cpp \
	bench/ccoins_caching.cpp bench/chacha20.cpp \
	bench/chacha_poly_aead.cpp \
	bench/checkblock.cpp bench/checkqueue.cpp \
	bench/crypto_hash.cpp bench/data.cpp \
	bench/data.h bench/duplicate_inputs.cpp \
	bench/examples.cpp bench/gcs_filter.cpp \
	bench/hashpadding.cpp bench/lockedpool.cpp \
	bench/logging.cpp \
	bench/mempool_eviction.cpp \
	bench/mempool_stress.cpp \
	bench/merkle_root.cpp bench/nanobench.cpp \
	bench/nanobench.h bench/peer_eviction.cpp \
	bench/poly1305.cpp bench/prevector.cpp \
	bench/rollingbloom.cpp \
	bench/rpc_blockchain.cpp \
	bench/rpc_mempool.cpp \
	bench/strencodings.cpp bench/util_time.cpp \
	bench/verify_script.cpp $(am__append_67)
nodist_bench_bench_bitcoin_SOURCES = $(GENERATED_BENCH_FILES)
bench_bench_bitcoin_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(EVENT_CFLAGS) $(EVENT_PTHREADS_CFLAGS) -I$(builddir)/bench/
bench_bench_bitcoin_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
bench_bench_bitcoin_LDADD = $(LIBTEST_UTIL) \
	$(LIBBITCOIN_NODE) $(LIBBITCOIN_WALLET) \
	$(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) \
	$(LIBBITCOIN_CONSENSUS) \
	$(LIBBITCOIN_CRYPTO) $(LIBLEVELDB) \
	$(LIBMEMENV) $(LIBSECP256K1) $(LIBUNIVALUE) \
	$(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) \
	$(am__append_66) $(BDB_LIBS) \
	$(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) \
	$(MINIUPNPC_LIBS) $(NATPMP_LIBS) \
	$(SQLITE_LIBS)
bench_bench_bitcoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) $(PTHREAD_FLAGS)
CLEAN_BITCOIN_BENCH = bench/*.gcda bench/*.gcno $(GENERATED_BENCH_FILES)
#QT_TS = \
#  qt/locale/bitcoin_am.ts \
#  qt/locale/bitcoin_ar.ts \
#  qt/locale/bitcoin_az.ts \
#  qt/locale/bitcoin_be.ts \
#  qt/locale/bitcoin_bg.ts \
#  qt/locale/bitcoin_bn.ts \
#  qt/locale/bitcoin_bs.ts \
#  qt/locale/bitcoin_ca.ts \
#  qt/locale/bitcoin_cs.ts \
#  qt/locale/bitcoin_cy.ts \
#  qt/locale/bitcoin_da.ts \
#  qt/locale/bitcoin_de.ts \
#  qt/locale/bitcoin_el.ts \
#  qt/locale/bitcoin_en.ts \
#  qt/locale/bitcoin_eo.ts \
#  qt/locale/bitcoin_es.ts \
#  qt/locale/bitcoin_es_CL.ts \
#  qt/locale/bitcoin_es_CO.ts \
#  qt/locale/bitcoin_es_DO.ts \
#  qt/locale/bitcoin_es_MX.ts \
#  qt/locale/bitcoin_es_VE.ts \
#  qt/locale/bitcoin_et.ts \
#  qt/locale/bitcoin_eu.ts \
#  qt/locale/bitcoin_fa.ts \
#  qt/locale/bitcoin_fi.ts \
#  qt/locale/bitcoin_fil.ts \
#  qt/locale/bitcoin_fr.ts \
#  qt/locale/bitcoin_ga.ts \
#  qt/locale/bitcoin_gd.ts \
#  qt/locale/bitcoin_gl.ts \
#  qt/locale/bitcoin_gl_ES.ts \
#  qt/locale/bitcoin_gu.ts \
#  qt/locale/bitcoin_he.ts \
#  qt/locale/bitcoin_hr.ts \
#  qt/locale/bitcoin_hu.ts \
#  qt/locale/bitcoin_id.ts \
#  qt/locale/bitcoin_is.ts \
#  qt/locale/bitcoin_it.ts \
#  qt/locale/bitcoin_ja.ts \
#  qt/locale/bitcoin_ka.ts \
#  qt/locale/bitcoin_kk.ts \
#  qt/locale/bitcoin_kl.ts \
#  qt/locale/bitcoin_km.ts \
#  qt/locale/bitcoin_ko.ts \
#  qt/locale/bitcoin_ku_IQ.ts \
#  qt/locale/bitcoin_ky.ts \
#  qt/locale/bitcoin_la.ts \
#  qt/locale/bitcoin_lt.ts \
#  qt/locale/bitcoin_lv.ts \
#  qt/locale/bitcoin_mk.ts \
#  qt/locale/bitcoin_ml.ts \
#  qt/locale/bitcoin_mn.ts \
#  qt/locale/bitcoin_mr_IN.ts \
#  qt/locale/bitcoin_ms.ts \
#  qt/locale/bitcoin_my.ts \
#  qt/locale/bitcoin_nb.ts \
#  qt/locale/bitcoin_ne.ts \
#  qt/locale/bitcoin_nl.ts \
#  qt/locale/bitcoin_no.ts \
#  qt/locale/bitcoin_pam.ts \
#  qt/locale/bitcoin_pl.ts \
#  qt/locale/bitcoin_pt.ts \
#  qt/locale/bitcoin_pt_BR.ts \
#  qt/locale/bitcoin_ro.ts \
#  qt/locale/bitcoin_ru.ts \
#  qt/locale/bitcoin_sc.ts \
#  qt/locale/bitcoin_si.ts \
#  qt/locale/bitcoin_sk.ts \
#  qt/locale/bitcoin_sl.ts \
#  qt/locale/bitcoin_sn.ts \
#  qt/locale/bitcoin_sq.ts \
#  qt/locale/bitcoin_sr.ts \
#  qt/locale/bitcoin_sr@latin.ts \
#  qt/locale/bitcoin_sv.ts \
#  qt/locale/bitcoin_sw.ts \
#  qt/locale/bitcoin_szl.ts \
#  qt/locale/bitcoin_ta.ts \
#  qt/locale/bitcoin_te.ts \
#  qt/locale/bitcoin_th.ts \
#  qt/locale/bitcoin_tr.ts \
#  qt/locale/bitcoin_ug.ts \
#  qt/locale/bitcoin_uk.ts \
#  qt/locale/bitcoin_ur.ts \
#  qt/locale/bitcoin_uz@Cyrl.ts \
#  qt/locale/bitcoin_uz@Latn.ts \
#  qt/locale/bitcoin_vi.ts \
#  qt/locale/bitcoin_yo.ts \
#  qt/locale/bitcoin_zh-Hans.ts \
#  qt/locale/bitcoin_zh.ts \
#  qt/locale/bitcoin_zh_CN.ts \
#  qt/locale/bitcoin_zh_HK.ts \
#  qt/locale/bitcoin_zh_TW.ts \
#  qt/locale/bitcoin_zu.ts


# bitcoin qt core #
#QT_FORMS_UI = \
#  qt/forms/addressbookpage.ui \
#  qt/forms/askpassphrasedialog.ui \
#  qt/forms/coincontroldialog.ui \
#  qt/forms/createwalletdialog.ui \
#  qt/forms/editaddressdialog.ui \
#  qt/forms/helpmessagedialog.ui \
#  qt/forms/intro.ui \
#  qt/forms/modaloverlay.ui \
#  qt/forms/openuridialog.ui \
#  qt/forms/optionsdialog.ui \
#  qt/forms/overviewpage.ui \
#  qt/forms/psbtoperationsdialog.ui \
#  qt/forms/receivecoinsdialog.ui \
#  qt/forms/receiverequestdialog.ui \
#  qt/forms/debugwindow.ui \
#  qt/forms/sendcoinsdialog.ui \
#  qt/forms/sendcoinsentry.ui \
#  qt/forms/signverifymessagedialog.ui \
#  qt/forms/transactiondescdialog.ui

#QT_MOC_CPP = \
#  qt/moc_addressbookpage.cpp \
#  qt/moc_addresstablemodel.cpp \
#  qt/moc_askpassphrasedialog.cpp \
#  qt/moc_createwalletdialog.cpp \
#  qt/moc_bantablemodel.cpp \
#  qt/moc_bitcoin.cpp \
#  qt/moc_bitcoinaddressvalidator.cpp \
#  qt/moc_bitcoinamountfield.cpp \
#  qt/moc_bitcoingui.cpp \
#  qt/moc_bitcoinunits.cpp \
#  qt/moc_clientmodel.cpp \
#  qt/moc_coincontroldialog.cpp \
#  qt/moc_coincontroltreewidget.cpp \
#  qt/moc_csvmodelwriter.cpp \
#  qt/moc_editaddressdialog.cpp \
#  qt/moc_guiutil.cpp \
#  qt/moc_initexecutor.cpp \
#  qt/moc_intro.cpp \
#  qt/moc_macdockiconhandler.cpp \
#  qt/moc_macnotificationhandler.cpp \
#  qt/moc_modaloverlay.cpp \
#  qt/moc_notificator.cpp \
#  qt/moc_openuridialog.cpp \
#  qt/moc_optionsdialog.cpp \
#  qt/moc_optionsmodel.cpp \
#  qt/moc_overviewpage.cpp \
#  qt/moc_peertablemodel.cpp \
#  qt/moc_peertablesortproxy.cpp \
#  qt/moc_paymentserver.cpp \
#  qt/moc_psbtoperationsdialog.cpp \
#  qt/moc_qrimagewidget.cpp \
#  qt/moc_qvalidatedlineedit.cpp \
#  qt/moc_qvaluecombobox.cpp \
#  qt/moc_receivecoinsdialog.cpp \
#  qt/moc_receiverequestdialog.cpp \
#  qt/moc_recentrequeststablemodel.cpp \
#  qt/moc_rpcconsole.cpp \
#  qt/moc_sendcoinsdialog.cpp \
#  qt/moc_sendcoinsentry.cpp \
#  qt/moc_signverifymessagedialog.cpp \
#  qt/moc_splashscreen.cpp \
#  qt/moc_trafficgraphwidget.cpp \
#  qt/moc_transactiondesc.cpp \
#  qt/moc_transactiondescdialog.cpp \
#  qt/moc_transactionfilterproxy.cpp \
#  qt/moc_transactionoverviewwidget.cpp \
#  qt/moc_transactiontablemodel.cpp \
#  qt/moc_transactionview.cpp \
#  qt/moc_utilitydialog.cpp \
#  qt/moc_walletcontroller.cpp \
#  qt/moc_walletframe.cpp \
#  qt/moc_walletmodel.cpp \
#  qt/moc_walletview.cpp

#BITCOIN_MM = \
#  qt/macdockiconhandler.mm \
#  qt/macnotificationhandler.mm \
#  qt/macos_appnap.mm

#QT_MOC = \
#  qt/bitcoinamountfield.moc \
#  qt/intro.moc \
#  qt/overviewpage.moc \
#  qt/rpcconsole.moc

#QT_QRC_CPP = qt/qrc_bitcoin.cpp
#QT_QRC = qt/bitcoin.qrc
#QT_QRC_LOCALE_CPP = qt/qrc_bitcoin_locale.cpp
#QT_QRC_LOCALE = qt/bitcoin_locale.qrc
#BITCOIN_QT_H = \
#  qt/addressbookpage.h \
#  qt/addresstablemodel.h \
#  qt/askpassphrasedialog.h \
#  qt/bantablemodel.h \
#  qt/bitcoin.h \
#  qt/bitcoinaddressvalidator.h \
#  qt/bitcoinamountfield.h \
#  qt/bitcoingui.h \
#  qt/bitcoinunits.h \
#  qt/clientmodel.h \
#  qt/coincontroldialog.h \
#  qt/coincontroltreewidget.h \
#  qt/createwalletdialog.h \
#  qt/csvmodelwriter.h \
#  qt/editaddressdialog.h \
#  qt/guiconstants.h \
#  qt/guiutil.h \
#  qt/initexecutor.h \
#  qt/intro.h \
#  qt/macdockiconhandler.h \
#  qt/macnotificationhandler.h \
#  qt/macos_appnap.h \
#  qt/modaloverlay.h \
#  qt/networkstyle.h \
#  qt/notificator.h \
#  qt/openuridialog.h \
#  qt/optionsdialog.h \
#  qt/optionsmodel.h \
#  qt/overviewpage.h \
#  qt/paymentserver.h \
#  qt/peertablemodel.h \
#  qt/peertablesortproxy.h \
#  qt/platformstyle.h \
#  qt/psbtoperationsdialog.h \
#  qt/qrimagewidget.h \
#  qt/qvalidatedlineedit.h \
#  qt/qvaluecombobox.h \
#  qt/receivecoinsdialog.h \
#  qt/receiverequestdialog.h \
#  qt/recentrequeststablemodel.h \
#  qt/rpcconsole.h \
#  qt/sendcoinsdialog.h \
#  qt/sendcoinsentry.h \
#  qt/sendcoinsrecipient.h \
#  qt/signverifymessagedialog.h \
#  qt/splashscreen.h \
#  qt/trafficgraphwidget.h \
#  qt/transactiondesc.h \
#  qt/transactiondescdialog.h \
#  qt/transactionfilterproxy.h \
#  qt/transactionoverviewwidget.h \
#  qt/transactionrecord.h \
#  qt/transactiontablemodel.h \
#  qt/transactionview.h \
#  qt/utilitydialog.h \
#  qt/walletcontroller.h \
#  qt/walletframe.h \
#  qt/walletmodel.h \
#  qt/walletmodeltransaction.h \
#  qt/walletview.h \
#  qt/winshutdownmonitor.h

#QT_RES_FONTS = \
#  qt/res/fonts/RobotoMono-Bold.ttf

#QT_RES_ICONS = \
#  qt/res/icons/add.png \
#  qt/res/icons/address-book.png \
#  qt/res/icons/bitcoin.ico \
#  qt/res/icons/bitcoin_testnet.ico \
#  qt/res/icons/bitcoin.png \
#  qt/res/icons/chevron.png \
#  qt/res/icons/clock1.png \
#  qt/res/icons/clock2.png \
#  qt/res/icons/clock3.png \
#  qt/res/icons/clock4.png \
#  qt/res/icons/clock5.png \
#  qt/res/icons/connect0.png \
#  qt/res/icons/connect1.png \
#  qt/res/icons/connect2.png \
#  qt/res/icons/connect3.png \
#  qt/res/icons/connect4.png \
#  qt/res/icons/edit.png \
#  qt/res/icons/editcopy.png \
#  qt/res/icons/editpaste.png \
#  qt/res/icons/export.png \
#  qt/res/icons/eye.png \
#  qt/res/icons/eye_minus.png \
#  qt/res/icons/eye_plus.png \
#  qt/res/icons/fontbigger.png \
#  qt/res/icons/fontsmaller.png \
#  qt/res/icons/hd_disabled.png \
#  qt/res/icons/hd_enabled.png \
#  qt/res/icons/history.png \
#  qt/res/icons/lock_closed.png \
#  qt/res/icons/lock_open.png \
#  qt/res/icons/network_disabled.png \
#  qt/res/icons/overview.png \
#  qt/res/icons/proxy.png \
#  qt/res/icons/receive.png \
#  qt/res/icons/remove.png \
#  qt/res/icons/send.png \
#  qt/res/icons/synced.png \
#  qt/res/icons/transaction0.png \
#  qt/res/icons/transaction2.png \
#  qt/res/icons/transaction_abandoned.png \
#  qt/res/icons/transaction_conflicted.png \
#  qt/res/icons/tx_inout.png \
#  qt/res/icons/tx_input.png \
#  qt/res/icons/tx_output.png \
#  qt/res/icons/tx_mined.png \
#  qt/res/icons/warning.png

#BITCOIN_QT_BASE_CPP = \
#  qt/bantablemodel.cpp \
#  qt/bitcoin.cpp \
#  qt/bitcoinaddressvalidator.cpp \
#  qt/bitcoinamountfield.cpp \
#  qt/bitcoingui.cpp \
#  qt/bitcoinunits.cpp \
#  qt/clientmodel.cpp \
#  qt/csvmodelwriter.cpp \
#  qt/guiutil.cpp \
#  qt/initexecutor.cpp \
#  qt/intro.cpp \
#  qt/modaloverlay.cpp \
#  qt/networkstyle.cpp \
#  qt/notificator.cpp \
#  qt/optionsdialog.cpp \
#  qt/optionsmodel.cpp \
#  qt/peertablemodel.cpp \
#  qt/peertablesortproxy.cpp \
#  qt/platformstyle.cpp \
#  qt/qvalidatedlineedit.cpp \
#  qt/qvaluecombobox.cpp \
#  qt/rpcconsole.cpp \
#  qt/splashscreen.cpp \
#  qt/trafficgraphwidget.cpp \
#  qt/utilitydialog.cpp

#BITCOIN_QT_WINDOWS_CPP = qt/winshutdownmonitor.cpp
#BITCOIN_QT_WALLET_CPP = \
#  qt/addressbookpage.cpp \
#  qt/addresstablemodel.cpp \
#  qt/askpassphrasedialog.cpp \
#  qt/coincontroldialog.cpp \
#  qt/coincontroltreewidget.cpp \
#  qt/createwalletdialog.cpp \
#  qt/editaddressdialog.cpp \
#  qt/openuridialog.cpp \
#  qt/overviewpage.cpp \
#  qt/paymentserver.cpp \
#  qt/psbtoperationsdialog.cpp \
#  qt/qrimagewidget.cpp \
#  qt/receivecoinsdialog.cpp \
#  qt/receiverequestdialog.cpp \
#  qt/recentrequeststablemodel.cpp \
#  qt/sendcoinsdialog.cpp \
#  qt/sendcoinsentry.cpp \
#  qt/signverifymessagedialog.cpp \
#  qt/transactiondesc.cpp \
#  qt/transactiondescdialog.cpp \
#  qt/transactionfilterproxy.cpp \
#  qt/transactionrecord.cpp \
#  qt/transactiontablemodel.cpp \
#  qt/transactionview.cpp \
#  qt/walletcontroller.cpp \
#  qt/walletframe.cpp \
#  qt/walletmodel.cpp \
#  qt/walletmodeltransaction.cpp \
#  qt/walletview.cpp

#BITCOIN_QT_CPP = $(BITCOIN_QT_BASE_CPP) \
#	$(am__append_72) $(am__append_73)
#QT_RES_ANIMATION = $(wildcard $(srcdir)/qt/res/animation/spinner-*.png)
#BITCOIN_QT_RC = qt/res/bitcoin-qt-res.rc
#BITCOIN_QT_INCLUDES = -DQT_NO_KEYWORDS -DQT_USE_QSTRINGBUILDER
#qt_libbitcoinqt_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \
#  $(QT_INCLUDES) $(QT_DBUS_INCLUDES) $(QR_CFLAGS)

#qt_libbitcoinqt_a_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)
#qt_libbitcoinqt_a_OBJCXXFLAGS = $(AM_OBJCXXFLAGS) $(QT_PIE_FLAGS)
#qt_libbitcoinqt_a_SOURCES = $(BITCOIN_QT_CPP) \
#	$(BITCOIN_QT_H) $(QT_FORMS_UI) $(QT_QRC) \
#	$(QT_QRC_LOCALE) $(QT_TS) $(QT_RES_FONTS) \
#	$(QT_RES_ICONS) $(QT_RES_ANIMATION) \
#	$(am__append_74)
#nodist_qt_libbitcoinqt_a_SOURCES = $(QT_MOC_CPP) $(QT_MOC) $(QT_QRC_CPP) $(QT_QRC_LOCALE_CPP)

# forms/foo.h -> forms/ui_foo.h
#QT_FORMS_H = $(join $(dir $(QT_FORMS_UI)),$(addprefix ui_, $(notdir $(QT_FORMS_UI:.ui=.h))))

# bitcoin-qt and bitcoin-gui binaries #
#bitcoin_qt_cppflags = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \
#  $(QT_INCLUDES) $(QR_CFLAGS)

#bitcoin_qt_cxxflags = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)
#bitcoin_qt_sources = qt/main.cpp $(am__append_75)
#bitcoin_qt_ldadd = qt/libbitcoinqt.a \
#	$(LIBBITCOIN_NODE) $(am__append_76) \
#	$(am__append_77) $(LIBBITCOIN_CLI) \
#	$(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) \
#	$(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) \
#	$(LIBUNIVALUE) $(LIBLEVELDB) $(LIBMEMENV) \
#	$(QT_LIBS) $(QT_DBUS_LIBS) $(QR_LIBS) \
#	$(BDB_LIBS) $(MINIUPNPC_LIBS) $(NATPMP_LIBS) \
#	$(LIBSECP256K1) $(EVENT_PTHREADS_LIBS) \
#	$(EVENT_LIBS) $(SQLITE_LIBS)
#bitcoin_qt_ldflags = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) $(PTHREAD_FLAGS)
#bitcoin_qt_libtoolflags = $(AM_LIBTOOLFLAGS) --tag CXX
#qt_bitcoin_qt_CPPFLAGS = $(bitcoin_qt_cppflags)
#qt_bitcoin_qt_CXXFLAGS = $(bitcoin_qt_cxxflags)
#qt_bitcoin_qt_SOURCES = $(bitcoin_qt_sources) init/bitcoin-qt.cpp
#qt_bitcoin_qt_LDADD = $(bitcoin_qt_ldadd)
#qt_bitcoin_qt_LDFLAGS = $(bitcoin_qt_ldflags)
#qt_bitcoin_qt_LIBTOOLFLAGS = $(bitcoin_qt_libtoolflags)
#bitcoin_gui_CPPFLAGS = $(bitcoin_qt_cppflags)
#bitcoin_gui_CXXFLAGS = $(bitcoin_qt_cxxflags)
#bitcoin_gui_SOURCES = $(bitcoin_qt_sources) init/bitcoin-gui.cpp
#bitcoin_gui_LDADD = $(bitcoin_qt_ldadd) $(LIBBITCOIN_IPC) $(LIBBITCOIN_UTIL) $(LIBMULTIPROCESS_LIBS)
#bitcoin_gui_LDFLAGS = $(bitcoin_qt_ldflags)
#bitcoin_gui_LIBTOOLFLAGS = $(bitcoin_qt_libtoolflags)

#locale/foo.ts -> locale/foo.qm
#QT_QM = $(QT_TS:.ts=.qm)
#CLEAN_QT = $(nodist_qt_libbitcoinqt_a_SOURCES) $(QT_QM) $(QT_FORMS_H) qt/*.gcda qt/*.gcno qt/temp_bitcoin_locale.qrc
#APK_LIB_DIR = qt/android/libs/$(ANDROID_ARCH)
#QT_BASE_VERSION = $(lastword $(shell $(MOC) --version))
#QT_BASE_PATH = $(shell find ../depends/sources/ -maxdepth 1 -type f -regex ".*qtbase.*$(QT_BASE_VERSION)\.tar.xz")
#QT_BASE_TLD = $(shell tar tf $(QT_BASE_PATH) --exclude='*/*')
#TEST_QT_MOC_CPP = qt/test/moc_apptests.cpp \
#	qt/test/moc_optiontests.cpp \
#	qt/test/moc_rpcnestedtests.cpp \
#	qt/test/moc_uritests.cpp \
#	$(am__append_81)
#TEST_QT_H = \
#  qt/test/addressbooktests.h \
#  qt/test/apptests.h \
#  qt/test/optiontests.h \
#  qt/test/rpcnestedtests.h \
#  qt/test/uritests.h \
#  qt/test/util.h \
#  qt/test/wallettests.h

#qt_test_test_bitcoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \
#  $(QT_INCLUDES) $(QT_TEST_INCLUDES)

#qt_test_test_bitcoin_qt_SOURCES =  \
#	init/bitcoin-qt.cpp qt/test/apptests.cpp \
#	qt/test/optiontests.cpp \
#	qt/test/rpcnestedtests.cpp \
#	qt/test/test_main.cpp \
#	qt/test/uritests.cpp qt/test/util.cpp \
#	$(TEST_QT_H) $(am__append_82)
#nodist_qt_test_test_bitcoin_qt_SOURCES = $(TEST_QT_MOC_CPP)
#qt_test_test_bitcoin_qt_LDADD = $(LIBBITCOINQT) \
#	$(LIBBITCOIN_NODE) $(LIBTEST_UTIL) \
#	$(am__append_83) $(am__append_84) \
#	$(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) \
#	$(LIBBITCOIN_UTIL) \
#	$(LIBBITCOIN_CONSENSUS) \
#	$(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) \
#	$(LIBLEVELDB) $(LIBMEMENV) $(QT_LIBS) \
#	$(QT_DBUS_LIBS) $(QT_TEST_LIBS) \
#	$(QR_LIBS) $(BDB_LIBS) $(MINIUPNPC_LIBS) \
#	$(NATPMP_LIBS) $(LIBSECP256K1) \
#	$(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) \
#	$(SQLITE_LIBS)
#qt_test_test_bitcoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) $(PTHREAD_FLAGS)
#qt_test_test_bitcoin_qt_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)
#CLEAN_BITCOIN_QT_TEST = $(TEST_QT_MOC_CPP) qt/test/*.gcda qt/test/*.gcno
UNIVALUE_INCLUDE_DIR_INT = univalue/include
UNIVALUE_DIST_HEADERS_INT = univalue/include/univalue.h
UNIVALUE_LIB_HEADERS_INT = univalue/lib/univalue_utffilter.h \
	univalue/lib/univalue_escapes.h
UNIVALUE_LIB_SOURCES_INT = univalue/lib/univalue.cpp \
	univalue/lib/univalue_get.cpp univalue/lib/univalue_read.cpp \
	univalue/lib/univalue_write.cpp
UNIVALUE_TEST_DATA_DIR_INT = univalue/test
UNIVALUE_TEST_UNITESTER_INT = univalue/test/unitester.cpp
UNIVALUE_TEST_JSON_INT = univalue/test/test_json.cpp
UNIVALUE_TEST_NO_NUL_INT = univalue/test/no_nul.cpp
UNIVALUE_TEST_OBJECT_INT = univalue/test/object.cpp
UNIVALUE_TEST_FILES_INT = univalue/test/fail1.json \
	univalue/test/fail2.json univalue/test/fail3.json \
	univalue/test/fail4.json univalue/test/fail5.json \
	univalue/test/fail6.json univalue/test/fail7.json \
	univalue/test/fail8.json univalue/test/fail9.json \
	univalue/test/fail10.json univalue/test/fail11.json \
	univalue/test/fail12.json univalue/test/fail13.json \
	univalue/test/fail14.json univalue/test/fail15.json \
	univalue/test/fail16.json univalue/test/fail17.json \
	univalue/test/fail18.json univalue/test/fail19.json \
	univalue/test/fail20.json univalue/test/fail21.json \
	univalue/test/fail22.json univalue/test/fail23.json \
	univalue/test/fail24.json univalue/test/fail25.json \
	univalue/test/fail26.json univalue/test/fail27.json \
	univalue/test/fail28.json univalue/test/fail29.json \
	univalue/test/fail30.json univalue/test/fail31.json \
	univalue/test/fail32.json univalue/test/fail33.json \
	univalue/test/fail34.json univalue/test/fail35.json \
	univalue/test/fail36.json univalue/test/fail37.json \
	univalue/test/fail38.json univalue/test/fail39.json \
	univalue/test/fail40.json univalue/test/fail41.json \
	univalue/test/fail42.json univalue/test/fail44.json \
	univalue/test/fail45.json univalue/test/pass1.json \
	univalue/test/pass2.json univalue/test/pass3.json \
	univalue/test/pass4.json univalue/test/round1.json \
	univalue/test/round2.json univalue/test/round3.json \
	univalue/test/round4.json univalue/test/round5.json \
	univalue/test/round6.json univalue/test/round7.json
LIBUNIVALUE = libunivalue.la
libunivalue_la_SOURCES = $(UNIVALUE_LIB_SOURCES_INT) $(UNIVALUE_DIST_HEADERS_INT) $(UNIVALUE_LIB_HEADERS_INT) $(UNIVALUE_TEST_FILES_INT)
libunivalue_la_CPPFLAGS = $(AM_CPPFLAGS) -I$(srcdir)/$(UNIVALUE_INCLUDE_DIR_INT)
all: all-recursive

.SUFFIXES:
.SUFFIXES: .c++ .cc .cpp .lo .log .mm .o .obj .rc .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/Makefile.minisketch.include $(srcdir)/minisketch/sources.mk $(srcdir)/Makefile.crc32c.include $(srcdir)/Makefile.leveldb.include $(srcdir)/Makefile.test_util.include $(srcdir)/Makefile.test_fuzz.include $(srcdir)/Makefile.test.include $(srcdir)/Makefile.bench.include $(srcdir)/Makefile.qt.include $(srcdir)/Makefile.qt_locale.include $(srcdir)/Makefile.qttest.include $(srcdir)/Makefile.univalue.include $(srcdir)/univalue/sources.mk $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(srcdir)/Makefile.minisketch.include $(srcdir)/minisketch/sources.mk $(srcdir)/Makefile.crc32c.include $(srcdir)/Makefile.leveldb.include $(srcdir)/Makefile.test_util.include $(srcdir)/Makefile.test_fuzz.include $(srcdir)/Makefile.test.include $(srcdir)/Makefile.bench.include $(srcdir)/Makefile.qt.include $(srcdir)/Makefile.qt_locale.include $(srcdir)/Makefile.qttest.include $(srcdir)/Makefile.univalue.include $(srcdir)/univalue/sources.mk $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
compat/$(am__dirstamp):
	@$(MKDIR_P) compat
	@: > compat/$(am__dirstamp)
compat/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) compat/$(DEPDIR)
	@: > compat/$(DEPDIR)/$(am__dirstamp)
compat/libbitcoin_cli_a-stdin.$(OBJEXT): compat/$(am__dirstamp) \
	compat/$(DEPDIR)/$(am__dirstamp)
rpc/$(am__dirstamp):
	@$(MKDIR_P) rpc
	@: > rpc/$(am__dirstamp)
rpc/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) rpc/$(DEPDIR)
	@: > rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libbitcoin_cli_a-client.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)

libbitcoin_cli.a: $(libbitcoin_cli_a_OBJECTS) $(libbitcoin_cli_a_DEPENDENCIES) $(EXTRA_libbitcoin_cli_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libbitcoin_cli.a
	$(AM_V_AR)$(libbitcoin_cli_a_AR) libbitcoin_cli.a $(libbitcoin_cli_a_OBJECTS) $(libbitcoin_cli_a_LIBADD)
	$(AM_V_at)$(RANLIB) libbitcoin_cli.a
common/$(am__dirstamp):
	@$(MKDIR_P) common
	@: > common/$(am__dirstamp)
common/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) common/$(DEPDIR)
	@: > common/$(DEPDIR)/$(am__dirstamp)
common/libbitcoin_common_a-bloom.$(OBJEXT): common/$(am__dirstamp) \
	common/$(DEPDIR)/$(am__dirstamp)
init/$(am__dirstamp):
	@$(MKDIR_P) init
	@: > init/$(am__dirstamp)
init/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) init/$(DEPDIR)
	@: > init/$(DEPDIR)/$(am__dirstamp)
init/libbitcoin_common_a-common.$(OBJEXT): init/$(am__dirstamp) \
	init/$(DEPDIR)/$(am__dirstamp)
policy/$(am__dirstamp):
	@$(MKDIR_P) policy
	@: > policy/$(am__dirstamp)
policy/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) policy/$(DEPDIR)
	@: > policy/$(DEPDIR)/$(am__dirstamp)
policy/libbitcoin_common_a-feerate.$(OBJEXT): policy/$(am__dirstamp) \
	policy/$(DEPDIR)/$(am__dirstamp)
policy/libbitcoin_common_a-policy.$(OBJEXT): policy/$(am__dirstamp) \
	policy/$(DEPDIR)/$(am__dirstamp)
rpc/libbitcoin_common_a-rawtransaction_util.$(OBJEXT):  \
	rpc/$(am__dirstamp) rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libbitcoin_common_a-external_signer.$(OBJEXT):  \
	rpc/$(am__dirstamp) rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libbitcoin_common_a-util.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
script/$(am__dirstamp):
	@$(MKDIR_P) script
	@: > script/$(am__dirstamp)
script/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) script/$(DEPDIR)
	@: > script/$(DEPDIR)/$(am__dirstamp)
script/libbitcoin_common_a-descriptor.$(OBJEXT):  \
	script/$(am__dirstamp) script/$(DEPDIR)/$(am__dirstamp)
script/libbitcoin_common_a-miniscript.$(OBJEXT):  \
	script/$(am__dirstamp) script/$(DEPDIR)/$(am__dirstamp)
script/libbitcoin_common_a-sign.$(OBJEXT): script/$(am__dirstamp) \
	script/$(DEPDIR)/$(am__dirstamp)
script/libbitcoin_common_a-signingprovider.$(OBJEXT):  \
	script/$(am__dirstamp) script/$(DEPDIR)/$(am__dirstamp)
script/libbitcoin_common_a-standard.$(OBJEXT): script/$(am__dirstamp) \
	script/$(DEPDIR)/$(am__dirstamp)

libbitcoin_common.a: $(libbitcoin_common_a_OBJECTS) $(libbitcoin_common_a_DEPENDENCIES) $(EXTRA_libbitcoin_common_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libbitcoin_common.a
	$(AM_V_AR)$(libbitcoin_common_a_AR) libbitcoin_common.a $(libbitcoin_common_a_OBJECTS) $(libbitcoin_common_a_LIBADD)
	$(AM_V_at)$(RANLIB) libbitcoin_common.a
consensus/$(am__dirstamp):
	@$(MKDIR_P) consensus
	@: > consensus/$(am__dirstamp)
consensus/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) consensus/$(DEPDIR)
	@: > consensus/$(DEPDIR)/$(am__dirstamp)
consensus/libbitcoin_consensus_a-merkle.$(OBJEXT):  \
	consensus/$(am__dirstamp) consensus/$(DEPDIR)/$(am__dirstamp)
consensus/libbitcoin_consensus_a-tx_check.$(OBJEXT):  \
	consensus/$(am__dirstamp) consensus/$(DEPDIR)/$(am__dirstamp)
primitives/$(am__dirstamp):
	@$(MKDIR_P) primitives
	@: > primitives/$(am__dirstamp)
primitives/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) primitives/$(DEPDIR)
	@: > primitives/$(DEPDIR)/$(am__dirstamp)
primitives/libbitcoin_consensus_a-block.$(OBJEXT):  \
	primitives/$(am__dirstamp) \
	primitives/$(DEPDIR)/$(am__dirstamp)
primitives/libbitcoin_consensus_a-transaction.$(OBJEXT):  \
	primitives/$(am__dirstamp) \
	primitives/$(DEPDIR)/$(am__dirstamp)
script/libbitcoin_consensus_a-bitcoinconsensus.$(OBJEXT):  \
	script/$(am__dirstamp) script/$(DEPDIR)/$(am__dirstamp)
script/libbitcoin_consensus_a-interpreter.$(OBJEXT):  \
	script/$(am__dirstamp) script/$(DEPDIR)/$(am__dirstamp)
script/libbitcoin_consensus_a-script.$(OBJEXT):  \
	script/$(am__dirstamp) script/$(DEPDIR)/$(am__dirstamp)
script/libbitcoin_consensus_a-script_error.$(OBJEXT):  \
	script/$(am__dirstamp) script/$(DEPDIR)/$(am__dirstamp)
util/$(am__dirstamp):
	@$(MKDIR_P) util
	@: > util/$(am__dirstamp)
util/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) util/$(DEPDIR)
	@: > util/$(DEPDIR)/$(am__dirstamp)
util/libbitcoin_consensus_a-strencodings.$(OBJEXT):  \
	util/$(am__dirstamp) util/$(DEPDIR)/$(am__dirstamp)

libbitcoin_consensus.a: $(libbitcoin_consensus_a_OBJECTS) $(libbitcoin_consensus_a_DEPENDENCIES) $(EXTRA_libbitcoin_consensus_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libbitcoin_consensus.a
	$(AM_V_AR)$(libbitcoin_consensus_a_AR) libbitcoin_consensus.a $(libbitcoin_consensus_a_OBJECTS) $(libbitcoin_consensus_a_LIBADD)
	$(AM_V_at)$(RANLIB) libbitcoin_consensus.a
ipc/capnp/$(am__dirstamp):
	@$(MKDIR_P) ipc/capnp
	@: > ipc/capnp/$(am__dirstamp)
ipc/capnp/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ipc/capnp/$(DEPDIR)
	@: > ipc/capnp/$(DEPDIR)/$(am__dirstamp)
ipc/capnp/libbitcoin_ipc_a-protocol.$(OBJEXT):  \
	ipc/capnp/$(am__dirstamp) ipc/capnp/$(DEPDIR)/$(am__dirstamp)
ipc/$(am__dirstamp):
	@$(MKDIR_P) ipc
	@: > ipc/$(am__dirstamp)
ipc/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ipc/$(DEPDIR)
	@: > ipc/$(DEPDIR)/$(am__dirstamp)
ipc/libbitcoin_ipc_a-interfaces.$(OBJEXT): ipc/$(am__dirstamp) \
	ipc/$(DEPDIR)/$(am__dirstamp)
ipc/libbitcoin_ipc_a-process.$(OBJEXT): ipc/$(am__dirstamp) \
	ipc/$(DEPDIR)/$(am__dirstamp)
ipc/capnp/libbitcoin_ipc_a-echo.capnp.$(OBJEXT):  \
	ipc/capnp/$(am__dirstamp) ipc/capnp/$(DEPDIR)/$(am__dirstamp)
ipc/capnp/libbitcoin_ipc_a-init.capnp.$(OBJEXT):  \
	ipc/capnp/$(am__dirstamp) ipc/capnp/$(DEPDIR)/$(am__dirstamp)
ipc/capnp/libbitcoin_ipc_a-echo.capnp.proxy-client.$(OBJEXT):  \
	ipc/capnp/$(am__dirstamp) ipc/capnp/$(DEPDIR)/$(am__dirstamp)
ipc/capnp/libbitcoin_ipc_a-init.capnp.proxy-client.$(OBJEXT):  \
	ipc/capnp/$(am__dirstamp) ipc/capnp/$(DEPDIR)/$(am__dirstamp)
ipc/capnp/libbitcoin_ipc_a-echo.capnp.proxy-server.$(OBJEXT):  \
	ipc/capnp/$(am__dirstamp) ipc/capnp/$(DEPDIR)/$(am__dirstamp)
ipc/capnp/libbitcoin_ipc_a-init.capnp.proxy-server.$(OBJEXT):  \
	ipc/capnp/$(am__dirstamp) ipc/capnp/$(DEPDIR)/$(am__dirstamp)
ipc/capnp/libbitcoin_ipc_a-echo.capnp.proxy-types.$(OBJEXT):  \
	ipc/capnp/$(am__dirstamp) ipc/capnp/$(DEPDIR)/$(am__dirstamp)
ipc/capnp/libbitcoin_ipc_a-init.capnp.proxy-types.$(OBJEXT):  \
	ipc/capnp/$(am__dirstamp) ipc/capnp/$(DEPDIR)/$(am__dirstamp)

libbitcoin_ipc.a: $(libbitcoin_ipc_a_OBJECTS) $(libbitcoin_ipc_a_DEPENDENCIES) $(EXTRA_libbitcoin_ipc_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libbitcoin_ipc.a
	$(AM_V_AR)$(libbitcoin_ipc_a_AR) libbitcoin_ipc.a $(libbitcoin_ipc_a_OBJECTS) $(libbitcoin_ipc_a_LIBADD)
	$(AM_V_at)$(RANLIB) libbitcoin_ipc.a
consensus/libbitcoin_node_a-tx_verify.$(OBJEXT):  \
	consensus/$(am__dirstamp) consensus/$(DEPDIR)/$(am__dirstamp)
index/$(am__dirstamp):
	@$(MKDIR_P) index
	@: > index/$(am__dirstamp)
index/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) index/$(DEPDIR)
	@: > index/$(DEPDIR)/$(am__dirstamp)
index/libbitcoin_node_a-base.$(OBJEXT): index/$(am__dirstamp) \
	index/$(DEPDIR)/$(am__dirstamp)
index/libbitcoin_node_a-blockfilterindex.$(OBJEXT):  \
	index/$(am__dirstamp) index/$(DEPDIR)/$(am__dirstamp)
index/libbitcoin_node_a-coinstatsindex.$(OBJEXT):  \
	index/$(am__dirstamp) index/$(DEPDIR)/$(am__dirstamp)
index/libbitcoin_node_a-txindex.$(OBJEXT): index/$(am__dirstamp) \
	index/$(DEPDIR)/$(am__dirstamp)
kernel/$(am__dirstamp):
	@$(MKDIR_P) kernel
	@: > kernel/$(am__dirstamp)
kernel/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) kernel/$(DEPDIR)
	@: > kernel/$(DEPDIR)/$(am__dirstamp)
kernel/libbitcoin_node_a-checks.$(OBJEXT): kernel/$(am__dirstamp) \
	kernel/$(DEPDIR)/$(am__dirstamp)
kernel/libbitcoin_node_a-coinstats.$(OBJEXT): kernel/$(am__dirstamp) \
	kernel/$(DEPDIR)/$(am__dirstamp)
kernel/libbitcoin_node_a-context.$(OBJEXT): kernel/$(am__dirstamp) \
	kernel/$(DEPDIR)/$(am__dirstamp)
node/$(am__dirstamp):
	@$(MKDIR_P) node
	@: > node/$(am__dirstamp)
node/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) node/$(DEPDIR)
	@: > node/$(DEPDIR)/$(am__dirstamp)
node/libbitcoin_node_a-blockstorage.$(OBJEXT): node/$(am__dirstamp) \
	node/$(DEPDIR)/$(am__dirstamp)
node/libbitcoin_node_a-caches.$(OBJEXT): node/$(am__dirstamp) \
	node/$(DEPDIR)/$(am__dirstamp)
node/libbitcoin_node_a-chainstate.$(OBJEXT): node/$(am__dirstamp) \
	node/$(DEPDIR)/$(am__dirstamp)
node/libbitcoin_node_a-coin.$(OBJEXT): node/$(am__dirstamp) \
	node/$(DEPDIR)/$(am__dirstamp)
node/libbitcoin_node_a-context.$(OBJEXT): node/$(am__dirstamp) \
	node/$(DEPDIR)/$(am__dirstamp)
node/libbitcoin_node_a-interfaces.$(OBJEXT): node/$(am__dirstamp) \
	node/$(DEPDIR)/$(am__dirstamp)
node/libbitcoin_node_a-miner.$(OBJEXT): node/$(am__dirstamp) \
	node/$(DEPDIR)/$(am__dirstamp)
node/libbitcoin_node_a-minisketchwrapper.$(OBJEXT):  \
	node/$(am__dirstamp) node/$(DEPDIR)/$(am__dirstamp)
node/libbitcoin_node_a-psbt.$(OBJEXT): node/$(am__dirstamp) \
	node/$(DEPDIR)/$(am__dirstamp)
node/libbitcoin_node_a-transaction.$(OBJEXT): node/$(am__dirstamp) \
	node/$(DEPDIR)/$(am__dirstamp)
node/libbitcoin_node_a-ui_interface.$(OBJEXT): node/$(am__dirstamp) \
	node/$(DEPDIR)/$(am__dirstamp)
policy/libbitcoin_node_a-fees.$(OBJEXT): policy/$(am__dirstamp) \
	policy/$(DEPDIR)/$(am__dirstamp)
policy/libbitcoin_node_a-packages.$(OBJEXT): policy/$(am__dirstamp) \
	policy/$(DEPDIR)/$(am__dirstamp)
policy/libbitcoin_node_a-rbf.$(OBJEXT): policy/$(am__dirstamp) \
	policy/$(DEPDIR)/$(am__dirstamp)
policy/libbitcoin_node_a-settings.$(OBJEXT): policy/$(am__dirstamp) \
	policy/$(DEPDIR)/$(am__dirstamp)
rpc/libbitcoin_node_a-blockchain.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libbitcoin_node_a-fees.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libbitcoin_node_a-mempool.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libbitcoin_node_a-mining.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libbitcoin_node_a-node.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libbitcoin_node_a-net.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libbitcoin_node_a-output_script.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libbitcoin_node_a-rawtransaction.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libbitcoin_node_a-server.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libbitcoin_node_a-server_util.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libbitcoin_node_a-signmessage.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libbitcoin_node_a-txoutproof.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
script/libbitcoin_node_a-sigcache.$(OBJEXT): script/$(am__dirstamp) \
	script/$(DEPDIR)/$(am__dirstamp)
wallet/$(am__dirstamp):
	@$(MKDIR_P) wallet
	@: > wallet/$(am__dirstamp)
wallet/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) wallet/$(DEPDIR)
	@: > wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libbitcoin_node_a-init.$(OBJEXT): wallet/$(am__dirstamp) \
	wallet/$(DEPDIR)/$(am__dirstamp)

libbitcoin_node.a: $(libbitcoin_node_a_OBJECTS) $(libbitcoin_node_a_DEPENDENCIES) $(EXTRA_libbitcoin_node_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libbitcoin_node.a
	$(AM_V_AR)$(libbitcoin_node_a_AR) libbitcoin_node.a $(libbitcoin_node_a_OBJECTS) $(libbitcoin_node_a_LIBADD)
	$(AM_V_at)$(RANLIB) libbitcoin_node.a
support/$(am__dirstamp):
	@$(MKDIR_P) support
	@: > support/$(am__dirstamp)
support/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) support/$(DEPDIR)
	@: > support/$(DEPDIR)/$(am__dirstamp)
support/libbitcoin_util_a-lockedpool.$(OBJEXT):  \
	support/$(am__dirstamp) support/$(DEPDIR)/$(am__dirstamp)
interfaces/$(am__dirstamp):
	@$(MKDIR_P) interfaces
	@: > interfaces/$(am__dirstamp)
interfaces/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) interfaces/$(DEPDIR)
	@: > interfaces/$(DEPDIR)/$(am__dirstamp)
interfaces/libbitcoin_util_a-echo.$(OBJEXT):  \
	interfaces/$(am__dirstamp) \
	interfaces/$(DEPDIR)/$(am__dirstamp)
interfaces/libbitcoin_util_a-handler.$(OBJEXT):  \
	interfaces/$(am__dirstamp) \
	interfaces/$(DEPDIR)/$(am__dirstamp)
interfaces/libbitcoin_util_a-init.$(OBJEXT):  \
	interfaces/$(am__dirstamp) \
	interfaces/$(DEPDIR)/$(am__dirstamp)
rpc/libbitcoin_util_a-request.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
support/libbitcoin_util_a-cleanse.$(OBJEXT): support/$(am__dirstamp) \
	support/$(DEPDIR)/$(am__dirstamp)
util/libbitcoin_util_a-asmap.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/libbitcoin_util_a-bip32.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/libbitcoin_util_a-bytevectorhash.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/libbitcoin_util_a-check.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/libbitcoin_util_a-error.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/libbitcoin_util_a-fees.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/libbitcoin_util_a-getuniquepath.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/libbitcoin_util_a-hasher.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/libbitcoin_util_a-sock.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/libbitcoin_util_a-syserror.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/libbitcoin_util_a-system.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/libbitcoin_util_a-message.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/libbitcoin_util_a-moneystr.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/libbitcoin_util_a-rbf.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/libbitcoin_util_a-readwritefile.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/libbitcoin_util_a-settings.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/libbitcoin_util_a-thread.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/libbitcoin_util_a-threadnames.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/libbitcoin_util_a-serfloat.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/libbitcoin_util_a-spanparsing.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/libbitcoin_util_a-strencodings.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/libbitcoin_util_a-string.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/libbitcoin_util_a-syscall_sandbox.$(OBJEXT):  \
	util/$(am__dirstamp) util/$(DEPDIR)/$(am__dirstamp)
util/libbitcoin_util_a-time.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/libbitcoin_util_a-tokenpipe.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/libbitcoin_util_a-url.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)

libbitcoin_util.a: $(libbitcoin_util_a_OBJECTS) $(libbitcoin_util_a_DEPENDENCIES) $(EXTRA_libbitcoin_util_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libbitcoin_util.a
	$(AM_V_AR)$(libbitcoin_util_a_AR) libbitcoin_util.a $(libbitcoin_util_a_OBJECTS) $(libbitcoin_util_a_LIBADD)
	$(AM_V_at)$(RANLIB) libbitcoin_util.a
wallet/libbitcoin_wallet_a-coincontrol.$(OBJEXT):  \
	wallet/$(am__dirstamp) wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libbitcoin_wallet_a-context.$(OBJEXT): wallet/$(am__dirstamp) \
	wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libbitcoin_wallet_a-crypter.$(OBJEXT): wallet/$(am__dirstamp) \
	wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libbitcoin_wallet_a-db.$(OBJEXT): wallet/$(am__dirstamp) \
	wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libbitcoin_wallet_a-dump.$(OBJEXT): wallet/$(am__dirstamp) \
	wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libbitcoin_wallet_a-external_signer_scriptpubkeyman.$(OBJEXT):  \
	wallet/$(am__dirstamp) wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libbitcoin_wallet_a-feebumper.$(OBJEXT):  \
	wallet/$(am__dirstamp) wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libbitcoin_wallet_a-fees.$(OBJEXT): wallet/$(am__dirstamp) \
	wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libbitcoin_wallet_a-interfaces.$(OBJEXT):  \
	wallet/$(am__dirstamp) wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libbitcoin_wallet_a-load.$(OBJEXT): wallet/$(am__dirstamp) \
	wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libbitcoin_wallet_a-receive.$(OBJEXT): wallet/$(am__dirstamp) \
	wallet/$(DEPDIR)/$(am__dirstamp)
wallet/rpc/$(am__dirstamp):
	@$(MKDIR_P) wallet/rpc
	@: > wallet/rpc/$(am__dirstamp)
wallet/rpc/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) wallet/rpc/$(DEPDIR)
	@: > wallet/rpc/$(DEPDIR)/$(am__dirstamp)
wallet/rpc/libbitcoin_wallet_a-addresses.$(OBJEXT):  \
	wallet/rpc/$(am__dirstamp) \
	wallet/rpc/$(DEPDIR)/$(am__dirstamp)
wallet/rpc/libbitcoin_wallet_a-backup.$(OBJEXT):  \
	wallet/rpc/$(am__dirstamp) \
	wallet/rpc/$(DEPDIR)/$(am__dirstamp)
wallet/rpc/libbitcoin_wallet_a-coins.$(OBJEXT):  \
	wallet/rpc/$(am__dirstamp) \
	wallet/rpc/$(DEPDIR)/$(am__dirstamp)
wallet/rpc/libbitcoin_wallet_a-encrypt.$(OBJEXT):  \
	wallet/rpc/$(am__dirstamp) \
	wallet/rpc/$(DEPDIR)/$(am__dirstamp)
wallet/rpc/libbitcoin_wallet_a-spend.$(OBJEXT):  \
	wallet/rpc/$(am__dirstamp) \
	wallet/rpc/$(DEPDIR)/$(am__dirstamp)
wallet/rpc/libbitcoin_wallet_a-signmessage.$(OBJEXT):  \
	wallet/rpc/$(am__dirstamp) \
	wallet/rpc/$(DEPDIR)/$(am__dirstamp)
wallet/rpc/libbitcoin_wallet_a-transactions.$(OBJEXT):  \
	wallet/rpc/$(am__dirstamp) \
	wallet/rpc/$(DEPDIR)/$(am__dirstamp)
wallet/rpc/libbitcoin_wallet_a-util.$(OBJEXT):  \
	wallet/rpc/$(am__dirstamp) \
	wallet/rpc/$(DEPDIR)/$(am__dirstamp)
wallet/rpc/libbitcoin_wallet_a-wallet.$(OBJEXT):  \
	wallet/rpc/$(am__dirstamp) \
	wallet/rpc/$(DEPDIR)/$(am__dirstamp)
wallet/libbitcoin_wallet_a-scriptpubkeyman.$(OBJEXT):  \
	wallet/$(am__dirstamp) wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libbitcoin_wallet_a-spend.$(OBJEXT): wallet/$(am__dirstamp) \
	wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libbitcoin_wallet_a-transaction.$(OBJEXT):  \
	wallet/$(am__dirstamp) wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libbitcoin_wallet_a-wallet.$(OBJEXT): wallet/$(am__dirstamp) \
	wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libbitcoin_wallet_a-walletdb.$(OBJEXT): wallet/$(am__dirstamp) \
	wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libbitcoin_wallet_a-walletutil.$(OBJEXT):  \
	wallet/$(am__dirstamp) wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libbitcoin_wallet_a-coinselection.$(OBJEXT):  \
	wallet/$(am__dirstamp) wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libbitcoin_wallet_a-sqlite.$(OBJEXT): wallet/$(am__dirstamp) \
	wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libbitcoin_wallet_a-bdb.$(OBJEXT): wallet/$(am__dirstamp) \
	wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libbitcoin_wallet_a-salvage.$(OBJEXT): wallet/$(am__dirstamp) \
	wallet/$(DEPDIR)/$(am__dirstamp)

libbitcoin_wallet.a: $(libbitcoin_wallet_a_OBJECTS) $(libbitcoin_wallet_a_DEPENDENCIES) $(EXTRA_libbitcoin_wallet_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libbitcoin_wallet.a
	$(AM_V_AR)$(libbitcoin_wallet_a_AR) libbitcoin_wallet.a $(libbitcoin_wallet_a_OBJECTS) $(libbitcoin_wallet_a_LIBADD)
	$(AM_V_at)$(RANLIB) libbitcoin_wallet.a
wallet/libbitcoin_wallet_tool_a-wallettool.$(OBJEXT):  \
	wallet/$(am__dirstamp) wallet/$(DEPDIR)/$(am__dirstamp)

libbitcoin_wallet_tool.a: $(libbitcoin_wallet_tool_a_OBJECTS) $(libbitcoin_wallet_tool_a_DEPENDENCIES) $(EXTRA_libbitcoin_wallet_tool_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libbitcoin_wallet_tool.a
	$(AM_V_AR)$(libbitcoin_wallet_tool_a_AR) libbitcoin_wallet_tool.a $(libbitcoin_wallet_tool_a_OBJECTS) $(libbitcoin_wallet_tool_a_LIBADD)
	$(AM_V_at)$(RANLIB) libbitcoin_wallet_tool.a
zmq/$(am__dirstamp):
	@$(MKDIR_P) zmq
	@: > zmq/$(am__dirstamp)
zmq/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) zmq/$(DEPDIR)
	@: > zmq/$(DEPDIR)/$(am__dirstamp)
zmq/libbitcoin_zmq_a-zmqabstractnotifier.$(OBJEXT):  \
	zmq/$(am__dirstamp) zmq/$(DEPDIR)/$(am__dirstamp)
zmq/libbitcoin_zmq_a-zmqnotificationinterface.$(OBJEXT):  \
	zmq/$(am__dirstamp) zmq/$(DEPDIR)/$(am__dirstamp)
zmq/libbitcoin_zmq_a-zmqpublishnotifier.$(OBJEXT):  \
	zmq/$(am__dirstamp) zmq/$(DEPDIR)/$(am__dirstamp)
zmq/libbitcoin_zmq_a-zmqrpc.$(OBJEXT): zmq/$(am__dirstamp) \
	zmq/$(DEPDIR)/$(am__dirstamp)
zmq/libbitcoin_zmq_a-zmqutil.$(OBJEXT): zmq/$(am__dirstamp) \
	zmq/$(DEPDIR)/$(am__dirstamp)

libbitcoin_zmq.a: $(libbitcoin_zmq_a_OBJECTS) $(libbitcoin_zmq_a_DEPENDENCIES) $(EXTRA_libbitcoin_zmq_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libbitcoin_zmq.a
	$(AM_V_AR)$(libbitcoin_zmq_a_AR) libbitcoin_zmq.a $(libbitcoin_zmq_a_OBJECTS) $(libbitcoin_zmq_a_LIBADD)
	$(AM_V_at)$(RANLIB) libbitcoin_zmq.a
test/fuzz/$(am__dirstamp):
	@$(MKDIR_P) test/fuzz
	@: > test/fuzz/$(am__dirstamp)
test/fuzz/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) test/fuzz/$(DEPDIR)
	@: > test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/libtest_fuzz_a-fuzz.$(OBJEXT): test/fuzz/$(am__dirstamp) \
	test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/libtest_fuzz_a-util.$(OBJEXT): test/fuzz/$(am__dirstamp) \
	test/fuzz/$(DEPDIR)/$(am__dirstamp)

libtest_fuzz.a: $(libtest_fuzz_a_OBJECTS) $(libtest_fuzz_a_DEPENDENCIES) $(EXTRA_libtest_fuzz_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libtest_fuzz.a
	$(AM_V_AR)$(libtest_fuzz_a_AR) libtest_fuzz.a $(libtest_fuzz_a_OBJECTS) $(libtest_fuzz_a_LIBADD)
	$(AM_V_at)$(RANLIB) libtest_fuzz.a
test/util/$(am__dirstamp):
	@$(MKDIR_P) test/util
	@: > test/util/$(am__dirstamp)
test/util/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) test/util/$(DEPDIR)
	@: > test/util/$(DEPDIR)/$(am__dirstamp)
test/util/libtest_util_a-blockfilter.$(OBJEXT):  \
	test/util/$(am__dirstamp) test/util/$(DEPDIR)/$(am__dirstamp)
test/util/libtest_util_a-logging.$(OBJEXT): test/util/$(am__dirstamp) \
	test/util/$(DEPDIR)/$(am__dirstamp)
test/util/libtest_util_a-mining.$(OBJEXT): test/util/$(am__dirstamp) \
	test/util/$(DEPDIR)/$(am__dirstamp)
test/util/libtest_util_a-net.$(OBJEXT): test/util/$(am__dirstamp) \
	test/util/$(DEPDIR)/$(am__dirstamp)
test/util/libtest_util_a-script.$(OBJEXT): test/util/$(am__dirstamp) \
	test/util/$(DEPDIR)/$(am__dirstamp)
test/util/libtest_util_a-setup_common.$(OBJEXT):  \
	test/util/$(am__dirstamp) test/util/$(DEPDIR)/$(am__dirstamp)
test/util/libtest_util_a-str.$(OBJEXT): test/util/$(am__dirstamp) \
	test/util/$(DEPDIR)/$(am__dirstamp)
test/util/libtest_util_a-transaction_utils.$(OBJEXT):  \
	test/util/$(am__dirstamp) test/util/$(DEPDIR)/$(am__dirstamp)
test/util/libtest_util_a-validation.$(OBJEXT):  \
	test/util/$(am__dirstamp) test/util/$(DEPDIR)/$(am__dirstamp)
test/util/libtest_util_a-wallet.$(OBJEXT): test/util/$(am__dirstamp) \
	test/util/$(DEPDIR)/$(am__dirstamp)

libtest_util.a: $(libtest_util_a_OBJECTS) $(libtest_util_a_DEPENDENCIES) $(EXTRA_libtest_util_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libtest_util.a
	$(AM_V_AR)$(libtest_util_a_AR) libtest_util.a $(libtest_util_a_OBJECTS) $(libtest_util_a_LIBADD)
	$(AM_V_at)$(RANLIB) libtest_util.a
minisketch/src/fields/$(am__dirstamp):
	@$(MKDIR_P) minisketch/src/fields
	@: > minisketch/src/fields/$(am__dirstamp)
minisketch/src/fields/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) minisketch/src/fields/$(DEPDIR)
	@: > minisketch/src/fields/$(DEPDIR)/$(am__dirstamp)
minisketch/src/fields/minisketch_libminisketch_a-generic_1byte.$(OBJEXT):  \
	minisketch/src/fields/$(am__dirstamp) \
	minisketch/src/fields/$(DEPDIR)/$(am__dirstamp)
minisketch/src/fields/minisketch_libminisketch_a-generic_2bytes.$(OBJEXT):  \
	minisketch/src/fields/$(am__dirstamp) \
	minisketch/src/fields/$(DEPDIR)/$(am__dirstamp)
minisketch/src/fields/minisketch_libminisketch_a-generic_3bytes.$(OBJEXT):  \
	minisketch/src/fields/$(am__dirstamp) \
	minisketch/src/fields/$(DEPDIR)/$(am__dirstamp)
minisketch/src/fields/minisketch_libminisketch_a-generic_4bytes.$(OBJEXT):  \
	minisketch/src/fields/$(am__dirstamp) \
	minisketch/src/fields/$(DEPDIR)/$(am__dirstamp)
minisketch/src/fields/minisketch_libminisketch_a-generic_5bytes.$(OBJEXT):  \
	minisketch/src/fields/$(am__dirstamp) \
	minisketch/src/fields/$(DEPDIR)/$(am__dirstamp)
minisketch/src/fields/minisketch_libminisketch_a-generic_6bytes.$(OBJEXT):  \
	minisketch/src/fields/$(am__dirstamp) \
	minisketch/src/fields/$(DEPDIR)/$(am__dirstamp)
minisketch/src/fields/minisketch_libminisketch_a-generic_7bytes.$(OBJEXT):  \
	minisketch/src/fields/$(am__dirstamp) \
	minisketch/src/fields/$(DEPDIR)/$(am__dirstamp)
minisketch/src/fields/minisketch_libminisketch_a-generic_8bytes.$(OBJEXT):  \
	minisketch/src/fields/$(am__dirstamp) \
	minisketch/src/fields/$(DEPDIR)/$(am__dirstamp)
minisketch/src/$(am__dirstamp):
	@$(MKDIR_P) minisketch/src
	@: > minisketch/src/$(am__dirstamp)
minisketch/src/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) minisketch/src/$(DEPDIR)
	@: > minisketch/src/$(DEPDIR)/$(am__dirstamp)
minisketch/src/minisketch_libminisketch_a-minisketch.$(OBJEXT):  \
	minisketch/src/$(am__dirstamp) \
	minisketch/src/$(DEPDIR)/$(am__dirstamp)
minisketch/$(am__dirstamp):
	@$(MKDIR_P) minisketch
	@: > minisketch/$(am__dirstamp)

minisketch/libminisketch.a: $(minisketch_libminisketch_a_OBJECTS) $(minisketch_libminisketch_a_DEPENDENCIES) $(EXTRA_minisketch_libminisketch_a_DEPENDENCIES) minisketch/$(am__dirstamp)
	$(AM_V_at)-rm -f minisketch/libminisketch.a
	$(AM_V_AR)$(minisketch_libminisketch_a_AR) minisketch/libminisketch.a $(minisketch_libminisketch_a_OBJECTS) $(minisketch_libminisketch_a_LIBADD)
	$(AM_V_at)$(RANLIB) minisketch/libminisketch.a
minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_1byte.$(OBJEXT):  \
	minisketch/src/fields/$(am__dirstamp) \
	minisketch/src/fields/$(DEPDIR)/$(am__dirstamp)
minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_2bytes.$(OBJEXT):  \
	minisketch/src/fields/$(am__dirstamp) \
	minisketch/src/fields/$(DEPDIR)/$(am__dirstamp)
minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_3bytes.$(OBJEXT):  \
	minisketch/src/fields/$(am__dirstamp) \
	minisketch/src/fields/$(DEPDIR)/$(am__dirstamp)
minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_4bytes.$(OBJEXT):  \
	minisketch/src/fields/$(am__dirstamp) \
	minisketch/src/fields/$(DEPDIR)/$(am__dirstamp)
minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_5bytes.$(OBJEXT):  \
	minisketch/src/fields/$(am__dirstamp) \
	minisketch/src/fields/$(DEPDIR)/$(am__dirstamp)
minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_6bytes.$(OBJEXT):  \
	minisketch/src/fields/$(am__dirstamp) \
	minisketch/src/fields/$(DEPDIR)/$(am__dirstamp)
minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_7bytes.$(OBJEXT):  \
	minisketch/src/fields/$(am__dirstamp) \
	minisketch/src/fields/$(DEPDIR)/$(am__dirstamp)
minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_8bytes.$(OBJEXT):  \
	minisketch/src/fields/$(am__dirstamp) \
	minisketch/src/fields/$(DEPDIR)/$(am__dirstamp)

minisketch/libminisketch_clmul.a: $(minisketch_libminisketch_clmul_a_OBJECTS) $(minisketch_libminisketch_clmul_a_DEPENDENCIES) $(EXTRA_minisketch_libminisketch_clmul_a_DEPENDENCIES) minisketch/$(am__dirstamp)
	$(AM_V_at)-rm -f minisketch/libminisketch_clmul.a
	$(AM_V_AR)$(minisketch_libminisketch_clmul_a_AR) minisketch/libminisketch_clmul.a $(minisketch_libminisketch_clmul_a_OBJECTS) $(minisketch_libminisketch_clmul_a_LIBADD)
	$(AM_V_at)$(RANLIB) minisketch/libminisketch_clmul.a
qt/$(am__dirstamp):
	@$(MKDIR_P) qt
	@: > qt/$(am__dirstamp)
qt/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) qt/$(DEPDIR)
	@: > qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-bantablemodel.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-bitcoin.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-bitcoinaddressvalidator.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-bitcoinamountfield.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-bitcoingui.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-bitcoinunits.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-clientmodel.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-csvmodelwriter.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-guiutil.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-initexecutor.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-intro.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-modaloverlay.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-networkstyle.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-notificator.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-optionsdialog.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-optionsmodel.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-peertablemodel.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-peertablesortproxy.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-platformstyle.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-qvalidatedlineedit.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-qvaluecombobox.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-rpcconsole.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-splashscreen.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-trafficgraphwidget.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-utilitydialog.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-winshutdownmonitor.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-addressbookpage.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-addresstablemodel.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-askpassphrasedialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-coincontroldialog.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-coincontroltreewidget.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-createwalletdialog.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-editaddressdialog.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-openuridialog.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-overviewpage.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-paymentserver.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-psbtoperationsdialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-qrimagewidget.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-receivecoinsdialog.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-receiverequestdialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-recentrequeststablemodel.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-sendcoinsdialog.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-sendcoinsentry.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-signverifymessagedialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-transactiondesc.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-transactiondescdialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-transactionfilterproxy.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-transactionrecord.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-transactiontablemodel.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-transactionview.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-walletcontroller.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-walletframe.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-walletmodel.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-walletmodeltransaction.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-walletview.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-macdockiconhandler.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-macnotificationhandler.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-macos_appnap.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_addressbookpage.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_addresstablemodel.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_askpassphrasedialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_createwalletdialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_bantablemodel.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_bitcoin.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_bitcoinaddressvalidator.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_bitcoinamountfield.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_bitcoingui.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_bitcoinunits.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_clientmodel.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_coincontroldialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_coincontroltreewidget.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_csvmodelwriter.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_editaddressdialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_guiutil.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_initexecutor.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_intro.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_macdockiconhandler.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_macnotificationhandler.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_modaloverlay.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_notificator.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_openuridialog.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_optionsdialog.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_optionsmodel.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_overviewpage.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_peertablemodel.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_peertablesortproxy.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_paymentserver.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_psbtoperationsdialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_qrimagewidget.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_qvalidatedlineedit.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_qvaluecombobox.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_receivecoinsdialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_receiverequestdialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_recentrequeststablemodel.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_rpcconsole.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_sendcoinsdialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_sendcoinsentry.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_signverifymessagedialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_splashscreen.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_trafficgraphwidget.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_transactiondesc.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_transactiondescdialog.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_transactionfilterproxy.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_transactionoverviewwidget.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_transactiontablemodel.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_transactionview.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_utilitydialog.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_walletcontroller.$(OBJEXT):  \
	qt/$(am__dirstamp) qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_walletframe.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_walletmodel.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-moc_walletview.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-qrc_bitcoin.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/qt_libbitcoinqt_a-qrc_bitcoin_locale.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)

qt/libbitcoinqt.a: $(qt_libbitcoinqt_a_OBJECTS) $(qt_libbitcoinqt_a_DEPENDENCIES) $(EXTRA_qt_libbitcoinqt_a_DEPENDENCIES) qt/$(am__dirstamp)
	$(AM_V_at)-rm -f qt/libbitcoinqt.a
	$(AM_V_AR)$(qt_libbitcoinqt_a_AR) qt/libbitcoinqt.a $(qt_libbitcoinqt_a_OBJECTS) $(qt_libbitcoinqt_a_LIBADD)
	$(AM_V_at)$(RANLIB) qt/libbitcoinqt.a

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
crc32c/src/$(am__dirstamp):
	@$(MKDIR_P) crc32c/src
	@: > crc32c/src/$(am__dirstamp)
crc32c/src/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crc32c/src/$(DEPDIR)
	@: > crc32c/src/$(DEPDIR)/$(am__dirstamp)
crc32c/src/crc32c_libcrc32c_la-crc32c.lo: crc32c/src/$(am__dirstamp) \
	crc32c/src/$(DEPDIR)/$(am__dirstamp)
crc32c/src/crc32c_libcrc32c_la-crc32c_portable.lo:  \
	crc32c/src/$(am__dirstamp) \
	crc32c/src/$(DEPDIR)/$(am__dirstamp)
crc32c/$(am__dirstamp):
	@$(MKDIR_P) crc32c
	@: > crc32c/$(am__dirstamp)

crc32c/libcrc32c.la: $(crc32c_libcrc32c_la_OBJECTS) $(crc32c_libcrc32c_la_DEPENDENCIES) $(EXTRA_crc32c_libcrc32c_la_DEPENDENCIES) crc32c/$(am__dirstamp)
	$(AM_V_CXXLD)$(crc32c_libcrc32c_la_LINK)  $(crc32c_libcrc32c_la_OBJECTS) $(crc32c_libcrc32c_la_LIBADD) $(LIBS)
crc32c/src/crc32c_libcrc32c_arm_crc_la-crc32c_arm64.lo:  \
	crc32c/src/$(am__dirstamp) \
	crc32c/src/$(DEPDIR)/$(am__dirstamp)

crc32c/libcrc32c_arm_crc.la: $(crc32c_libcrc32c_arm_crc_la_OBJECTS) $(crc32c_libcrc32c_arm_crc_la_DEPENDENCIES) $(EXTRA_crc32c_libcrc32c_arm_crc_la_DEPENDENCIES) crc32c/$(am__dirstamp)
	$(AM_V_CXXLD)$(crc32c_libcrc32c_arm_crc_la_LINK) $(am_crc32c_libcrc32c_arm_crc_la_rpath) $(crc32c_libcrc32c_arm_crc_la_OBJECTS) $(crc32c_libcrc32c_arm_crc_la_LIBADD) $(LIBS)
crc32c/src/crc32c_libcrc32c_sse42_la-crc32c_sse42.lo:  \
	crc32c/src/$(am__dirstamp) \
	crc32c/src/$(DEPDIR)/$(am__dirstamp)

crc32c/libcrc32c_sse42.la: $(crc32c_libcrc32c_sse42_la_OBJECTS) $(crc32c_libcrc32c_sse42_la_DEPENDENCIES) $(EXTRA_crc32c_libcrc32c_sse42_la_DEPENDENCIES) crc32c/$(am__dirstamp)
	$(AM_V_CXXLD)$(crc32c_libcrc32c_sse42_la_LINK) $(am_crc32c_libcrc32c_sse42_la_rpath) $(crc32c_libcrc32c_sse42_la_OBJECTS) $(crc32c_libcrc32c_sse42_la_LIBADD) $(LIBS)
crypto/$(am__dirstamp):
	@$(MKDIR_P) crypto
	@: > crypto/$(am__dirstamp)
crypto/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto/$(DEPDIR)
	@: > crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_libbitcoin_crypto_arm_shani_la-sha256_arm_shani.lo:  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)

crypto/libbitcoin_crypto_arm_shani.la: $(crypto_libbitcoin_crypto_arm_shani_la_OBJECTS) $(crypto_libbitcoin_crypto_arm_shani_la_DEPENDENCIES) $(EXTRA_crypto_libbitcoin_crypto_arm_shani_la_DEPENDENCIES) crypto/$(am__dirstamp)
	$(AM_V_CXXLD)$(crypto_libbitcoin_crypto_arm_shani_la_LINK) $(am_crypto_libbitcoin_crypto_arm_shani_la_rpath) $(crypto_libbitcoin_crypto_arm_shani_la_OBJECTS) $(crypto_libbitcoin_crypto_arm_shani_la_LIBADD) $(LIBS)
crypto/crypto_libbitcoin_crypto_avx2_la-sha256_avx2.lo:  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)

crypto/libbitcoin_crypto_avx2.la: $(crypto_libbitcoin_crypto_avx2_la_OBJECTS) $(crypto_libbitcoin_crypto_avx2_la_DEPENDENCIES) $(EXTRA_crypto_libbitcoin_crypto_avx2_la_DEPENDENCIES) crypto/$(am__dirstamp)
	$(AM_V_CXXLD)$(crypto_libbitcoin_crypto_avx2_la_LINK) $(am_crypto_libbitcoin_crypto_avx2_la_rpath) $(crypto_libbitcoin_crypto_avx2_la_OBJECTS) $(crypto_libbitcoin_crypto_avx2_la_LIBADD) $(LIBS)
crypto/crypto_libbitcoin_crypto_base_la-aes.lo:  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_libbitcoin_crypto_base_la-chacha_poly_aead.lo:  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_libbitcoin_crypto_base_la-chacha20.lo:  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_libbitcoin_crypto_base_la-hkdf_sha256_32.lo:  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_libbitcoin_crypto_base_la-hmac_sha256.lo:  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_libbitcoin_crypto_base_la-hmac_sha512.lo:  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_libbitcoin_crypto_base_la-poly1305.lo:  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_libbitcoin_crypto_base_la-muhash.lo:  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_libbitcoin_crypto_base_la-ripemd160.lo:  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_libbitcoin_crypto_base_la-sha1.lo:  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_libbitcoin_crypto_base_la-sha256.lo:  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_libbitcoin_crypto_base_la-sha3.lo:  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_libbitcoin_crypto_base_la-sha512.lo:  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_libbitcoin_crypto_base_la-siphash.lo:  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_libbitcoin_crypto_base_la-sha256_sse4.lo:  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)

crypto/libbitcoin_crypto_base.la: $(crypto_libbitcoin_crypto_base_la_OBJECTS) $(crypto_libbitcoin_crypto_base_la_DEPENDENCIES) $(EXTRA_crypto_libbitcoin_crypto_base_la_DEPENDENCIES) crypto/$(am__dirstamp)
	$(AM_V_CXXLD)$(crypto_libbitcoin_crypto_base_la_LINK)  $(crypto_libbitcoin_crypto_base_la_OBJECTS) $(crypto_libbitcoin_crypto_base_la_LIBADD) $(LIBS)
crypto/crypto_libbitcoin_crypto_sse41_la-sha256_sse41.lo:  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)

crypto/libbitcoin_crypto_sse41.la: $(crypto_libbitcoin_crypto_sse41_la_OBJECTS) $(crypto_libbitcoin_crypto_sse41_la_DEPENDENCIES) $(EXTRA_crypto_libbitcoin_crypto_sse41_la_DEPENDENCIES) crypto/$(am__dirstamp)
	$(AM_V_CXXLD)$(crypto_libbitcoin_crypto_sse41_la_LINK) $(am_crypto_libbitcoin_crypto_sse41_la_rpath) $(crypto_libbitcoin_crypto_sse41_la_OBJECTS) $(crypto_libbitcoin_crypto_sse41_la_LIBADD) $(LIBS)
crypto/crypto_libbitcoin_crypto_x86_shani_la-sha256_x86_shani.lo:  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)

crypto/libbitcoin_crypto_x86_shani.la: $(crypto_libbitcoin_crypto_x86_shani_la_OBJECTS) $(crypto_libbitcoin_crypto_x86_shani_la_DEPENDENCIES) $(EXTRA_crypto_libbitcoin_crypto_x86_shani_la_DEPENDENCIES) crypto/$(am__dirstamp)
	$(AM_V_CXXLD)$(crypto_libbitcoin_crypto_x86_shani_la_LINK) $(am_crypto_libbitcoin_crypto_x86_shani_la_rpath) $(crypto_libbitcoin_crypto_x86_shani_la_OBJECTS) $(crypto_libbitcoin_crypto_x86_shani_la_LIBADD) $(LIBS)
leveldb/db/$(am__dirstamp):
	@$(MKDIR_P) leveldb/db
	@: > leveldb/db/$(am__dirstamp)
leveldb/db/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) leveldb/db/$(DEPDIR)
	@: > leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_la-builder.lo:  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_la-c.lo: leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_la-dbformat.lo:  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_la-db_impl.lo:  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_la-db_iter.lo:  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_la-dumpfile.lo:  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_la-filename.lo:  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_la-log_reader.lo:  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_la-log_writer.lo:  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_la-memtable.lo:  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_la-repair.lo:  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_la-table_cache.lo:  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_la-version_edit.lo:  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_la-version_set.lo:  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_la-write_batch.lo:  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/table/$(am__dirstamp):
	@$(MKDIR_P) leveldb/table
	@: > leveldb/table/$(am__dirstamp)
leveldb/table/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) leveldb/table/$(DEPDIR)
	@: > leveldb/table/$(DEPDIR)/$(am__dirstamp)
leveldb/table/leveldb_libleveldb_la-block_builder.lo:  \
	leveldb/table/$(am__dirstamp) \
	leveldb/table/$(DEPDIR)/$(am__dirstamp)
leveldb/table/leveldb_libleveldb_la-block.lo:  \
	leveldb/table/$(am__dirstamp) \
	leveldb/table/$(DEPDIR)/$(am__dirstamp)
leveldb/table/leveldb_libleveldb_la-filter_block.lo:  \
	leveldb/table/$(am__dirstamp) \
	leveldb/table/$(DEPDIR)/$(am__dirstamp)
leveldb/table/leveldb_libleveldb_la-format.lo:  \
	leveldb/table/$(am__dirstamp) \
	leveldb/table/$(DEPDIR)/$(am__dirstamp)
leveldb/table/leveldb_libleveldb_la-iterator.lo:  \
	leveldb/table/$(am__dirstamp) \
	leveldb/table/$(DEPDIR)/$(am__dirstamp)
leveldb/table/leveldb_libleveldb_la-merger.lo:  \
	leveldb/table/$(am__dirstamp) \
	leveldb/table/$(DEPDIR)/$(am__dirstamp)
leveldb/table/leveldb_libleveldb_la-table_builder.lo:  \
	leveldb/table/$(am__dirstamp) \
	leveldb/table/$(DEPDIR)/$(am__dirstamp)
leveldb/table/leveldb_libleveldb_la-table.lo:  \
	leveldb/table/$(am__dirstamp) \
	leveldb/table/$(DEPDIR)/$(am__dirstamp)
leveldb/table/leveldb_libleveldb_la-two_level_iterator.lo:  \
	leveldb/table/$(am__dirstamp) \
	leveldb/table/$(DEPDIR)/$(am__dirstamp)
leveldb/util/$(am__dirstamp):
	@$(MKDIR_P) leveldb/util
	@: > leveldb/util/$(am__dirstamp)
leveldb/util/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) leveldb/util/$(DEPDIR)
	@: > leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_la-arena.lo:  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_la-bloom.lo:  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_la-cache.lo:  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_la-coding.lo:  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_la-comparator.lo:  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_la-crc32c.lo:  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_la-env.lo:  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_la-filter_policy.lo:  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_la-hash.lo:  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_la-histogram.lo:  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_la-logging.lo:  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_la-options.lo:  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_la-status.lo:  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_la-env_windows.lo:  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_la-env_posix.lo:  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/$(am__dirstamp):
	@$(MKDIR_P) leveldb
	@: > leveldb/$(am__dirstamp)

leveldb/libleveldb.la: $(leveldb_libleveldb_la_OBJECTS) $(leveldb_libleveldb_la_DEPENDENCIES) $(EXTRA_leveldb_libleveldb_la_DEPENDENCIES) leveldb/$(am__dirstamp)
	$(AM_V_CXXLD)$(leveldb_libleveldb_la_LINK)  $(leveldb_libleveldb_la_OBJECTS) $(leveldb_libleveldb_la_LIBADD) $(LIBS)
leveldb/helpers/memenv/$(am__dirstamp):
	@$(MKDIR_P) leveldb/helpers/memenv
	@: > leveldb/helpers/memenv/$(am__dirstamp)
leveldb/helpers/memenv/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) leveldb/helpers/memenv/$(DEPDIR)
	@: > leveldb/helpers/memenv/$(DEPDIR)/$(am__dirstamp)
leveldb/helpers/memenv/leveldb_libmemenv_la-memenv.lo:  \
	leveldb/helpers/memenv/$(am__dirstamp) \
	leveldb/helpers/memenv/$(DEPDIR)/$(am__dirstamp)

leveldb/libmemenv.la: $(leveldb_libmemenv_la_OBJECTS) $(leveldb_libmemenv_la_DEPENDENCIES) $(EXTRA_leveldb_libmemenv_la_DEPENDENCIES) leveldb/$(am__dirstamp)
	$(AM_V_CXXLD)$(leveldb_libmemenv_la_LINK)  $(leveldb_libmemenv_la_OBJECTS) $(leveldb_libmemenv_la_LIBADD) $(LIBS)
support/libbitcoinconsensus_la-cleanse.lo: support/$(am__dirstamp) \
	support/$(DEPDIR)/$(am__dirstamp)
crypto/libbitcoinconsensus_la-aes.lo: crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libbitcoinconsensus_la-chacha_poly_aead.lo:  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libbitcoinconsensus_la-chacha20.lo: crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libbitcoinconsensus_la-hkdf_sha256_32.lo:  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libbitcoinconsensus_la-hmac_sha256.lo: crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libbitcoinconsensus_la-hmac_sha512.lo: crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libbitcoinconsensus_la-poly1305.lo: crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libbitcoinconsensus_la-muhash.lo: crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libbitcoinconsensus_la-ripemd160.lo: crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libbitcoinconsensus_la-sha1.lo: crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libbitcoinconsensus_la-sha256.lo: crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libbitcoinconsensus_la-sha3.lo: crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libbitcoinconsensus_la-sha512.lo: crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libbitcoinconsensus_la-siphash.lo: crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libbitcoinconsensus_la-sha256_sse4.lo: crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
consensus/libbitcoinconsensus_la-merkle.lo: consensus/$(am__dirstamp) \
	consensus/$(DEPDIR)/$(am__dirstamp)
consensus/libbitcoinconsensus_la-tx_check.lo:  \
	consensus/$(am__dirstamp) consensus/$(DEPDIR)/$(am__dirstamp)
primitives/libbitcoinconsensus_la-block.lo:  \
	primitives/$(am__dirstamp) \
	primitives/$(DEPDIR)/$(am__dirstamp)
primitives/libbitcoinconsensus_la-transaction.lo:  \
	primitives/$(am__dirstamp) \
	primitives/$(DEPDIR)/$(am__dirstamp)
script/libbitcoinconsensus_la-bitcoinconsensus.lo:  \
	script/$(am__dirstamp) script/$(DEPDIR)/$(am__dirstamp)
script/libbitcoinconsensus_la-interpreter.lo: script/$(am__dirstamp) \
	script/$(DEPDIR)/$(am__dirstamp)
script/libbitcoinconsensus_la-script.lo: script/$(am__dirstamp) \
	script/$(DEPDIR)/$(am__dirstamp)
script/libbitcoinconsensus_la-script_error.lo: script/$(am__dirstamp) \
	script/$(DEPDIR)/$(am__dirstamp)
util/libbitcoinconsensus_la-strencodings.lo: util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)

libbitcoinconsensus.la: $(libbitcoinconsensus_la_OBJECTS) $(libbitcoinconsensus_la_DEPENDENCIES) $(EXTRA_libbitcoinconsensus_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libbitcoinconsensus_la_LINK) $(am_libbitcoinconsensus_la_rpath) $(libbitcoinconsensus_la_OBJECTS) $(libbitcoinconsensus_la_LIBADD) $(LIBS)
kernel/libbitcoinkernel_la-bitcoinkernel.lo: kernel/$(am__dirstamp) \
	kernel/$(DEPDIR)/$(am__dirstamp)
consensus/libbitcoinkernel_la-merkle.lo: consensus/$(am__dirstamp) \
	consensus/$(DEPDIR)/$(am__dirstamp)
consensus/libbitcoinkernel_la-tx_check.lo: consensus/$(am__dirstamp) \
	consensus/$(DEPDIR)/$(am__dirstamp)
consensus/libbitcoinkernel_la-tx_verify.lo: consensus/$(am__dirstamp) \
	consensus/$(DEPDIR)/$(am__dirstamp)
kernel/libbitcoinkernel_la-checks.lo: kernel/$(am__dirstamp) \
	kernel/$(DEPDIR)/$(am__dirstamp)
kernel/libbitcoinkernel_la-coinstats.lo: kernel/$(am__dirstamp) \
	kernel/$(DEPDIR)/$(am__dirstamp)
kernel/libbitcoinkernel_la-context.lo: kernel/$(am__dirstamp) \
	kernel/$(DEPDIR)/$(am__dirstamp)
node/libbitcoinkernel_la-blockstorage.lo: node/$(am__dirstamp) \
	node/$(DEPDIR)/$(am__dirstamp)
node/libbitcoinkernel_la-chainstate.lo: node/$(am__dirstamp) \
	node/$(DEPDIR)/$(am__dirstamp)
node/libbitcoinkernel_la-ui_interface.lo: node/$(am__dirstamp) \
	node/$(DEPDIR)/$(am__dirstamp)
policy/libbitcoinkernel_la-feerate.lo: policy/$(am__dirstamp) \
	policy/$(DEPDIR)/$(am__dirstamp)
policy/libbitcoinkernel_la-fees.lo: policy/$(am__dirstamp) \
	policy/$(DEPDIR)/$(am__dirstamp)
policy/libbitcoinkernel_la-packages.lo: policy/$(am__dirstamp) \
	policy/$(DEPDIR)/$(am__dirstamp)
policy/libbitcoinkernel_la-policy.lo: policy/$(am__dirstamp) \
	policy/$(DEPDIR)/$(am__dirstamp)
policy/libbitcoinkernel_la-rbf.lo: policy/$(am__dirstamp) \
	policy/$(DEPDIR)/$(am__dirstamp)
policy/libbitcoinkernel_la-settings.lo: policy/$(am__dirstamp) \
	policy/$(DEPDIR)/$(am__dirstamp)
primitives/libbitcoinkernel_la-block.lo: primitives/$(am__dirstamp) \
	primitives/$(DEPDIR)/$(am__dirstamp)
primitives/libbitcoinkernel_la-transaction.lo:  \
	primitives/$(am__dirstamp) \
	primitives/$(DEPDIR)/$(am__dirstamp)
script/libbitcoinkernel_la-interpreter.lo: script/$(am__dirstamp) \
	script/$(DEPDIR)/$(am__dirstamp)
script/libbitcoinkernel_la-script.lo: script/$(am__dirstamp) \
	script/$(DEPDIR)/$(am__dirstamp)
script/libbitcoinkernel_la-script_error.lo: script/$(am__dirstamp) \
	script/$(DEPDIR)/$(am__dirstamp)
script/libbitcoinkernel_la-sigcache.lo: script/$(am__dirstamp) \
	script/$(DEPDIR)/$(am__dirstamp)
script/libbitcoinkernel_la-standard.lo: script/$(am__dirstamp) \
	script/$(DEPDIR)/$(am__dirstamp)
support/libbitcoinkernel_la-cleanse.lo: support/$(am__dirstamp) \
	support/$(DEPDIR)/$(am__dirstamp)
support/libbitcoinkernel_la-lockedpool.lo: support/$(am__dirstamp) \
	support/$(DEPDIR)/$(am__dirstamp)
util/libbitcoinkernel_la-bytevectorhash.lo: util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/libbitcoinkernel_la-check.lo: util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/libbitcoinkernel_la-getuniquepath.lo: util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/libbitcoinkernel_la-hasher.lo: util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/libbitcoinkernel_la-moneystr.lo: util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/libbitcoinkernel_la-rbf.lo: util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/libbitcoinkernel_la-serfloat.lo: util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/libbitcoinkernel_la-settings.lo: util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/libbitcoinkernel_la-strencodings.lo: util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/libbitcoinkernel_la-string.lo: util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/libbitcoinkernel_la-syscall_sandbox.lo: util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/libbitcoinkernel_la-syserror.lo: util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/libbitcoinkernel_la-system.lo: util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/libbitcoinkernel_la-thread.lo: util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/libbitcoinkernel_la-threadnames.lo: util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/libbitcoinkernel_la-time.lo: util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/libbitcoinkernel_la-tokenpipe.lo: util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)

libbitcoinkernel.la: $(libbitcoinkernel_la_OBJECTS) $(libbitcoinkernel_la_DEPENDENCIES) $(EXTRA_libbitcoinkernel_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libbitcoinkernel_la_LINK) $(am_libbitcoinkernel_la_rpath) $(libbitcoinkernel_la_OBJECTS) $(libbitcoinkernel_la_LIBADD) $(LIBS)
univalue/lib/$(am__dirstamp):
	@$(MKDIR_P) univalue/lib
	@: > univalue/lib/$(am__dirstamp)
univalue/lib/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) univalue/lib/$(DEPDIR)
	@: > univalue/lib/$(DEPDIR)/$(am__dirstamp)
univalue/lib/libunivalue_la-univalue.lo: univalue/lib/$(am__dirstamp) \
	univalue/lib/$(DEPDIR)/$(am__dirstamp)
univalue/lib/libunivalue_la-univalue_get.lo:  \
	univalue/lib/$(am__dirstamp) \
	univalue/lib/$(DEPDIR)/$(am__dirstamp)
univalue/lib/libunivalue_la-univalue_read.lo:  \
	univalue/lib/$(am__dirstamp) \
	univalue/lib/$(DEPDIR)/$(am__dirstamp)
univalue/lib/libunivalue_la-univalue_write.lo:  \
	univalue/lib/$(am__dirstamp) \
	univalue/lib/$(DEPDIR)/$(am__dirstamp)

libunivalue.la: $(libunivalue_la_OBJECTS) $(libunivalue_la_DEPENDENCIES) $(EXTRA_libunivalue_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(CXXLINK)  $(libunivalue_la_OBJECTS) $(libunivalue_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
bench/$(am__dirstamp):
	@$(MKDIR_P) bench
	@: > bench/$(am__dirstamp)
bench/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) bench/$(DEPDIR)
	@: > bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitcoin-addrman.$(OBJEXT): bench/$(am__dirstamp) \
	bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitcoin-base58.$(OBJEXT): bench/$(am__dirstamp) \
	bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitcoin-bech32.$(OBJEXT): bench/$(am__dirstamp) \
	bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitcoin-bench.$(OBJEXT): bench/$(am__dirstamp) \
	bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitcoin-bench_bitcoin.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitcoin-block_assemble.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitcoin-ccoins_caching.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitcoin-chacha20.$(OBJEXT): bench/$(am__dirstamp) \
	bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitcoin-chacha_poly_aead.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitcoin-checkblock.$(OBJEXT): bench/$(am__dirstamp) \
	bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitcoin-checkqueue.$(OBJEXT): bench/$(am__dirstamp) \
	bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitcoin-crypto_hash.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitcoin-data.$(OBJEXT): bench/$(am__dirstamp) \
	bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitcoin-duplicate_inputs.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitcoin-examples.$(OBJEXT): bench/$(am__dirstamp) \
	bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitcoin-gcs_filter.$(OBJEXT): bench/$(am__dirstamp) \
	bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitcoin-hashpadding.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitcoin-lockedpool.$(OBJEXT): bench/$(am__dirstamp) \
	bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitcoin-logging.$(OBJEXT): bench/$(am__dirstamp) \
	bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitcoin-mempool_eviction.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitcoin-mempool_stress.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitcoin-merkle_root.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitcoin-nanobench.$(OBJEXT): bench/$(am__dirstamp) \
	bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitcoin-peer_eviction.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitcoin-poly1305.$(OBJEXT): bench/$(am__dirstamp) \
	bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitcoin-prevector.$(OBJEXT): bench/$(am__dirstamp) \
	bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitcoin-rollingbloom.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitcoin-rpc_blockchain.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitcoin-rpc_mempool.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitcoin-strencodings.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitcoin-util_time.$(OBJEXT): bench/$(am__dirstamp) \
	bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitcoin-verify_script.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitcoin-coin_selection.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitcoin-wallet_balance.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitcoin-wallet_loading.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)

bench/bench_bitcoin$(EXEEXT): $(bench_bench_bitcoin_OBJECTS) $(bench_bench_bitcoin_DEPENDENCIES) $(EXTRA_bench_bench_bitcoin_DEPENDENCIES) bench/$(am__dirstamp)
	@rm -f bench/bench_bitcoin$(EXEEXT)
	$(AM_V_CXXLD)$(bench_bench_bitcoin_LINK) $(bench_bench_bitcoin_OBJECTS) $(bench_bench_bitcoin_LDADD) $(LIBS)

bitcoin-chainstate$(EXEEXT): $(bitcoin_chainstate_OBJECTS) $(bitcoin_chainstate_DEPENDENCIES) $(EXTRA_bitcoin_chainstate_DEPENDENCIES) 
	@rm -f bitcoin-chainstate$(EXEEXT)
	$(AM_V_CXXLD)$(bitcoin_chainstate_LINK) $(bitcoin_chainstate_OBJECTS) $(bitcoin_chainstate_LDADD) $(LIBS)

bitcoin-cli$(EXEEXT): $(bitcoin_cli_OBJECTS) $(bitcoin_cli_DEPENDENCIES) $(EXTRA_bitcoin_cli_DEPENDENCIES) 
	@rm -f bitcoin-cli$(EXEEXT)
	$(AM_V_CXXLD)$(bitcoin_cli_LINK) $(bitcoin_cli_OBJECTS) $(bitcoin_cli_LDADD) $(LIBS)
qt/bitcoin_gui-main.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
qt/res/$(am__dirstamp):
	@$(MKDIR_P) qt/res
	@: > qt/res/$(am__dirstamp)
qt/res/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) qt/res/$(DEPDIR)
	@: > qt/res/$(DEPDIR)/$(am__dirstamp)
qt/res/bitcoin-qt-res.$(OBJEXT): qt/res/$(am__dirstamp) \
	qt/res/$(DEPDIR)/$(am__dirstamp)
init/bitcoin_gui-bitcoin-gui.$(OBJEXT): init/$(am__dirstamp) \
	init/$(DEPDIR)/$(am__dirstamp)

bitcoin-gui$(EXEEXT): $(bitcoin_gui_OBJECTS) $(bitcoin_gui_DEPENDENCIES) $(EXTRA_bitcoin_gui_DEPENDENCIES) 
	@rm -f bitcoin-gui$(EXEEXT)
	$(AM_V_CXXLD)$(bitcoin_gui_LINK) $(bitcoin_gui_OBJECTS) $(bitcoin_gui_LDADD) $(LIBS)
init/bitcoin_node-bitcoin-node.$(OBJEXT): init/$(am__dirstamp) \
	init/$(DEPDIR)/$(am__dirstamp)

bitcoin-node$(EXEEXT): $(bitcoin_node_OBJECTS) $(bitcoin_node_DEPENDENCIES) $(EXTRA_bitcoin_node_DEPENDENCIES) 
	@rm -f bitcoin-node$(EXEEXT)
	$(AM_V_CXXLD)$(bitcoin_node_LINK) $(bitcoin_node_OBJECTS) $(bitcoin_node_LDADD) $(LIBS)

bitcoin-tx$(EXEEXT): $(bitcoin_tx_OBJECTS) $(bitcoin_tx_DEPENDENCIES) $(EXTRA_bitcoin_tx_DEPENDENCIES) 
	@rm -f bitcoin-tx$(EXEEXT)
	$(AM_V_CXXLD)$(bitcoin_tx_LINK) $(bitcoin_tx_OBJECTS) $(bitcoin_tx_LDADD) $(LIBS)

bitcoin-util$(EXEEXT): $(bitcoin_util_OBJECTS) $(bitcoin_util_DEPENDENCIES) $(EXTRA_bitcoin_util_DEPENDENCIES) 
	@rm -f bitcoin-util$(EXEEXT)
	$(AM_V_CXXLD)$(bitcoin_util_LINK) $(bitcoin_util_OBJECTS) $(bitcoin_util_LDADD) $(LIBS)
init/bitcoin_wallet-bitcoin-wallet.$(OBJEXT): init/$(am__dirstamp) \
	init/$(DEPDIR)/$(am__dirstamp)

bitcoin-wallet$(EXEEXT): $(bitcoin_wallet_OBJECTS) $(bitcoin_wallet_DEPENDENCIES) $(EXTRA_bitcoin_wallet_DEPENDENCIES) 
	@rm -f bitcoin-wallet$(EXEEXT)
	$(AM_V_CXXLD)$(bitcoin_wallet_LINK) $(bitcoin_wallet_OBJECTS) $(bitcoin_wallet_LDADD) $(LIBS)
init/bitcoind-bitcoind.$(OBJEXT): init/$(am__dirstamp) \
	init/$(DEPDIR)/$(am__dirstamp)

bitcoind$(EXEEXT): $(bitcoind_OBJECTS) $(bitcoind_DEPENDENCIES) $(EXTRA_bitcoind_DEPENDENCIES) 
	@rm -f bitcoind$(EXEEXT)
	$(AM_V_CXXLD)$(bitcoind_LINK) $(bitcoind_OBJECTS) $(bitcoind_LDADD) $(LIBS)
minisketch/src/minisketch_test-test.$(OBJEXT):  \
	minisketch/src/$(am__dirstamp) \
	minisketch/src/$(DEPDIR)/$(am__dirstamp)

minisketch/test$(EXEEXT): $(minisketch_test_OBJECTS) $(minisketch_test_DEPENDENCIES) $(EXTRA_minisketch_test_DEPENDENCIES) minisketch/$(am__dirstamp)
	@rm -f minisketch/test$(EXEEXT)
	$(AM_V_CXXLD)$(minisketch_test_LINK) $(minisketch_test_OBJECTS) $(minisketch_test_LDADD) $(LIBS)
qt/qt_bitcoin_qt-main.$(OBJEXT): qt/$(am__dirstamp) \
	qt/$(DEPDIR)/$(am__dirstamp)
init/qt_bitcoin_qt-bitcoin-qt.$(OBJEXT): init/$(am__dirstamp) \
	init/$(DEPDIR)/$(am__dirstamp)

qt/bitcoin-qt$(EXEEXT): $(qt_bitcoin_qt_OBJECTS) $(qt_bitcoin_qt_DEPENDENCIES) $(EXTRA_qt_bitcoin_qt_DEPENDENCIES) qt/$(am__dirstamp)
	@rm -f qt/bitcoin-qt$(EXEEXT)
	$(AM_V_CXXLD)$(qt_bitcoin_qt_LINK) $(qt_bitcoin_qt_OBJECTS) $(qt_bitcoin_qt_LDADD) $(LIBS)
init/qt_test_test_bitcoin_qt-bitcoin-qt.$(OBJEXT):  \
	init/$(am__dirstamp) init/$(DEPDIR)/$(am__dirstamp)
qt/test/$(am__dirstamp):
	@$(MKDIR_P) qt/test
	@: > qt/test/$(am__dirstamp)
qt/test/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) qt/test/$(DEPDIR)
	@: > qt/test/$(DEPDIR)/$(am__dirstamp)
qt/test/qt_test_test_bitcoin_qt-apptests.$(OBJEXT):  \
	qt/test/$(am__dirstamp) qt/test/$(DEPDIR)/$(am__dirstamp)
qt/test/qt_test_test_bitcoin_qt-optiontests.$(OBJEXT):  \
	qt/test/$(am__dirstamp) qt/test/$(DEPDIR)/$(am__dirstamp)
qt/test/qt_test_test_bitcoin_qt-rpcnestedtests.$(OBJEXT):  \
	qt/test/$(am__dirstamp) qt/test/$(DEPDIR)/$(am__dirstamp)
qt/test/qt_test_test_bitcoin_qt-test_main.$(OBJEXT):  \
	qt/test/$(am__dirstamp) qt/test/$(DEPDIR)/$(am__dirstamp)
qt/test/qt_test_test_bitcoin_qt-uritests.$(OBJEXT):  \
	qt/test/$(am__dirstamp) qt/test/$(DEPDIR)/$(am__dirstamp)
qt/test/qt_test_test_bitcoin_qt-util.$(OBJEXT):  \
	qt/test/$(am__dirstamp) qt/test/$(DEPDIR)/$(am__dirstamp)
qt/test/qt_test_test_bitcoin_qt-addressbooktests.$(OBJEXT):  \
	qt/test/$(am__dirstamp) qt/test/$(DEPDIR)/$(am__dirstamp)
qt/test/qt_test_test_bitcoin_qt-wallettests.$(OBJEXT):  \
	qt/test/$(am__dirstamp) qt/test/$(DEPDIR)/$(am__dirstamp)
wallet/test/$(am__dirstamp):
	@$(MKDIR_P) wallet/test
	@: > wallet/test/$(am__dirstamp)
wallet/test/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) wallet/test/$(DEPDIR)
	@: > wallet/test/$(DEPDIR)/$(am__dirstamp)
wallet/test/qt_test_test_bitcoin_qt-wallet_test_fixture.$(OBJEXT):  \
	wallet/test/$(am__dirstamp) \
	wallet/test/$(DEPDIR)/$(am__dirstamp)
qt/test/qt_test_test_bitcoin_qt-moc_apptests.$(OBJEXT):  \
	qt/test/$(am__dirstamp) qt/test/$(DEPDIR)/$(am__dirstamp)
qt/test/qt_test_test_bitcoin_qt-moc_optiontests.$(OBJEXT):  \
	qt/test/$(am__dirstamp) qt/test/$(DEPDIR)/$(am__dirstamp)
qt/test/qt_test_test_bitcoin_qt-moc_rpcnestedtests.$(OBJEXT):  \
	qt/test/$(am__dirstamp) qt/test/$(DEPDIR)/$(am__dirstamp)
qt/test/qt_test_test_bitcoin_qt-moc_uritests.$(OBJEXT):  \
	qt/test/$(am__dirstamp) qt/test/$(DEPDIR)/$(am__dirstamp)
qt/test/qt_test_test_bitcoin_qt-moc_addressbooktests.$(OBJEXT):  \
	qt/test/$(am__dirstamp) qt/test/$(DEPDIR)/$(am__dirstamp)
qt/test/qt_test_test_bitcoin_qt-moc_wallettests.$(OBJEXT):  \
	qt/test/$(am__dirstamp) qt/test/$(DEPDIR)/$(am__dirstamp)

qt/test/test_bitcoin-qt$(EXEEXT): $(qt_test_test_bitcoin_qt_OBJECTS) $(qt_test_test_bitcoin_qt_DEPENDENCIES) $(EXTRA_qt_test_test_bitcoin_qt_DEPENDENCIES) qt/test/$(am__dirstamp)
	@rm -f qt/test/test_bitcoin-qt$(EXEEXT)
	$(AM_V_CXXLD)$(qt_test_test_bitcoin_qt_LINK) $(qt_test_test_bitcoin_qt_OBJECTS) $(qt_test_test_bitcoin_qt_LDADD) $(LIBS)
wallet/test/fuzz/$(am__dirstamp):
	@$(MKDIR_P) wallet/test/fuzz
	@: > wallet/test/fuzz/$(am__dirstamp)
wallet/test/fuzz/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) wallet/test/fuzz/$(DEPDIR)
	@: > wallet/test/fuzz/$(DEPDIR)/$(am__dirstamp)
wallet/test/fuzz/test_fuzz_fuzz-coinselection.$(OBJEXT):  \
	wallet/test/fuzz/$(am__dirstamp) \
	wallet/test/fuzz/$(DEPDIR)/$(am__dirstamp)
wallet/test/fuzz/test_fuzz_fuzz-notifications.$(OBJEXT):  \
	wallet/test/fuzz/$(am__dirstamp) \
	wallet/test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-addition_overflow.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-addrman.$(OBJEXT): test/fuzz/$(am__dirstamp) \
	test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-asmap.$(OBJEXT): test/fuzz/$(am__dirstamp) \
	test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-asmap_direct.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-autofile.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-banman.$(OBJEXT): test/fuzz/$(am__dirstamp) \
	test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-base_encode_decode.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-bech32.$(OBJEXT): test/fuzz/$(am__dirstamp) \
	test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-block.$(OBJEXT): test/fuzz/$(am__dirstamp) \
	test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-block_header.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-blockfilter.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-bloom_filter.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-buffered_file.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-chain.$(OBJEXT): test/fuzz/$(am__dirstamp) \
	test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-checkqueue.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-coins_view.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-connman.$(OBJEXT): test/fuzz/$(am__dirstamp) \
	test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-crypto.$(OBJEXT): test/fuzz/$(am__dirstamp) \
	test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-crypto_aes256.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-crypto_aes256cbc.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-crypto_chacha20.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-crypto_chacha20_poly1305_aead.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-crypto_common.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-crypto_diff_fuzz_chacha20.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-crypto_hkdf_hmac_sha256_l32.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-crypto_poly1305.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-cuckoocache.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-decode_tx.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-descriptor_parse.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-deserialize.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-eval_script.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-fee_rate.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-fees.$(OBJEXT): test/fuzz/$(am__dirstamp) \
	test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-flatfile.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-float.$(OBJEXT): test/fuzz/$(am__dirstamp) \
	test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-golomb_rice.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-hex.$(OBJEXT): test/fuzz/$(am__dirstamp) \
	test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-http_request.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-i2p.$(OBJEXT): test/fuzz/$(am__dirstamp) \
	test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-integer.$(OBJEXT): test/fuzz/$(am__dirstamp) \
	test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-key.$(OBJEXT): test/fuzz/$(am__dirstamp) \
	test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-key_io.$(OBJEXT): test/fuzz/$(am__dirstamp) \
	test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-kitchen_sink.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-load_external_block_file.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-locale.$(OBJEXT): test/fuzz/$(am__dirstamp) \
	test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-merkleblock.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-message.$(OBJEXT): test/fuzz/$(am__dirstamp) \
	test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-miniscript.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-minisketch.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-muhash.$(OBJEXT): test/fuzz/$(am__dirstamp) \
	test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-multiplication_overflow.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-net.$(OBJEXT): test/fuzz/$(am__dirstamp) \
	test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-net_permissions.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-netaddress.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-netbase_dns_lookup.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-node_eviction.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-p2p_transport_serialization.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-parse_hd_keypath.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-parse_iso8601.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-parse_numbers.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-parse_script.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-parse_univalue.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-policy_estimator.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-policy_estimator_io.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-pow.$(OBJEXT): test/fuzz/$(am__dirstamp) \
	test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-prevector.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-primitives_transaction.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-process_message.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-process_messages.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-protocol.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-psbt.$(OBJEXT): test/fuzz/$(am__dirstamp) \
	test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-random.$(OBJEXT): test/fuzz/$(am__dirstamp) \
	test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-rbf.$(OBJEXT): test/fuzz/$(am__dirstamp) \
	test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-rolling_bloom_filter.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-rpc.$(OBJEXT): test/fuzz/$(am__dirstamp) \
	test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-script.$(OBJEXT): test/fuzz/$(am__dirstamp) \
	test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-script_assets_test_minimizer.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-script_bitcoin_consensus.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-script_descriptor_cache.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-script_flags.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-script_format.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-script_interpreter.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-script_ops.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-script_sigcache.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-script_sign.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-scriptnum_ops.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-secp256k1_ec_seckey_import_export_der.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-secp256k1_ecdsa_signature_parse_der_lax.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-signature_checker.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-signet.$(OBJEXT): test/fuzz/$(am__dirstamp) \
	test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-socks5.$(OBJEXT): test/fuzz/$(am__dirstamp) \
	test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-span.$(OBJEXT): test/fuzz/$(am__dirstamp) \
	test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-spanparsing.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-string.$(OBJEXT): test/fuzz/$(am__dirstamp) \
	test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-strprintf.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-system.$(OBJEXT): test/fuzz/$(am__dirstamp) \
	test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-timedata.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-torcontrol.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-transaction.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-tx_in.$(OBJEXT): test/fuzz/$(am__dirstamp) \
	test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-tx_out.$(OBJEXT): test/fuzz/$(am__dirstamp) \
	test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-tx_pool.$(OBJEXT): test/fuzz/$(am__dirstamp) \
	test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-txrequest.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-utxo_snapshot.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-validation_load_mempool.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)
test/fuzz/test_fuzz_fuzz-versionbits.$(OBJEXT):  \
	test/fuzz/$(am__dirstamp) test/fuzz/$(DEPDIR)/$(am__dirstamp)

test/fuzz/fuzz$(EXEEXT): $(test_fuzz_fuzz_OBJECTS) $(test_fuzz_fuzz_DEPENDENCIES) $(EXTRA_test_fuzz_fuzz_DEPENDENCIES) test/fuzz/$(am__dirstamp)
	@rm -f test/fuzz/fuzz$(EXEEXT)
	$(AM_V_CXXLD)$(test_fuzz_fuzz_LINK) $(test_fuzz_fuzz_OBJECTS) $(test_fuzz_fuzz_LDADD) $(LIBS)
test/$(am__dirstamp):
	@$(MKDIR_P) test
	@: > test/$(am__dirstamp)
test/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) test/$(DEPDIR)
	@: > test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-main.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
wallet/test/test_test_bitcoin-util.$(OBJEXT):  \
	wallet/test/$(am__dirstamp) \
	wallet/test/$(DEPDIR)/$(am__dirstamp)
wallet/test/test_test_bitcoin-wallet_test_fixture.$(OBJEXT):  \
	wallet/test/$(am__dirstamp) \
	wallet/test/$(DEPDIR)/$(am__dirstamp)
wallet/test/test_test_bitcoin-init_test_fixture.$(OBJEXT):  \
	wallet/test/$(am__dirstamp) \
	wallet/test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-addrman_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-allocator_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-amount_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-arith_uint256_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-banman_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-base32_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-base58_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-base64_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-bech32_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-bip32_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-blockchain_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-blockencodings_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-blockfilter_index_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-blockfilter_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-bloom_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-bswap_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-checkqueue_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-coins_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-coinstatsindex_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-compilerbug_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-compress_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-crypto_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-cuckoocache_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-dbwrapper_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-denialofservice_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-descriptor_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-flatfile_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-fs_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-getarg_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-hash_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-httpserver_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-i2p_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-interfaces_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-key_io_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-key_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-logging_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-mempool_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-merkle_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-merkleblock_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-miner_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-miniscript_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-minisketch_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-multisig_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-net_peer_eviction_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-net_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-netbase_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-orphanage_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-pmt_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-policy_fee_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-policyestimator_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-pow_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-prevector_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-raii_event_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-random_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-rest_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-reverselock_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-rpc_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-sanity_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-scheduler_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-script_p2sh_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-script_parse_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-script_segwit_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-script_standard_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-script_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-scriptnum_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-serfloat_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-serialize_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-settings_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-sighash_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-sigopcount_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-skiplist_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-sock_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-streams_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-sync_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-system_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-timedata_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-torcontrol_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-transaction_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-txindex_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-txpackage_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-txrequest_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-txvalidation_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-txvalidationcache_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-uint256_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-util_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-util_threadnames_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-validation_block_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-validation_chainstate_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-validation_chainstatemanager_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-validation_flush_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-validation_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-validationinterface_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-versionbits_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
wallet/test/test_test_bitcoin-psbt_wallet_tests.$(OBJEXT):  \
	wallet/test/$(am__dirstamp) \
	wallet/test/$(DEPDIR)/$(am__dirstamp)
wallet/test/test_test_bitcoin-spend_tests.$(OBJEXT):  \
	wallet/test/$(am__dirstamp) \
	wallet/test/$(DEPDIR)/$(am__dirstamp)
wallet/test/test_test_bitcoin-wallet_tests.$(OBJEXT):  \
	wallet/test/$(am__dirstamp) \
	wallet/test/$(DEPDIR)/$(am__dirstamp)
wallet/test/test_test_bitcoin-walletdb_tests.$(OBJEXT):  \
	wallet/test/$(am__dirstamp) \
	wallet/test/$(DEPDIR)/$(am__dirstamp)
wallet/test/test_test_bitcoin-wallet_crypto_tests.$(OBJEXT):  \
	wallet/test/$(am__dirstamp) \
	wallet/test/$(DEPDIR)/$(am__dirstamp)
wallet/test/test_test_bitcoin-wallet_transaction_tests.$(OBJEXT):  \
	wallet/test/$(am__dirstamp) \
	wallet/test/$(DEPDIR)/$(am__dirstamp)
wallet/test/test_test_bitcoin-coinselector_tests.$(OBJEXT):  \
	wallet/test/$(am__dirstamp) \
	wallet/test/$(DEPDIR)/$(am__dirstamp)
wallet/test/test_test_bitcoin-init_tests.$(OBJEXT):  \
	wallet/test/$(am__dirstamp) \
	wallet/test/$(DEPDIR)/$(am__dirstamp)
wallet/test/test_test_bitcoin-ismine_tests.$(OBJEXT):  \
	wallet/test/$(am__dirstamp) \
	wallet/test/$(DEPDIR)/$(am__dirstamp)
wallet/test/test_test_bitcoin-scriptpubkeyman_tests.$(OBJEXT):  \
	wallet/test/$(am__dirstamp) \
	wallet/test/$(DEPDIR)/$(am__dirstamp)
wallet/test/test_test_bitcoin-db_tests.$(OBJEXT):  \
	wallet/test/$(am__dirstamp) \
	wallet/test/$(DEPDIR)/$(am__dirstamp)

test/test_bitcoin$(EXEEXT): $(test_test_bitcoin_OBJECTS) $(test_test_bitcoin_DEPENDENCIES) $(EXTRA_test_test_bitcoin_DEPENDENCIES) test/$(am__dirstamp)
	@rm -f test/test_bitcoin$(EXEEXT)
	$(AM_V_CXXLD)$(test_test_bitcoin_LINK) $(test_test_bitcoin_OBJECTS) $(test_test_bitcoin_LDADD) $(LIBS)
univalue/test/$(am__dirstamp):
	@$(MKDIR_P) univalue/test
	@: > univalue/test/$(am__dirstamp)
univalue/test/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) univalue/test/$(DEPDIR)
	@: > univalue/test/$(DEPDIR)/$(am__dirstamp)
univalue/test/univalue_test_no_nul-no_nul.$(OBJEXT):  \
	univalue/test/$(am__dirstamp) \
	univalue/test/$(DEPDIR)/$(am__dirstamp)

univalue/test/no_nul$(EXEEXT): $(univalue_test_no_nul_OBJECTS) $(univalue_test_no_nul_DEPENDENCIES) $(EXTRA_univalue_test_no_nul_DEPENDENCIES) univalue/test/$(am__dirstamp)
	@rm -f univalue/test/no_nul$(EXEEXT)
	$(AM_V_CXXLD)$(univalue_test_no_nul_LINK) $(univalue_test_no_nul_OBJECTS) $(univalue_test_no_nul_LDADD) $(LIBS)
univalue/test/univalue_test_object-object.$(OBJEXT):  \
	univalue/test/$(am__dirstamp) \
	univalue/test/$(DEPDIR)/$(am__dirstamp)

univalue/test/object$(EXEEXT): $(univalue_test_object_OBJECTS) $(univalue_test_object_DEPENDENCIES) $(EXTRA_univalue_test_object_DEPENDENCIES) univalue/test/$(am__dirstamp)
	@rm -f univalue/test/object$(EXEEXT)
	$(AM_V_CXXLD)$(univalue_test_object_LINK) $(univalue_test_object_OBJECTS) $(univalue_test_object_LDADD) $(LIBS)
univalue/test/univalue_test_unitester-unitester.$(OBJEXT):  \
	univalue/test/$(am__dirstamp) \
	univalue/test/$(DEPDIR)/$(am__dirstamp)

univalue/test/unitester$(EXEEXT): $(univalue_test_unitester_OBJECTS) $(univalue_test_unitester_DEPENDENCIES) $(EXTRA_univalue_test_unitester_DEPENDENCIES) univalue/test/$(am__dirstamp)
	@rm -f univalue/test/unitester$(EXEEXT)
	$(AM_V_CXXLD)$(univalue_test_unitester_LINK) $(univalue_test_unitester_OBJECTS) $(univalue_test_unitester_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f bench/*.$(OBJEXT)
	-rm -f common/*.$(OBJEXT)
	-rm -f compat/*.$(OBJEXT)
	-rm -f consensus/*.$(OBJEXT)
	-rm -f consensus/*.lo
	-rm -f crc32c/src/*.$(OBJEXT)
	-rm -f crc32c/src/*.lo
	-rm -f crypto/*.$(OBJEXT)
	-rm -f crypto/*.lo
	-rm -f index/*.$(OBJEXT)
	-rm -f init/*.$(OBJEXT)
	-rm -f interfaces/*.$(OBJEXT)
	-rm -f ipc/*.$(OBJEXT)
	-rm -f ipc/capnp/*.$(OBJEXT)
	-rm -f kernel/*.$(OBJEXT)
	-rm -f kernel/*.lo
	-rm -f leveldb/db/*.$(OBJEXT)
	-rm -f leveldb/db/*.lo
	-rm -f leveldb/helpers/memenv/*.$(OBJEXT)
	-rm -f leveldb/helpers/memenv/*.lo
	-rm -f leveldb/table/*.$(OBJEXT)
	-rm -f leveldb/table/*.lo
	-rm -f leveldb/util/*.$(OBJEXT)
	-rm -f leveldb/util/*.lo
	-rm -f minisketch/src/*.$(OBJEXT)
	-rm -f minisketch/src/fields/*.$(OBJEXT)
	-rm -f node/*.$(OBJEXT)
	-rm -f node/*.lo
	-rm -f policy/*.$(OBJEXT)
	-rm -f policy/*.lo
	-rm -f primitives/*.$(OBJEXT)
	-rm -f primitives/*.lo
	-rm -f qt/*.$(OBJEXT)
	-rm -f qt/res/*.$(OBJEXT)
	-rm -f qt/test/*.$(OBJEXT)
	-rm -f rpc/*.$(OBJEXT)
	-rm -f script/*.$(OBJEXT)
	-rm -f script/*.lo
	-rm -f support/*.$(OBJEXT)
	-rm -f support/*.lo
	-rm -f test/*.$(OBJEXT)
	-rm -f test/fuzz/*.$(OBJEXT)
	-rm -f test/util/*.$(OBJEXT)
	-rm -f univalue/lib/*.$(OBJEXT)
	-rm -f univalue/lib/*.lo
	-rm -f univalue/test/*.$(OBJEXT)
	-rm -f util/*.$(OBJEXT)
	-rm -f util/*.lo
	-rm -f wallet/*.$(OBJEXT)
	-rm -f wallet/rpc/*.$(OBJEXT)
	-rm -f wallet/test/*.$(OBJEXT)
	-rm -f wallet/test/fuzz/*.$(OBJEXT)
	-rm -f zmq/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/bitcoin_chainstate-bitcoin-chainstate.Po
include ./$(DEPDIR)/bitcoin_cli-bitcoin-cli.Po
include ./$(DEPDIR)/bitcoin_node-bitcoind.Po
include ./$(DEPDIR)/bitcoin_tx-bitcoin-tx.Po
include ./$(DEPDIR)/bitcoin_util-bitcoin-util.Po
include ./$(DEPDIR)/bitcoin_wallet-bitcoin-wallet.Po
include ./$(DEPDIR)/bitcoind-bitcoind.Po
include ./$(DEPDIR)/libbitcoin_common_a-base58.Po
include ./$(DEPDIR)/libbitcoin_common_a-bech32.Po
include ./$(DEPDIR)/libbitcoin_common_a-chainparams.Po
include ./$(DEPDIR)/libbitcoin_common_a-coins.Po
include ./$(DEPDIR)/libbitcoin_common_a-compressor.Po
include ./$(DEPDIR)/libbitcoin_common_a-core_read.Po
include ./$(DEPDIR)/libbitcoin_common_a-core_write.Po
include ./$(DEPDIR)/libbitcoin_common_a-deploymentinfo.Po
include ./$(DEPDIR)/libbitcoin_common_a-external_signer.Po
include ./$(DEPDIR)/libbitcoin_common_a-key.Po
include ./$(DEPDIR)/libbitcoin_common_a-key_io.Po
include ./$(DEPDIR)/libbitcoin_common_a-merkleblock.Po
include ./$(DEPDIR)/libbitcoin_common_a-net_permissions.Po
include ./$(DEPDIR)/libbitcoin_common_a-net_types.Po
include ./$(DEPDIR)/libbitcoin_common_a-netaddress.Po
include ./$(DEPDIR)/libbitcoin_common_a-netbase.Po
include ./$(DEPDIR)/libbitcoin_common_a-outputtype.Po
include ./$(DEPDIR)/libbitcoin_common_a-protocol.Po
include ./$(DEPDIR)/libbitcoin_common_a-psbt.Po
include ./$(DEPDIR)/libbitcoin_common_a-scheduler.Po
include ./$(DEPDIR)/libbitcoin_common_a-warnings.Po
include ./$(DEPDIR)/libbitcoin_consensus_a-arith_uint256.Po
include ./$(DEPDIR)/libbitcoin_consensus_a-hash.Po
include ./$(DEPDIR)/libbitcoin_consensus_a-pubkey.Po
include ./$(DEPDIR)/libbitcoin_consensus_a-uint256.Po
include ./$(DEPDIR)/libbitcoin_node_a-addrdb.Po
include ./$(DEPDIR)/libbitcoin_node_a-addrman.Po
include ./$(DEPDIR)/libbitcoin_node_a-banman.Po
include ./$(DEPDIR)/libbitcoin_node_a-blockencodings.Po
include ./$(DEPDIR)/libbitcoin_node_a-blockfilter.Po
include ./$(DEPDIR)/libbitcoin_node_a-chain.Po
include ./$(DEPDIR)/libbitcoin_node_a-dbwrapper.Po
include ./$(DEPDIR)/libbitcoin_node_a-deploymentstatus.Po
include ./$(DEPDIR)/libbitcoin_node_a-dummywallet.Po
include ./$(DEPDIR)/libbitcoin_node_a-flatfile.Po
include ./$(DEPDIR)/libbitcoin_node_a-httprpc.Po
include ./$(DEPDIR)/libbitcoin_node_a-httpserver.Po
include ./$(DEPDIR)/libbitcoin_node_a-i2p.Po
include ./$(DEPDIR)/libbitcoin_node_a-init.Po
include ./$(DEPDIR)/libbitcoin_node_a-mapport.Po
include ./$(DEPDIR)/libbitcoin_node_a-net.Po
include ./$(DEPDIR)/libbitcoin_node_a-net_processing.Po
include ./$(DEPDIR)/libbitcoin_node_a-netgroup.Po
include ./$(DEPDIR)/libbitcoin_node_a-noui.Po
include ./$(DEPDIR)/libbitcoin_node_a-pow.Po
include ./$(DEPDIR)/libbitcoin_node_a-rest.Po
include ./$(DEPDIR)/libbitcoin_node_a-shutdown.Po
include ./$(DEPDIR)/libbitcoin_node_a-signet.Po
include ./$(DEPDIR)/libbitcoin_node_a-timedata.Po
include ./$(DEPDIR)/libbitcoin_node_a-torcontrol.Po
include ./$(DEPDIR)/libbitcoin_node_a-txdb.Po
include ./$(DEPDIR)/libbitcoin_node_a-txmempool.Po
include ./$(DEPDIR)/libbitcoin_node_a-txorphanage.Po
include ./$(DEPDIR)/libbitcoin_node_a-txrequest.Po
include ./$(DEPDIR)/libbitcoin_node_a-validation.Po
include ./$(DEPDIR)/libbitcoin_node_a-validationinterface.Po
include ./$(DEPDIR)/libbitcoin_node_a-versionbits.Po
include ./$(DEPDIR)/libbitcoin_util_a-chainparamsbase.Po
include ./$(DEPDIR)/libbitcoin_util_a-clientversion.Po
include ./$(DEPDIR)/libbitcoin_util_a-fs.Po
include ./$(DEPDIR)/libbitcoin_util_a-logging.Po
include ./$(DEPDIR)/libbitcoin_util_a-random.Po
include ./$(DEPDIR)/libbitcoin_util_a-randomenv.Po
include ./$(DEPDIR)/libbitcoin_util_a-sync.Po
include ./$(DEPDIR)/libbitcoin_util_a-threadinterrupt.Po
include ./$(DEPDIR)/libbitcoinconsensus_la-arith_uint256.Plo
include ./$(DEPDIR)/libbitcoinconsensus_la-hash.Plo
include ./$(DEPDIR)/libbitcoinconsensus_la-pubkey.Plo
include ./$(DEPDIR)/libbitcoinconsensus_la-uint256.Plo
include ./$(DEPDIR)/libbitcoinkernel_la-arith_uint256.Plo
include ./$(DEPDIR)/libbitcoinkernel_la-chain.Plo
include ./$(DEPDIR)/libbitcoinkernel_la-chainparams.Plo
include ./$(DEPDIR)/libbitcoinkernel_la-chainparamsbase.Plo
include ./$(DEPDIR)/libbitcoinkernel_la-clientversion.Plo
include ./$(DEPDIR)/libbitcoinkernel_la-coins.Plo
include ./$(DEPDIR)/libbitcoinkernel_la-compressor.Plo
include ./$(DEPDIR)/libbitcoinkernel_la-core_read.Plo
include ./$(DEPDIR)/libbitcoinkernel_la-dbwrapper.Plo
include ./$(DEPDIR)/libbitcoinkernel_la-deploymentinfo.Plo
include ./$(DEPDIR)/libbitcoinkernel_la-deploymentstatus.Plo
include ./$(DEPDIR)/libbitcoinkernel_la-flatfile.Plo
include ./$(DEPDIR)/libbitcoinkernel_la-fs.Plo
include ./$(DEPDIR)/libbitcoinkernel_la-hash.Plo
include ./$(DEPDIR)/libbitcoinkernel_la-key.Plo
include ./$(DEPDIR)/libbitcoinkernel_la-logging.Plo
include ./$(DEPDIR)/libbitcoinkernel_la-pow.Plo
include ./$(DEPDIR)/libbitcoinkernel_la-pubkey.Plo
include ./$(DEPDIR)/libbitcoinkernel_la-random.Plo
include ./$(DEPDIR)/libbitcoinkernel_la-randomenv.Plo
include ./$(DEPDIR)/libbitcoinkernel_la-scheduler.Plo
include ./$(DEPDIR)/libbitcoinkernel_la-shutdown.Plo
include ./$(DEPDIR)/libbitcoinkernel_la-signet.Plo
include ./$(DEPDIR)/libbitcoinkernel_la-sync.Plo
include ./$(DEPDIR)/libbitcoinkernel_la-threadinterrupt.Plo
include ./$(DEPDIR)/libbitcoinkernel_la-txdb.Plo
include ./$(DEPDIR)/libbitcoinkernel_la-txmempool.Plo
include ./$(DEPDIR)/libbitcoinkernel_la-uint256.Plo
include ./$(DEPDIR)/libbitcoinkernel_la-validation.Plo
include ./$(DEPDIR)/libbitcoinkernel_la-validationinterface.Plo
include ./$(DEPDIR)/libbitcoinkernel_la-versionbits.Plo
include ./$(DEPDIR)/libbitcoinkernel_la-warnings.Plo
include bench/$(DEPDIR)/bench_bench_bitcoin-addrman.Po
include bench/$(DEPDIR)/bench_bench_bitcoin-base58.Po
include bench/$(DEPDIR)/bench_bench_bitcoin-bech32.Po
include bench/$(DEPDIR)/bench_bench_bitcoin-bench.Po
include bench/$(DEPDIR)/bench_bench_bitcoin-bench_bitcoin.Po
include bench/$(DEPDIR)/bench_bench_bitcoin-block_assemble.Po
include bench/$(DEPDIR)/bench_bench_bitcoin-ccoins_caching.Po
include bench/$(DEPDIR)/bench_bench_bitcoin-chacha20.Po
include bench/$(DEPDIR)/bench_bench_bitcoin-chacha_poly_aead.Po
include bench/$(DEPDIR)/bench_bench_bitcoin-checkblock.Po
include bench/$(DEPDIR)/bench_bench_bitcoin-checkqueue.Po
include bench/$(DEPDIR)/bench_bench_bitcoin-coin_selection.Po
include bench/$(DEPDIR)/bench_bench_bitcoin-crypto_hash.Po
include bench/$(DEPDIR)/bench_bench_bitcoin-data.Po
include bench/$(DEPDIR)/bench_bench_bitcoin-duplicate_inputs.Po
include bench/$(DEPDIR)/bench_bench_bitcoin-examples.Po
include bench/$(DEPDIR)/bench_bench_bitcoin-gcs_filter.Po
include bench/$(DEPDIR)/bench_bench_bitcoin-hashpadding.Po
include bench/$(DEPDIR)/bench_bench_bitcoin-lockedpool.Po
include bench/$(DEPDIR)/bench_bench_bitcoin-logging.Po
include bench/$(DEPDIR)/bench_bench_bitcoin-mempool_eviction.Po
include bench/$(DEPDIR)/bench_bench_bitcoin-mempool_stress.Po
include bench/$(DEPDIR)/bench_bench_bitcoin-merkle_root.Po
include bench/$(DEPDIR)/bench_bench_bitcoin-nanobench.Po
include bench/$(DEPDIR)/bench_bench_bitcoin-peer_eviction.Po
include bench/$(DEPDIR)/bench_bench_bitcoin-poly1305.Po
include bench/$(DEPDIR)/bench_bench_bitcoin-prevector.Po
include bench/$(DEPDIR)/bench_bench_bitcoin-rollingbloom.Po
include bench/$(DEPDIR)/bench_bench_bitcoin-rpc_blockchain.Po
include bench/$(DEPDIR)/bench_bench_bitcoin-rpc_mempool.Po
include bench/$(DEPDIR)/bench_bench_bitcoin-strencodings.Po
include bench/$(DEPDIR)/bench_bench_bitcoin-util_time.Po
include bench/$(DEPDIR)/bench_bench_bitcoin-verify_script.Po
include bench/$(DEPDIR)/bench_bench_bitcoin-wallet_balance.Po
include bench/$(DEPDIR)/bench_bench_bitcoin-wallet_loading.Po
include common/$(DEPDIR)/libbitcoin_common_a-bloom.Po
include compat/$(DEPDIR)/libbitcoin_cli_a-stdin.Po
include consensus/$(DEPDIR)/libbitcoin_consensus_a-merkle.Po
include consensus/$(DEPDIR)/libbitcoin_consensus_a-tx_check.Po
include consensus/$(DEPDIR)/libbitcoin_node_a-tx_verify.Po
include consensus/$(DEPDIR)/libbitcoinconsensus_la-merkle.Plo
include consensus/$(DEPDIR)/libbitcoinconsensus_la-tx_check.Plo
include consensus/$(DEPDIR)/libbitcoinkernel_la-merkle.Plo
include consensus/$(DEPDIR)/libbitcoinkernel_la-tx_check.Plo
include consensus/$(DEPDIR)/libbitcoinkernel_la-tx_verify.Plo
include crc32c/src/$(DEPDIR)/crc32c_libcrc32c_arm_crc_la-crc32c_arm64.Plo
include crc32c/src/$(DEPDIR)/crc32c_libcrc32c_la-crc32c.Plo
include crc32c/src/$(DEPDIR)/crc32c_libcrc32c_la-crc32c_portable.Plo
include crc32c/src/$(DEPDIR)/crc32c_libcrc32c_sse42_la-crc32c_sse42.Plo
include crypto/$(DEPDIR)/crypto_libbitcoin_crypto_arm_shani_la-sha256_arm_shani.Plo
include crypto/$(DEPDIR)/crypto_libbitcoin_crypto_avx2_la-sha256_avx2.Plo
include crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-aes.Plo
include crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-chacha20.Plo
include crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-chacha_poly_aead.Plo
include crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-hkdf_sha256_32.Plo
include crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-hmac_sha256.Plo
include crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-hmac_sha512.Plo
include crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-muhash.Plo
include crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-poly1305.Plo
include crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-ripemd160.Plo
include crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-sha1.Plo
include crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-sha256.Plo
include crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-sha256_sse4.Plo
include crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-sha3.Plo
include crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-sha512.Plo
include crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-siphash.Plo
include crypto/$(DEPDIR)/crypto_libbitcoin_crypto_sse41_la-sha256_sse41.Plo
include crypto/$(DEPDIR)/crypto_libbitcoin_crypto_x86_shani_la-sha256_x86_shani.Plo
include crypto/$(DEPDIR)/libbitcoinconsensus_la-aes.Plo
include crypto/$(DEPDIR)/libbitcoinconsensus_la-chacha20.Plo
include crypto/$(DEPDIR)/libbitcoinconsensus_la-chacha_poly_aead.Plo
include crypto/$(DEPDIR)/libbitcoinconsensus_la-hkdf_sha256_32.Plo
include crypto/$(DEPDIR)/libbitcoinconsensus_la-hmac_sha256.Plo
include crypto/$(DEPDIR)/libbitcoinconsensus_la-hmac_sha512.Plo
include crypto/$(DEPDIR)/libbitcoinconsensus_la-muhash.Plo
include crypto/$(DEPDIR)/libbitcoinconsensus_la-poly1305.Plo
include crypto/$(DEPDIR)/libbitcoinconsensus_la-ripemd160.Plo
include crypto/$(DEPDIR)/libbitcoinconsensus_la-sha1.Plo
include crypto/$(DEPDIR)/libbitcoinconsensus_la-sha256.Plo
include crypto/$(DEPDIR)/libbitcoinconsensus_la-sha256_sse4.Plo
include crypto/$(DEPDIR)/libbitcoinconsensus_la-sha3.Plo
include crypto/$(DEPDIR)/libbitcoinconsensus_la-sha512.Plo
include crypto/$(DEPDIR)/libbitcoinconsensus_la-siphash.Plo
include index/$(DEPDIR)/libbitcoin_node_a-base.Po
include index/$(DEPDIR)/libbitcoin_node_a-blockfilterindex.Po
include index/$(DEPDIR)/libbitcoin_node_a-coinstatsindex.Po
include index/$(DEPDIR)/libbitcoin_node_a-txindex.Po
include init/$(DEPDIR)/bitcoin_gui-bitcoin-gui.Po
include init/$(DEPDIR)/bitcoin_node-bitcoin-node.Po
include init/$(DEPDIR)/bitcoin_wallet-bitcoin-wallet.Po
include init/$(DEPDIR)/bitcoind-bitcoind.Po
include init/$(DEPDIR)/libbitcoin_common_a-common.Po
include init/$(DEPDIR)/qt_bitcoin_qt-bitcoin-qt.Po
include init/$(DEPDIR)/qt_test_test_bitcoin_qt-bitcoin-qt.Po
include interfaces/$(DEPDIR)/libbitcoin_util_a-echo.Po
include interfaces/$(DEPDIR)/libbitcoin_util_a-handler.Po
include interfaces/$(DEPDIR)/libbitcoin_util_a-init.Po
include ipc/$(DEPDIR)/libbitcoin_ipc_a-interfaces.Po
include ipc/$(DEPDIR)/libbitcoin_ipc_a-process.Po
include ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-echo.capnp.Po
include ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-echo.capnp.proxy-client.Po
include ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-echo.capnp.proxy-server.Po
include ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-echo.capnp.proxy-types.Po
include ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-init.capnp.Po
include ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-init.capnp.proxy-client.Po
include ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-init.capnp.proxy-server.Po
include ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-init.capnp.proxy-types.Po
include ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-protocol.Po
include kernel/$(DEPDIR)/libbitcoin_node_a-checks.Po
include kernel/$(DEPDIR)/libbitcoin_node_a-coinstats.Po
include kernel/$(DEPDIR)/libbitcoin_node_a-context.Po
include kernel/$(DEPDIR)/libbitcoinkernel_la-bitcoinkernel.Plo
include kernel/$(DEPDIR)/libbitcoinkernel_la-checks.Plo
include kernel/$(DEPDIR)/libbitcoinkernel_la-coinstats.Plo
include kernel/$(DEPDIR)/libbitcoinkernel_la-context.Plo
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-builder.Plo
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-c.Plo
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-db_impl.Plo
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-db_iter.Plo
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-dbformat.Plo
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-dumpfile.Plo
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-filename.Plo
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-log_reader.Plo
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-log_writer.Plo
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-memtable.Plo
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-repair.Plo
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-table_cache.Plo
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-version_edit.Plo
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-version_set.Plo
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-write_batch.Plo
include leveldb/helpers/memenv/$(DEPDIR)/leveldb_libmemenv_la-memenv.Plo
include leveldb/table/$(DEPDIR)/leveldb_libleveldb_la-block.Plo
include leveldb/table/$(DEPDIR)/leveldb_libleveldb_la-block_builder.Plo
include leveldb/table/$(DEPDIR)/leveldb_libleveldb_la-filter_block.Plo
include leveldb/table/$(DEPDIR)/leveldb_libleveldb_la-format.Plo
include leveldb/table/$(DEPDIR)/leveldb_libleveldb_la-iterator.Plo
include leveldb/table/$(DEPDIR)/leveldb_libleveldb_la-merger.Plo
include leveldb/table/$(DEPDIR)/leveldb_libleveldb_la-table.Plo
include leveldb/table/$(DEPDIR)/leveldb_libleveldb_la-table_builder.Plo
include leveldb/table/$(DEPDIR)/leveldb_libleveldb_la-two_level_iterator.Plo
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-arena.Plo
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-bloom.Plo
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-cache.Plo
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-coding.Plo
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-comparator.Plo
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-crc32c.Plo
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-env.Plo
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-env_posix.Plo
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-env_windows.Plo
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-filter_policy.Plo
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-hash.Plo
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-histogram.Plo
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-logging.Plo
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-options.Plo
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-status.Plo
include minisketch/src/$(DEPDIR)/minisketch_libminisketch_a-minisketch.Po
include minisketch/src/$(DEPDIR)/minisketch_test-test.Po
include minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_a-generic_1byte.Po
include minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_a-generic_2bytes.Po
include minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_a-generic_3bytes.Po
include minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_a-generic_4bytes.Po
include minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_a-generic_5bytes.Po
include minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_a-generic_6bytes.Po
include minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_a-generic_7bytes.Po
include minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_a-generic_8bytes.Po
include minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_clmul_a-clmul_1byte.Po
include minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_clmul_a-clmul_2bytes.Po
include minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_clmul_a-clmul_3bytes.Po
include minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_clmul_a-clmul_4bytes.Po
include minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_clmul_a-clmul_5bytes.Po
include minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_clmul_a-clmul_6bytes.Po
include minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_clmul_a-clmul_7bytes.Po
include minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_clmul_a-clmul_8bytes.Po
include node/$(DEPDIR)/libbitcoin_node_a-blockstorage.Po
include node/$(DEPDIR)/libbitcoin_node_a-caches.Po
include node/$(DEPDIR)/libbitcoin_node_a-chainstate.Po
include node/$(DEPDIR)/libbitcoin_node_a-coin.Po
include node/$(DEPDIR)/libbitcoin_node_a-context.Po
include node/$(DEPDIR)/libbitcoin_node_a-interfaces.Po
include node/$(DEPDIR)/libbitcoin_node_a-miner.Po
include node/$(DEPDIR)/libbitcoin_node_a-minisketchwrapper.Po
include node/$(DEPDIR)/libbitcoin_node_a-psbt.Po
include node/$(DEPDIR)/libbitcoin_node_a-transaction.Po
include node/$(DEPDIR)/libbitcoin_node_a-ui_interface.Po
include node/$(DEPDIR)/libbitcoinkernel_la-blockstorage.Plo
include node/$(DEPDIR)/libbitcoinkernel_la-chainstate.Plo
include node/$(DEPDIR)/libbitcoinkernel_la-ui_interface.Plo
include policy/$(DEPDIR)/libbitcoin_common_a-feerate.Po
include policy/$(DEPDIR)/libbitcoin_common_a-policy.Po
include policy/$(DEPDIR)/libbitcoin_node_a-fees.Po
include policy/$(DEPDIR)/libbitcoin_node_a-packages.Po
include policy/$(DEPDIR)/libbitcoin_node_a-rbf.Po
include policy/$(DEPDIR)/libbitcoin_node_a-settings.Po
include policy/$(DEPDIR)/libbitcoinkernel_la-feerate.Plo
include policy/$(DEPDIR)/libbitcoinkernel_la-fees.Plo
include policy/$(DEPDIR)/libbitcoinkernel_la-packages.Plo
include policy/$(DEPDIR)/libbitcoinkernel_la-policy.Plo
include policy/$(DEPDIR)/libbitcoinkernel_la-rbf.Plo
include policy/$(DEPDIR)/libbitcoinkernel_la-settings.Plo
include primitives/$(DEPDIR)/libbitcoin_consensus_a-block.Po
include primitives/$(DEPDIR)/libbitcoin_consensus_a-transaction.Po
include primitives/$(DEPDIR)/libbitcoinconsensus_la-block.Plo
include primitives/$(DEPDIR)/libbitcoinconsensus_la-transaction.Plo
include primitives/$(DEPDIR)/libbitcoinkernel_la-block.Plo
include primitives/$(DEPDIR)/libbitcoinkernel_la-transaction.Plo
include qt/$(DEPDIR)/bitcoin_gui-main.Po
include qt/$(DEPDIR)/qt_bitcoin_qt-main.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-addressbookpage.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-addresstablemodel.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-askpassphrasedialog.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-bantablemodel.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoin.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoinaddressvalidator.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoinamountfield.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoingui.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoinunits.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-clientmodel.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-coincontroldialog.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-coincontroltreewidget.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-createwalletdialog.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-csvmodelwriter.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-editaddressdialog.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-guiutil.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-initexecutor.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-intro.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-macdockiconhandler.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-macnotificationhandler.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-macos_appnap.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_addressbookpage.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_addresstablemodel.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_askpassphrasedialog.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bantablemodel.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoin.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoinaddressvalidator.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoinamountfield.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoingui.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoinunits.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_clientmodel.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_coincontroldialog.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_coincontroltreewidget.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_createwalletdialog.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_csvmodelwriter.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_editaddressdialog.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_guiutil.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_initexecutor.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_intro.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_macdockiconhandler.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_macnotificationhandler.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_modaloverlay.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_notificator.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_openuridialog.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_optionsdialog.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_optionsmodel.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_overviewpage.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_paymentserver.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_peertablemodel.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_peertablesortproxy.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_psbtoperationsdialog.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_qrimagewidget.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_qvalidatedlineedit.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_qvaluecombobox.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_receivecoinsdialog.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_receiverequestdialog.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_recentrequeststablemodel.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_rpcconsole.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_sendcoinsdialog.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_sendcoinsentry.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_signverifymessagedialog.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_splashscreen.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_trafficgraphwidget.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactiondesc.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactiondescdialog.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactionfilterproxy.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactionoverviewwidget.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactiontablemodel.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactionview.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_utilitydialog.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_walletcontroller.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_walletframe.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_walletmodel.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_walletview.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-modaloverlay.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-networkstyle.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-notificator.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-openuridialog.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-optionsdialog.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-optionsmodel.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-overviewpage.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-paymentserver.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-peertablemodel.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-peertablesortproxy.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-platformstyle.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-psbtoperationsdialog.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-qrc_bitcoin.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-qrc_bitcoin_locale.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-qrimagewidget.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-qvalidatedlineedit.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-qvaluecombobox.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-receivecoinsdialog.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-receiverequestdialog.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-recentrequeststablemodel.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-rpcconsole.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-sendcoinsdialog.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-sendcoinsentry.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-signverifymessagedialog.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-splashscreen.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-trafficgraphwidget.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-transactiondesc.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-transactiondescdialog.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-transactionfilterproxy.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-transactionrecord.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-transactiontablemodel.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-transactionview.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-utilitydialog.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-walletcontroller.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-walletframe.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-walletmodel.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-walletmodeltransaction.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-walletview.Po
include qt/$(DEPDIR)/qt_libbitcoinqt_a-winshutdownmonitor.Po
include qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-addressbooktests.Po
include qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-apptests.Po
include qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-moc_addressbooktests.Po
include qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-moc_apptests.Po
include qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-moc_optiontests.Po
include qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-moc_rpcnestedtests.Po
include qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-moc_uritests.Po
include qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-moc_wallettests.Po
include qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-optiontests.Po
include qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-rpcnestedtests.Po
include qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-test_main.Po
include qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-uritests.Po
include qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-util.Po
include qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-wallettests.Po
include rpc/$(DEPDIR)/libbitcoin_cli_a-client.Po
include rpc/$(DEPDIR)/libbitcoin_common_a-external_signer.Po
include rpc/$(DEPDIR)/libbitcoin_common_a-rawtransaction_util.Po
include rpc/$(DEPDIR)/libbitcoin_common_a-util.Po
include rpc/$(DEPDIR)/libbitcoin_node_a-blockchain.Po
include rpc/$(DEPDIR)/libbitcoin_node_a-fees.Po
include rpc/$(DEPDIR)/libbitcoin_node_a-mempool.Po
include rpc/$(DEPDIR)/libbitcoin_node_a-mining.Po
include rpc/$(DEPDIR)/libbitcoin_node_a-net.Po
include rpc/$(DEPDIR)/libbitcoin_node_a-node.Po
include rpc/$(DEPDIR)/libbitcoin_node_a-output_script.Po
include rpc/$(DEPDIR)/libbitcoin_node_a-rawtransaction.Po
include rpc/$(DEPDIR)/libbitcoin_node_a-server.Po
include rpc/$(DEPDIR)/libbitcoin_node_a-server_util.Po
include rpc/$(DEPDIR)/libbitcoin_node_a-signmessage.Po
include rpc/$(DEPDIR)/libbitcoin_node_a-txoutproof.Po
include rpc/$(DEPDIR)/libbitcoin_util_a-request.Po
include script/$(DEPDIR)/libbitcoin_common_a-descriptor.Po
include script/$(DEPDIR)/libbitcoin_common_a-miniscript.Po
include script/$(DEPDIR)/libbitcoin_common_a-sign.Po
include script/$(DEPDIR)/libbitcoin_common_a-signingprovider.Po
include script/$(DEPDIR)/libbitcoin_common_a-standard.Po
include script/$(DEPDIR)/libbitcoin_consensus_a-bitcoinconsensus.Po
include script/$(DEPDIR)/libbitcoin_consensus_a-interpreter.Po
include script/$(DEPDIR)/libbitcoin_consensus_a-script.Po
include script/$(DEPDIR)/libbitcoin_consensus_a-script_error.Po
include script/$(DEPDIR)/libbitcoin_node_a-sigcache.Po
include script/$(DEPDIR)/libbitcoinconsensus_la-bitcoinconsensus.Plo
include script/$(DEPDIR)/libbitcoinconsensus_la-interpreter.Plo
include script/$(DEPDIR)/libbitcoinconsensus_la-script.Plo
include script/$(DEPDIR)/libbitcoinconsensus_la-script_error.Plo
include script/$(DEPDIR)/libbitcoinkernel_la-interpreter.Plo
include script/$(DEPDIR)/libbitcoinkernel_la-script.Plo
include script/$(DEPDIR)/libbitcoinkernel_la-script_error.Plo
include script/$(DEPDIR)/libbitcoinkernel_la-sigcache.Plo
include script/$(DEPDIR)/libbitcoinkernel_la-standard.Plo
include support/$(DEPDIR)/libbitcoin_util_a-cleanse.Po
include support/$(DEPDIR)/libbitcoin_util_a-lockedpool.Po
include support/$(DEPDIR)/libbitcoinconsensus_la-cleanse.Plo
include support/$(DEPDIR)/libbitcoinkernel_la-cleanse.Plo
include support/$(DEPDIR)/libbitcoinkernel_la-lockedpool.Plo
include test/$(DEPDIR)/test_test_bitcoin-addrman_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-allocator_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-amount_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-arith_uint256_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-banman_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-base32_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-base58_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-base64_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-bech32_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-bip32_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-blockchain_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-blockencodings_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-blockfilter_index_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-blockfilter_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-bloom_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-bswap_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-checkqueue_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-coins_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-coinstatsindex_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-compilerbug_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-compress_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-crypto_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-cuckoocache_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-dbwrapper_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-denialofservice_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-descriptor_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-flatfile_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-fs_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-getarg_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-hash_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-httpserver_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-i2p_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-interfaces_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-key_io_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-key_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-logging_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-main.Po
include test/$(DEPDIR)/test_test_bitcoin-mempool_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-merkle_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-merkleblock_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-miner_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-miniscript_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-minisketch_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-multisig_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-net_peer_eviction_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-net_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-netbase_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-orphanage_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-pmt_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-policy_fee_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-policyestimator_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-pow_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-prevector_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-raii_event_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-random_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-rest_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-reverselock_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-rpc_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-sanity_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-scheduler_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-script_p2sh_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-script_parse_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-script_segwit_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-script_standard_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-script_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-scriptnum_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-serfloat_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-serialize_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-settings_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-sighash_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-sigopcount_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-skiplist_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-sock_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-streams_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-sync_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-system_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-timedata_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-torcontrol_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-transaction_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-txindex_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-txpackage_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-txrequest_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-txvalidation_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-txvalidationcache_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-uint256_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-util_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-util_threadnames_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-validation_block_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-validation_chainstate_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-validation_chainstatemanager_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-validation_flush_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-validation_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-validationinterface_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-versionbits_tests.Po
include test/fuzz/$(DEPDIR)/libtest_fuzz_a-fuzz.Po
include test/fuzz/$(DEPDIR)/libtest_fuzz_a-util.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-addition_overflow.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-addrman.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-asmap.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-asmap_direct.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-autofile.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-banman.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-base_encode_decode.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-bech32.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-block.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-block_header.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-blockfilter.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-bloom_filter.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-buffered_file.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-chain.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-checkqueue.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-coins_view.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-connman.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto_aes256.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto_aes256cbc.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto_chacha20.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto_chacha20_poly1305_aead.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto_common.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto_diff_fuzz_chacha20.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto_hkdf_hmac_sha256_l32.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto_poly1305.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-cuckoocache.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-decode_tx.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-descriptor_parse.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-deserialize.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-eval_script.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-fee_rate.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-fees.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-flatfile.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-float.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-golomb_rice.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-hex.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-http_request.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-i2p.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-integer.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-key.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-key_io.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-kitchen_sink.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-load_external_block_file.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-locale.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-merkleblock.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-message.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-miniscript.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-minisketch.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-muhash.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-multiplication_overflow.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-net.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-net_permissions.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-netaddress.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-netbase_dns_lookup.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-node_eviction.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-p2p_transport_serialization.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-parse_hd_keypath.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-parse_iso8601.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-parse_numbers.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-parse_script.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-parse_univalue.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-policy_estimator.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-policy_estimator_io.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-pow.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-prevector.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-primitives_transaction.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-process_message.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-process_messages.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-protocol.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-psbt.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-random.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-rbf.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-rolling_bloom_filter.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-rpc.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_assets_test_minimizer.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_bitcoin_consensus.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_descriptor_cache.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_flags.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_format.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_interpreter.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_ops.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_sigcache.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_sign.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-scriptnum_ops.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-secp256k1_ec_seckey_import_export_der.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-secp256k1_ecdsa_signature_parse_der_lax.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-signature_checker.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-signet.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-socks5.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-span.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-spanparsing.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-string.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-strprintf.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-system.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-timedata.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-torcontrol.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-transaction.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-tx_in.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-tx_out.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-tx_pool.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-txrequest.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-utxo_snapshot.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-validation_load_mempool.Po
include test/fuzz/$(DEPDIR)/test_fuzz_fuzz-versionbits.Po
include test/util/$(DEPDIR)/libtest_util_a-blockfilter.Po
include test/util/$(DEPDIR)/libtest_util_a-logging.Po
include test/util/$(DEPDIR)/libtest_util_a-mining.Po
include test/util/$(DEPDIR)/libtest_util_a-net.Po
include test/util/$(DEPDIR)/libtest_util_a-script.Po
include test/util/$(DEPDIR)/libtest_util_a-setup_common.Po
include test/util/$(DEPDIR)/libtest_util_a-str.Po
include test/util/$(DEPDIR)/libtest_util_a-transaction_utils.Po
include test/util/$(DEPDIR)/libtest_util_a-validation.Po
include test/util/$(DEPDIR)/libtest_util_a-wallet.Po
include univalue/lib/$(DEPDIR)/libunivalue_la-univalue.Plo
include univalue/lib/$(DEPDIR)/libunivalue_la-univalue_get.Plo
include univalue/lib/$(DEPDIR)/libunivalue_la-univalue_read.Plo
include univalue/lib/$(DEPDIR)/libunivalue_la-univalue_write.Plo
include univalue/test/$(DEPDIR)/univalue_test_no_nul-no_nul.Po
include univalue/test/$(DEPDIR)/univalue_test_object-object.Po
include univalue/test/$(DEPDIR)/univalue_test_unitester-unitester.Po
include util/$(DEPDIR)/libbitcoin_consensus_a-strencodings.Po
include util/$(DEPDIR)/libbitcoin_util_a-asmap.Po
include util/$(DEPDIR)/libbitcoin_util_a-bip32.Po
include util/$(DEPDIR)/libbitcoin_util_a-bytevectorhash.Po
include util/$(DEPDIR)/libbitcoin_util_a-check.Po
include util/$(DEPDIR)/libbitcoin_util_a-error.Po
include util/$(DEPDIR)/libbitcoin_util_a-fees.Po
include util/$(DEPDIR)/libbitcoin_util_a-getuniquepath.Po
include util/$(DEPDIR)/libbitcoin_util_a-hasher.Po
include util/$(DEPDIR)/libbitcoin_util_a-message.Po
include util/$(DEPDIR)/libbitcoin_util_a-moneystr.Po
include util/$(DEPDIR)/libbitcoin_util_a-rbf.Po
include util/$(DEPDIR)/libbitcoin_util_a-readwritefile.Po
include util/$(DEPDIR)/libbitcoin_util_a-serfloat.Po
include util/$(DEPDIR)/libbitcoin_util_a-settings.Po
include util/$(DEPDIR)/libbitcoin_util_a-sock.Po
include util/$(DEPDIR)/libbitcoin_util_a-spanparsing.Po
include util/$(DEPDIR)/libbitcoin_util_a-strencodings.Po
include util/$(DEPDIR)/libbitcoin_util_a-string.Po
include util/$(DEPDIR)/libbitcoin_util_a-syscall_sandbox.Po
include util/$(DEPDIR)/libbitcoin_util_a-syserror.Po
include util/$(DEPDIR)/libbitcoin_util_a-system.Po
include util/$(DEPDIR)/libbitcoin_util_a-thread.Po
include util/$(DEPDIR)/libbitcoin_util_a-threadnames.Po
include util/$(DEPDIR)/libbitcoin_util_a-time.Po
include util/$(DEPDIR)/libbitcoin_util_a-tokenpipe.Po
include util/$(DEPDIR)/libbitcoin_util_a-url.Po
include util/$(DEPDIR)/libbitcoinconsensus_la-strencodings.Plo
include util/$(DEPDIR)/libbitcoinkernel_la-bytevectorhash.Plo
include util/$(DEPDIR)/libbitcoinkernel_la-check.Plo
include util/$(DEPDIR)/libbitcoinkernel_la-getuniquepath.Plo
include util/$(DEPDIR)/libbitcoinkernel_la-hasher.Plo
include util/$(DEPDIR)/libbitcoinkernel_la-moneystr.Plo
include util/$(DEPDIR)/libbitcoinkernel_la-rbf.Plo
include util/$(DEPDIR)/libbitcoinkernel_la-serfloat.Plo
include util/$(DEPDIR)/libbitcoinkernel_la-settings.Plo
include util/$(DEPDIR)/libbitcoinkernel_la-strencodings.Plo
include util/$(DEPDIR)/libbitcoinkernel_la-string.Plo
include util/$(DEPDIR)/libbitcoinkernel_la-syscall_sandbox.Plo
include util/$(DEPDIR)/libbitcoinkernel_la-syserror.Plo
include util/$(DEPDIR)/libbitcoinkernel_la-system.Plo
include util/$(DEPDIR)/libbitcoinkernel_la-thread.Plo
include util/$(DEPDIR)/libbitcoinkernel_la-threadnames.Plo
include util/$(DEPDIR)/libbitcoinkernel_la-time.Plo
include util/$(DEPDIR)/libbitcoinkernel_la-tokenpipe.Plo
include wallet/$(DEPDIR)/libbitcoin_node_a-init.Po
include wallet/$(DEPDIR)/libbitcoin_wallet_a-bdb.Po
include wallet/$(DEPDIR)/libbitcoin_wallet_a-coincontrol.Po
include wallet/$(DEPDIR)/libbitcoin_wallet_a-coinselection.Po
include wallet/$(DEPDIR)/libbitcoin_wallet_a-context.Po
include wallet/$(DEPDIR)/libbitcoin_wallet_a-crypter.Po
include wallet/$(DEPDIR)/libbitcoin_wallet_a-db.Po
include wallet/$(DEPDIR)/libbitcoin_wallet_a-dump.Po
include wallet/$(DEPDIR)/libbitcoin_wallet_a-external_signer_scriptpubkeyman.Po
include wallet/$(DEPDIR)/libbitcoin_wallet_a-feebumper.Po
include wallet/$(DEPDIR)/libbitcoin_wallet_a-fees.Po
include wallet/$(DEPDIR)/libbitcoin_wallet_a-interfaces.Po
include wallet/$(DEPDIR)/libbitcoin_wallet_a-load.Po
include wallet/$(DEPDIR)/libbitcoin_wallet_a-receive.Po
include wallet/$(DEPDIR)/libbitcoin_wallet_a-salvage.Po
include wallet/$(DEPDIR)/libbitcoin_wallet_a-scriptpubkeyman.Po
include wallet/$(DEPDIR)/libbitcoin_wallet_a-spend.Po
include wallet/$(DEPDIR)/libbitcoin_wallet_a-sqlite.Po
include wallet/$(DEPDIR)/libbitcoin_wallet_a-transaction.Po
include wallet/$(DEPDIR)/libbitcoin_wallet_a-wallet.Po
include wallet/$(DEPDIR)/libbitcoin_wallet_a-walletdb.Po
include wallet/$(DEPDIR)/libbitcoin_wallet_a-walletutil.Po
include wallet/$(DEPDIR)/libbitcoin_wallet_tool_a-wallettool.Po
include wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-addresses.Po
include wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-backup.Po
include wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-coins.Po
include wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-encrypt.Po
include wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-signmessage.Po
include wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-spend.Po
include wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-transactions.Po
include wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-util.Po
include wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-wallet.Po
include wallet/test/$(DEPDIR)/qt_test_test_bitcoin_qt-wallet_test_fixture.Po
include wallet/test/$(DEPDIR)/test_test_bitcoin-coinselector_tests.Po
include wallet/test/$(DEPDIR)/test_test_bitcoin-db_tests.Po
include wallet/test/$(DEPDIR)/test_test_bitcoin-init_test_fixture.Po
include wallet/test/$(DEPDIR)/test_test_bitcoin-init_tests.Po
include wallet/test/$(DEPDIR)/test_test_bitcoin-ismine_tests.Po
include wallet/test/$(DEPDIR)/test_test_bitcoin-psbt_wallet_tests.Po
include wallet/test/$(DEPDIR)/test_test_bitcoin-scriptpubkeyman_tests.Po
include wallet/test/$(DEPDIR)/test_test_bitcoin-spend_tests.Po
include wallet/test/$(DEPDIR)/test_test_bitcoin-util.Po
include wallet/test/$(DEPDIR)/test_test_bitcoin-wallet_crypto_tests.Po
include wallet/test/$(DEPDIR)/test_test_bitcoin-wallet_test_fixture.Po
include wallet/test/$(DEPDIR)/test_test_bitcoin-wallet_tests.Po
include wallet/test/$(DEPDIR)/test_test_bitcoin-wallet_transaction_tests.Po
include wallet/test/$(DEPDIR)/test_test_bitcoin-walletdb_tests.Po
include wallet/test/fuzz/$(DEPDIR)/test_fuzz_fuzz-coinselection.Po
include wallet/test/fuzz/$(DEPDIR)/test_fuzz_fuzz-notifications.Po
include zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqabstractnotifier.Po
include zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqnotificationinterface.Po
include zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqpublishnotifier.Po
include zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqrpc.Po
include zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqutil.Po

.c++.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.c++.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c++.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

compat/libbitcoin_cli_a-stdin.o: compat/stdin.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_cli_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_cli_a_CXXFLAGS) $(CXXFLAGS) -MT compat/libbitcoin_cli_a-stdin.o -MD -MP -MF compat/$(DEPDIR)/libbitcoin_cli_a-stdin.Tpo -c -o compat/libbitcoin_cli_a-stdin.o `test -f 'compat/stdin.cpp' || echo '$(srcdir)/'`compat/stdin.cpp
	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/libbitcoin_cli_a-stdin.Tpo compat/$(DEPDIR)/libbitcoin_cli_a-stdin.Po
#	$(AM_V_CXX)source='compat/stdin.cpp' object='compat/libbitcoin_cli_a-stdin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_cli_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_cli_a_CXXFLAGS) $(CXXFLAGS) -c -o compat/libbitcoin_cli_a-stdin.o `test -f 'compat/stdin.cpp' || echo '$(srcdir)/'`compat/stdin.cpp

compat/libbitcoin_cli_a-stdin.obj: compat/stdin.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_cli_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_cli_a_CXXFLAGS) $(CXXFLAGS) -MT compat/libbitcoin_cli_a-stdin.obj -MD -MP -MF compat/$(DEPDIR)/libbitcoin_cli_a-stdin.Tpo -c -o compat/libbitcoin_cli_a-stdin.obj `if test -f 'compat/stdin.cpp'; then $(CYGPATH_W) 'compat/stdin.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/stdin.cpp'; fi`
	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/libbitcoin_cli_a-stdin.Tpo compat/$(DEPDIR)/libbitcoin_cli_a-stdin.Po
#	$(AM_V_CXX)source='compat/stdin.cpp' object='compat/libbitcoin_cli_a-stdin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_cli_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_cli_a_CXXFLAGS) $(CXXFLAGS) -c -o compat/libbitcoin_cli_a-stdin.obj `if test -f 'compat/stdin.cpp'; then $(CYGPATH_W) 'compat/stdin.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/stdin.cpp'; fi`

rpc/libbitcoin_cli_a-client.o: rpc/client.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_cli_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_cli_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_cli_a-client.o -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_cli_a-client.Tpo -c -o rpc/libbitcoin_cli_a-client.o `test -f 'rpc/client.cpp' || echo '$(srcdir)/'`rpc/client.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_cli_a-client.Tpo rpc/$(DEPDIR)/libbitcoin_cli_a-client.Po
#	$(AM_V_CXX)source='rpc/client.cpp' object='rpc/libbitcoin_cli_a-client.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_cli_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_cli_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_cli_a-client.o `test -f 'rpc/client.cpp' || echo '$(srcdir)/'`rpc/client.cpp

rpc/libbitcoin_cli_a-client.obj: rpc/client.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_cli_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_cli_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_cli_a-client.obj -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_cli_a-client.Tpo -c -o rpc/libbitcoin_cli_a-client.obj `if test -f 'rpc/client.cpp'; then $(CYGPATH_W) 'rpc/client.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/client.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_cli_a-client.Tpo rpc/$(DEPDIR)/libbitcoin_cli_a-client.Po
#	$(AM_V_CXX)source='rpc/client.cpp' object='rpc/libbitcoin_cli_a-client.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_cli_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_cli_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_cli_a-client.obj `if test -f 'rpc/client.cpp'; then $(CYGPATH_W) 'rpc/client.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/client.cpp'; fi`

libbitcoin_common_a-base58.o: base58.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-base58.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-base58.Tpo -c -o libbitcoin_common_a-base58.o `test -f 'base58.cpp' || echo '$(srcdir)/'`base58.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-base58.Tpo $(DEPDIR)/libbitcoin_common_a-base58.Po
#	$(AM_V_CXX)source='base58.cpp' object='libbitcoin_common_a-base58.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-base58.o `test -f 'base58.cpp' || echo '$(srcdir)/'`base58.cpp

libbitcoin_common_a-base58.obj: base58.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-base58.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-base58.Tpo -c -o libbitcoin_common_a-base58.obj `if test -f 'base58.cpp'; then $(CYGPATH_W) 'base58.cpp'; else $(CYGPATH_W) '$(srcdir)/base58.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-base58.Tpo $(DEPDIR)/libbitcoin_common_a-base58.Po
#	$(AM_V_CXX)source='base58.cpp' object='libbitcoin_common_a-base58.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-base58.obj `if test -f 'base58.cpp'; then $(CYGPATH_W) 'base58.cpp'; else $(CYGPATH_W) '$(srcdir)/base58.cpp'; fi`

libbitcoin_common_a-bech32.o: bech32.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-bech32.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-bech32.Tpo -c -o libbitcoin_common_a-bech32.o `test -f 'bech32.cpp' || echo '$(srcdir)/'`bech32.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-bech32.Tpo $(DEPDIR)/libbitcoin_common_a-bech32.Po
#	$(AM_V_CXX)source='bech32.cpp' object='libbitcoin_common_a-bech32.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-bech32.o `test -f 'bech32.cpp' || echo '$(srcdir)/'`bech32.cpp

libbitcoin_common_a-bech32.obj: bech32.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-bech32.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-bech32.Tpo -c -o libbitcoin_common_a-bech32.obj `if test -f 'bech32.cpp'; then $(CYGPATH_W) 'bech32.cpp'; else $(CYGPATH_W) '$(srcdir)/bech32.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-bech32.Tpo $(DEPDIR)/libbitcoin_common_a-bech32.Po
#	$(AM_V_CXX)source='bech32.cpp' object='libbitcoin_common_a-bech32.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-bech32.obj `if test -f 'bech32.cpp'; then $(CYGPATH_W) 'bech32.cpp'; else $(CYGPATH_W) '$(srcdir)/bech32.cpp'; fi`

libbitcoin_common_a-chainparams.o: chainparams.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-chainparams.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-chainparams.Tpo -c -o libbitcoin_common_a-chainparams.o `test -f 'chainparams.cpp' || echo '$(srcdir)/'`chainparams.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-chainparams.Tpo $(DEPDIR)/libbitcoin_common_a-chainparams.Po
#	$(AM_V_CXX)source='chainparams.cpp' object='libbitcoin_common_a-chainparams.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-chainparams.o `test -f 'chainparams.cpp' || echo '$(srcdir)/'`chainparams.cpp

libbitcoin_common_a-chainparams.obj: chainparams.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-chainparams.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-chainparams.Tpo -c -o libbitcoin_common_a-chainparams.obj `if test -f 'chainparams.cpp'; then $(CYGPATH_W) 'chainparams.cpp'; else $(CYGPATH_W) '$(srcdir)/chainparams.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-chainparams.Tpo $(DEPDIR)/libbitcoin_common_a-chainparams.Po
#	$(AM_V_CXX)source='chainparams.cpp' object='libbitcoin_common_a-chainparams.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-chainparams.obj `if test -f 'chainparams.cpp'; then $(CYGPATH_W) 'chainparams.cpp'; else $(CYGPATH_W) '$(srcdir)/chainparams.cpp'; fi`

libbitcoin_common_a-coins.o: coins.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-coins.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-coins.Tpo -c -o libbitcoin_common_a-coins.o `test -f 'coins.cpp' || echo '$(srcdir)/'`coins.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-coins.Tpo $(DEPDIR)/libbitcoin_common_a-coins.Po
#	$(AM_V_CXX)source='coins.cpp' object='libbitcoin_common_a-coins.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-coins.o `test -f 'coins.cpp' || echo '$(srcdir)/'`coins.cpp

libbitcoin_common_a-coins.obj: coins.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-coins.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-coins.Tpo -c -o libbitcoin_common_a-coins.obj `if test -f 'coins.cpp'; then $(CYGPATH_W) 'coins.cpp'; else $(CYGPATH_W) '$(srcdir)/coins.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-coins.Tpo $(DEPDIR)/libbitcoin_common_a-coins.Po
#	$(AM_V_CXX)source='coins.cpp' object='libbitcoin_common_a-coins.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-coins.obj `if test -f 'coins.cpp'; then $(CYGPATH_W) 'coins.cpp'; else $(CYGPATH_W) '$(srcdir)/coins.cpp'; fi`

common/libbitcoin_common_a-bloom.o: common/bloom.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT common/libbitcoin_common_a-bloom.o -MD -MP -MF common/$(DEPDIR)/libbitcoin_common_a-bloom.Tpo -c -o common/libbitcoin_common_a-bloom.o `test -f 'common/bloom.cpp' || echo '$(srcdir)/'`common/bloom.cpp
	$(AM_V_at)$(am__mv) common/$(DEPDIR)/libbitcoin_common_a-bloom.Tpo common/$(DEPDIR)/libbitcoin_common_a-bloom.Po
#	$(AM_V_CXX)source='common/bloom.cpp' object='common/libbitcoin_common_a-bloom.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o common/libbitcoin_common_a-bloom.o `test -f 'common/bloom.cpp' || echo '$(srcdir)/'`common/bloom.cpp

common/libbitcoin_common_a-bloom.obj: common/bloom.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT common/libbitcoin_common_a-bloom.obj -MD -MP -MF common/$(DEPDIR)/libbitcoin_common_a-bloom.Tpo -c -o common/libbitcoin_common_a-bloom.obj `if test -f 'common/bloom.cpp'; then $(CYGPATH_W) 'common/bloom.cpp'; else $(CYGPATH_W) '$(srcdir)/common/bloom.cpp'; fi`
	$(AM_V_at)$(am__mv) common/$(DEPDIR)/libbitcoin_common_a-bloom.Tpo common/$(DEPDIR)/libbitcoin_common_a-bloom.Po
#	$(AM_V_CXX)source='common/bloom.cpp' object='common/libbitcoin_common_a-bloom.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o common/libbitcoin_common_a-bloom.obj `if test -f 'common/bloom.cpp'; then $(CYGPATH_W) 'common/bloom.cpp'; else $(CYGPATH_W) '$(srcdir)/common/bloom.cpp'; fi`

libbitcoin_common_a-compressor.o: compressor.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-compressor.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-compressor.Tpo -c -o libbitcoin_common_a-compressor.o `test -f 'compressor.cpp' || echo '$(srcdir)/'`compressor.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-compressor.Tpo $(DEPDIR)/libbitcoin_common_a-compressor.Po
#	$(AM_V_CXX)source='compressor.cpp' object='libbitcoin_common_a-compressor.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-compressor.o `test -f 'compressor.cpp' || echo '$(srcdir)/'`compressor.cpp

libbitcoin_common_a-compressor.obj: compressor.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-compressor.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-compressor.Tpo -c -o libbitcoin_common_a-compressor.obj `if test -f 'compressor.cpp'; then $(CYGPATH_W) 'compressor.cpp'; else $(CYGPATH_W) '$(srcdir)/compressor.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-compressor.Tpo $(DEPDIR)/libbitcoin_common_a-compressor.Po
#	$(AM_V_CXX)source='compressor.cpp' object='libbitcoin_common_a-compressor.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-compressor.obj `if test -f 'compressor.cpp'; then $(CYGPATH_W) 'compressor.cpp'; else $(CYGPATH_W) '$(srcdir)/compressor.cpp'; fi`

libbitcoin_common_a-core_read.o: core_read.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-core_read.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-core_read.Tpo -c -o libbitcoin_common_a-core_read.o `test -f 'core_read.cpp' || echo '$(srcdir)/'`core_read.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-core_read.Tpo $(DEPDIR)/libbitcoin_common_a-core_read.Po
#	$(AM_V_CXX)source='core_read.cpp' object='libbitcoin_common_a-core_read.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-core_read.o `test -f 'core_read.cpp' || echo '$(srcdir)/'`core_read.cpp

libbitcoin_common_a-core_read.obj: core_read.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-core_read.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-core_read.Tpo -c -o libbitcoin_common_a-core_read.obj `if test -f 'core_read.cpp'; then $(CYGPATH_W) 'core_read.cpp'; else $(CYGPATH_W) '$(srcdir)/core_read.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-core_read.Tpo $(DEPDIR)/libbitcoin_common_a-core_read.Po
#	$(AM_V_CXX)source='core_read.cpp' object='libbitcoin_common_a-core_read.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-core_read.obj `if test -f 'core_read.cpp'; then $(CYGPATH_W) 'core_read.cpp'; else $(CYGPATH_W) '$(srcdir)/core_read.cpp'; fi`

libbitcoin_common_a-core_write.o: core_write.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-core_write.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-core_write.Tpo -c -o libbitcoin_common_a-core_write.o `test -f 'core_write.cpp' || echo '$(srcdir)/'`core_write.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-core_write.Tpo $(DEPDIR)/libbitcoin_common_a-core_write.Po
#	$(AM_V_CXX)source='core_write.cpp' object='libbitcoin_common_a-core_write.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-core_write.o `test -f 'core_write.cpp' || echo '$(srcdir)/'`core_write.cpp

libbitcoin_common_a-core_write.obj: core_write.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-core_write.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-core_write.Tpo -c -o libbitcoin_common_a-core_write.obj `if test -f 'core_write.cpp'; then $(CYGPATH_W) 'core_write.cpp'; else $(CYGPATH_W) '$(srcdir)/core_write.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-core_write.Tpo $(DEPDIR)/libbitcoin_common_a-core_write.Po
#	$(AM_V_CXX)source='core_write.cpp' object='libbitcoin_common_a-core_write.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-core_write.obj `if test -f 'core_write.cpp'; then $(CYGPATH_W) 'core_write.cpp'; else $(CYGPATH_W) '$(srcdir)/core_write.cpp'; fi`

libbitcoin_common_a-deploymentinfo.o: deploymentinfo.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-deploymentinfo.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-deploymentinfo.Tpo -c -o libbitcoin_common_a-deploymentinfo.o `test -f 'deploymentinfo.cpp' || echo '$(srcdir)/'`deploymentinfo.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-deploymentinfo.Tpo $(DEPDIR)/libbitcoin_common_a-deploymentinfo.Po
#	$(AM_V_CXX)source='deploymentinfo.cpp' object='libbitcoin_common_a-deploymentinfo.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-deploymentinfo.o `test -f 'deploymentinfo.cpp' || echo '$(srcdir)/'`deploymentinfo.cpp

libbitcoin_common_a-deploymentinfo.obj: deploymentinfo.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-deploymentinfo.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-deploymentinfo.Tpo -c -o libbitcoin_common_a-deploymentinfo.obj `if test -f 'deploymentinfo.cpp'; then $(CYGPATH_W) 'deploymentinfo.cpp'; else $(CYGPATH_W) '$(srcdir)/deploymentinfo.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-deploymentinfo.Tpo $(DEPDIR)/libbitcoin_common_a-deploymentinfo.Po
#	$(AM_V_CXX)source='deploymentinfo.cpp' object='libbitcoin_common_a-deploymentinfo.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-deploymentinfo.obj `if test -f 'deploymentinfo.cpp'; then $(CYGPATH_W) 'deploymentinfo.cpp'; else $(CYGPATH_W) '$(srcdir)/deploymentinfo.cpp'; fi`

libbitcoin_common_a-external_signer.o: external_signer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-external_signer.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-external_signer.Tpo -c -o libbitcoin_common_a-external_signer.o `test -f 'external_signer.cpp' || echo '$(srcdir)/'`external_signer.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-external_signer.Tpo $(DEPDIR)/libbitcoin_common_a-external_signer.Po
#	$(AM_V_CXX)source='external_signer.cpp' object='libbitcoin_common_a-external_signer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-external_signer.o `test -f 'external_signer.cpp' || echo '$(srcdir)/'`external_signer.cpp

libbitcoin_common_a-external_signer.obj: external_signer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-external_signer.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-external_signer.Tpo -c -o libbitcoin_common_a-external_signer.obj `if test -f 'external_signer.cpp'; then $(CYGPATH_W) 'external_signer.cpp'; else $(CYGPATH_W) '$(srcdir)/external_signer.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-external_signer.Tpo $(DEPDIR)/libbitcoin_common_a-external_signer.Po
#	$(AM_V_CXX)source='external_signer.cpp' object='libbitcoin_common_a-external_signer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-external_signer.obj `if test -f 'external_signer.cpp'; then $(CYGPATH_W) 'external_signer.cpp'; else $(CYGPATH_W) '$(srcdir)/external_signer.cpp'; fi`

init/libbitcoin_common_a-common.o: init/common.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT init/libbitcoin_common_a-common.o -MD -MP -MF init/$(DEPDIR)/libbitcoin_common_a-common.Tpo -c -o init/libbitcoin_common_a-common.o `test -f 'init/common.cpp' || echo '$(srcdir)/'`init/common.cpp
	$(AM_V_at)$(am__mv) init/$(DEPDIR)/libbitcoin_common_a-common.Tpo init/$(DEPDIR)/libbitcoin_common_a-common.Po
#	$(AM_V_CXX)source='init/common.cpp' object='init/libbitcoin_common_a-common.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o init/libbitcoin_common_a-common.o `test -f 'init/common.cpp' || echo '$(srcdir)/'`init/common.cpp

init/libbitcoin_common_a-common.obj: init/common.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT init/libbitcoin_common_a-common.obj -MD -MP -MF init/$(DEPDIR)/libbitcoin_common_a-common.Tpo -c -o init/libbitcoin_common_a-common.obj `if test -f 'init/common.cpp'; then $(CYGPATH_W) 'init/common.cpp'; else $(CYGPATH_W) '$(srcdir)/init/common.cpp'; fi`
	$(AM_V_at)$(am__mv) init/$(DEPDIR)/libbitcoin_common_a-common.Tpo init/$(DEPDIR)/libbitcoin_common_a-common.Po
#	$(AM_V_CXX)source='init/common.cpp' object='init/libbitcoin_common_a-common.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o init/libbitcoin_common_a-common.obj `if test -f 'init/common.cpp'; then $(CYGPATH_W) 'init/common.cpp'; else $(CYGPATH_W) '$(srcdir)/init/common.cpp'; fi`

libbitcoin_common_a-key.o: key.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-key.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-key.Tpo -c -o libbitcoin_common_a-key.o `test -f 'key.cpp' || echo '$(srcdir)/'`key.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-key.Tpo $(DEPDIR)/libbitcoin_common_a-key.Po
#	$(AM_V_CXX)source='key.cpp' object='libbitcoin_common_a-key.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-key.o `test -f 'key.cpp' || echo '$(srcdir)/'`key.cpp

libbitcoin_common_a-key.obj: key.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-key.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-key.Tpo -c -o libbitcoin_common_a-key.obj `if test -f 'key.cpp'; then $(CYGPATH_W) 'key.cpp'; else $(CYGPATH_W) '$(srcdir)/key.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-key.Tpo $(DEPDIR)/libbitcoin_common_a-key.Po
#	$(AM_V_CXX)source='key.cpp' object='libbitcoin_common_a-key.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-key.obj `if test -f 'key.cpp'; then $(CYGPATH_W) 'key.cpp'; else $(CYGPATH_W) '$(srcdir)/key.cpp'; fi`

libbitcoin_common_a-key_io.o: key_io.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-key_io.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-key_io.Tpo -c -o libbitcoin_common_a-key_io.o `test -f 'key_io.cpp' || echo '$(srcdir)/'`key_io.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-key_io.Tpo $(DEPDIR)/libbitcoin_common_a-key_io.Po
#	$(AM_V_CXX)source='key_io.cpp' object='libbitcoin_common_a-key_io.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-key_io.o `test -f 'key_io.cpp' || echo '$(srcdir)/'`key_io.cpp

libbitcoin_common_a-key_io.obj: key_io.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-key_io.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-key_io.Tpo -c -o libbitcoin_common_a-key_io.obj `if test -f 'key_io.cpp'; then $(CYGPATH_W) 'key_io.cpp'; else $(CYGPATH_W) '$(srcdir)/key_io.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-key_io.Tpo $(DEPDIR)/libbitcoin_common_a-key_io.Po
#	$(AM_V_CXX)source='key_io.cpp' object='libbitcoin_common_a-key_io.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-key_io.obj `if test -f 'key_io.cpp'; then $(CYGPATH_W) 'key_io.cpp'; else $(CYGPATH_W) '$(srcdir)/key_io.cpp'; fi`

libbitcoin_common_a-merkleblock.o: merkleblock.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-merkleblock.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-merkleblock.Tpo -c -o libbitcoin_common_a-merkleblock.o `test -f 'merkleblock.cpp' || echo '$(srcdir)/'`merkleblock.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-merkleblock.Tpo $(DEPDIR)/libbitcoin_common_a-merkleblock.Po
#	$(AM_V_CXX)source='merkleblock.cpp' object='libbitcoin_common_a-merkleblock.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-merkleblock.o `test -f 'merkleblock.cpp' || echo '$(srcdir)/'`merkleblock.cpp

libbitcoin_common_a-merkleblock.obj: merkleblock.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-merkleblock.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-merkleblock.Tpo -c -o libbitcoin_common_a-merkleblock.obj `if test -f 'merkleblock.cpp'; then $(CYGPATH_W) 'merkleblock.cpp'; else $(CYGPATH_W) '$(srcdir)/merkleblock.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-merkleblock.Tpo $(DEPDIR)/libbitcoin_common_a-merkleblock.Po
#	$(AM_V_CXX)source='merkleblock.cpp' object='libbitcoin_common_a-merkleblock.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-merkleblock.obj `if test -f 'merkleblock.cpp'; then $(CYGPATH_W) 'merkleblock.cpp'; else $(CYGPATH_W) '$(srcdir)/merkleblock.cpp'; fi`

libbitcoin_common_a-net_types.o: net_types.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-net_types.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-net_types.Tpo -c -o libbitcoin_common_a-net_types.o `test -f 'net_types.cpp' || echo '$(srcdir)/'`net_types.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-net_types.Tpo $(DEPDIR)/libbitcoin_common_a-net_types.Po
#	$(AM_V_CXX)source='net_types.cpp' object='libbitcoin_common_a-net_types.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-net_types.o `test -f 'net_types.cpp' || echo '$(srcdir)/'`net_types.cpp

libbitcoin_common_a-net_types.obj: net_types.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-net_types.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-net_types.Tpo -c -o libbitcoin_common_a-net_types.obj `if test -f 'net_types.cpp'; then $(CYGPATH_W) 'net_types.cpp'; else $(CYGPATH_W) '$(srcdir)/net_types.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-net_types.Tpo $(DEPDIR)/libbitcoin_common_a-net_types.Po
#	$(AM_V_CXX)source='net_types.cpp' object='libbitcoin_common_a-net_types.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-net_types.obj `if test -f 'net_types.cpp'; then $(CYGPATH_W) 'net_types.cpp'; else $(CYGPATH_W) '$(srcdir)/net_types.cpp'; fi`

libbitcoin_common_a-netaddress.o: netaddress.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-netaddress.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-netaddress.Tpo -c -o libbitcoin_common_a-netaddress.o `test -f 'netaddress.cpp' || echo '$(srcdir)/'`netaddress.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-netaddress.Tpo $(DEPDIR)/libbitcoin_common_a-netaddress.Po
#	$(AM_V_CXX)source='netaddress.cpp' object='libbitcoin_common_a-netaddress.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-netaddress.o `test -f 'netaddress.cpp' || echo '$(srcdir)/'`netaddress.cpp

libbitcoin_common_a-netaddress.obj: netaddress.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-netaddress.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-netaddress.Tpo -c -o libbitcoin_common_a-netaddress.obj `if test -f 'netaddress.cpp'; then $(CYGPATH_W) 'netaddress.cpp'; else $(CYGPATH_W) '$(srcdir)/netaddress.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-netaddress.Tpo $(DEPDIR)/libbitcoin_common_a-netaddress.Po
#	$(AM_V_CXX)source='netaddress.cpp' object='libbitcoin_common_a-netaddress.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-netaddress.obj `if test -f 'netaddress.cpp'; then $(CYGPATH_W) 'netaddress.cpp'; else $(CYGPATH_W) '$(srcdir)/netaddress.cpp'; fi`

libbitcoin_common_a-netbase.o: netbase.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-netbase.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-netbase.Tpo -c -o libbitcoin_common_a-netbase.o `test -f 'netbase.cpp' || echo '$(srcdir)/'`netbase.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-netbase.Tpo $(DEPDIR)/libbitcoin_common_a-netbase.Po
#	$(AM_V_CXX)source='netbase.cpp' object='libbitcoin_common_a-netbase.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-netbase.o `test -f 'netbase.cpp' || echo '$(srcdir)/'`netbase.cpp

libbitcoin_common_a-netbase.obj: netbase.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-netbase.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-netbase.Tpo -c -o libbitcoin_common_a-netbase.obj `if test -f 'netbase.cpp'; then $(CYGPATH_W) 'netbase.cpp'; else $(CYGPATH_W) '$(srcdir)/netbase.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-netbase.Tpo $(DEPDIR)/libbitcoin_common_a-netbase.Po
#	$(AM_V_CXX)source='netbase.cpp' object='libbitcoin_common_a-netbase.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-netbase.obj `if test -f 'netbase.cpp'; then $(CYGPATH_W) 'netbase.cpp'; else $(CYGPATH_W) '$(srcdir)/netbase.cpp'; fi`

libbitcoin_common_a-net_permissions.o: net_permissions.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-net_permissions.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-net_permissions.Tpo -c -o libbitcoin_common_a-net_permissions.o `test -f 'net_permissions.cpp' || echo '$(srcdir)/'`net_permissions.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-net_permissions.Tpo $(DEPDIR)/libbitcoin_common_a-net_permissions.Po
#	$(AM_V_CXX)source='net_permissions.cpp' object='libbitcoin_common_a-net_permissions.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-net_permissions.o `test -f 'net_permissions.cpp' || echo '$(srcdir)/'`net_permissions.cpp

libbitcoin_common_a-net_permissions.obj: net_permissions.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-net_permissions.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-net_permissions.Tpo -c -o libbitcoin_common_a-net_permissions.obj `if test -f 'net_permissions.cpp'; then $(CYGPATH_W) 'net_permissions.cpp'; else $(CYGPATH_W) '$(srcdir)/net_permissions.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-net_permissions.Tpo $(DEPDIR)/libbitcoin_common_a-net_permissions.Po
#	$(AM_V_CXX)source='net_permissions.cpp' object='libbitcoin_common_a-net_permissions.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-net_permissions.obj `if test -f 'net_permissions.cpp'; then $(CYGPATH_W) 'net_permissions.cpp'; else $(CYGPATH_W) '$(srcdir)/net_permissions.cpp'; fi`

libbitcoin_common_a-outputtype.o: outputtype.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-outputtype.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-outputtype.Tpo -c -o libbitcoin_common_a-outputtype.o `test -f 'outputtype.cpp' || echo '$(srcdir)/'`outputtype.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-outputtype.Tpo $(DEPDIR)/libbitcoin_common_a-outputtype.Po
#	$(AM_V_CXX)source='outputtype.cpp' object='libbitcoin_common_a-outputtype.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-outputtype.o `test -f 'outputtype.cpp' || echo '$(srcdir)/'`outputtype.cpp

libbitcoin_common_a-outputtype.obj: outputtype.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-outputtype.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-outputtype.Tpo -c -o libbitcoin_common_a-outputtype.obj `if test -f 'outputtype.cpp'; then $(CYGPATH_W) 'outputtype.cpp'; else $(CYGPATH_W) '$(srcdir)/outputtype.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-outputtype.Tpo $(DEPDIR)/libbitcoin_common_a-outputtype.Po
#	$(AM_V_CXX)source='outputtype.cpp' object='libbitcoin_common_a-outputtype.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-outputtype.obj `if test -f 'outputtype.cpp'; then $(CYGPATH_W) 'outputtype.cpp'; else $(CYGPATH_W) '$(srcdir)/outputtype.cpp'; fi`

policy/libbitcoin_common_a-feerate.o: policy/feerate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT policy/libbitcoin_common_a-feerate.o -MD -MP -MF policy/$(DEPDIR)/libbitcoin_common_a-feerate.Tpo -c -o policy/libbitcoin_common_a-feerate.o `test -f 'policy/feerate.cpp' || echo '$(srcdir)/'`policy/feerate.cpp
	$(AM_V_at)$(am__mv) policy/$(DEPDIR)/libbitcoin_common_a-feerate.Tpo policy/$(DEPDIR)/libbitcoin_common_a-feerate.Po
#	$(AM_V_CXX)source='policy/feerate.cpp' object='policy/libbitcoin_common_a-feerate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o policy/libbitcoin_common_a-feerate.o `test -f 'policy/feerate.cpp' || echo '$(srcdir)/'`policy/feerate.cpp

policy/libbitcoin_common_a-feerate.obj: policy/feerate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT policy/libbitcoin_common_a-feerate.obj -MD -MP -MF policy/$(DEPDIR)/libbitcoin_common_a-feerate.Tpo -c -o policy/libbitcoin_common_a-feerate.obj `if test -f 'policy/feerate.cpp'; then $(CYGPATH_W) 'policy/feerate.cpp'; else $(CYGPATH_W) '$(srcdir)/policy/feerate.cpp'; fi`
	$(AM_V_at)$(am__mv) policy/$(DEPDIR)/libbitcoin_common_a-feerate.Tpo policy/$(DEPDIR)/libbitcoin_common_a-feerate.Po
#	$(AM_V_CXX)source='policy/feerate.cpp' object='policy/libbitcoin_common_a-feerate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o policy/libbitcoin_common_a-feerate.obj `if test -f 'policy/feerate.cpp'; then $(CYGPATH_W) 'policy/feerate.cpp'; else $(CYGPATH_W) '$(srcdir)/policy/feerate.cpp'; fi`

policy/libbitcoin_common_a-policy.o: policy/policy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT policy/libbitcoin_common_a-policy.o -MD -MP -MF policy/$(DEPDIR)/libbitcoin_common_a-policy.Tpo -c -o policy/libbitcoin_common_a-policy.o `test -f 'policy/policy.cpp' || echo '$(srcdir)/'`policy/policy.cpp
	$(AM_V_at)$(am__mv) policy/$(DEPDIR)/libbitcoin_common_a-policy.Tpo policy/$(DEPDIR)/libbitcoin_common_a-policy.Po
#	$(AM_V_CXX)source='policy/policy.cpp' object='policy/libbitcoin_common_a-policy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o policy/libbitcoin_common_a-policy.o `test -f 'policy/policy.cpp' || echo '$(srcdir)/'`policy/policy.cpp

policy/libbitcoin_common_a-policy.obj: policy/policy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT policy/libbitcoin_common_a-policy.obj -MD -MP -MF policy/$(DEPDIR)/libbitcoin_common_a-policy.Tpo -c -o policy/libbitcoin_common_a-policy.obj `if test -f 'policy/policy.cpp'; then $(CYGPATH_W) 'policy/policy.cpp'; else $(CYGPATH_W) '$(srcdir)/policy/policy.cpp'; fi`
	$(AM_V_at)$(am__mv) policy/$(DEPDIR)/libbitcoin_common_a-policy.Tpo policy/$(DEPDIR)/libbitcoin_common_a-policy.Po
#	$(AM_V_CXX)source='policy/policy.cpp' object='policy/libbitcoin_common_a-policy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o policy/libbitcoin_common_a-policy.obj `if test -f 'policy/policy.cpp'; then $(CYGPATH_W) 'policy/policy.cpp'; else $(CYGPATH_W) '$(srcdir)/policy/policy.cpp'; fi`

libbitcoin_common_a-protocol.o: protocol.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-protocol.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-protocol.Tpo -c -o libbitcoin_common_a-protocol.o `test -f 'protocol.cpp' || echo '$(srcdir)/'`protocol.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-protocol.Tpo $(DEPDIR)/libbitcoin_common_a-protocol.Po
#	$(AM_V_CXX)source='protocol.cpp' object='libbitcoin_common_a-protocol.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-protocol.o `test -f 'protocol.cpp' || echo '$(srcdir)/'`protocol.cpp

libbitcoin_common_a-protocol.obj: protocol.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-protocol.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-protocol.Tpo -c -o libbitcoin_common_a-protocol.obj `if test -f 'protocol.cpp'; then $(CYGPATH_W) 'protocol.cpp'; else $(CYGPATH_W) '$(srcdir)/protocol.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-protocol.Tpo $(DEPDIR)/libbitcoin_common_a-protocol.Po
#	$(AM_V_CXX)source='protocol.cpp' object='libbitcoin_common_a-protocol.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-protocol.obj `if test -f 'protocol.cpp'; then $(CYGPATH_W) 'protocol.cpp'; else $(CYGPATH_W) '$(srcdir)/protocol.cpp'; fi`

libbitcoin_common_a-psbt.o: psbt.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-psbt.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-psbt.Tpo -c -o libbitcoin_common_a-psbt.o `test -f 'psbt.cpp' || echo '$(srcdir)/'`psbt.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-psbt.Tpo $(DEPDIR)/libbitcoin_common_a-psbt.Po
#	$(AM_V_CXX)source='psbt.cpp' object='libbitcoin_common_a-psbt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-psbt.o `test -f 'psbt.cpp' || echo '$(srcdir)/'`psbt.cpp

libbitcoin_common_a-psbt.obj: psbt.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-psbt.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-psbt.Tpo -c -o libbitcoin_common_a-psbt.obj `if test -f 'psbt.cpp'; then $(CYGPATH_W) 'psbt.cpp'; else $(CYGPATH_W) '$(srcdir)/psbt.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-psbt.Tpo $(DEPDIR)/libbitcoin_common_a-psbt.Po
#	$(AM_V_CXX)source='psbt.cpp' object='libbitcoin_common_a-psbt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-psbt.obj `if test -f 'psbt.cpp'; then $(CYGPATH_W) 'psbt.cpp'; else $(CYGPATH_W) '$(srcdir)/psbt.cpp'; fi`

rpc/libbitcoin_common_a-rawtransaction_util.o: rpc/rawtransaction_util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_common_a-rawtransaction_util.o -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_common_a-rawtransaction_util.Tpo -c -o rpc/libbitcoin_common_a-rawtransaction_util.o `test -f 'rpc/rawtransaction_util.cpp' || echo '$(srcdir)/'`rpc/rawtransaction_util.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_common_a-rawtransaction_util.Tpo rpc/$(DEPDIR)/libbitcoin_common_a-rawtransaction_util.Po
#	$(AM_V_CXX)source='rpc/rawtransaction_util.cpp' object='rpc/libbitcoin_common_a-rawtransaction_util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_common_a-rawtransaction_util.o `test -f 'rpc/rawtransaction_util.cpp' || echo '$(srcdir)/'`rpc/rawtransaction_util.cpp

rpc/libbitcoin_common_a-rawtransaction_util.obj: rpc/rawtransaction_util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_common_a-rawtransaction_util.obj -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_common_a-rawtransaction_util.Tpo -c -o rpc/libbitcoin_common_a-rawtransaction_util.obj `if test -f 'rpc/rawtransaction_util.cpp'; then $(CYGPATH_W) 'rpc/rawtransaction_util.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rawtransaction_util.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_common_a-rawtransaction_util.Tpo rpc/$(DEPDIR)/libbitcoin_common_a-rawtransaction_util.Po
#	$(AM_V_CXX)source='rpc/rawtransaction_util.cpp' object='rpc/libbitcoin_common_a-rawtransaction_util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_common_a-rawtransaction_util.obj `if test -f 'rpc/rawtransaction_util.cpp'; then $(CYGPATH_W) 'rpc/rawtransaction_util.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rawtransaction_util.cpp'; fi`

rpc/libbitcoin_common_a-external_signer.o: rpc/external_signer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_common_a-external_signer.o -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_common_a-external_signer.Tpo -c -o rpc/libbitcoin_common_a-external_signer.o `test -f 'rpc/external_signer.cpp' || echo '$(srcdir)/'`rpc/external_signer.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_common_a-external_signer.Tpo rpc/$(DEPDIR)/libbitcoin_common_a-external_signer.Po
#	$(AM_V_CXX)source='rpc/external_signer.cpp' object='rpc/libbitcoin_common_a-external_signer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_common_a-external_signer.o `test -f 'rpc/external_signer.cpp' || echo '$(srcdir)/'`rpc/external_signer.cpp

rpc/libbitcoin_common_a-external_signer.obj: rpc/external_signer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_common_a-external_signer.obj -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_common_a-external_signer.Tpo -c -o rpc/libbitcoin_common_a-external_signer.obj `if test -f 'rpc/external_signer.cpp'; then $(CYGPATH_W) 'rpc/external_signer.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/external_signer.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_common_a-external_signer.Tpo rpc/$(DEPDIR)/libbitcoin_common_a-external_signer.Po
#	$(AM_V_CXX)source='rpc/external_signer.cpp' object='rpc/libbitcoin_common_a-external_signer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_common_a-external_signer.obj `if test -f 'rpc/external_signer.cpp'; then $(CYGPATH_W) 'rpc/external_signer.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/external_signer.cpp'; fi`

rpc/libbitcoin_common_a-util.o: rpc/util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_common_a-util.o -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_common_a-util.Tpo -c -o rpc/libbitcoin_common_a-util.o `test -f 'rpc/util.cpp' || echo '$(srcdir)/'`rpc/util.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_common_a-util.Tpo rpc/$(DEPDIR)/libbitcoin_common_a-util.Po
#	$(AM_V_CXX)source='rpc/util.cpp' object='rpc/libbitcoin_common_a-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_common_a-util.o `test -f 'rpc/util.cpp' || echo '$(srcdir)/'`rpc/util.cpp

rpc/libbitcoin_common_a-util.obj: rpc/util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_common_a-util.obj -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_common_a-util.Tpo -c -o rpc/libbitcoin_common_a-util.obj `if test -f 'rpc/util.cpp'; then $(CYGPATH_W) 'rpc/util.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/util.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_common_a-util.Tpo rpc/$(DEPDIR)/libbitcoin_common_a-util.Po
#	$(AM_V_CXX)source='rpc/util.cpp' object='rpc/libbitcoin_common_a-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_common_a-util.obj `if test -f 'rpc/util.cpp'; then $(CYGPATH_W) 'rpc/util.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/util.cpp'; fi`

libbitcoin_common_a-scheduler.o: scheduler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-scheduler.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-scheduler.Tpo -c -o libbitcoin_common_a-scheduler.o `test -f 'scheduler.cpp' || echo '$(srcdir)/'`scheduler.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-scheduler.Tpo $(DEPDIR)/libbitcoin_common_a-scheduler.Po
#	$(AM_V_CXX)source='scheduler.cpp' object='libbitcoin_common_a-scheduler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-scheduler.o `test -f 'scheduler.cpp' || echo '$(srcdir)/'`scheduler.cpp

libbitcoin_common_a-scheduler.obj: scheduler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-scheduler.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-scheduler.Tpo -c -o libbitcoin_common_a-scheduler.obj `if test -f 'scheduler.cpp'; then $(CYGPATH_W) 'scheduler.cpp'; else $(CYGPATH_W) '$(srcdir)/scheduler.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-scheduler.Tpo $(DEPDIR)/libbitcoin_common_a-scheduler.Po
#	$(AM_V_CXX)source='scheduler.cpp' object='libbitcoin_common_a-scheduler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-scheduler.obj `if test -f 'scheduler.cpp'; then $(CYGPATH_W) 'scheduler.cpp'; else $(CYGPATH_W) '$(srcdir)/scheduler.cpp'; fi`

script/libbitcoin_common_a-descriptor.o: script/descriptor.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_common_a-descriptor.o -MD -MP -MF script/$(DEPDIR)/libbitcoin_common_a-descriptor.Tpo -c -o script/libbitcoin_common_a-descriptor.o `test -f 'script/descriptor.cpp' || echo '$(srcdir)/'`script/descriptor.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_common_a-descriptor.Tpo script/$(DEPDIR)/libbitcoin_common_a-descriptor.Po
#	$(AM_V_CXX)source='script/descriptor.cpp' object='script/libbitcoin_common_a-descriptor.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_common_a-descriptor.o `test -f 'script/descriptor.cpp' || echo '$(srcdir)/'`script/descriptor.cpp

script/libbitcoin_common_a-descriptor.obj: script/descriptor.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_common_a-descriptor.obj -MD -MP -MF script/$(DEPDIR)/libbitcoin_common_a-descriptor.Tpo -c -o script/libbitcoin_common_a-descriptor.obj `if test -f 'script/descriptor.cpp'; then $(CYGPATH_W) 'script/descriptor.cpp'; else $(CYGPATH_W) '$(srcdir)/script/descriptor.cpp'; fi`
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_common_a-descriptor.Tpo script/$(DEPDIR)/libbitcoin_common_a-descriptor.Po
#	$(AM_V_CXX)source='script/descriptor.cpp' object='script/libbitcoin_common_a-descriptor.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_common_a-descriptor.obj `if test -f 'script/descriptor.cpp'; then $(CYGPATH_W) 'script/descriptor.cpp'; else $(CYGPATH_W) '$(srcdir)/script/descriptor.cpp'; fi`

script/libbitcoin_common_a-miniscript.o: script/miniscript.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_common_a-miniscript.o -MD -MP -MF script/$(DEPDIR)/libbitcoin_common_a-miniscript.Tpo -c -o script/libbitcoin_common_a-miniscript.o `test -f 'script/miniscript.cpp' || echo '$(srcdir)/'`script/miniscript.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_common_a-miniscript.Tpo script/$(DEPDIR)/libbitcoin_common_a-miniscript.Po
#	$(AM_V_CXX)source='script/miniscript.cpp' object='script/libbitcoin_common_a-miniscript.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_common_a-miniscript.o `test -f 'script/miniscript.cpp' || echo '$(srcdir)/'`script/miniscript.cpp

script/libbitcoin_common_a-miniscript.obj: script/miniscript.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_common_a-miniscript.obj -MD -MP -MF script/$(DEPDIR)/libbitcoin_common_a-miniscript.Tpo -c -o script/libbitcoin_common_a-miniscript.obj `if test -f 'script/miniscript.cpp'; then $(CYGPATH_W) 'script/miniscript.cpp'; else $(CYGPATH_W) '$(srcdir)/script/miniscript.cpp'; fi`
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_common_a-miniscript.Tpo script/$(DEPDIR)/libbitcoin_common_a-miniscript.Po
#	$(AM_V_CXX)source='script/miniscript.cpp' object='script/libbitcoin_common_a-miniscript.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_common_a-miniscript.obj `if test -f 'script/miniscript.cpp'; then $(CYGPATH_W) 'script/miniscript.cpp'; else $(CYGPATH_W) '$(srcdir)/script/miniscript.cpp'; fi`

script/libbitcoin_common_a-sign.o: script/sign.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_common_a-sign.o -MD -MP -MF script/$(DEPDIR)/libbitcoin_common_a-sign.Tpo -c -o script/libbitcoin_common_a-sign.o `test -f 'script/sign.cpp' || echo '$(srcdir)/'`script/sign.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_common_a-sign.Tpo script/$(DEPDIR)/libbitcoin_common_a-sign.Po
#	$(AM_V_CXX)source='script/sign.cpp' object='script/libbitcoin_common_a-sign.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_common_a-sign.o `test -f 'script/sign.cpp' || echo '$(srcdir)/'`script/sign.cpp

script/libbitcoin_common_a-sign.obj: script/sign.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_common_a-sign.obj -MD -MP -MF script/$(DEPDIR)/libbitcoin_common_a-sign.Tpo -c -o script/libbitcoin_common_a-sign.obj `if test -f 'script/sign.cpp'; then $(CYGPATH_W) 'script/sign.cpp'; else $(CYGPATH_W) '$(srcdir)/script/sign.cpp'; fi`
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_common_a-sign.Tpo script/$(DEPDIR)/libbitcoin_common_a-sign.Po
#	$(AM_V_CXX)source='script/sign.cpp' object='script/libbitcoin_common_a-sign.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_common_a-sign.obj `if test -f 'script/sign.cpp'; then $(CYGPATH_W) 'script/sign.cpp'; else $(CYGPATH_W) '$(srcdir)/script/sign.cpp'; fi`

script/libbitcoin_common_a-signingprovider.o: script/signingprovider.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_common_a-signingprovider.o -MD -MP -MF script/$(DEPDIR)/libbitcoin_common_a-signingprovider.Tpo -c -o script/libbitcoin_common_a-signingprovider.o `test -f 'script/signingprovider.cpp' || echo '$(srcdir)/'`script/signingprovider.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_common_a-signingprovider.Tpo script/$(DEPDIR)/libbitcoin_common_a-signingprovider.Po
#	$(AM_V_CXX)source='script/signingprovider.cpp' object='script/libbitcoin_common_a-signingprovider.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_common_a-signingprovider.o `test -f 'script/signingprovider.cpp' || echo '$(srcdir)/'`script/signingprovider.cpp

script/libbitcoin_common_a-signingprovider.obj: script/signingprovider.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_common_a-signingprovider.obj -MD -MP -MF script/$(DEPDIR)/libbitcoin_common_a-signingprovider.Tpo -c -o script/libbitcoin_common_a-signingprovider.obj `if test -f 'script/signingprovider.cpp'; then $(CYGPATH_W) 'script/signingprovider.cpp'; else $(CYGPATH_W) '$(srcdir)/script/signingprovider.cpp'; fi`
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_common_a-signingprovider.Tpo script/$(DEPDIR)/libbitcoin_common_a-signingprovider.Po
#	$(AM_V_CXX)source='script/signingprovider.cpp' object='script/libbitcoin_common_a-signingprovider.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_common_a-signingprovider.obj `if test -f 'script/signingprovider.cpp'; then $(CYGPATH_W) 'script/signingprovider.cpp'; else $(CYGPATH_W) '$(srcdir)/script/signingprovider.cpp'; fi`

script/libbitcoin_common_a-standard.o: script/standard.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_common_a-standard.o -MD -MP -MF script/$(DEPDIR)/libbitcoin_common_a-standard.Tpo -c -o script/libbitcoin_common_a-standard.o `test -f 'script/standard.cpp' || echo '$(srcdir)/'`script/standard.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_common_a-standard.Tpo script/$(DEPDIR)/libbitcoin_common_a-standard.Po
#	$(AM_V_CXX)source='script/standard.cpp' object='script/libbitcoin_common_a-standard.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_common_a-standard.o `test -f 'script/standard.cpp' || echo '$(srcdir)/'`script/standard.cpp

script/libbitcoin_common_a-standard.obj: script/standard.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_common_a-standard.obj -MD -MP -MF script/$(DEPDIR)/libbitcoin_common_a-standard.Tpo -c -o script/libbitcoin_common_a-standard.obj `if test -f 'script/standard.cpp'; then $(CYGPATH_W) 'script/standard.cpp'; else $(CYGPATH_W) '$(srcdir)/script/standard.cpp'; fi`
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_common_a-standard.Tpo script/$(DEPDIR)/libbitcoin_common_a-standard.Po
#	$(AM_V_CXX)source='script/standard.cpp' object='script/libbitcoin_common_a-standard.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_common_a-standard.obj `if test -f 'script/standard.cpp'; then $(CYGPATH_W) 'script/standard.cpp'; else $(CYGPATH_W) '$(srcdir)/script/standard.cpp'; fi`

libbitcoin_common_a-warnings.o: warnings.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-warnings.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-warnings.Tpo -c -o libbitcoin_common_a-warnings.o `test -f 'warnings.cpp' || echo '$(srcdir)/'`warnings.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-warnings.Tpo $(DEPDIR)/libbitcoin_common_a-warnings.Po
#	$(AM_V_CXX)source='warnings.cpp' object='libbitcoin_common_a-warnings.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-warnings.o `test -f 'warnings.cpp' || echo '$(srcdir)/'`warnings.cpp

libbitcoin_common_a-warnings.obj: warnings.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-warnings.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-warnings.Tpo -c -o libbitcoin_common_a-warnings.obj `if test -f 'warnings.cpp'; then $(CYGPATH_W) 'warnings.cpp'; else $(CYGPATH_W) '$(srcdir)/warnings.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-warnings.Tpo $(DEPDIR)/libbitcoin_common_a-warnings.Po
#	$(AM_V_CXX)source='warnings.cpp' object='libbitcoin_common_a-warnings.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-warnings.obj `if test -f 'warnings.cpp'; then $(CYGPATH_W) 'warnings.cpp'; else $(CYGPATH_W) '$(srcdir)/warnings.cpp'; fi`

libbitcoin_consensus_a-arith_uint256.o: arith_uint256.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_consensus_a-arith_uint256.o -MD -MP -MF $(DEPDIR)/libbitcoin_consensus_a-arith_uint256.Tpo -c -o libbitcoin_consensus_a-arith_uint256.o `test -f 'arith_uint256.cpp' || echo '$(srcdir)/'`arith_uint256.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_consensus_a-arith_uint256.Tpo $(DEPDIR)/libbitcoin_consensus_a-arith_uint256.Po
#	$(AM_V_CXX)source='arith_uint256.cpp' object='libbitcoin_consensus_a-arith_uint256.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_consensus_a-arith_uint256.o `test -f 'arith_uint256.cpp' || echo '$(srcdir)/'`arith_uint256.cpp

libbitcoin_consensus_a-arith_uint256.obj: arith_uint256.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_consensus_a-arith_uint256.obj -MD -MP -MF $(DEPDIR)/libbitcoin_consensus_a-arith_uint256.Tpo -c -o libbitcoin_consensus_a-arith_uint256.obj `if test -f 'arith_uint256.cpp'; then $(CYGPATH_W) 'arith_uint256.cpp'; else $(CYGPATH_W) '$(srcdir)/arith_uint256.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_consensus_a-arith_uint256.Tpo $(DEPDIR)/libbitcoin_consensus_a-arith_uint256.Po
#	$(AM_V_CXX)source='arith_uint256.cpp' object='libbitcoin_consensus_a-arith_uint256.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_consensus_a-arith_uint256.obj `if test -f 'arith_uint256.cpp'; then $(CYGPATH_W) 'arith_uint256.cpp'; else $(CYGPATH_W) '$(srcdir)/arith_uint256.cpp'; fi`

consensus/libbitcoin_consensus_a-merkle.o: consensus/merkle.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT consensus/libbitcoin_consensus_a-merkle.o -MD -MP -MF consensus/$(DEPDIR)/libbitcoin_consensus_a-merkle.Tpo -c -o consensus/libbitcoin_consensus_a-merkle.o `test -f 'consensus/merkle.cpp' || echo '$(srcdir)/'`consensus/merkle.cpp
	$(AM_V_at)$(am__mv) consensus/$(DEPDIR)/libbitcoin_consensus_a-merkle.Tpo consensus/$(DEPDIR)/libbitcoin_consensus_a-merkle.Po
#	$(AM_V_CXX)source='consensus/merkle.cpp' object='consensus/libbitcoin_consensus_a-merkle.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o consensus/libbitcoin_consensus_a-merkle.o `test -f 'consensus/merkle.cpp' || echo '$(srcdir)/'`consensus/merkle.cpp

consensus/libbitcoin_consensus_a-merkle.obj: consensus/merkle.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT consensus/libbitcoin_consensus_a-merkle.obj -MD -MP -MF consensus/$(DEPDIR)/libbitcoin_consensus_a-merkle.Tpo -c -o consensus/libbitcoin_consensus_a-merkle.obj `if test -f 'consensus/merkle.cpp'; then $(CYGPATH_W) 'consensus/merkle.cpp'; else $(CYGPATH_W) '$(srcdir)/consensus/merkle.cpp'; fi`
	$(AM_V_at)$(am__mv) consensus/$(DEPDIR)/libbitcoin_consensus_a-merkle.Tpo consensus/$(DEPDIR)/libbitcoin_consensus_a-merkle.Po
#	$(AM_V_CXX)source='consensus/merkle.cpp' object='consensus/libbitcoin_consensus_a-merkle.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o consensus/libbitcoin_consensus_a-merkle.obj `if test -f 'consensus/merkle.cpp'; then $(CYGPATH_W) 'consensus/merkle.cpp'; else $(CYGPATH_W) '$(srcdir)/consensus/merkle.cpp'; fi`

consensus/libbitcoin_consensus_a-tx_check.o: consensus/tx_check.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT consensus/libbitcoin_consensus_a-tx_check.o -MD -MP -MF consensus/$(DEPDIR)/libbitcoin_consensus_a-tx_check.Tpo -c -o consensus/libbitcoin_consensus_a-tx_check.o `test -f 'consensus/tx_check.cpp' || echo '$(srcdir)/'`consensus/tx_check.cpp
	$(AM_V_at)$(am__mv) consensus/$(DEPDIR)/libbitcoin_consensus_a-tx_check.Tpo consensus/$(DEPDIR)/libbitcoin_consensus_a-tx_check.Po
#	$(AM_V_CXX)source='consensus/tx_check.cpp' object='consensus/libbitcoin_consensus_a-tx_check.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o consensus/libbitcoin_consensus_a-tx_check.o `test -f 'consensus/tx_check.cpp' || echo '$(srcdir)/'`consensus/tx_check.cpp

consensus/libbitcoin_consensus_a-tx_check.obj: consensus/tx_check.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT consensus/libbitcoin_consensus_a-tx_check.obj -MD -MP -MF consensus/$(DEPDIR)/libbitcoin_consensus_a-tx_check.Tpo -c -o consensus/libbitcoin_consensus_a-tx_check.obj `if test -f 'consensus/tx_check.cpp'; then $(CYGPATH_W) 'consensus/tx_check.cpp'; else $(CYGPATH_W) '$(srcdir)/consensus/tx_check.cpp'; fi`
	$(AM_V_at)$(am__mv) consensus/$(DEPDIR)/libbitcoin_consensus_a-tx_check.Tpo consensus/$(DEPDIR)/libbitcoin_consensus_a-tx_check.Po
#	$(AM_V_CXX)source='consensus/tx_check.cpp' object='consensus/libbitcoin_consensus_a-tx_check.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o consensus/libbitcoin_consensus_a-tx_check.obj `if test -f 'consensus/tx_check.cpp'; then $(CYGPATH_W) 'consensus/tx_check.cpp'; else $(CYGPATH_W) '$(srcdir)/consensus/tx_check.cpp'; fi`

libbitcoin_consensus_a-hash.o: hash.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_consensus_a-hash.o -MD -MP -MF $(DEPDIR)/libbitcoin_consensus_a-hash.Tpo -c -o libbitcoin_consensus_a-hash.o `test -f 'hash.cpp' || echo '$(srcdir)/'`hash.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_consensus_a-hash.Tpo $(DEPDIR)/libbitcoin_consensus_a-hash.Po
#	$(AM_V_CXX)source='hash.cpp' object='libbitcoin_consensus_a-hash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_consensus_a-hash.o `test -f 'hash.cpp' || echo '$(srcdir)/'`hash.cpp

libbitcoin_consensus_a-hash.obj: hash.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_consensus_a-hash.obj -MD -MP -MF $(DEPDIR)/libbitcoin_consensus_a-hash.Tpo -c -o libbitcoin_consensus_a-hash.obj `if test -f 'hash.cpp'; then $(CYGPATH_W) 'hash.cpp'; else $(CYGPATH_W) '$(srcdir)/hash.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_consensus_a-hash.Tpo $(DEPDIR)/libbitcoin_consensus_a-hash.Po
#	$(AM_V_CXX)source='hash.cpp' object='libbitcoin_consensus_a-hash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_consensus_a-hash.obj `if test -f 'hash.cpp'; then $(CYGPATH_W) 'hash.cpp'; else $(CYGPATH_W) '$(srcdir)/hash.cpp'; fi`

primitives/libbitcoin_consensus_a-block.o: primitives/block.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT primitives/libbitcoin_consensus_a-block.o -MD -MP -MF primitives/$(DEPDIR)/libbitcoin_consensus_a-block.Tpo -c -o primitives/libbitcoin_consensus_a-block.o `test -f 'primitives/block.cpp' || echo '$(srcdir)/'`primitives/block.cpp
	$(AM_V_at)$(am__mv) primitives/$(DEPDIR)/libbitcoin_consensus_a-block.Tpo primitives/$(DEPDIR)/libbitcoin_consensus_a-block.Po
#	$(AM_V_CXX)source='primitives/block.cpp' object='primitives/libbitcoin_consensus_a-block.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o primitives/libbitcoin_consensus_a-block.o `test -f 'primitives/block.cpp' || echo '$(srcdir)/'`primitives/block.cpp

primitives/libbitcoin_consensus_a-block.obj: primitives/block.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT primitives/libbitcoin_consensus_a-block.obj -MD -MP -MF primitives/$(DEPDIR)/libbitcoin_consensus_a-block.Tpo -c -o primitives/libbitcoin_consensus_a-block.obj `if test -f 'primitives/block.cpp'; then $(CYGPATH_W) 'primitives/block.cpp'; else $(CYGPATH_W) '$(srcdir)/primitives/block.cpp'; fi`
	$(AM_V_at)$(am__mv) primitives/$(DEPDIR)/libbitcoin_consensus_a-block.Tpo primitives/$(DEPDIR)/libbitcoin_consensus_a-block.Po
#	$(AM_V_CXX)source='primitives/block.cpp' object='primitives/libbitcoin_consensus_a-block.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o primitives/libbitcoin_consensus_a-block.obj `if test -f 'primitives/block.cpp'; then $(CYGPATH_W) 'primitives/block.cpp'; else $(CYGPATH_W) '$(srcdir)/primitives/block.cpp'; fi`

primitives/libbitcoin_consensus_a-transaction.o: primitives/transaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT primitives/libbitcoin_consensus_a-transaction.o -MD -MP -MF primitives/$(DEPDIR)/libbitcoin_consensus_a-transaction.Tpo -c -o primitives/libbitcoin_consensus_a-transaction.o `test -f 'primitives/transaction.cpp' || echo '$(srcdir)/'`primitives/transaction.cpp
	$(AM_V_at)$(am__mv) primitives/$(DEPDIR)/libbitcoin_consensus_a-transaction.Tpo primitives/$(DEPDIR)/libbitcoin_consensus_a-transaction.Po
#	$(AM_V_CXX)source='primitives/transaction.cpp' object='primitives/libbitcoin_consensus_a-transaction.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o primitives/libbitcoin_consensus_a-transaction.o `test -f 'primitives/transaction.cpp' || echo '$(srcdir)/'`primitives/transaction.cpp

primitives/libbitcoin_consensus_a-transaction.obj: primitives/transaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT primitives/libbitcoin_consensus_a-transaction.obj -MD -MP -MF primitives/$(DEPDIR)/libbitcoin_consensus_a-transaction.Tpo -c -o primitives/libbitcoin_consensus_a-transaction.obj `if test -f 'primitives/transaction.cpp'; then $(CYGPATH_W) 'primitives/transaction.cpp'; else $(CYGPATH_W) '$(srcdir)/primitives/transaction.cpp'; fi`
	$(AM_V_at)$(am__mv) primitives/$(DEPDIR)/libbitcoin_consensus_a-transaction.Tpo primitives/$(DEPDIR)/libbitcoin_consensus_a-transaction.Po
#	$(AM_V_CXX)source='primitives/transaction.cpp' object='primitives/libbitcoin_consensus_a-transaction.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o primitives/libbitcoin_consensus_a-transaction.obj `if test -f 'primitives/transaction.cpp'; then $(CYGPATH_W) 'primitives/transaction.cpp'; else $(CYGPATH_W) '$(srcdir)/primitives/transaction.cpp'; fi`

libbitcoin_consensus_a-pubkey.o: pubkey.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_consensus_a-pubkey.o -MD -MP -MF $(DEPDIR)/libbitcoin_consensus_a-pubkey.Tpo -c -o libbitcoin_consensus_a-pubkey.o `test -f 'pubkey.cpp' || echo '$(srcdir)/'`pubkey.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_consensus_a-pubkey.Tpo $(DEPDIR)/libbitcoin_consensus_a-pubkey.Po
#	$(AM_V_CXX)source='pubkey.cpp' object='libbitcoin_consensus_a-pubkey.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_consensus_a-pubkey.o `test -f 'pubkey.cpp' || echo '$(srcdir)/'`pubkey.cpp

libbitcoin_consensus_a-pubkey.obj: pubkey.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_consensus_a-pubkey.obj -MD -MP -MF $(DEPDIR)/libbitcoin_consensus_a-pubkey.Tpo -c -o libbitcoin_consensus_a-pubkey.obj `if test -f 'pubkey.cpp'; then $(CYGPATH_W) 'pubkey.cpp'; else $(CYGPATH_W) '$(srcdir)/pubkey.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_consensus_a-pubkey.Tpo $(DEPDIR)/libbitcoin_consensus_a-pubkey.Po
#	$(AM_V_CXX)source='pubkey.cpp' object='libbitcoin_consensus_a-pubkey.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_consensus_a-pubkey.obj `if test -f 'pubkey.cpp'; then $(CYGPATH_W) 'pubkey.cpp'; else $(CYGPATH_W) '$(srcdir)/pubkey.cpp'; fi`

script/libbitcoin_consensus_a-bitcoinconsensus.o: script/bitcoinconsensus.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_consensus_a-bitcoinconsensus.o -MD -MP -MF script/$(DEPDIR)/libbitcoin_consensus_a-bitcoinconsensus.Tpo -c -o script/libbitcoin_consensus_a-bitcoinconsensus.o `test -f 'script/bitcoinconsensus.cpp' || echo '$(srcdir)/'`script/bitcoinconsensus.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_consensus_a-bitcoinconsensus.Tpo script/$(DEPDIR)/libbitcoin_consensus_a-bitcoinconsensus.Po
#	$(AM_V_CXX)source='script/bitcoinconsensus.cpp' object='script/libbitcoin_consensus_a-bitcoinconsensus.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_consensus_a-bitcoinconsensus.o `test -f 'script/bitcoinconsensus.cpp' || echo '$(srcdir)/'`script/bitcoinconsensus.cpp

script/libbitcoin_consensus_a-bitcoinconsensus.obj: script/bitcoinconsensus.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_consensus_a-bitcoinconsensus.obj -MD -MP -MF script/$(DEPDIR)/libbitcoin_consensus_a-bitcoinconsensus.Tpo -c -o script/libbitcoin_consensus_a-bitcoinconsensus.obj `if test -f 'script/bitcoinconsensus.cpp'; then $(CYGPATH_W) 'script/bitcoinconsensus.cpp'; else $(CYGPATH_W) '$(srcdir)/script/bitcoinconsensus.cpp'; fi`
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_consensus_a-bitcoinconsensus.Tpo script/$(DEPDIR)/libbitcoin_consensus_a-bitcoinconsensus.Po
#	$(AM_V_CXX)source='script/bitcoinconsensus.cpp' object='script/libbitcoin_consensus_a-bitcoinconsensus.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_consensus_a-bitcoinconsensus.obj `if test -f 'script/bitcoinconsensus.cpp'; then $(CYGPATH_W) 'script/bitcoinconsensus.cpp'; else $(CYGPATH_W) '$(srcdir)/script/bitcoinconsensus.cpp'; fi`

script/libbitcoin_consensus_a-interpreter.o: script/interpreter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_consensus_a-interpreter.o -MD -MP -MF script/$(DEPDIR)/libbitcoin_consensus_a-interpreter.Tpo -c -o script/libbitcoin_consensus_a-interpreter.o `test -f 'script/interpreter.cpp' || echo '$(srcdir)/'`script/interpreter.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_consensus_a-interpreter.Tpo script/$(DEPDIR)/libbitcoin_consensus_a-interpreter.Po
#	$(AM_V_CXX)source='script/interpreter.cpp' object='script/libbitcoin_consensus_a-interpreter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_consensus_a-interpreter.o `test -f 'script/interpreter.cpp' || echo '$(srcdir)/'`script/interpreter.cpp

script/libbitcoin_consensus_a-interpreter.obj: script/interpreter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_consensus_a-interpreter.obj -MD -MP -MF script/$(DEPDIR)/libbitcoin_consensus_a-interpreter.Tpo -c -o script/libbitcoin_consensus_a-interpreter.obj `if test -f 'script/interpreter.cpp'; then $(CYGPATH_W) 'script/interpreter.cpp'; else $(CYGPATH_W) '$(srcdir)/script/interpreter.cpp'; fi`
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_consensus_a-interpreter.Tpo script/$(DEPDIR)/libbitcoin_consensus_a-interpreter.Po
#	$(AM_V_CXX)source='script/interpreter.cpp' object='script/libbitcoin_consensus_a-interpreter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_consensus_a-interpreter.obj `if test -f 'script/interpreter.cpp'; then $(CYGPATH_W) 'script/interpreter.cpp'; else $(CYGPATH_W) '$(srcdir)/script/interpreter.cpp'; fi`

script/libbitcoin_consensus_a-script.o: script/script.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_consensus_a-script.o -MD -MP -MF script/$(DEPDIR)/libbitcoin_consensus_a-script.Tpo -c -o script/libbitcoin_consensus_a-script.o `test -f 'script/script.cpp' || echo '$(srcdir)/'`script/script.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_consensus_a-script.Tpo script/$(DEPDIR)/libbitcoin_consensus_a-script.Po
#	$(AM_V_CXX)source='script/script.cpp' object='script/libbitcoin_consensus_a-script.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_consensus_a-script.o `test -f 'script/script.cpp' || echo '$(srcdir)/'`script/script.cpp

script/libbitcoin_consensus_a-script.obj: script/script.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_consensus_a-script.obj -MD -MP -MF script/$(DEPDIR)/libbitcoin_consensus_a-script.Tpo -c -o script/libbitcoin_consensus_a-script.obj `if test -f 'script/script.cpp'; then $(CYGPATH_W) 'script/script.cpp'; else $(CYGPATH_W) '$(srcdir)/script/script.cpp'; fi`
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_consensus_a-script.Tpo script/$(DEPDIR)/libbitcoin_consensus_a-script.Po
#	$(AM_V_CXX)source='script/script.cpp' object='script/libbitcoin_consensus_a-script.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_consensus_a-script.obj `if test -f 'script/script.cpp'; then $(CYGPATH_W) 'script/script.cpp'; else $(CYGPATH_W) '$(srcdir)/script/script.cpp'; fi`

script/libbitcoin_consensus_a-script_error.o: script/script_error.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_consensus_a-script_error.o -MD -MP -MF script/$(DEPDIR)/libbitcoin_consensus_a-script_error.Tpo -c -o script/libbitcoin_consensus_a-script_error.o `test -f 'script/script_error.cpp' || echo '$(srcdir)/'`script/script_error.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_consensus_a-script_error.Tpo script/$(DEPDIR)/libbitcoin_consensus_a-script_error.Po
#	$(AM_V_CXX)source='script/script_error.cpp' object='script/libbitcoin_consensus_a-script_error.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_consensus_a-script_error.o `test -f 'script/script_error.cpp' || echo '$(srcdir)/'`script/script_error.cpp

script/libbitcoin_consensus_a-script_error.obj: script/script_error.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_consensus_a-script_error.obj -MD -MP -MF script/$(DEPDIR)/libbitcoin_consensus_a-script_error.Tpo -c -o script/libbitcoin_consensus_a-script_error.obj `if test -f 'script/script_error.cpp'; then $(CYGPATH_W) 'script/script_error.cpp'; else $(CYGPATH_W) '$(srcdir)/script/script_error.cpp'; fi`
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_consensus_a-script_error.Tpo script/$(DEPDIR)/libbitcoin_consensus_a-script_error.Po
#	$(AM_V_CXX)source='script/script_error.cpp' object='script/libbitcoin_consensus_a-script_error.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_consensus_a-script_error.obj `if test -f 'script/script_error.cpp'; then $(CYGPATH_W) 'script/script_error.cpp'; else $(CYGPATH_W) '$(srcdir)/script/script_error.cpp'; fi`

libbitcoin_consensus_a-uint256.o: uint256.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_consensus_a-uint256.o -MD -MP -MF $(DEPDIR)/libbitcoin_consensus_a-uint256.Tpo -c -o libbitcoin_consensus_a-uint256.o `test -f 'uint256.cpp' || echo '$(srcdir)/'`uint256.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_consensus_a-uint256.Tpo $(DEPDIR)/libbitcoin_consensus_a-uint256.Po
#	$(AM_V_CXX)source='uint256.cpp' object='libbitcoin_consensus_a-uint256.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_consensus_a-uint256.o `test -f 'uint256.cpp' || echo '$(srcdir)/'`uint256.cpp

libbitcoin_consensus_a-uint256.obj: uint256.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_consensus_a-uint256.obj -MD -MP -MF $(DEPDIR)/libbitcoin_consensus_a-uint256.Tpo -c -o libbitcoin_consensus_a-uint256.obj `if test -f 'uint256.cpp'; then $(CYGPATH_W) 'uint256.cpp'; else $(CYGPATH_W) '$(srcdir)/uint256.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_consensus_a-uint256.Tpo $(DEPDIR)/libbitcoin_consensus_a-uint256.Po
#	$(AM_V_CXX)source='uint256.cpp' object='libbitcoin_consensus_a-uint256.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_consensus_a-uint256.obj `if test -f 'uint256.cpp'; then $(CYGPATH_W) 'uint256.cpp'; else $(CYGPATH_W) '$(srcdir)/uint256.cpp'; fi`

util/libbitcoin_consensus_a-strencodings.o: util/strencodings.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoin_consensus_a-strencodings.o -MD -MP -MF util/$(DEPDIR)/libbitcoin_consensus_a-strencodings.Tpo -c -o util/libbitcoin_consensus_a-strencodings.o `test -f 'util/strencodings.cpp' || echo '$(srcdir)/'`util/strencodings.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoin_consensus_a-strencodings.Tpo util/$(DEPDIR)/libbitcoin_consensus_a-strencodings.Po
#	$(AM_V_CXX)source='util/strencodings.cpp' object='util/libbitcoin_consensus_a-strencodings.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoin_consensus_a-strencodings.o `test -f 'util/strencodings.cpp' || echo '$(srcdir)/'`util/strencodings.cpp

util/libbitcoin_consensus_a-strencodings.obj: util/strencodings.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoin_consensus_a-strencodings.obj -MD -MP -MF util/$(DEPDIR)/libbitcoin_consensus_a-strencodings.Tpo -c -o util/libbitcoin_consensus_a-strencodings.obj `if test -f 'util/strencodings.cpp'; then $(CYGPATH_W) 'util/strencodings.cpp'; else $(CYGPATH_W) '$(srcdir)/util/strencodings.cpp'; fi`
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoin_consensus_a-strencodings.Tpo util/$(DEPDIR)/libbitcoin_consensus_a-strencodings.Po
#	$(AM_V_CXX)source='util/strencodings.cpp' object='util/libbitcoin_consensus_a-strencodings.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoin_consensus_a-strencodings.obj `if test -f 'util/strencodings.cpp'; then $(CYGPATH_W) 'util/strencodings.cpp'; else $(CYGPATH_W) '$(srcdir)/util/strencodings.cpp'; fi`

ipc/capnp/libbitcoin_ipc_a-protocol.o: ipc/capnp/protocol.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_ipc_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_ipc_a_CXXFLAGS) $(CXXFLAGS) -MT ipc/capnp/libbitcoin_ipc_a-protocol.o -MD -MP -MF ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-protocol.Tpo -c -o ipc/capnp/libbitcoin_ipc_a-protocol.o `test -f 'ipc/capnp/protocol.cpp' || echo '$(srcdir)/'`ipc/capnp/protocol.cpp
	$(AM_V_at)$(am__mv) ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-protocol.Tpo ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-protocol.Po
#	$(AM_V_CXX)source='ipc/capnp/protocol.cpp' object='ipc/capnp/libbitcoin_ipc_a-protocol.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_ipc_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_ipc_a_CXXFLAGS) $(CXXFLAGS) -c -o ipc/capnp/libbitcoin_ipc_a-protocol.o `test -f 'ipc/capnp/protocol.cpp' || echo '$(srcdir)/'`ipc/capnp/protocol.cpp

ipc/capnp/libbitcoin_ipc_a-protocol.obj: ipc/capnp/protocol.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_ipc_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_ipc_a_CXXFLAGS) $(CXXFLAGS) -MT ipc/capnp/libbitcoin_ipc_a-protocol.obj -MD -MP -MF ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-protocol.Tpo -c -o ipc/capnp/libbitcoin_ipc_a-protocol.obj `if test -f 'ipc/capnp/protocol.cpp'; then $(CYGPATH_W) 'ipc/capnp/protocol.cpp'; else $(CYGPATH_W) '$(srcdir)/ipc/capnp/protocol.cpp'; fi`
	$(AM_V_at)$(am__mv) ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-protocol.Tpo ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-protocol.Po
#	$(AM_V_CXX)source='ipc/capnp/protocol.cpp' object='ipc/capnp/libbitcoin_ipc_a-protocol.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_ipc_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_ipc_a_CXXFLAGS) $(CXXFLAGS) -c -o ipc/capnp/libbitcoin_ipc_a-protocol.obj `if test -f 'ipc/capnp/protocol.cpp'; then $(CYGPATH_W) 'ipc/capnp/protocol.cpp'; else $(CYGPATH_W) '$(srcdir)/ipc/capnp/protocol.cpp'; fi`

ipc/libbitcoin_ipc_a-interfaces.o: ipc/interfaces.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_ipc_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_ipc_a_CXXFLAGS) $(CXXFLAGS) -MT ipc/libbitcoin_ipc_a-interfaces.o -MD -MP -MF ipc/$(DEPDIR)/libbitcoin_ipc_a-interfaces.Tpo -c -o ipc/libbitcoin_ipc_a-interfaces.o `test -f 'ipc/interfaces.cpp' || echo '$(srcdir)/'`ipc/interfaces.cpp
	$(AM_V_at)$(am__mv) ipc/$(DEPDIR)/libbitcoin_ipc_a-interfaces.Tpo ipc/$(DEPDIR)/libbitcoin_ipc_a-interfaces.Po
#	$(AM_V_CXX)source='ipc/interfaces.cpp' object='ipc/libbitcoin_ipc_a-interfaces.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_ipc_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_ipc_a_CXXFLAGS) $(CXXFLAGS) -c -o ipc/libbitcoin_ipc_a-interfaces.o `test -f 'ipc/interfaces.cpp' || echo '$(srcdir)/'`ipc/interfaces.cpp

ipc/libbitcoin_ipc_a-interfaces.obj: ipc/interfaces.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_ipc_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_ipc_a_CXXFLAGS) $(CXXFLAGS) -MT ipc/libbitcoin_ipc_a-interfaces.obj -MD -MP -MF ipc/$(DEPDIR)/libbitcoin_ipc_a-interfaces.Tpo -c -o ipc/libbitcoin_ipc_a-interfaces.obj `if test -f 'ipc/interfaces.cpp'; then $(CYGPATH_W) 'ipc/interfaces.cpp'; else $(CYGPATH_W) '$(srcdir)/ipc/interfaces.cpp'; fi`
	$(AM_V_at)$(am__mv) ipc/$(DEPDIR)/libbitcoin_ipc_a-interfaces.Tpo ipc/$(DEPDIR)/libbitcoin_ipc_a-interfaces.Po
#	$(AM_V_CXX)source='ipc/interfaces.cpp' object='ipc/libbitcoin_ipc_a-interfaces.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_ipc_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_ipc_a_CXXFLAGS) $(CXXFLAGS) -c -o ipc/libbitcoin_ipc_a-interfaces.obj `if test -f 'ipc/interfaces.cpp'; then $(CYGPATH_W) 'ipc/interfaces.cpp'; else $(CYGPATH_W) '$(srcdir)/ipc/interfaces.cpp'; fi`

ipc/libbitcoin_ipc_a-process.o: ipc/process.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_ipc_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_ipc_a_CXXFLAGS) $(CXXFLAGS) -MT ipc/libbitcoin_ipc_a-process.o -MD -MP -MF ipc/$(DEPDIR)/libbitcoin_ipc_a-process.Tpo -c -o ipc/libbitcoin_ipc_a-process.o `test -f 'ipc/process.cpp' || echo '$(srcdir)/'`ipc/process.cpp
	$(AM_V_at)$(am__mv) ipc/$(DEPDIR)/libbitcoin_ipc_a-process.Tpo ipc/$(DEPDIR)/libbitcoin_ipc_a-process.Po
#	$(AM_V_CXX)source='ipc/process.cpp' object='ipc/libbitcoin_ipc_a-process.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_ipc_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_ipc_a_CXXFLAGS) $(CXXFLAGS) -c -o ipc/libbitcoin_ipc_a-process.o `test -f 'ipc/process.cpp' || echo '$(srcdir)/'`ipc/process.cpp

ipc/libbitcoin_ipc_a-process.obj: ipc/process.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_ipc_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_ipc_a_CXXFLAGS) $(CXXFLAGS) -MT ipc/libbitcoin_ipc_a-process.obj -MD -MP -MF ipc/$(DEPDIR)/libbitcoin_ipc_a-process.Tpo -c -o ipc/libbitcoin_ipc_a-process.obj `if test -f 'ipc/process.cpp'; then $(CYGPATH_W) 'ipc/process.cpp'; else $(CYGPATH_W) '$(srcdir)/ipc/process.cpp'; fi`
	$(AM_V_at)$(am__mv) ipc/$(DEPDIR)/libbitcoin_ipc_a-process.Tpo ipc/$(DEPDIR)/libbitcoin_ipc_a-process.Po
#	$(AM_V_CXX)source='ipc/process.cpp' object='ipc/libbitcoin_ipc_a-process.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_ipc_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_ipc_a_CXXFLAGS) $(CXXFLAGS) -c -o ipc/libbitcoin_ipc_a-process.obj `if test -f 'ipc/process.cpp'; then $(CYGPATH_W) 'ipc/process.cpp'; else $(CYGPATH_W) '$(srcdir)/ipc/process.cpp'; fi`

ipc/capnp/libbitcoin_ipc_a-echo.capnp.o: ipc/capnp/echo.capnp.c++
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_ipc_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_ipc_a_CXXFLAGS) $(CXXFLAGS) -MT ipc/capnp/libbitcoin_ipc_a-echo.capnp.o -MD -MP -MF ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-echo.capnp.Tpo -c -o ipc/capnp/libbitcoin_ipc_a-echo.capnp.o `test -f 'ipc/capnp/echo.capnp.c++' || echo '$(srcdir)/'`ipc/capnp/echo.capnp.c++
	$(AM_V_at)$(am__mv) ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-echo.capnp.Tpo ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-echo.capnp.Po
#	$(AM_V_CXX)source='ipc/capnp/echo.capnp.c++' object='ipc/capnp/libbitcoin_ipc_a-echo.capnp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_ipc_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_ipc_a_CXXFLAGS) $(CXXFLAGS) -c -o ipc/capnp/libbitcoin_ipc_a-echo.capnp.o `test -f 'ipc/capnp/echo.capnp.c++' || echo '$(srcdir)/'`ipc/capnp/echo.capnp.c++

ipc/capnp/libbitcoin_ipc_a-echo.capnp.obj: ipc/capnp/echo.capnp.c++
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_ipc_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_ipc_a_CXXFLAGS) $(CXXFLAGS) -MT ipc/capnp/libbitcoin_ipc_a-echo.capnp.obj -MD -MP -MF ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-echo.capnp.Tpo -c -o ipc/capnp/libbitcoin_ipc_a-echo.capnp.obj `if test -f 'ipc/capnp/echo.capnp.c++'; then $(CYGPATH_W) 'ipc/capnp/echo.capnp.c++'; else $(CYGPATH_W) '$(srcdir)/ipc/capnp/echo.capnp.c++'; fi`
	$(AM_V_at)$(am__mv) ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-echo.capnp.Tpo ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-echo.capnp.Po
#	$(AM_V_CXX)source='ipc/capnp/echo.capnp.c++' object='ipc/capnp/libbitcoin_ipc_a-echo.capnp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_ipc_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_ipc_a_CXXFLAGS) $(CXXFLAGS) -c -o ipc/capnp/libbitcoin_ipc_a-echo.capnp.obj `if test -f 'ipc/capnp/echo.capnp.c++'; then $(CYGPATH_W) 'ipc/capnp/echo.capnp.c++'; else $(CYGPATH_W) '$(srcdir)/ipc/capnp/echo.capnp.c++'; fi`

ipc/capnp/libbitcoin_ipc_a-init.capnp.o: ipc/capnp/init.capnp.c++
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_ipc_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_ipc_a_CXXFLAGS) $(CXXFLAGS) -MT ipc/capnp/libbitcoin_ipc_a-init.capnp.o -MD -MP -MF ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-init.capnp.Tpo -c -o ipc/capnp/libbitcoin_ipc_a-init.capnp.o `test -f 'ipc/capnp/init.capnp.c++' || echo '$(srcdir)/'`ipc/capnp/init.capnp.c++
	$(AM_V_at)$(am__mv) ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-init.capnp.Tpo ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-init.capnp.Po
#	$(AM_V_CXX)source='ipc/capnp/init.capnp.c++' object='ipc/capnp/libbitcoin_ipc_a-init.capnp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_ipc_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_ipc_a_CXXFLAGS) $(CXXFLAGS) -c -o ipc/capnp/libbitcoin_ipc_a-init.capnp.o `test -f 'ipc/capnp/init.capnp.c++' || echo '$(srcdir)/'`ipc/capnp/init.capnp.c++

ipc/capnp/libbitcoin_ipc_a-init.capnp.obj: ipc/capnp/init.capnp.c++
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_ipc_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_ipc_a_CXXFLAGS) $(CXXFLAGS) -MT ipc/capnp/libbitcoin_ipc_a-init.capnp.obj -MD -MP -MF ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-init.capnp.Tpo -c -o ipc/capnp/libbitcoin_ipc_a-init.capnp.obj `if test -f 'ipc/capnp/init.capnp.c++'; then $(CYGPATH_W) 'ipc/capnp/init.capnp.c++'; else $(CYGPATH_W) '$(srcdir)/ipc/capnp/init.capnp.c++'; fi`
	$(AM_V_at)$(am__mv) ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-init.capnp.Tpo ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-init.capnp.Po
#	$(AM_V_CXX)source='ipc/capnp/init.capnp.c++' object='ipc/capnp/libbitcoin_ipc_a-init.capnp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_ipc_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_ipc_a_CXXFLAGS) $(CXXFLAGS) -c -o ipc/capnp/libbitcoin_ipc_a-init.capnp.obj `if test -f 'ipc/capnp/init.capnp.c++'; then $(CYGPATH_W) 'ipc/capnp/init.capnp.c++'; else $(CYGPATH_W) '$(srcdir)/ipc/capnp/init.capnp.c++'; fi`

ipc/capnp/libbitcoin_ipc_a-echo.capnp.proxy-client.o: ipc/capnp/echo.capnp.proxy-client.c++
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_ipc_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_ipc_a_CXXFLAGS) $(CXXFLAGS) -MT ipc/capnp/libbitcoin_ipc_a-echo.capnp.proxy-client.o -MD -MP -MF ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-echo.capnp.proxy-client.Tpo -c -o ipc/capnp/libbitcoin_ipc_a-echo.capnp.proxy-client.o `test -f 'ipc/capnp/echo.capnp.proxy-client.c++' || echo '$(srcdir)/'`ipc/capnp/echo.capnp.proxy-client.c++
	$(AM_V_at)$(am__mv) ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-echo.capnp.proxy-client.Tpo ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-echo.capnp.proxy-client.Po
#	$(AM_V_CXX)source='ipc/capnp/echo.capnp.proxy-client.c++' object='ipc/capnp/libbitcoin_ipc_a-echo.capnp.proxy-client.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_ipc_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_ipc_a_CXXFLAGS) $(CXXFLAGS) -c -o ipc/capnp/libbitcoin_ipc_a-echo.capnp.proxy-client.o `test -f 'ipc/capnp/echo.capnp.proxy-client.c++' || echo '$(srcdir)/'`ipc/capnp/echo.capnp.proxy-client.c++

ipc/capnp/libbitcoin_ipc_a-echo.capnp.proxy-client.obj: ipc/capnp/echo.capnp.proxy-client.c++
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_ipc_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_ipc_a_CXXFLAGS) $(CXXFLAGS) -MT ipc/capnp/libbitcoin_ipc_a-echo.capnp.proxy-client.obj -MD -MP -MF ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-echo.capnp.proxy-client.Tpo -c -o ipc/capnp/libbitcoin_ipc_a-echo.capnp.proxy-client.obj `if test -f 'ipc/capnp/echo.capnp.proxy-client.c++'; then $(CYGPATH_W) 'ipc/capnp/echo.capnp.proxy-client.c++'; else $(CYGPATH_W) '$(srcdir)/ipc/capnp/echo.capnp.proxy-client.c++'; fi`
	$(AM_V_at)$(am__mv) ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-echo.capnp.proxy-client.Tpo ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-echo.capnp.proxy-client.Po
#	$(AM_V_CXX)source='ipc/capnp/echo.capnp.proxy-client.c++' object='ipc/capnp/libbitcoin_ipc_a-echo.capnp.proxy-client.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_ipc_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_ipc_a_CXXFLAGS) $(CXXFLAGS) -c -o ipc/capnp/libbitcoin_ipc_a-echo.capnp.proxy-client.obj `if test -f 'ipc/capnp/echo.capnp.proxy-client.c++'; then $(CYGPATH_W) 'ipc/capnp/echo.capnp.proxy-client.c++'; else $(CYGPATH_W) '$(srcdir)/ipc/capnp/echo.capnp.proxy-client.c++'; fi`

ipc/capnp/libbitcoin_ipc_a-init.capnp.proxy-client.o: ipc/capnp/init.capnp.proxy-client.c++
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_ipc_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_ipc_a_CXXFLAGS) $(CXXFLAGS) -MT ipc/capnp/libbitcoin_ipc_a-init.capnp.proxy-client.o -MD -MP -MF ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-init.capnp.proxy-client.Tpo -c -o ipc/capnp/libbitcoin_ipc_a-init.capnp.proxy-client.o `test -f 'ipc/capnp/init.capnp.proxy-client.c++' || echo '$(srcdir)/'`ipc/capnp/init.capnp.proxy-client.c++
	$(AM_V_at)$(am__mv) ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-init.capnp.proxy-client.Tpo ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-init.capnp.proxy-client.Po
#	$(AM_V_CXX)source='ipc/capnp/init.capnp.proxy-client.c++' object='ipc/capnp/libbitcoin_ipc_a-init.capnp.proxy-client.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_ipc_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_ipc_a_CXXFLAGS) $(CXXFLAGS) -c -o ipc/capnp/libbitcoin_ipc_a-init.capnp.proxy-client.o `test -f 'ipc/capnp/init.capnp.proxy-client.c++' || echo '$(srcdir)/'`ipc/capnp/init.capnp.proxy-client.c++

ipc/capnp/libbitcoin_ipc_a-init.capnp.proxy-client.obj: ipc/capnp/init.capnp.proxy-client.c++
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_ipc_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_ipc_a_CXXFLAGS) $(CXXFLAGS) -MT ipc/capnp/libbitcoin_ipc_a-init.capnp.proxy-client.obj -MD -MP -MF ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-init.capnp.proxy-client.Tpo -c -o ipc/capnp/libbitcoin_ipc_a-init.capnp.proxy-client.obj `if test -f 'ipc/capnp/init.capnp.proxy-client.c++'; then $(CYGPATH_W) 'ipc/capnp/init.capnp.proxy-client.c++'; else $(CYGPATH_W) '$(srcdir)/ipc/capnp/init.capnp.proxy-client.c++'; fi`
	$(AM_V_at)$(am__mv) ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-init.capnp.proxy-client.Tpo ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-init.capnp.proxy-client.Po
#	$(AM_V_CXX)source='ipc/capnp/init.capnp.proxy-client.c++' object='ipc/capnp/libbitcoin_ipc_a-init.capnp.proxy-client.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_ipc_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_ipc_a_CXXFLAGS) $(CXXFLAGS) -c -o ipc/capnp/libbitcoin_ipc_a-init.capnp.proxy-client.obj `if test -f 'ipc/capnp/init.capnp.proxy-client.c++'; then $(CYGPATH_W) 'ipc/capnp/init.capnp.proxy-client.c++'; else $(CYGPATH_W) '$(srcdir)/ipc/capnp/init.capnp.proxy-client.c++'; fi`

ipc/capnp/libbitcoin_ipc_a-echo.capnp.proxy-server.o: ipc/capnp/echo.capnp.proxy-server.c++
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_ipc_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_ipc_a_CXXFLAGS) $(CXXFLAGS) -MT ipc/capnp/libbitcoin_ipc_a-echo.capnp.proxy-server.o -MD -MP -MF ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-echo.capnp.proxy-server.Tpo -c -o ipc/capnp/libbitcoin_ipc_a-echo.capnp.proxy-server.o `test -f 'ipc/capnp/echo.capnp.proxy-server.c++' || echo '$(srcdir)/'`ipc/capnp/echo.capnp.proxy-server.c++
	$(AM_V_at)$(am__mv) ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-echo.capnp.proxy-server.Tpo ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-echo.capnp.proxy-server.Po
#	$(AM_V_CXX)source='ipc/capnp/echo.capnp.proxy-server.c++' object='ipc/capnp/libbitcoin_ipc_a-echo.capnp.proxy-server.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_ipc_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_ipc_a_CXXFLAGS) $(CXXFLAGS) -c -o ipc/capnp/libbitcoin_ipc_a-echo.capnp.proxy-server.o `test -f 'ipc/capnp/echo.capnp.proxy-server.c++' || echo '$(srcdir)/'`ipc/capnp/echo.capnp.proxy-server.c++

ipc/capnp/libbitcoin_ipc_a-echo.capnp.proxy-server.obj: ipc/capnp/echo.capnp.proxy-server.c++
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_ipc_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_ipc_a_CXXFLAGS) $(CXXFLAGS) -MT ipc/capnp/libbitcoin_ipc_a-echo.capnp.proxy-server.obj -MD -MP -MF ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-echo.capnp.proxy-server.Tpo -c -o ipc/capnp/libbitcoin_ipc_a-echo.capnp.proxy-server.obj `if test -f 'ipc/capnp/echo.capnp.proxy-server.c++'; then $(CYGPATH_W) 'ipc/capnp/echo.capnp.proxy-server.c++'; else $(CYGPATH_W) '$(srcdir)/ipc/capnp/echo.capnp.proxy-server.c++'; fi`
	$(AM_V_at)$(am__mv) ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-echo.capnp.proxy-server.Tpo ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-echo.capnp.proxy-server.Po
#	$(AM_V_CXX)source='ipc/capnp/echo.capnp.proxy-server.c++' object='ipc/capnp/libbitcoin_ipc_a-echo.capnp.proxy-server.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_ipc_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_ipc_a_CXXFLAGS) $(CXXFLAGS) -c -o ipc/capnp/libbitcoin_ipc_a-echo.capnp.proxy-server.obj `if test -f 'ipc/capnp/echo.capnp.proxy-server.c++'; then $(CYGPATH_W) 'ipc/capnp/echo.capnp.proxy-server.c++'; else $(CYGPATH_W) '$(srcdir)/ipc/capnp/echo.capnp.proxy-server.c++'; fi`

ipc/capnp/libbitcoin_ipc_a-init.capnp.proxy-server.o: ipc/capnp/init.capnp.proxy-server.c++
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_ipc_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_ipc_a_CXXFLAGS) $(CXXFLAGS) -MT ipc/capnp/libbitcoin_ipc_a-init.capnp.proxy-server.o -MD -MP -MF ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-init.capnp.proxy-server.Tpo -c -o ipc/capnp/libbitcoin_ipc_a-init.capnp.proxy-server.o `test -f 'ipc/capnp/init.capnp.proxy-server.c++' || echo '$(srcdir)/'`ipc/capnp/init.capnp.proxy-server.c++
	$(AM_V_at)$(am__mv) ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-init.capnp.proxy-server.Tpo ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-init.capnp.proxy-server.Po
#	$(AM_V_CXX)source='ipc/capnp/init.capnp.proxy-server.c++' object='ipc/capnp/libbitcoin_ipc_a-init.capnp.proxy-server.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_ipc_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_ipc_a_CXXFLAGS) $(CXXFLAGS) -c -o ipc/capnp/libbitcoin_ipc_a-init.capnp.proxy-server.o `test -f 'ipc/capnp/init.capnp.proxy-server.c++' || echo '$(srcdir)/'`ipc/capnp/init.capnp.proxy-server.c++

ipc/capnp/libbitcoin_ipc_a-init.capnp.proxy-server.obj: ipc/capnp/init.capnp.proxy-server.c++
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_ipc_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_ipc_a_CXXFLAGS) $(CXXFLAGS) -MT ipc/capnp/libbitcoin_ipc_a-init.capnp.proxy-server.obj -MD -MP -MF ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-init.capnp.proxy-server.Tpo -c -o ipc/capnp/libbitcoin_ipc_a-init.capnp.proxy-server.obj `if test -f 'ipc/capnp/init.capnp.proxy-server.c++'; then $(CYGPATH_W) 'ipc/capnp/init.capnp.proxy-server.c++'; else $(CYGPATH_W) '$(srcdir)/ipc/capnp/init.capnp.proxy-server.c++'; fi`
	$(AM_V_at)$(am__mv) ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-init.capnp.proxy-server.Tpo ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-init.capnp.proxy-server.Po
#	$(AM_V_CXX)source='ipc/capnp/init.capnp.proxy-server.c++' object='ipc/capnp/libbitcoin_ipc_a-init.capnp.proxy-server.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_ipc_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_ipc_a_CXXFLAGS) $(CXXFLAGS) -c -o ipc/capnp/libbitcoin_ipc_a-init.capnp.proxy-server.obj `if test -f 'ipc/capnp/init.capnp.proxy-server.c++'; then $(CYGPATH_W) 'ipc/capnp/init.capnp.proxy-server.c++'; else $(CYGPATH_W) '$(srcdir)/ipc/capnp/init.capnp.proxy-server.c++'; fi`

ipc/capnp/libbitcoin_ipc_a-echo.capnp.proxy-types.o: ipc/capnp/echo.capnp.proxy-types.c++
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_ipc_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_ipc_a_CXXFLAGS) $(CXXFLAGS) -MT ipc/capnp/libbitcoin_ipc_a-echo.capnp.proxy-types.o -MD -MP -MF ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-echo.capnp.proxy-types.Tpo -c -o ipc/capnp/libbitcoin_ipc_a-echo.capnp.proxy-types.o `test -f 'ipc/capnp/echo.capnp.proxy-types.c++' || echo '$(srcdir)/'`ipc/capnp/echo.capnp.proxy-types.c++
	$(AM_V_at)$(am__mv) ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-echo.capnp.proxy-types.Tpo ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-echo.capnp.proxy-types.Po
#	$(AM_V_CXX)source='ipc/capnp/echo.capnp.proxy-types.c++' object='ipc/capnp/libbitcoin_ipc_a-echo.capnp.proxy-types.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_ipc_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_ipc_a_CXXFLAGS) $(CXXFLAGS) -c -o ipc/capnp/libbitcoin_ipc_a-echo.capnp.proxy-types.o `test -f 'ipc/capnp/echo.capnp.proxy-types.c++' || echo '$(srcdir)/'`ipc/capnp/echo.capnp.proxy-types.c++

ipc/capnp/libbitcoin_ipc_a-echo.capnp.proxy-types.obj: ipc/capnp/echo.capnp.proxy-types.c++
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_ipc_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_ipc_a_CXXFLAGS) $(CXXFLAGS) -MT ipc/capnp/libbitcoin_ipc_a-echo.capnp.proxy-types.obj -MD -MP -MF ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-echo.capnp.proxy-types.Tpo -c -o ipc/capnp/libbitcoin_ipc_a-echo.capnp.proxy-types.obj `if test -f 'ipc/capnp/echo.capnp.proxy-types.c++'; then $(CYGPATH_W) 'ipc/capnp/echo.capnp.proxy-types.c++'; else $(CYGPATH_W) '$(srcdir)/ipc/capnp/echo.capnp.proxy-types.c++'; fi`
	$(AM_V_at)$(am__mv) ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-echo.capnp.proxy-types.Tpo ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-echo.capnp.proxy-types.Po
#	$(AM_V_CXX)source='ipc/capnp/echo.capnp.proxy-types.c++' object='ipc/capnp/libbitcoin_ipc_a-echo.capnp.proxy-types.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_ipc_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_ipc_a_CXXFLAGS) $(CXXFLAGS) -c -o ipc/capnp/libbitcoin_ipc_a-echo.capnp.proxy-types.obj `if test -f 'ipc/capnp/echo.capnp.proxy-types.c++'; then $(CYGPATH_W) 'ipc/capnp/echo.capnp.proxy-types.c++'; else $(CYGPATH_W) '$(srcdir)/ipc/capnp/echo.capnp.proxy-types.c++'; fi`

ipc/capnp/libbitcoin_ipc_a-init.capnp.proxy-types.o: ipc/capnp/init.capnp.proxy-types.c++
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_ipc_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_ipc_a_CXXFLAGS) $(CXXFLAGS) -MT ipc/capnp/libbitcoin_ipc_a-init.capnp.proxy-types.o -MD -MP -MF ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-init.capnp.proxy-types.Tpo -c -o ipc/capnp/libbitcoin_ipc_a-init.capnp.proxy-types.o `test -f 'ipc/capnp/init.capnp.proxy-types.c++' || echo '$(srcdir)/'`ipc/capnp/init.capnp.proxy-types.c++
	$(AM_V_at)$(am__mv) ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-init.capnp.proxy-types.Tpo ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-init.capnp.proxy-types.Po
#	$(AM_V_CXX)source='ipc/capnp/init.capnp.proxy-types.c++' object='ipc/capnp/libbitcoin_ipc_a-init.capnp.proxy-types.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_ipc_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_ipc_a_CXXFLAGS) $(CXXFLAGS) -c -o ipc/capnp/libbitcoin_ipc_a-init.capnp.proxy-types.o `test -f 'ipc/capnp/init.capnp.proxy-types.c++' || echo '$(srcdir)/'`ipc/capnp/init.capnp.proxy-types.c++

ipc/capnp/libbitcoin_ipc_a-init.capnp.proxy-types.obj: ipc/capnp/init.capnp.proxy-types.c++
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_ipc_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_ipc_a_CXXFLAGS) $(CXXFLAGS) -MT ipc/capnp/libbitcoin_ipc_a-init.capnp.proxy-types.obj -MD -MP -MF ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-init.capnp.proxy-types.Tpo -c -o ipc/capnp/libbitcoin_ipc_a-init.capnp.proxy-types.obj `if test -f 'ipc/capnp/init.capnp.proxy-types.c++'; then $(CYGPATH_W) 'ipc/capnp/init.capnp.proxy-types.c++'; else $(CYGPATH_W) '$(srcdir)/ipc/capnp/init.capnp.proxy-types.c++'; fi`
	$(AM_V_at)$(am__mv) ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-init.capnp.proxy-types.Tpo ipc/capnp/$(DEPDIR)/libbitcoin_ipc_a-init.capnp.proxy-types.Po
#	$(AM_V_CXX)source='ipc/capnp/init.capnp.proxy-types.c++' object='ipc/capnp/libbitcoin_ipc_a-init.capnp.proxy-types.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_ipc_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_ipc_a_CXXFLAGS) $(CXXFLAGS) -c -o ipc/capnp/libbitcoin_ipc_a-init.capnp.proxy-types.obj `if test -f 'ipc/capnp/init.capnp.proxy-types.c++'; then $(CYGPATH_W) 'ipc/capnp/init.capnp.proxy-types.c++'; else $(CYGPATH_W) '$(srcdir)/ipc/capnp/init.capnp.proxy-types.c++'; fi`

libbitcoin_node_a-addrdb.o: addrdb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-addrdb.o -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-addrdb.Tpo -c -o libbitcoin_node_a-addrdb.o `test -f 'addrdb.cpp' || echo '$(srcdir)/'`addrdb.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-addrdb.Tpo $(DEPDIR)/libbitcoin_node_a-addrdb.Po
#	$(AM_V_CXX)source='addrdb.cpp' object='libbitcoin_node_a-addrdb.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-addrdb.o `test -f 'addrdb.cpp' || echo '$(srcdir)/'`addrdb.cpp

libbitcoin_node_a-addrdb.obj: addrdb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-addrdb.obj -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-addrdb.Tpo -c -o libbitcoin_node_a-addrdb.obj `if test -f 'addrdb.cpp'; then $(CYGPATH_W) 'addrdb.cpp'; else $(CYGPATH_W) '$(srcdir)/addrdb.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-addrdb.Tpo $(DEPDIR)/libbitcoin_node_a-addrdb.Po
#	$(AM_V_CXX)source='addrdb.cpp' object='libbitcoin_node_a-addrdb.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-addrdb.obj `if test -f 'addrdb.cpp'; then $(CYGPATH_W) 'addrdb.cpp'; else $(CYGPATH_W) '$(srcdir)/addrdb.cpp'; fi`

libbitcoin_node_a-addrman.o: addrman.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-addrman.o -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-addrman.Tpo -c -o libbitcoin_node_a-addrman.o `test -f 'addrman.cpp' || echo '$(srcdir)/'`addrman.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-addrman.Tpo $(DEPDIR)/libbitcoin_node_a-addrman.Po
#	$(AM_V_CXX)source='addrman.cpp' object='libbitcoin_node_a-addrman.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-addrman.o `test -f 'addrman.cpp' || echo '$(srcdir)/'`addrman.cpp

libbitcoin_node_a-addrman.obj: addrman.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-addrman.obj -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-addrman.Tpo -c -o libbitcoin_node_a-addrman.obj `if test -f 'addrman.cpp'; then $(CYGPATH_W) 'addrman.cpp'; else $(CYGPATH_W) '$(srcdir)/addrman.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-addrman.Tpo $(DEPDIR)/libbitcoin_node_a-addrman.Po
#	$(AM_V_CXX)source='addrman.cpp' object='libbitcoin_node_a-addrman.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-addrman.obj `if test -f 'addrman.cpp'; then $(CYGPATH_W) 'addrman.cpp'; else $(CYGPATH_W) '$(srcdir)/addrman.cpp'; fi`

libbitcoin_node_a-banman.o: banman.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-banman.o -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-banman.Tpo -c -o libbitcoin_node_a-banman.o `test -f 'banman.cpp' || echo '$(srcdir)/'`banman.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-banman.Tpo $(DEPDIR)/libbitcoin_node_a-banman.Po
#	$(AM_V_CXX)source='banman.cpp' object='libbitcoin_node_a-banman.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-banman.o `test -f 'banman.cpp' || echo '$(srcdir)/'`banman.cpp

libbitcoin_node_a-banman.obj: banman.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-banman.obj -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-banman.Tpo -c -o libbitcoin_node_a-banman.obj `if test -f 'banman.cpp'; then $(CYGPATH_W) 'banman.cpp'; else $(CYGPATH_W) '$(srcdir)/banman.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-banman.Tpo $(DEPDIR)/libbitcoin_node_a-banman.Po
#	$(AM_V_CXX)source='banman.cpp' object='libbitcoin_node_a-banman.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-banman.obj `if test -f 'banman.cpp'; then $(CYGPATH_W) 'banman.cpp'; else $(CYGPATH_W) '$(srcdir)/banman.cpp'; fi`

libbitcoin_node_a-blockencodings.o: blockencodings.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-blockencodings.o -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-blockencodings.Tpo -c -o libbitcoin_node_a-blockencodings.o `test -f 'blockencodings.cpp' || echo '$(srcdir)/'`blockencodings.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-blockencodings.Tpo $(DEPDIR)/libbitcoin_node_a-blockencodings.Po
#	$(AM_V_CXX)source='blockencodings.cpp' object='libbitcoin_node_a-blockencodings.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-blockencodings.o `test -f 'blockencodings.cpp' || echo '$(srcdir)/'`blockencodings.cpp

libbitcoin_node_a-blockencodings.obj: blockencodings.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-blockencodings.obj -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-blockencodings.Tpo -c -o libbitcoin_node_a-blockencodings.obj `if test -f 'blockencodings.cpp'; then $(CYGPATH_W) 'blockencodings.cpp'; else $(CYGPATH_W) '$(srcdir)/blockencodings.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-blockencodings.Tpo $(DEPDIR)/libbitcoin_node_a-blockencodings.Po
#	$(AM_V_CXX)source='blockencodings.cpp' object='libbitcoin_node_a-blockencodings.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-blockencodings.obj `if test -f 'blockencodings.cpp'; then $(CYGPATH_W) 'blockencodings.cpp'; else $(CYGPATH_W) '$(srcdir)/blockencodings.cpp'; fi`

libbitcoin_node_a-blockfilter.o: blockfilter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-blockfilter.o -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-blockfilter.Tpo -c -o libbitcoin_node_a-blockfilter.o `test -f 'blockfilter.cpp' || echo '$(srcdir)/'`blockfilter.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-blockfilter.Tpo $(DEPDIR)/libbitcoin_node_a-blockfilter.Po
#	$(AM_V_CXX)source='blockfilter.cpp' object='libbitcoin_node_a-blockfilter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-blockfilter.o `test -f 'blockfilter.cpp' || echo '$(srcdir)/'`blockfilter.cpp

libbitcoin_node_a-blockfilter.obj: blockfilter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-blockfilter.obj -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-blockfilter.Tpo -c -o libbitcoin_node_a-blockfilter.obj `if test -f 'blockfilter.cpp'; then $(CYGPATH_W) 'blockfilter.cpp'; else $(CYGPATH_W) '$(srcdir)/blockfilter.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-blockfilter.Tpo $(DEPDIR)/libbitcoin_node_a-blockfilter.Po
#	$(AM_V_CXX)source='blockfilter.cpp' object='libbitcoin_node_a-blockfilter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-blockfilter.obj `if test -f 'blockfilter.cpp'; then $(CYGPATH_W) 'blockfilter.cpp'; else $(CYGPATH_W) '$(srcdir)/blockfilter.cpp'; fi`

libbitcoin_node_a-chain.o: chain.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-chain.o -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-chain.Tpo -c -o libbitcoin_node_a-chain.o `test -f 'chain.cpp' || echo '$(srcdir)/'`chain.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-chain.Tpo $(DEPDIR)/libbitcoin_node_a-chain.Po
#	$(AM_V_CXX)source='chain.cpp' object='libbitcoin_node_a-chain.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-chain.o `test -f 'chain.cpp' || echo '$(srcdir)/'`chain.cpp

libbitcoin_node_a-chain.obj: chain.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-chain.obj -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-chain.Tpo -c -o libbitcoin_node_a-chain.obj `if test -f 'chain.cpp'; then $(CYGPATH_W) 'chain.cpp'; else $(CYGPATH_W) '$(srcdir)/chain.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-chain.Tpo $(DEPDIR)/libbitcoin_node_a-chain.Po
#	$(AM_V_CXX)source='chain.cpp' object='libbitcoin_node_a-chain.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-chain.obj `if test -f 'chain.cpp'; then $(CYGPATH_W) 'chain.cpp'; else $(CYGPATH_W) '$(srcdir)/chain.cpp'; fi`

consensus/libbitcoin_node_a-tx_verify.o: consensus/tx_verify.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT consensus/libbitcoin_node_a-tx_verify.o -MD -MP -MF consensus/$(DEPDIR)/libbitcoin_node_a-tx_verify.Tpo -c -o consensus/libbitcoin_node_a-tx_verify.o `test -f 'consensus/tx_verify.cpp' || echo '$(srcdir)/'`consensus/tx_verify.cpp
	$(AM_V_at)$(am__mv) consensus/$(DEPDIR)/libbitcoin_node_a-tx_verify.Tpo consensus/$(DEPDIR)/libbitcoin_node_a-tx_verify.Po
#	$(AM_V_CXX)source='consensus/tx_verify.cpp' object='consensus/libbitcoin_node_a-tx_verify.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o consensus/libbitcoin_node_a-tx_verify.o `test -f 'consensus/tx_verify.cpp' || echo '$(srcdir)/'`consensus/tx_verify.cpp

consensus/libbitcoin_node_a-tx_verify.obj: consensus/tx_verify.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT consensus/libbitcoin_node_a-tx_verify.obj -MD -MP -MF consensus/$(DEPDIR)/libbitcoin_node_a-tx_verify.Tpo -c -o consensus/libbitcoin_node_a-tx_verify.obj `if test -f 'consensus/tx_verify.cpp'; then $(CYGPATH_W) 'consensus/tx_verify.cpp'; else $(CYGPATH_W) '$(srcdir)/consensus/tx_verify.cpp'; fi`
	$(AM_V_at)$(am__mv) consensus/$(DEPDIR)/libbitcoin_node_a-tx_verify.Tpo consensus/$(DEPDIR)/libbitcoin_node_a-tx_verify.Po
#	$(AM_V_CXX)source='consensus/tx_verify.cpp' object='consensus/libbitcoin_node_a-tx_verify.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o consensus/libbitcoin_node_a-tx_verify.obj `if test -f 'consensus/tx_verify.cpp'; then $(CYGPATH_W) 'consensus/tx_verify.cpp'; else $(CYGPATH_W) '$(srcdir)/consensus/tx_verify.cpp'; fi`

libbitcoin_node_a-dbwrapper.o: dbwrapper.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-dbwrapper.o -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-dbwrapper.Tpo -c -o libbitcoin_node_a-dbwrapper.o `test -f 'dbwrapper.cpp' || echo '$(srcdir)/'`dbwrapper.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-dbwrapper.Tpo $(DEPDIR)/libbitcoin_node_a-dbwrapper.Po
#	$(AM_V_CXX)source='dbwrapper.cpp' object='libbitcoin_node_a-dbwrapper.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-dbwrapper.o `test -f 'dbwrapper.cpp' || echo '$(srcdir)/'`dbwrapper.cpp

libbitcoin_node_a-dbwrapper.obj: dbwrapper.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-dbwrapper.obj -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-dbwrapper.Tpo -c -o libbitcoin_node_a-dbwrapper.obj `if test -f 'dbwrapper.cpp'; then $(CYGPATH_W) 'dbwrapper.cpp'; else $(CYGPATH_W) '$(srcdir)/dbwrapper.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-dbwrapper.Tpo $(DEPDIR)/libbitcoin_node_a-dbwrapper.Po
#	$(AM_V_CXX)source='dbwrapper.cpp' object='libbitcoin_node_a-dbwrapper.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-dbwrapper.obj `if test -f 'dbwrapper.cpp'; then $(CYGPATH_W) 'dbwrapper.cpp'; else $(CYGPATH_W) '$(srcdir)/dbwrapper.cpp'; fi`

libbitcoin_node_a-deploymentstatus.o: deploymentstatus.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-deploymentstatus.o -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-deploymentstatus.Tpo -c -o libbitcoin_node_a-deploymentstatus.o `test -f 'deploymentstatus.cpp' || echo '$(srcdir)/'`deploymentstatus.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-deploymentstatus.Tpo $(DEPDIR)/libbitcoin_node_a-deploymentstatus.Po
#	$(AM_V_CXX)source='deploymentstatus.cpp' object='libbitcoin_node_a-deploymentstatus.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-deploymentstatus.o `test -f 'deploymentstatus.cpp' || echo '$(srcdir)/'`deploymentstatus.cpp

libbitcoin_node_a-deploymentstatus.obj: deploymentstatus.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-deploymentstatus.obj -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-deploymentstatus.Tpo -c -o libbitcoin_node_a-deploymentstatus.obj `if test -f 'deploymentstatus.cpp'; then $(CYGPATH_W) 'deploymentstatus.cpp'; else $(CYGPATH_W) '$(srcdir)/deploymentstatus.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-deploymentstatus.Tpo $(DEPDIR)/libbitcoin_node_a-deploymentstatus.Po
#	$(AM_V_CXX)source='deploymentstatus.cpp' object='libbitcoin_node_a-deploymentstatus.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-deploymentstatus.obj `if test -f 'deploymentstatus.cpp'; then $(CYGPATH_W) 'deploymentstatus.cpp'; else $(CYGPATH_W) '$(srcdir)/deploymentstatus.cpp'; fi`

libbitcoin_node_a-flatfile.o: flatfile.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-flatfile.o -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-flatfile.Tpo -c -o libbitcoin_node_a-flatfile.o `test -f 'flatfile.cpp' || echo '$(srcdir)/'`flatfile.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-flatfile.Tpo $(DEPDIR)/libbitcoin_node_a-flatfile.Po
#	$(AM_V_CXX)source='flatfile.cpp' object='libbitcoin_node_a-flatfile.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-flatfile.o `test -f 'flatfile.cpp' || echo '$(srcdir)/'`flatfile.cpp

libbitcoin_node_a-flatfile.obj: flatfile.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-flatfile.obj -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-flatfile.Tpo -c -o libbitcoin_node_a-flatfile.obj `if test -f 'flatfile.cpp'; then $(CYGPATH_W) 'flatfile.cpp'; else $(CYGPATH_W) '$(srcdir)/flatfile.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-flatfile.Tpo $(DEPDIR)/libbitcoin_node_a-flatfile.Po
#	$(AM_V_CXX)source='flatfile.cpp' object='libbitcoin_node_a-flatfile.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-flatfile.obj `if test -f 'flatfile.cpp'; then $(CYGPATH_W) 'flatfile.cpp'; else $(CYGPATH_W) '$(srcdir)/flatfile.cpp'; fi`

libbitcoin_node_a-httprpc.o: httprpc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-httprpc.o -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-httprpc.Tpo -c -o libbitcoin_node_a-httprpc.o `test -f 'httprpc.cpp' || echo '$(srcdir)/'`httprpc.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-httprpc.Tpo $(DEPDIR)/libbitcoin_node_a-httprpc.Po
#	$(AM_V_CXX)source='httprpc.cpp' object='libbitcoin_node_a-httprpc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-httprpc.o `test -f 'httprpc.cpp' || echo '$(srcdir)/'`httprpc.cpp

libbitcoin_node_a-httprpc.obj: httprpc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-httprpc.obj -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-httprpc.Tpo -c -o libbitcoin_node_a-httprpc.obj `if test -f 'httprpc.cpp'; then $(CYGPATH_W) 'httprpc.cpp'; else $(CYGPATH_W) '$(srcdir)/httprpc.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-httprpc.Tpo $(DEPDIR)/libbitcoin_node_a-httprpc.Po
#	$(AM_V_CXX)source='httprpc.cpp' object='libbitcoin_node_a-httprpc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-httprpc.obj `if test -f 'httprpc.cpp'; then $(CYGPATH_W) 'httprpc.cpp'; else $(CYGPATH_W) '$(srcdir)/httprpc.cpp'; fi`

libbitcoin_node_a-httpserver.o: httpserver.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-httpserver.o -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-httpserver.Tpo -c -o libbitcoin_node_a-httpserver.o `test -f 'httpserver.cpp' || echo '$(srcdir)/'`httpserver.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-httpserver.Tpo $(DEPDIR)/libbitcoin_node_a-httpserver.Po
#	$(AM_V_CXX)source='httpserver.cpp' object='libbitcoin_node_a-httpserver.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-httpserver.o `test -f 'httpserver.cpp' || echo '$(srcdir)/'`httpserver.cpp

libbitcoin_node_a-httpserver.obj: httpserver.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-httpserver.obj -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-httpserver.Tpo -c -o libbitcoin_node_a-httpserver.obj `if test -f 'httpserver.cpp'; then $(CYGPATH_W) 'httpserver.cpp'; else $(CYGPATH_W) '$(srcdir)/httpserver.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-httpserver.Tpo $(DEPDIR)/libbitcoin_node_a-httpserver.Po
#	$(AM_V_CXX)source='httpserver.cpp' object='libbitcoin_node_a-httpserver.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-httpserver.obj `if test -f 'httpserver.cpp'; then $(CYGPATH_W) 'httpserver.cpp'; else $(CYGPATH_W) '$(srcdir)/httpserver.cpp'; fi`

libbitcoin_node_a-i2p.o: i2p.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-i2p.o -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-i2p.Tpo -c -o libbitcoin_node_a-i2p.o `test -f 'i2p.cpp' || echo '$(srcdir)/'`i2p.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-i2p.Tpo $(DEPDIR)/libbitcoin_node_a-i2p.Po
#	$(AM_V_CXX)source='i2p.cpp' object='libbitcoin_node_a-i2p.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-i2p.o `test -f 'i2p.cpp' || echo '$(srcdir)/'`i2p.cpp

libbitcoin_node_a-i2p.obj: i2p.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-i2p.obj -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-i2p.Tpo -c -o libbitcoin_node_a-i2p.obj `if test -f 'i2p.cpp'; then $(CYGPATH_W) 'i2p.cpp'; else $(CYGPATH_W) '$(srcdir)/i2p.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-i2p.Tpo $(DEPDIR)/libbitcoin_node_a-i2p.Po
#	$(AM_V_CXX)source='i2p.cpp' object='libbitcoin_node_a-i2p.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-i2p.obj `if test -f 'i2p.cpp'; then $(CYGPATH_W) 'i2p.cpp'; else $(CYGPATH_W) '$(srcdir)/i2p.cpp'; fi`

index/libbitcoin_node_a-base.o: index/base.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT index/libbitcoin_node_a-base.o -MD -MP -MF index/$(DEPDIR)/libbitcoin_node_a-base.Tpo -c -o index/libbitcoin_node_a-base.o `test -f 'index/base.cpp' || echo '$(srcdir)/'`index/base.cpp
	$(AM_V_at)$(am__mv) index/$(DEPDIR)/libbitcoin_node_a-base.Tpo index/$(DEPDIR)/libbitcoin_node_a-base.Po
#	$(AM_V_CXX)source='index/base.cpp' object='index/libbitcoin_node_a-base.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o index/libbitcoin_node_a-base.o `test -f 'index/base.cpp' || echo '$(srcdir)/'`index/base.cpp

index/libbitcoin_node_a-base.obj: index/base.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT index/libbitcoin_node_a-base.obj -MD -MP -MF index/$(DEPDIR)/libbitcoin_node_a-base.Tpo -c -o index/libbitcoin_node_a-base.obj `if test -f 'index/base.cpp'; then $(CYGPATH_W) 'index/base.cpp'; else $(CYGPATH_W) '$(srcdir)/index/base.cpp'; fi`
	$(AM_V_at)$(am__mv) index/$(DEPDIR)/libbitcoin_node_a-base.Tpo index/$(DEPDIR)/libbitcoin_node_a-base.Po
#	$(AM_V_CXX)source='index/base.cpp' object='index/libbitcoin_node_a-base.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o index/libbitcoin_node_a-base.obj `if test -f 'index/base.cpp'; then $(CYGPATH_W) 'index/base.cpp'; else $(CYGPATH_W) '$(srcdir)/index/base.cpp'; fi`

index/libbitcoin_node_a-blockfilterindex.o: index/blockfilterindex.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT index/libbitcoin_node_a-blockfilterindex.o -MD -MP -MF index/$(DEPDIR)/libbitcoin_node_a-blockfilterindex.Tpo -c -o index/libbitcoin_node_a-blockfilterindex.o `test -f 'index/blockfilterindex.cpp' || echo '$(srcdir)/'`index/blockfilterindex.cpp
	$(AM_V_at)$(am__mv) index/$(DEPDIR)/libbitcoin_node_a-blockfilterindex.Tpo index/$(DEPDIR)/libbitcoin_node_a-blockfilterindex.Po
#	$(AM_V_CXX)source='index/blockfilterindex.cpp' object='index/libbitcoin_node_a-blockfilterindex.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o index/libbitcoin_node_a-blockfilterindex.o `test -f 'index/blockfilterindex.cpp' || echo '$(srcdir)/'`index/blockfilterindex.cpp

index/libbitcoin_node_a-blockfilterindex.obj: index/blockfilterindex.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT index/libbitcoin_node_a-blockfilterindex.obj -MD -MP -MF index/$(DEPDIR)/libbitcoin_node_a-blockfilterindex.Tpo -c -o index/libbitcoin_node_a-blockfilterindex.obj `if test -f 'index/blockfilterindex.cpp'; then $(CYGPATH_W) 'index/blockfilterindex.cpp'; else $(CYGPATH_W) '$(srcdir)/index/blockfilterindex.cpp'; fi`
	$(AM_V_at)$(am__mv) index/$(DEPDIR)/libbitcoin_node_a-blockfilterindex.Tpo index/$(DEPDIR)/libbitcoin_node_a-blockfilterindex.Po
#	$(AM_V_CXX)source='index/blockfilterindex.cpp' object='index/libbitcoin_node_a-blockfilterindex.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o index/libbitcoin_node_a-blockfilterindex.obj `if test -f 'index/blockfilterindex.cpp'; then $(CYGPATH_W) 'index/blockfilterindex.cpp'; else $(CYGPATH_W) '$(srcdir)/index/blockfilterindex.cpp'; fi`

index/libbitcoin_node_a-coinstatsindex.o: index/coinstatsindex.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT index/libbitcoin_node_a-coinstatsindex.o -MD -MP -MF index/$(DEPDIR)/libbitcoin_node_a-coinstatsindex.Tpo -c -o index/libbitcoin_node_a-coinstatsindex.o `test -f 'index/coinstatsindex.cpp' || echo '$(srcdir)/'`index/coinstatsindex.cpp
	$(AM_V_at)$(am__mv) index/$(DEPDIR)/libbitcoin_node_a-coinstatsindex.Tpo index/$(DEPDIR)/libbitcoin_node_a-coinstatsindex.Po
#	$(AM_V_CXX)source='index/coinstatsindex.cpp' object='index/libbitcoin_node_a-coinstatsindex.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o index/libbitcoin_node_a-coinstatsindex.o `test -f 'index/coinstatsindex.cpp' || echo '$(srcdir)/'`index/coinstatsindex.cpp

index/libbitcoin_node_a-coinstatsindex.obj: index/coinstatsindex.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT index/libbitcoin_node_a-coinstatsindex.obj -MD -MP -MF index/$(DEPDIR)/libbitcoin_node_a-coinstatsindex.Tpo -c -o index/libbitcoin_node_a-coinstatsindex.obj `if test -f 'index/coinstatsindex.cpp'; then $(CYGPATH_W) 'index/coinstatsindex.cpp'; else $(CYGPATH_W) '$(srcdir)/index/coinstatsindex.cpp'; fi`
	$(AM_V_at)$(am__mv) index/$(DEPDIR)/libbitcoin_node_a-coinstatsindex.Tpo index/$(DEPDIR)/libbitcoin_node_a-coinstatsindex.Po
#	$(AM_V_CXX)source='index/coinstatsindex.cpp' object='index/libbitcoin_node_a-coinstatsindex.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o index/libbitcoin_node_a-coinstatsindex.obj `if test -f 'index/coinstatsindex.cpp'; then $(CYGPATH_W) 'index/coinstatsindex.cpp'; else $(CYGPATH_W) '$(srcdir)/index/coinstatsindex.cpp'; fi`

index/libbitcoin_node_a-txindex.o: index/txindex.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT index/libbitcoin_node_a-txindex.o -MD -MP -MF index/$(DEPDIR)/libbitcoin_node_a-txindex.Tpo -c -o index/libbitcoin_node_a-txindex.o `test -f 'index/txindex.cpp' || echo '$(srcdir)/'`index/txindex.cpp
	$(AM_V_at)$(am__mv) index/$(DEPDIR)/libbitcoin_node_a-txindex.Tpo index/$(DEPDIR)/libbitcoin_node_a-txindex.Po
#	$(AM_V_CXX)source='index/txindex.cpp' object='index/libbitcoin_node_a-txindex.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o index/libbitcoin_node_a-txindex.o `test -f 'index/txindex.cpp' || echo '$(srcdir)/'`index/txindex.cpp

index/libbitcoin_node_a-txindex.obj: index/txindex.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT index/libbitcoin_node_a-txindex.obj -MD -MP -MF index/$(DEPDIR)/libbitcoin_node_a-txindex.Tpo -c -o index/libbitcoin_node_a-txindex.obj `if test -f 'index/txindex.cpp'; then $(CYGPATH_W) 'index/txindex.cpp'; else $(CYGPATH_W) '$(srcdir)/index/txindex.cpp'; fi`
	$(AM_V_at)$(am__mv) index/$(DEPDIR)/libbitcoin_node_a-txindex.Tpo index/$(DEPDIR)/libbitcoin_node_a-txindex.Po
#	$(AM_V_CXX)source='index/txindex.cpp' object='index/libbitcoin_node_a-txindex.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o index/libbitcoin_node_a-txindex.obj `if test -f 'index/txindex.cpp'; then $(CYGPATH_W) 'index/txindex.cpp'; else $(CYGPATH_W) '$(srcdir)/index/txindex.cpp'; fi`

libbitcoin_node_a-init.o: init.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-init.o -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-init.Tpo -c -o libbitcoin_node_a-init.o `test -f 'init.cpp' || echo '$(srcdir)/'`init.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-init.Tpo $(DEPDIR)/libbitcoin_node_a-init.Po
#	$(AM_V_CXX)source='init.cpp' object='libbitcoin_node_a-init.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-init.o `test -f 'init.cpp' || echo '$(srcdir)/'`init.cpp

libbitcoin_node_a-init.obj: init.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-init.obj -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-init.Tpo -c -o libbitcoin_node_a-init.obj `if test -f 'init.cpp'; then $(CYGPATH_W) 'init.cpp'; else $(CYGPATH_W) '$(srcdir)/init.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-init.Tpo $(DEPDIR)/libbitcoin_node_a-init.Po
#	$(AM_V_CXX)source='init.cpp' object='libbitcoin_node_a-init.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-init.obj `if test -f 'init.cpp'; then $(CYGPATH_W) 'init.cpp'; else $(CYGPATH_W) '$(srcdir)/init.cpp'; fi`

kernel/libbitcoin_node_a-checks.o: kernel/checks.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT kernel/libbitcoin_node_a-checks.o -MD -MP -MF kernel/$(DEPDIR)/libbitcoin_node_a-checks.Tpo -c -o kernel/libbitcoin_node_a-checks.o `test -f 'kernel/checks.cpp' || echo '$(srcdir)/'`kernel/checks.cpp
	$(AM_V_at)$(am__mv) kernel/$(DEPDIR)/libbitcoin_node_a-checks.Tpo kernel/$(DEPDIR)/libbitcoin_node_a-checks.Po
#	$(AM_V_CXX)source='kernel/checks.cpp' object='kernel/libbitcoin_node_a-checks.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o kernel/libbitcoin_node_a-checks.o `test -f 'kernel/checks.cpp' || echo '$(srcdir)/'`kernel/checks.cpp

kernel/libbitcoin_node_a-checks.obj: kernel/checks.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT kernel/libbitcoin_node_a-checks.obj -MD -MP -MF kernel/$(DEPDIR)/libbitcoin_node_a-checks.Tpo -c -o kernel/libbitcoin_node_a-checks.obj `if test -f 'kernel/checks.cpp'; then $(CYGPATH_W) 'kernel/checks.cpp'; else $(CYGPATH_W) '$(srcdir)/kernel/checks.cpp'; fi`
	$(AM_V_at)$(am__mv) kernel/$(DEPDIR)/libbitcoin_node_a-checks.Tpo kernel/$(DEPDIR)/libbitcoin_node_a-checks.Po
#	$(AM_V_CXX)source='kernel/checks.cpp' object='kernel/libbitcoin_node_a-checks.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o kernel/libbitcoin_node_a-checks.obj `if test -f 'kernel/checks.cpp'; then $(CYGPATH_W) 'kernel/checks.cpp'; else $(CYGPATH_W) '$(srcdir)/kernel/checks.cpp'; fi`

kernel/libbitcoin_node_a-coinstats.o: kernel/coinstats.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT kernel/libbitcoin_node_a-coinstats.o -MD -MP -MF kernel/$(DEPDIR)/libbitcoin_node_a-coinstats.Tpo -c -o kernel/libbitcoin_node_a-coinstats.o `test -f 'kernel/coinstats.cpp' || echo '$(srcdir)/'`kernel/coinstats.cpp
	$(AM_V_at)$(am__mv) kernel/$(DEPDIR)/libbitcoin_node_a-coinstats.Tpo kernel/$(DEPDIR)/libbitcoin_node_a-coinstats.Po
#	$(AM_V_CXX)source='kernel/coinstats.cpp' object='kernel/libbitcoin_node_a-coinstats.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o kernel/libbitcoin_node_a-coinstats.o `test -f 'kernel/coinstats.cpp' || echo '$(srcdir)/'`kernel/coinstats.cpp

kernel/libbitcoin_node_a-coinstats.obj: kernel/coinstats.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT kernel/libbitcoin_node_a-coinstats.obj -MD -MP -MF kernel/$(DEPDIR)/libbitcoin_node_a-coinstats.Tpo -c -o kernel/libbitcoin_node_a-coinstats.obj `if test -f 'kernel/coinstats.cpp'; then $(CYGPATH_W) 'kernel/coinstats.cpp'; else $(CYGPATH_W) '$(srcdir)/kernel/coinstats.cpp'; fi`
	$(AM_V_at)$(am__mv) kernel/$(DEPDIR)/libbitcoin_node_a-coinstats.Tpo kernel/$(DEPDIR)/libbitcoin_node_a-coinstats.Po
#	$(AM_V_CXX)source='kernel/coinstats.cpp' object='kernel/libbitcoin_node_a-coinstats.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o kernel/libbitcoin_node_a-coinstats.obj `if test -f 'kernel/coinstats.cpp'; then $(CYGPATH_W) 'kernel/coinstats.cpp'; else $(CYGPATH_W) '$(srcdir)/kernel/coinstats.cpp'; fi`

kernel/libbitcoin_node_a-context.o: kernel/context.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT kernel/libbitcoin_node_a-context.o -MD -MP -MF kernel/$(DEPDIR)/libbitcoin_node_a-context.Tpo -c -o kernel/libbitcoin_node_a-context.o `test -f 'kernel/context.cpp' || echo '$(srcdir)/'`kernel/context.cpp
	$(AM_V_at)$(am__mv) kernel/$(DEPDIR)/libbitcoin_node_a-context.Tpo kernel/$(DEPDIR)/libbitcoin_node_a-context.Po
#	$(AM_V_CXX)source='kernel/context.cpp' object='kernel/libbitcoin_node_a-context.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o kernel/libbitcoin_node_a-context.o `test -f 'kernel/context.cpp' || echo '$(srcdir)/'`kernel/context.cpp

kernel/libbitcoin_node_a-context.obj: kernel/context.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT kernel/libbitcoin_node_a-context.obj -MD -MP -MF kernel/$(DEPDIR)/libbitcoin_node_a-context.Tpo -c -o kernel/libbitcoin_node_a-context.obj `if test -f 'kernel/context.cpp'; then $(CYGPATH_W) 'kernel/context.cpp'; else $(CYGPATH_W) '$(srcdir)/kernel/context.cpp'; fi`
	$(AM_V_at)$(am__mv) kernel/$(DEPDIR)/libbitcoin_node_a-context.Tpo kernel/$(DEPDIR)/libbitcoin_node_a-context.Po
#	$(AM_V_CXX)source='kernel/context.cpp' object='kernel/libbitcoin_node_a-context.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o kernel/libbitcoin_node_a-context.obj `if test -f 'kernel/context.cpp'; then $(CYGPATH_W) 'kernel/context.cpp'; else $(CYGPATH_W) '$(srcdir)/kernel/context.cpp'; fi`

libbitcoin_node_a-mapport.o: mapport.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-mapport.o -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-mapport.Tpo -c -o libbitcoin_node_a-mapport.o `test -f 'mapport.cpp' || echo '$(srcdir)/'`mapport.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-mapport.Tpo $(DEPDIR)/libbitcoin_node_a-mapport.Po
#	$(AM_V_CXX)source='mapport.cpp' object='libbitcoin_node_a-mapport.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-mapport.o `test -f 'mapport.cpp' || echo '$(srcdir)/'`mapport.cpp

libbitcoin_node_a-mapport.obj: mapport.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-mapport.obj -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-mapport.Tpo -c -o libbitcoin_node_a-mapport.obj `if test -f 'mapport.cpp'; then $(CYGPATH_W) 'mapport.cpp'; else $(CYGPATH_W) '$(srcdir)/mapport.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-mapport.Tpo $(DEPDIR)/libbitcoin_node_a-mapport.Po
#	$(AM_V_CXX)source='mapport.cpp' object='libbitcoin_node_a-mapport.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-mapport.obj `if test -f 'mapport.cpp'; then $(CYGPATH_W) 'mapport.cpp'; else $(CYGPATH_W) '$(srcdir)/mapport.cpp'; fi`

libbitcoin_node_a-net.o: net.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-net.o -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-net.Tpo -c -o libbitcoin_node_a-net.o `test -f 'net.cpp' || echo '$(srcdir)/'`net.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-net.Tpo $(DEPDIR)/libbitcoin_node_a-net.Po
#	$(AM_V_CXX)source='net.cpp' object='libbitcoin_node_a-net.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-net.o `test -f 'net.cpp' || echo '$(srcdir)/'`net.cpp

libbitcoin_node_a-net.obj: net.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-net.obj -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-net.Tpo -c -o libbitcoin_node_a-net.obj `if test -f 'net.cpp'; then $(CYGPATH_W) 'net.cpp'; else $(CYGPATH_W) '$(srcdir)/net.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-net.Tpo $(DEPDIR)/libbitcoin_node_a-net.Po
#	$(AM_V_CXX)source='net.cpp' object='libbitcoin_node_a-net.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-net.obj `if test -f 'net.cpp'; then $(CYGPATH_W) 'net.cpp'; else $(CYGPATH_W) '$(srcdir)/net.cpp'; fi`

libbitcoin_node_a-netgroup.o: netgroup.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-netgroup.o -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-netgroup.Tpo -c -o libbitcoin_node_a-netgroup.o `test -f 'netgroup.cpp' || echo '$(srcdir)/'`netgroup.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-netgroup.Tpo $(DEPDIR)/libbitcoin_node_a-netgroup.Po
#	$(AM_V_CXX)source='netgroup.cpp' object='libbitcoin_node_a-netgroup.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-netgroup.o `test -f 'netgroup.cpp' || echo '$(srcdir)/'`netgroup.cpp

libbitcoin_node_a-netgroup.obj: netgroup.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-netgroup.obj -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-netgroup.Tpo -c -o libbitcoin_node_a-netgroup.obj `if test -f 'netgroup.cpp'; then $(CYGPATH_W) 'netgroup.cpp'; else $(CYGPATH_W) '$(srcdir)/netgroup.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-netgroup.Tpo $(DEPDIR)/libbitcoin_node_a-netgroup.Po
#	$(AM_V_CXX)source='netgroup.cpp' object='libbitcoin_node_a-netgroup.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-netgroup.obj `if test -f 'netgroup.cpp'; then $(CYGPATH_W) 'netgroup.cpp'; else $(CYGPATH_W) '$(srcdir)/netgroup.cpp'; fi`

libbitcoin_node_a-net_processing.o: net_processing.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-net_processing.o -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-net_processing.Tpo -c -o libbitcoin_node_a-net_processing.o `test -f 'net_processing.cpp' || echo '$(srcdir)/'`net_processing.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-net_processing.Tpo $(DEPDIR)/libbitcoin_node_a-net_processing.Po
#	$(AM_V_CXX)source='net_processing.cpp' object='libbitcoin_node_a-net_processing.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-net_processing.o `test -f 'net_processing.cpp' || echo '$(srcdir)/'`net_processing.cpp

libbitcoin_node_a-net_processing.obj: net_processing.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-net_processing.obj -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-net_processing.Tpo -c -o libbitcoin_node_a-net_processing.obj `if test -f 'net_processing.cpp'; then $(CYGPATH_W) 'net_processing.cpp'; else $(CYGPATH_W) '$(srcdir)/net_processing.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-net_processing.Tpo $(DEPDIR)/libbitcoin_node_a-net_processing.Po
#	$(AM_V_CXX)source='net_processing.cpp' object='libbitcoin_node_a-net_processing.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-net_processing.obj `if test -f 'net_processing.cpp'; then $(CYGPATH_W) 'net_processing.cpp'; else $(CYGPATH_W) '$(srcdir)/net_processing.cpp'; fi`

node/libbitcoin_node_a-blockstorage.o: node/blockstorage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT node/libbitcoin_node_a-blockstorage.o -MD -MP -MF node/$(DEPDIR)/libbitcoin_node_a-blockstorage.Tpo -c -o node/libbitcoin_node_a-blockstorage.o `test -f 'node/blockstorage.cpp' || echo '$(srcdir)/'`node/blockstorage.cpp
	$(AM_V_at)$(am__mv) node/$(DEPDIR)/libbitcoin_node_a-blockstorage.Tpo node/$(DEPDIR)/libbitcoin_node_a-blockstorage.Po
#	$(AM_V_CXX)source='node/blockstorage.cpp' object='node/libbitcoin_node_a-blockstorage.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o node/libbitcoin_node_a-blockstorage.o `test -f 'node/blockstorage.cpp' || echo '$(srcdir)/'`node/blockstorage.cpp

node/libbitcoin_node_a-blockstorage.obj: node/blockstorage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT node/libbitcoin_node_a-blockstorage.obj -MD -MP -MF node/$(DEPDIR)/libbitcoin_node_a-blockstorage.Tpo -c -o node/libbitcoin_node_a-blockstorage.obj `if test -f 'node/blockstorage.cpp'; then $(CYGPATH_W) 'node/blockstorage.cpp'; else $(CYGPATH_W) '$(srcdir)/node/blockstorage.cpp'; fi`
	$(AM_V_at)$(am__mv) node/$(DEPDIR)/libbitcoin_node_a-blockstorage.Tpo node/$(DEPDIR)/libbitcoin_node_a-blockstorage.Po
#	$(AM_V_CXX)source='node/blockstorage.cpp' object='node/libbitcoin_node_a-blockstorage.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o node/libbitcoin_node_a-blockstorage.obj `if test -f 'node/blockstorage.cpp'; then $(CYGPATH_W) 'node/blockstorage.cpp'; else $(CYGPATH_W) '$(srcdir)/node/blockstorage.cpp'; fi`

node/libbitcoin_node_a-caches.o: node/caches.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT node/libbitcoin_node_a-caches.o -MD -MP -MF node/$(DEPDIR)/libbitcoin_node_a-caches.Tpo -c -o node/libbitcoin_node_a-caches.o `test -f 'node/caches.cpp' || echo '$(srcdir)/'`node/caches.cpp
	$(AM_V_at)$(am__mv) node/$(DEPDIR)/libbitcoin_node_a-caches.Tpo node/$(DEPDIR)/libbitcoin_node_a-caches.Po
#	$(AM_V_CXX)source='node/caches.cpp' object='node/libbitcoin_node_a-caches.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o node/libbitcoin_node_a-caches.o `test -f 'node/caches.cpp' || echo '$(srcdir)/'`node/caches.cpp

node/libbitcoin_node_a-caches.obj: node/caches.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT node/libbitcoin_node_a-caches.obj -MD -MP -MF node/$(DEPDIR)/libbitcoin_node_a-caches.Tpo -c -o node/libbitcoin_node_a-caches.obj `if test -f 'node/caches.cpp'; then $(CYGPATH_W) 'node/caches.cpp'; else $(CYGPATH_W) '$(srcdir)/node/caches.cpp'; fi`
	$(AM_V_at)$(am__mv) node/$(DEPDIR)/libbitcoin_node_a-caches.Tpo node/$(DEPDIR)/libbitcoin_node_a-caches.Po
#	$(AM_V_CXX)source='node/caches.cpp' object='node/libbitcoin_node_a-caches.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o node/libbitcoin_node_a-caches.obj `if test -f 'node/caches.cpp'; then $(CYGPATH_W) 'node/caches.cpp'; else $(CYGPATH_W) '$(srcdir)/node/caches.cpp'; fi`

node/libbitcoin_node_a-chainstate.o: node/chainstate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT node/libbitcoin_node_a-chainstate.o -MD -MP -MF node/$(DEPDIR)/libbitcoin_node_a-chainstate.Tpo -c -o node/libbitcoin_node_a-chainstate.o `test -f 'node/chainstate.cpp' || echo '$(srcdir)/'`node/chainstate.cpp
	$(AM_V_at)$(am__mv) node/$(DEPDIR)/libbitcoin_node_a-chainstate.Tpo node/$(DEPDIR)/libbitcoin_node_a-chainstate.Po
#	$(AM_V_CXX)source='node/chainstate.cpp' object='node/libbitcoin_node_a-chainstate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o node/libbitcoin_node_a-chainstate.o `test -f 'node/chainstate.cpp' || echo '$(srcdir)/'`node/chainstate.cpp

node/libbitcoin_node_a-chainstate.obj: node/chainstate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT node/libbitcoin_node_a-chainstate.obj -MD -MP -MF node/$(DEPDIR)/libbitcoin_node_a-chainstate.Tpo -c -o node/libbitcoin_node_a-chainstate.obj `if test -f 'node/chainstate.cpp'; then $(CYGPATH_W) 'node/chainstate.cpp'; else $(CYGPATH_W) '$(srcdir)/node/chainstate.cpp'; fi`
	$(AM_V_at)$(am__mv) node/$(DEPDIR)/libbitcoin_node_a-chainstate.Tpo node/$(DEPDIR)/libbitcoin_node_a-chainstate.Po
#	$(AM_V_CXX)source='node/chainstate.cpp' object='node/libbitcoin_node_a-chainstate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o node/libbitcoin_node_a-chainstate.obj `if test -f 'node/chainstate.cpp'; then $(CYGPATH_W) 'node/chainstate.cpp'; else $(CYGPATH_W) '$(srcdir)/node/chainstate.cpp'; fi`

node/libbitcoin_node_a-coin.o: node/coin.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT node/libbitcoin_node_a-coin.o -MD -MP -MF node/$(DEPDIR)/libbitcoin_node_a-coin.Tpo -c -o node/libbitcoin_node_a-coin.o `test -f 'node/coin.cpp' || echo '$(srcdir)/'`node/coin.cpp
	$(AM_V_at)$(am__mv) node/$(DEPDIR)/libbitcoin_node_a-coin.Tpo node/$(DEPDIR)/libbitcoin_node_a-coin.Po
#	$(AM_V_CXX)source='node/coin.cpp' object='node/libbitcoin_node_a-coin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o node/libbitcoin_node_a-coin.o `test -f 'node/coin.cpp' || echo '$(srcdir)/'`node/coin.cpp

node/libbitcoin_node_a-coin.obj: node/coin.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT node/libbitcoin_node_a-coin.obj -MD -MP -MF node/$(DEPDIR)/libbitcoin_node_a-coin.Tpo -c -o node/libbitcoin_node_a-coin.obj `if test -f 'node/coin.cpp'; then $(CYGPATH_W) 'node/coin.cpp'; else $(CYGPATH_W) '$(srcdir)/node/coin.cpp'; fi`
	$(AM_V_at)$(am__mv) node/$(DEPDIR)/libbitcoin_node_a-coin.Tpo node/$(DEPDIR)/libbitcoin_node_a-coin.Po
#	$(AM_V_CXX)source='node/coin.cpp' object='node/libbitcoin_node_a-coin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o node/libbitcoin_node_a-coin.obj `if test -f 'node/coin.cpp'; then $(CYGPATH_W) 'node/coin.cpp'; else $(CYGPATH_W) '$(srcdir)/node/coin.cpp'; fi`

node/libbitcoin_node_a-context.o: node/context.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT node/libbitcoin_node_a-context.o -MD -MP -MF node/$(DEPDIR)/libbitcoin_node_a-context.Tpo -c -o node/libbitcoin_node_a-context.o `test -f 'node/context.cpp' || echo '$(srcdir)/'`node/context.cpp
	$(AM_V_at)$(am__mv) node/$(DEPDIR)/libbitcoin_node_a-context.Tpo node/$(DEPDIR)/libbitcoin_node_a-context.Po
#	$(AM_V_CXX)source='node/context.cpp' object='node/libbitcoin_node_a-context.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o node/libbitcoin_node_a-context.o `test -f 'node/context.cpp' || echo '$(srcdir)/'`node/context.cpp

node/libbitcoin_node_a-context.obj: node/context.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT node/libbitcoin_node_a-context.obj -MD -MP -MF node/$(DEPDIR)/libbitcoin_node_a-context.Tpo -c -o node/libbitcoin_node_a-context.obj `if test -f 'node/context.cpp'; then $(CYGPATH_W) 'node/context.cpp'; else $(CYGPATH_W) '$(srcdir)/node/context.cpp'; fi`
	$(AM_V_at)$(am__mv) node/$(DEPDIR)/libbitcoin_node_a-context.Tpo node/$(DEPDIR)/libbitcoin_node_a-context.Po
#	$(AM_V_CXX)source='node/context.cpp' object='node/libbitcoin_node_a-context.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o node/libbitcoin_node_a-context.obj `if test -f 'node/context.cpp'; then $(CYGPATH_W) 'node/context.cpp'; else $(CYGPATH_W) '$(srcdir)/node/context.cpp'; fi`

node/libbitcoin_node_a-interfaces.o: node/interfaces.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT node/libbitcoin_node_a-interfaces.o -MD -MP -MF node/$(DEPDIR)/libbitcoin_node_a-interfaces.Tpo -c -o node/libbitcoin_node_a-interfaces.o `test -f 'node/interfaces.cpp' || echo '$(srcdir)/'`node/interfaces.cpp
	$(AM_V_at)$(am__mv) node/$(DEPDIR)/libbitcoin_node_a-interfaces.Tpo node/$(DEPDIR)/libbitcoin_node_a-interfaces.Po
#	$(AM_V_CXX)source='node/interfaces.cpp' object='node/libbitcoin_node_a-interfaces.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o node/libbitcoin_node_a-interfaces.o `test -f 'node/interfaces.cpp' || echo '$(srcdir)/'`node/interfaces.cpp

node/libbitcoin_node_a-interfaces.obj: node/interfaces.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT node/libbitcoin_node_a-interfaces.obj -MD -MP -MF node/$(DEPDIR)/libbitcoin_node_a-interfaces.Tpo -c -o node/libbitcoin_node_a-interfaces.obj `if test -f 'node/interfaces.cpp'; then $(CYGPATH_W) 'node/interfaces.cpp'; else $(CYGPATH_W) '$(srcdir)/node/interfaces.cpp'; fi`
	$(AM_V_at)$(am__mv) node/$(DEPDIR)/libbitcoin_node_a-interfaces.Tpo node/$(DEPDIR)/libbitcoin_node_a-interfaces.Po
#	$(AM_V_CXX)source='node/interfaces.cpp' object='node/libbitcoin_node_a-interfaces.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o node/libbitcoin_node_a-interfaces.obj `if test -f 'node/interfaces.cpp'; then $(CYGPATH_W) 'node/interfaces.cpp'; else $(CYGPATH_W) '$(srcdir)/node/interfaces.cpp'; fi`

node/libbitcoin_node_a-miner.o: node/miner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT node/libbitcoin_node_a-miner.o -MD -MP -MF node/$(DEPDIR)/libbitcoin_node_a-miner.Tpo -c -o node/libbitcoin_node_a-miner.o `test -f 'node/miner.cpp' || echo '$(srcdir)/'`node/miner.cpp
	$(AM_V_at)$(am__mv) node/$(DEPDIR)/libbitcoin_node_a-miner.Tpo node/$(DEPDIR)/libbitcoin_node_a-miner.Po
#	$(AM_V_CXX)source='node/miner.cpp' object='node/libbitcoin_node_a-miner.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o node/libbitcoin_node_a-miner.o `test -f 'node/miner.cpp' || echo '$(srcdir)/'`node/miner.cpp

node/libbitcoin_node_a-miner.obj: node/miner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT node/libbitcoin_node_a-miner.obj -MD -MP -MF node/$(DEPDIR)/libbitcoin_node_a-miner.Tpo -c -o node/libbitcoin_node_a-miner.obj `if test -f 'node/miner.cpp'; then $(CYGPATH_W) 'node/miner.cpp'; else $(CYGPATH_W) '$(srcdir)/node/miner.cpp'; fi`
	$(AM_V_at)$(am__mv) node/$(DEPDIR)/libbitcoin_node_a-miner.Tpo node/$(DEPDIR)/libbitcoin_node_a-miner.Po
#	$(AM_V_CXX)source='node/miner.cpp' object='node/libbitcoin_node_a-miner.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o node/libbitcoin_node_a-miner.obj `if test -f 'node/miner.cpp'; then $(CYGPATH_W) 'node/miner.cpp'; else $(CYGPATH_W) '$(srcdir)/node/miner.cpp'; fi`

node/libbitcoin_node_a-minisketchwrapper.o: node/minisketchwrapper.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT node/libbitcoin_node_a-minisketchwrapper.o -MD -MP -MF node/$(DEPDIR)/libbitcoin_node_a-minisketchwrapper.Tpo -c -o node/libbitcoin_node_a-minisketchwrapper.o `test -f 'node/minisketchwrapper.cpp' || echo '$(srcdir)/'`node/minisketchwrapper.cpp
	$(AM_V_at)$(am__mv) node/$(DEPDIR)/libbitcoin_node_a-minisketchwrapper.Tpo node/$(DEPDIR)/libbitcoin_node_a-minisketchwrapper.Po
#	$(AM_V_CXX)source='node/minisketchwrapper.cpp' object='node/libbitcoin_node_a-minisketchwrapper.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o node/libbitcoin_node_a-minisketchwrapper.o `test -f 'node/minisketchwrapper.cpp' || echo '$(srcdir)/'`node/minisketchwrapper.cpp

node/libbitcoin_node_a-minisketchwrapper.obj: node/minisketchwrapper.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT node/libbitcoin_node_a-minisketchwrapper.obj -MD -MP -MF node/$(DEPDIR)/libbitcoin_node_a-minisketchwrapper.Tpo -c -o node/libbitcoin_node_a-minisketchwrapper.obj `if test -f 'node/minisketchwrapper.cpp'; then $(CYGPATH_W) 'node/minisketchwrapper.cpp'; else $(CYGPATH_W) '$(srcdir)/node/minisketchwrapper.cpp'; fi`
	$(AM_V_at)$(am__mv) node/$(DEPDIR)/libbitcoin_node_a-minisketchwrapper.Tpo node/$(DEPDIR)/libbitcoin_node_a-minisketchwrapper.Po
#	$(AM_V_CXX)source='node/minisketchwrapper.cpp' object='node/libbitcoin_node_a-minisketchwrapper.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o node/libbitcoin_node_a-minisketchwrapper.obj `if test -f 'node/minisketchwrapper.cpp'; then $(CYGPATH_W) 'node/minisketchwrapper.cpp'; else $(CYGPATH_W) '$(srcdir)/node/minisketchwrapper.cpp'; fi`

node/libbitcoin_node_a-psbt.o: node/psbt.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT node/libbitcoin_node_a-psbt.o -MD -MP -MF node/$(DEPDIR)/libbitcoin_node_a-psbt.Tpo -c -o node/libbitcoin_node_a-psbt.o `test -f 'node/psbt.cpp' || echo '$(srcdir)/'`node/psbt.cpp
	$(AM_V_at)$(am__mv) node/$(DEPDIR)/libbitcoin_node_a-psbt.Tpo node/$(DEPDIR)/libbitcoin_node_a-psbt.Po
#	$(AM_V_CXX)source='node/psbt.cpp' object='node/libbitcoin_node_a-psbt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o node/libbitcoin_node_a-psbt.o `test -f 'node/psbt.cpp' || echo '$(srcdir)/'`node/psbt.cpp

node/libbitcoin_node_a-psbt.obj: node/psbt.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT node/libbitcoin_node_a-psbt.obj -MD -MP -MF node/$(DEPDIR)/libbitcoin_node_a-psbt.Tpo -c -o node/libbitcoin_node_a-psbt.obj `if test -f 'node/psbt.cpp'; then $(CYGPATH_W) 'node/psbt.cpp'; else $(CYGPATH_W) '$(srcdir)/node/psbt.cpp'; fi`
	$(AM_V_at)$(am__mv) node/$(DEPDIR)/libbitcoin_node_a-psbt.Tpo node/$(DEPDIR)/libbitcoin_node_a-psbt.Po
#	$(AM_V_CXX)source='node/psbt.cpp' object='node/libbitcoin_node_a-psbt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o node/libbitcoin_node_a-psbt.obj `if test -f 'node/psbt.cpp'; then $(CYGPATH_W) 'node/psbt.cpp'; else $(CYGPATH_W) '$(srcdir)/node/psbt.cpp'; fi`

node/libbitcoin_node_a-transaction.o: node/transaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT node/libbitcoin_node_a-transaction.o -MD -MP -MF node/$(DEPDIR)/libbitcoin_node_a-transaction.Tpo -c -o node/libbitcoin_node_a-transaction.o `test -f 'node/transaction.cpp' || echo '$(srcdir)/'`node/transaction.cpp
	$(AM_V_at)$(am__mv) node/$(DEPDIR)/libbitcoin_node_a-transaction.Tpo node/$(DEPDIR)/libbitcoin_node_a-transaction.Po
#	$(AM_V_CXX)source='node/transaction.cpp' object='node/libbitcoin_node_a-transaction.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o node/libbitcoin_node_a-transaction.o `test -f 'node/transaction.cpp' || echo '$(srcdir)/'`node/transaction.cpp

node/libbitcoin_node_a-transaction.obj: node/transaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT node/libbitcoin_node_a-transaction.obj -MD -MP -MF node/$(DEPDIR)/libbitcoin_node_a-transaction.Tpo -c -o node/libbitcoin_node_a-transaction.obj `if test -f 'node/transaction.cpp'; then $(CYGPATH_W) 'node/transaction.cpp'; else $(CYGPATH_W) '$(srcdir)/node/transaction.cpp'; fi`
	$(AM_V_at)$(am__mv) node/$(DEPDIR)/libbitcoin_node_a-transaction.Tpo node/$(DEPDIR)/libbitcoin_node_a-transaction.Po
#	$(AM_V_CXX)source='node/transaction.cpp' object='node/libbitcoin_node_a-transaction.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o node/libbitcoin_node_a-transaction.obj `if test -f 'node/transaction.cpp'; then $(CYGPATH_W) 'node/transaction.cpp'; else $(CYGPATH_W) '$(srcdir)/node/transaction.cpp'; fi`

node/libbitcoin_node_a-ui_interface.o: node/ui_interface.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT node/libbitcoin_node_a-ui_interface.o -MD -MP -MF node/$(DEPDIR)/libbitcoin_node_a-ui_interface.Tpo -c -o node/libbitcoin_node_a-ui_interface.o `test -f 'node/ui_interface.cpp' || echo '$(srcdir)/'`node/ui_interface.cpp
	$(AM_V_at)$(am__mv) node/$(DEPDIR)/libbitcoin_node_a-ui_interface.Tpo node/$(DEPDIR)/libbitcoin_node_a-ui_interface.Po
#	$(AM_V_CXX)source='node/ui_interface.cpp' object='node/libbitcoin_node_a-ui_interface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o node/libbitcoin_node_a-ui_interface.o `test -f 'node/ui_interface.cpp' || echo '$(srcdir)/'`node/ui_interface.cpp

node/libbitcoin_node_a-ui_interface.obj: node/ui_interface.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT node/libbitcoin_node_a-ui_interface.obj -MD -MP -MF node/$(DEPDIR)/libbitcoin_node_a-ui_interface.Tpo -c -o node/libbitcoin_node_a-ui_interface.obj `if test -f 'node/ui_interface.cpp'; then $(CYGPATH_W) 'node/ui_interface.cpp'; else $(CYGPATH_W) '$(srcdir)/node/ui_interface.cpp'; fi`
	$(AM_V_at)$(am__mv) node/$(DEPDIR)/libbitcoin_node_a-ui_interface.Tpo node/$(DEPDIR)/libbitcoin_node_a-ui_interface.Po
#	$(AM_V_CXX)source='node/ui_interface.cpp' object='node/libbitcoin_node_a-ui_interface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o node/libbitcoin_node_a-ui_interface.obj `if test -f 'node/ui_interface.cpp'; then $(CYGPATH_W) 'node/ui_interface.cpp'; else $(CYGPATH_W) '$(srcdir)/node/ui_interface.cpp'; fi`

libbitcoin_node_a-noui.o: noui.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-noui.o -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-noui.Tpo -c -o libbitcoin_node_a-noui.o `test -f 'noui.cpp' || echo '$(srcdir)/'`noui.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-noui.Tpo $(DEPDIR)/libbitcoin_node_a-noui.Po
#	$(AM_V_CXX)source='noui.cpp' object='libbitcoin_node_a-noui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-noui.o `test -f 'noui.cpp' || echo '$(srcdir)/'`noui.cpp

libbitcoin_node_a-noui.obj: noui.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-noui.obj -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-noui.Tpo -c -o libbitcoin_node_a-noui.obj `if test -f 'noui.cpp'; then $(CYGPATH_W) 'noui.cpp'; else $(CYGPATH_W) '$(srcdir)/noui.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-noui.Tpo $(DEPDIR)/libbitcoin_node_a-noui.Po
#	$(AM_V_CXX)source='noui.cpp' object='libbitcoin_node_a-noui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-noui.obj `if test -f 'noui.cpp'; then $(CYGPATH_W) 'noui.cpp'; else $(CYGPATH_W) '$(srcdir)/noui.cpp'; fi`

policy/libbitcoin_node_a-fees.o: policy/fees.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT policy/libbitcoin_node_a-fees.o -MD -MP -MF policy/$(DEPDIR)/libbitcoin_node_a-fees.Tpo -c -o policy/libbitcoin_node_a-fees.o `test -f 'policy/fees.cpp' || echo '$(srcdir)/'`policy/fees.cpp
	$(AM_V_at)$(am__mv) policy/$(DEPDIR)/libbitcoin_node_a-fees.Tpo policy/$(DEPDIR)/libbitcoin_node_a-fees.Po
#	$(AM_V_CXX)source='policy/fees.cpp' object='policy/libbitcoin_node_a-fees.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o policy/libbitcoin_node_a-fees.o `test -f 'policy/fees.cpp' || echo '$(srcdir)/'`policy/fees.cpp

policy/libbitcoin_node_a-fees.obj: policy/fees.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT policy/libbitcoin_node_a-fees.obj -MD -MP -MF policy/$(DEPDIR)/libbitcoin_node_a-fees.Tpo -c -o policy/libbitcoin_node_a-fees.obj `if test -f 'policy/fees.cpp'; then $(CYGPATH_W) 'policy/fees.cpp'; else $(CYGPATH_W) '$(srcdir)/policy/fees.cpp'; fi`
	$(AM_V_at)$(am__mv) policy/$(DEPDIR)/libbitcoin_node_a-fees.Tpo policy/$(DEPDIR)/libbitcoin_node_a-fees.Po
#	$(AM_V_CXX)source='policy/fees.cpp' object='policy/libbitcoin_node_a-fees.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o policy/libbitcoin_node_a-fees.obj `if test -f 'policy/fees.cpp'; then $(CYGPATH_W) 'policy/fees.cpp'; else $(CYGPATH_W) '$(srcdir)/policy/fees.cpp'; fi`

policy/libbitcoin_node_a-packages.o: policy/packages.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT policy/libbitcoin_node_a-packages.o -MD -MP -MF policy/$(DEPDIR)/libbitcoin_node_a-packages.Tpo -c -o policy/libbitcoin_node_a-packages.o `test -f 'policy/packages.cpp' || echo '$(srcdir)/'`policy/packages.cpp
	$(AM_V_at)$(am__mv) policy/$(DEPDIR)/libbitcoin_node_a-packages.Tpo policy/$(DEPDIR)/libbitcoin_node_a-packages.Po
#	$(AM_V_CXX)source='policy/packages.cpp' object='policy/libbitcoin_node_a-packages.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o policy/libbitcoin_node_a-packages.o `test -f 'policy/packages.cpp' || echo '$(srcdir)/'`policy/packages.cpp

policy/libbitcoin_node_a-packages.obj: policy/packages.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT policy/libbitcoin_node_a-packages.obj -MD -MP -MF policy/$(DEPDIR)/libbitcoin_node_a-packages.Tpo -c -o policy/libbitcoin_node_a-packages.obj `if test -f 'policy/packages.cpp'; then $(CYGPATH_W) 'policy/packages.cpp'; else $(CYGPATH_W) '$(srcdir)/policy/packages.cpp'; fi`
	$(AM_V_at)$(am__mv) policy/$(DEPDIR)/libbitcoin_node_a-packages.Tpo policy/$(DEPDIR)/libbitcoin_node_a-packages.Po
#	$(AM_V_CXX)source='policy/packages.cpp' object='policy/libbitcoin_node_a-packages.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o policy/libbitcoin_node_a-packages.obj `if test -f 'policy/packages.cpp'; then $(CYGPATH_W) 'policy/packages.cpp'; else $(CYGPATH_W) '$(srcdir)/policy/packages.cpp'; fi`

policy/libbitcoin_node_a-rbf.o: policy/rbf.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT policy/libbitcoin_node_a-rbf.o -MD -MP -MF policy/$(DEPDIR)/libbitcoin_node_a-rbf.Tpo -c -o policy/libbitcoin_node_a-rbf.o `test -f 'policy/rbf.cpp' || echo '$(srcdir)/'`policy/rbf.cpp
	$(AM_V_at)$(am__mv) policy/$(DEPDIR)/libbitcoin_node_a-rbf.Tpo policy/$(DEPDIR)/libbitcoin_node_a-rbf.Po
#	$(AM_V_CXX)source='policy/rbf.cpp' object='policy/libbitcoin_node_a-rbf.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o policy/libbitcoin_node_a-rbf.o `test -f 'policy/rbf.cpp' || echo '$(srcdir)/'`policy/rbf.cpp

policy/libbitcoin_node_a-rbf.obj: policy/rbf.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT policy/libbitcoin_node_a-rbf.obj -MD -MP -MF policy/$(DEPDIR)/libbitcoin_node_a-rbf.Tpo -c -o policy/libbitcoin_node_a-rbf.obj `if test -f 'policy/rbf.cpp'; then $(CYGPATH_W) 'policy/rbf.cpp'; else $(CYGPATH_W) '$(srcdir)/policy/rbf.cpp'; fi`
	$(AM_V_at)$(am__mv) policy/$(DEPDIR)/libbitcoin_node_a-rbf.Tpo policy/$(DEPDIR)/libbitcoin_node_a-rbf.Po
#	$(AM_V_CXX)source='policy/rbf.cpp' object='policy/libbitcoin_node_a-rbf.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o policy/libbitcoin_node_a-rbf.obj `if test -f 'policy/rbf.cpp'; then $(CYGPATH_W) 'policy/rbf.cpp'; else $(CYGPATH_W) '$(srcdir)/policy/rbf.cpp'; fi`

policy/libbitcoin_node_a-settings.o: policy/settings.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT policy/libbitcoin_node_a-settings.o -MD -MP -MF policy/$(DEPDIR)/libbitcoin_node_a-settings.Tpo -c -o policy/libbitcoin_node_a-settings.o `test -f 'policy/settings.cpp' || echo '$(srcdir)/'`policy/settings.cpp
	$(AM_V_at)$(am__mv) policy/$(DEPDIR)/libbitcoin_node_a-settings.Tpo policy/$(DEPDIR)/libbitcoin_node_a-settings.Po
#	$(AM_V_CXX)source='policy/settings.cpp' object='policy/libbitcoin_node_a-settings.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o policy/libbitcoin_node_a-settings.o `test -f 'policy/settings.cpp' || echo '$(srcdir)/'`policy/settings.cpp

policy/libbitcoin_node_a-settings.obj: policy/settings.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT policy/libbitcoin_node_a-settings.obj -MD -MP -MF policy/$(DEPDIR)/libbitcoin_node_a-settings.Tpo -c -o policy/libbitcoin_node_a-settings.obj `if test -f 'policy/settings.cpp'; then $(CYGPATH_W) 'policy/settings.cpp'; else $(CYGPATH_W) '$(srcdir)/policy/settings.cpp'; fi`
	$(AM_V_at)$(am__mv) policy/$(DEPDIR)/libbitcoin_node_a-settings.Tpo policy/$(DEPDIR)/libbitcoin_node_a-settings.Po
#	$(AM_V_CXX)source='policy/settings.cpp' object='policy/libbitcoin_node_a-settings.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o policy/libbitcoin_node_a-settings.obj `if test -f 'policy/settings.cpp'; then $(CYGPATH_W) 'policy/settings.cpp'; else $(CYGPATH_W) '$(srcdir)/policy/settings.cpp'; fi`

libbitcoin_node_a-pow.o: pow.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-pow.o -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-pow.Tpo -c -o libbitcoin_node_a-pow.o `test -f 'pow.cpp' || echo '$(srcdir)/'`pow.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-pow.Tpo $(DEPDIR)/libbitcoin_node_a-pow.Po
#	$(AM_V_CXX)source='pow.cpp' object='libbitcoin_node_a-pow.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-pow.o `test -f 'pow.cpp' || echo '$(srcdir)/'`pow.cpp

libbitcoin_node_a-pow.obj: pow.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-pow.obj -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-pow.Tpo -c -o libbitcoin_node_a-pow.obj `if test -f 'pow.cpp'; then $(CYGPATH_W) 'pow.cpp'; else $(CYGPATH_W) '$(srcdir)/pow.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-pow.Tpo $(DEPDIR)/libbitcoin_node_a-pow.Po
#	$(AM_V_CXX)source='pow.cpp' object='libbitcoin_node_a-pow.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-pow.obj `if test -f 'pow.cpp'; then $(CYGPATH_W) 'pow.cpp'; else $(CYGPATH_W) '$(srcdir)/pow.cpp'; fi`

libbitcoin_node_a-rest.o: rest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-rest.o -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-rest.Tpo -c -o libbitcoin_node_a-rest.o `test -f 'rest.cpp' || echo '$(srcdir)/'`rest.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-rest.Tpo $(DEPDIR)/libbitcoin_node_a-rest.Po
#	$(AM_V_CXX)source='rest.cpp' object='libbitcoin_node_a-rest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-rest.o `test -f 'rest.cpp' || echo '$(srcdir)/'`rest.cpp

libbitcoin_node_a-rest.obj: rest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-rest.obj -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-rest.Tpo -c -o libbitcoin_node_a-rest.obj `if test -f 'rest.cpp'; then $(CYGPATH_W) 'rest.cpp'; else $(CYGPATH_W) '$(srcdir)/rest.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-rest.Tpo $(DEPDIR)/libbitcoin_node_a-rest.Po
#	$(AM_V_CXX)source='rest.cpp' object='libbitcoin_node_a-rest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-rest.obj `if test -f 'rest.cpp'; then $(CYGPATH_W) 'rest.cpp'; else $(CYGPATH_W) '$(srcdir)/rest.cpp'; fi`

rpc/libbitcoin_node_a-blockchain.o: rpc/blockchain.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_node_a-blockchain.o -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_node_a-blockchain.Tpo -c -o rpc/libbitcoin_node_a-blockchain.o `test -f 'rpc/blockchain.cpp' || echo '$(srcdir)/'`rpc/blockchain.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_node_a-blockchain.Tpo rpc/$(DEPDIR)/libbitcoin_node_a-blockchain.Po
#	$(AM_V_CXX)source='rpc/blockchain.cpp' object='rpc/libbitcoin_node_a-blockchain.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_node_a-blockchain.o `test -f 'rpc/blockchain.cpp' || echo '$(srcdir)/'`rpc/blockchain.cpp

rpc/libbitcoin_node_a-blockchain.obj: rpc/blockchain.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_node_a-blockchain.obj -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_node_a-blockchain.Tpo -c -o rpc/libbitcoin_node_a-blockchain.obj `if test -f 'rpc/blockchain.cpp'; then $(CYGPATH_W) 'rpc/blockchain.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/blockchain.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_node_a-blockchain.Tpo rpc/$(DEPDIR)/libbitcoin_node_a-blockchain.Po
#	$(AM_V_CXX)source='rpc/blockchain.cpp' object='rpc/libbitcoin_node_a-blockchain.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_node_a-blockchain.obj `if test -f 'rpc/blockchain.cpp'; then $(CYGPATH_W) 'rpc/blockchain.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/blockchain.cpp'; fi`

rpc/libbitcoin_node_a-fees.o: rpc/fees.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_node_a-fees.o -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_node_a-fees.Tpo -c -o rpc/libbitcoin_node_a-fees.o `test -f 'rpc/fees.cpp' || echo '$(srcdir)/'`rpc/fees.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_node_a-fees.Tpo rpc/$(DEPDIR)/libbitcoin_node_a-fees.Po
#	$(AM_V_CXX)source='rpc/fees.cpp' object='rpc/libbitcoin_node_a-fees.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_node_a-fees.o `test -f 'rpc/fees.cpp' || echo '$(srcdir)/'`rpc/fees.cpp

rpc/libbitcoin_node_a-fees.obj: rpc/fees.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_node_a-fees.obj -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_node_a-fees.Tpo -c -o rpc/libbitcoin_node_a-fees.obj `if test -f 'rpc/fees.cpp'; then $(CYGPATH_W) 'rpc/fees.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/fees.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_node_a-fees.Tpo rpc/$(DEPDIR)/libbitcoin_node_a-fees.Po
#	$(AM_V_CXX)source='rpc/fees.cpp' object='rpc/libbitcoin_node_a-fees.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_node_a-fees.obj `if test -f 'rpc/fees.cpp'; then $(CYGPATH_W) 'rpc/fees.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/fees.cpp'; fi`

rpc/libbitcoin_node_a-mempool.o: rpc/mempool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_node_a-mempool.o -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_node_a-mempool.Tpo -c -o rpc/libbitcoin_node_a-mempool.o `test -f 'rpc/mempool.cpp' || echo '$(srcdir)/'`rpc/mempool.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_node_a-mempool.Tpo rpc/$(DEPDIR)/libbitcoin_node_a-mempool.Po
#	$(AM_V_CXX)source='rpc/mempool.cpp' object='rpc/libbitcoin_node_a-mempool.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_node_a-mempool.o `test -f 'rpc/mempool.cpp' || echo '$(srcdir)/'`rpc/mempool.cpp

rpc/libbitcoin_node_a-mempool.obj: rpc/mempool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_node_a-mempool.obj -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_node_a-mempool.Tpo -c -o rpc/libbitcoin_node_a-mempool.obj `if test -f 'rpc/mempool.cpp'; then $(CYGPATH_W) 'rpc/mempool.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/mempool.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_node_a-mempool.Tpo rpc/$(DEPDIR)/libbitcoin_node_a-mempool.Po
#	$(AM_V_CXX)source='rpc/mempool.cpp' object='rpc/libbitcoin_node_a-mempool.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_node_a-mempool.obj `if test -f 'rpc/mempool.cpp'; then $(CYGPATH_W) 'rpc/mempool.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/mempool.cpp'; fi`

rpc/libbitcoin_node_a-mining.o: rpc/mining.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_node_a-mining.o -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_node_a-mining.Tpo -c -o rpc/libbitcoin_node_a-mining.o `test -f 'rpc/mining.cpp' || echo '$(srcdir)/'`rpc/mining.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_node_a-mining.Tpo rpc/$(DEPDIR)/libbitcoin_node_a-mining.Po
#	$(AM_V_CXX)source='rpc/mining.cpp' object='rpc/libbitcoin_node_a-mining.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_node_a-mining.o `test -f 'rpc/mining.cpp' || echo '$(srcdir)/'`rpc/mining.cpp

rpc/libbitcoin_node_a-mining.obj: rpc/mining.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_node_a-mining.obj -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_node_a-mining.Tpo -c -o rpc/libbitcoin_node_a-mining.obj `if test -f 'rpc/mining.cpp'; then $(CYGPATH_W) 'rpc/mining.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/mining.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_node_a-mining.Tpo rpc/$(DEPDIR)/libbitcoin_node_a-mining.Po
#	$(AM_V_CXX)source='rpc/mining.cpp' object='rpc/libbitcoin_node_a-mining.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_node_a-mining.obj `if test -f 'rpc/mining.cpp'; then $(CYGPATH_W) 'rpc/mining.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/mining.cpp'; fi`

rpc/libbitcoin_node_a-node.o: rpc/node.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_node_a-node.o -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_node_a-node.Tpo -c -o rpc/libbitcoin_node_a-node.o `test -f 'rpc/node.cpp' || echo '$(srcdir)/'`rpc/node.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_node_a-node.Tpo rpc/$(DEPDIR)/libbitcoin_node_a-node.Po
#	$(AM_V_CXX)source='rpc/node.cpp' object='rpc/libbitcoin_node_a-node.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_node_a-node.o `test -f 'rpc/node.cpp' || echo '$(srcdir)/'`rpc/node.cpp

rpc/libbitcoin_node_a-node.obj: rpc/node.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_node_a-node.obj -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_node_a-node.Tpo -c -o rpc/libbitcoin_node_a-node.obj `if test -f 'rpc/node.cpp'; then $(CYGPATH_W) 'rpc/node.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/node.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_node_a-node.Tpo rpc/$(DEPDIR)/libbitcoin_node_a-node.Po
#	$(AM_V_CXX)source='rpc/node.cpp' object='rpc/libbitcoin_node_a-node.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_node_a-node.obj `if test -f 'rpc/node.cpp'; then $(CYGPATH_W) 'rpc/node.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/node.cpp'; fi`

rpc/libbitcoin_node_a-net.o: rpc/net.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_node_a-net.o -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_node_a-net.Tpo -c -o rpc/libbitcoin_node_a-net.o `test -f 'rpc/net.cpp' || echo '$(srcdir)/'`rpc/net.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_node_a-net.Tpo rpc/$(DEPDIR)/libbitcoin_node_a-net.Po
#	$(AM_V_CXX)source='rpc/net.cpp' object='rpc/libbitcoin_node_a-net.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_node_a-net.o `test -f 'rpc/net.cpp' || echo '$(srcdir)/'`rpc/net.cpp

rpc/libbitcoin_node_a-net.obj: rpc/net.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_node_a-net.obj -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_node_a-net.Tpo -c -o rpc/libbitcoin_node_a-net.obj `if test -f 'rpc/net.cpp'; then $(CYGPATH_W) 'rpc/net.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/net.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_node_a-net.Tpo rpc/$(DEPDIR)/libbitcoin_node_a-net.Po
#	$(AM_V_CXX)source='rpc/net.cpp' object='rpc/libbitcoin_node_a-net.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_node_a-net.obj `if test -f 'rpc/net.cpp'; then $(CYGPATH_W) 'rpc/net.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/net.cpp'; fi`

rpc/libbitcoin_node_a-output_script.o: rpc/output_script.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_node_a-output_script.o -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_node_a-output_script.Tpo -c -o rpc/libbitcoin_node_a-output_script.o `test -f 'rpc/output_script.cpp' || echo '$(srcdir)/'`rpc/output_script.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_node_a-output_script.Tpo rpc/$(DEPDIR)/libbitcoin_node_a-output_script.Po
#	$(AM_V_CXX)source='rpc/output_script.cpp' object='rpc/libbitcoin_node_a-output_script.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_node_a-output_script.o `test -f 'rpc/output_script.cpp' || echo '$(srcdir)/'`rpc/output_script.cpp

rpc/libbitcoin_node_a-output_script.obj: rpc/output_script.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_node_a-output_script.obj -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_node_a-output_script.Tpo -c -o rpc/libbitcoin_node_a-output_script.obj `if test -f 'rpc/output_script.cpp'; then $(CYGPATH_W) 'rpc/output_script.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/output_script.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_node_a-output_script.Tpo rpc/$(DEPDIR)/libbitcoin_node_a-output_script.Po
#	$(AM_V_CXX)source='rpc/output_script.cpp' object='rpc/libbitcoin_node_a-output_script.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_node_a-output_script.obj `if test -f 'rpc/output_script.cpp'; then $(CYGPATH_W) 'rpc/output_script.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/output_script.cpp'; fi`

rpc/libbitcoin_node_a-rawtransaction.o: rpc/rawtransaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_node_a-rawtransaction.o -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_node_a-rawtransaction.Tpo -c -o rpc/libbitcoin_node_a-rawtransaction.o `test -f 'rpc/rawtransaction.cpp' || echo '$(srcdir)/'`rpc/rawtransaction.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_node_a-rawtransaction.Tpo rpc/$(DEPDIR)/libbitcoin_node_a-rawtransaction.Po
#	$(AM_V_CXX)source='rpc/rawtransaction.cpp' object='rpc/libbitcoin_node_a-rawtransaction.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_node_a-rawtransaction.o `test -f 'rpc/rawtransaction.cpp' || echo '$(srcdir)/'`rpc/rawtransaction.cpp

rpc/libbitcoin_node_a-rawtransaction.obj: rpc/rawtransaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_node_a-rawtransaction.obj -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_node_a-rawtransaction.Tpo -c -o rpc/libbitcoin_node_a-rawtransaction.obj `if test -f 'rpc/rawtransaction.cpp'; then $(CYGPATH_W) 'rpc/rawtransaction.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rawtransaction.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_node_a-rawtransaction.Tpo rpc/$(DEPDIR)/libbitcoin_node_a-rawtransaction.Po
#	$(AM_V_CXX)source='rpc/rawtransaction.cpp' object='rpc/libbitcoin_node_a-rawtransaction.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_node_a-rawtransaction.obj `if test -f 'rpc/rawtransaction.cpp'; then $(CYGPATH_W) 'rpc/rawtransaction.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rawtransaction.cpp'; fi`

rpc/libbitcoin_node_a-server.o: rpc/server.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_node_a-server.o -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_node_a-server.Tpo -c -o rpc/libbitcoin_node_a-server.o `test -f 'rpc/server.cpp' || echo '$(srcdir)/'`rpc/server.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_node_a-server.Tpo rpc/$(DEPDIR)/libbitcoin_node_a-server.Po
#	$(AM_V_CXX)source='rpc/server.cpp' object='rpc/libbitcoin_node_a-server.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_node_a-server.o `test -f 'rpc/server.cpp' || echo '$(srcdir)/'`rpc/server.cpp

rpc/libbitcoin_node_a-server.obj: rpc/server.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_node_a-server.obj -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_node_a-server.Tpo -c -o rpc/libbitcoin_node_a-server.obj `if test -f 'rpc/server.cpp'; then $(CYGPATH_W) 'rpc/server.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/server.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_node_a-server.Tpo rpc/$(DEPDIR)/libbitcoin_node_a-server.Po
#	$(AM_V_CXX)source='rpc/server.cpp' object='rpc/libbitcoin_node_a-server.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_node_a-server.obj `if test -f 'rpc/server.cpp'; then $(CYGPATH_W) 'rpc/server.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/server.cpp'; fi`

rpc/libbitcoin_node_a-server_util.o: rpc/server_util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_node_a-server_util.o -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_node_a-server_util.Tpo -c -o rpc/libbitcoin_node_a-server_util.o `test -f 'rpc/server_util.cpp' || echo '$(srcdir)/'`rpc/server_util.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_node_a-server_util.Tpo rpc/$(DEPDIR)/libbitcoin_node_a-server_util.Po
#	$(AM_V_CXX)source='rpc/server_util.cpp' object='rpc/libbitcoin_node_a-server_util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_node_a-server_util.o `test -f 'rpc/server_util.cpp' || echo '$(srcdir)/'`rpc/server_util.cpp

rpc/libbitcoin_node_a-server_util.obj: rpc/server_util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_node_a-server_util.obj -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_node_a-server_util.Tpo -c -o rpc/libbitcoin_node_a-server_util.obj `if test -f 'rpc/server_util.cpp'; then $(CYGPATH_W) 'rpc/server_util.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/server_util.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_node_a-server_util.Tpo rpc/$(DEPDIR)/libbitcoin_node_a-server_util.Po
#	$(AM_V_CXX)source='rpc/server_util.cpp' object='rpc/libbitcoin_node_a-server_util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_node_a-server_util.obj `if test -f 'rpc/server_util.cpp'; then $(CYGPATH_W) 'rpc/server_util.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/server_util.cpp'; fi`

rpc/libbitcoin_node_a-signmessage.o: rpc/signmessage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_node_a-signmessage.o -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_node_a-signmessage.Tpo -c -o rpc/libbitcoin_node_a-signmessage.o `test -f 'rpc/signmessage.cpp' || echo '$(srcdir)/'`rpc/signmessage.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_node_a-signmessage.Tpo rpc/$(DEPDIR)/libbitcoin_node_a-signmessage.Po
#	$(AM_V_CXX)source='rpc/signmessage.cpp' object='rpc/libbitcoin_node_a-signmessage.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_node_a-signmessage.o `test -f 'rpc/signmessage.cpp' || echo '$(srcdir)/'`rpc/signmessage.cpp

rpc/libbitcoin_node_a-signmessage.obj: rpc/signmessage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_node_a-signmessage.obj -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_node_a-signmessage.Tpo -c -o rpc/libbitcoin_node_a-signmessage.obj `if test -f 'rpc/signmessage.cpp'; then $(CYGPATH_W) 'rpc/signmessage.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/signmessage.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_node_a-signmessage.Tpo rpc/$(DEPDIR)/libbitcoin_node_a-signmessage.Po
#	$(AM_V_CXX)source='rpc/signmessage.cpp' object='rpc/libbitcoin_node_a-signmessage.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_node_a-signmessage.obj `if test -f 'rpc/signmessage.cpp'; then $(CYGPATH_W) 'rpc/signmessage.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/signmessage.cpp'; fi`

rpc/libbitcoin_node_a-txoutproof.o: rpc/txoutproof.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_node_a-txoutproof.o -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_node_a-txoutproof.Tpo -c -o rpc/libbitcoin_node_a-txoutproof.o `test -f 'rpc/txoutproof.cpp' || echo '$(srcdir)/'`rpc/txoutproof.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_node_a-txoutproof.Tpo rpc/$(DEPDIR)/libbitcoin_node_a-txoutproof.Po
#	$(AM_V_CXX)source='rpc/txoutproof.cpp' object='rpc/libbitcoin_node_a-txoutproof.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_node_a-txoutproof.o `test -f 'rpc/txoutproof.cpp' || echo '$(srcdir)/'`rpc/txoutproof.cpp

rpc/libbitcoin_node_a-txoutproof.obj: rpc/txoutproof.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_node_a-txoutproof.obj -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_node_a-txoutproof.Tpo -c -o rpc/libbitcoin_node_a-txoutproof.obj `if test -f 'rpc/txoutproof.cpp'; then $(CYGPATH_W) 'rpc/txoutproof.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/txoutproof.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_node_a-txoutproof.Tpo rpc/$(DEPDIR)/libbitcoin_node_a-txoutproof.Po
#	$(AM_V_CXX)source='rpc/txoutproof.cpp' object='rpc/libbitcoin_node_a-txoutproof.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_node_a-txoutproof.obj `if test -f 'rpc/txoutproof.cpp'; then $(CYGPATH_W) 'rpc/txoutproof.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/txoutproof.cpp'; fi`

script/libbitcoin_node_a-sigcache.o: script/sigcache.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_node_a-sigcache.o -MD -MP -MF script/$(DEPDIR)/libbitcoin_node_a-sigcache.Tpo -c -o script/libbitcoin_node_a-sigcache.o `test -f 'script/sigcache.cpp' || echo '$(srcdir)/'`script/sigcache.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_node_a-sigcache.Tpo script/$(DEPDIR)/libbitcoin_node_a-sigcache.Po
#	$(AM_V_CXX)source='script/sigcache.cpp' object='script/libbitcoin_node_a-sigcache.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_node_a-sigcache.o `test -f 'script/sigcache.cpp' || echo '$(srcdir)/'`script/sigcache.cpp

script/libbitcoin_node_a-sigcache.obj: script/sigcache.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_node_a-sigcache.obj -MD -MP -MF script/$(DEPDIR)/libbitcoin_node_a-sigcache.Tpo -c -o script/libbitcoin_node_a-sigcache.obj `if test -f 'script/sigcache.cpp'; then $(CYGPATH_W) 'script/sigcache.cpp'; else $(CYGPATH_W) '$(srcdir)/script/sigcache.cpp'; fi`
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_node_a-sigcache.Tpo script/$(DEPDIR)/libbitcoin_node_a-sigcache.Po
#	$(AM_V_CXX)source='script/sigcache.cpp' object='script/libbitcoin_node_a-sigcache.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_node_a-sigcache.obj `if test -f 'script/sigcache.cpp'; then $(CYGPATH_W) 'script/sigcache.cpp'; else $(CYGPATH_W) '$(srcdir)/script/sigcache.cpp'; fi`

libbitcoin_node_a-shutdown.o: shutdown.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-shutdown.o -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-shutdown.Tpo -c -o libbitcoin_node_a-shutdown.o `test -f 'shutdown.cpp' || echo '$(srcdir)/'`shutdown.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-shutdown.Tpo $(DEPDIR)/libbitcoin_node_a-shutdown.Po
#	$(AM_V_CXX)source='shutdown.cpp' object='libbitcoin_node_a-shutdown.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-shutdown.o `test -f 'shutdown.cpp' || echo '$(srcdir)/'`shutdown.cpp

libbitcoin_node_a-shutdown.obj: shutdown.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-shutdown.obj -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-shutdown.Tpo -c -o libbitcoin_node_a-shutdown.obj `if test -f 'shutdown.cpp'; then $(CYGPATH_W) 'shutdown.cpp'; else $(CYGPATH_W) '$(srcdir)/shutdown.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-shutdown.Tpo $(DEPDIR)/libbitcoin_node_a-shutdown.Po
#	$(AM_V_CXX)source='shutdown.cpp' object='libbitcoin_node_a-shutdown.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-shutdown.obj `if test -f 'shutdown.cpp'; then $(CYGPATH_W) 'shutdown.cpp'; else $(CYGPATH_W) '$(srcdir)/shutdown.cpp'; fi`

libbitcoin_node_a-signet.o: signet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-signet.o -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-signet.Tpo -c -o libbitcoin_node_a-signet.o `test -f 'signet.cpp' || echo '$(srcdir)/'`signet.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-signet.Tpo $(DEPDIR)/libbitcoin_node_a-signet.Po
#	$(AM_V_CXX)source='signet.cpp' object='libbitcoin_node_a-signet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-signet.o `test -f 'signet.cpp' || echo '$(srcdir)/'`signet.cpp

libbitcoin_node_a-signet.obj: signet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-signet.obj -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-signet.Tpo -c -o libbitcoin_node_a-signet.obj `if test -f 'signet.cpp'; then $(CYGPATH_W) 'signet.cpp'; else $(CYGPATH_W) '$(srcdir)/signet.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-signet.Tpo $(DEPDIR)/libbitcoin_node_a-signet.Po
#	$(AM_V_CXX)source='signet.cpp' object='libbitcoin_node_a-signet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-signet.obj `if test -f 'signet.cpp'; then $(CYGPATH_W) 'signet.cpp'; else $(CYGPATH_W) '$(srcdir)/signet.cpp'; fi`

libbitcoin_node_a-timedata.o: timedata.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-timedata.o -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-timedata.Tpo -c -o libbitcoin_node_a-timedata.o `test -f 'timedata.cpp' || echo '$(srcdir)/'`timedata.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-timedata.Tpo $(DEPDIR)/libbitcoin_node_a-timedata.Po
#	$(AM_V_CXX)source='timedata.cpp' object='libbitcoin_node_a-timedata.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-timedata.o `test -f 'timedata.cpp' || echo '$(srcdir)/'`timedata.cpp

libbitcoin_node_a-timedata.obj: timedata.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-timedata.obj -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-timedata.Tpo -c -o libbitcoin_node_a-timedata.obj `if test -f 'timedata.cpp'; then $(CYGPATH_W) 'timedata.cpp'; else $(CYGPATH_W) '$(srcdir)/timedata.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-timedata.Tpo $(DEPDIR)/libbitcoin_node_a-timedata.Po
#	$(AM_V_CXX)source='timedata.cpp' object='libbitcoin_node_a-timedata.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-timedata.obj `if test -f 'timedata.cpp'; then $(CYGPATH_W) 'timedata.cpp'; else $(CYGPATH_W) '$(srcdir)/timedata.cpp'; fi`

libbitcoin_node_a-torcontrol.o: torcontrol.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-torcontrol.o -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-torcontrol.Tpo -c -o libbitcoin_node_a-torcontrol.o `test -f 'torcontrol.cpp' || echo '$(srcdir)/'`torcontrol.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-torcontrol.Tpo $(DEPDIR)/libbitcoin_node_a-torcontrol.Po
#	$(AM_V_CXX)source='torcontrol.cpp' object='libbitcoin_node_a-torcontrol.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-torcontrol.o `test -f 'torcontrol.cpp' || echo '$(srcdir)/'`torcontrol.cpp

libbitcoin_node_a-torcontrol.obj: torcontrol.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-torcontrol.obj -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-torcontrol.Tpo -c -o libbitcoin_node_a-torcontrol.obj `if test -f 'torcontrol.cpp'; then $(CYGPATH_W) 'torcontrol.cpp'; else $(CYGPATH_W) '$(srcdir)/torcontrol.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-torcontrol.Tpo $(DEPDIR)/libbitcoin_node_a-torcontrol.Po
#	$(AM_V_CXX)source='torcontrol.cpp' object='libbitcoin_node_a-torcontrol.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-torcontrol.obj `if test -f 'torcontrol.cpp'; then $(CYGPATH_W) 'torcontrol.cpp'; else $(CYGPATH_W) '$(srcdir)/torcontrol.cpp'; fi`

libbitcoin_node_a-txdb.o: txdb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-txdb.o -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-txdb.Tpo -c -o libbitcoin_node_a-txdb.o `test -f 'txdb.cpp' || echo '$(srcdir)/'`txdb.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-txdb.Tpo $(DEPDIR)/libbitcoin_node_a-txdb.Po
#	$(AM_V_CXX)source='txdb.cpp' object='libbitcoin_node_a-txdb.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-txdb.o `test -f 'txdb.cpp' || echo '$(srcdir)/'`txdb.cpp

libbitcoin_node_a-txdb.obj: txdb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-txdb.obj -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-txdb.Tpo -c -o libbitcoin_node_a-txdb.obj `if test -f 'txdb.cpp'; then $(CYGPATH_W) 'txdb.cpp'; else $(CYGPATH_W) '$(srcdir)/txdb.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-txdb.Tpo $(DEPDIR)/libbitcoin_node_a-txdb.Po
#	$(AM_V_CXX)source='txdb.cpp' object='libbitcoin_node_a-txdb.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-txdb.obj `if test -f 'txdb.cpp'; then $(CYGPATH_W) 'txdb.cpp'; else $(CYGPATH_W) '$(srcdir)/txdb.cpp'; fi`

libbitcoin_node_a-txmempool.o: txmempool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-txmempool.o -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-txmempool.Tpo -c -o libbitcoin_node_a-txmempool.o `test -f 'txmempool.cpp' || echo '$(srcdir)/'`txmempool.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-txmempool.Tpo $(DEPDIR)/libbitcoin_node_a-txmempool.Po
#	$(AM_V_CXX)source='txmempool.cpp' object='libbitcoin_node_a-txmempool.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-txmempool.o `test -f 'txmempool.cpp' || echo '$(srcdir)/'`txmempool.cpp

libbitcoin_node_a-txmempool.obj: txmempool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-txmempool.obj -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-txmempool.Tpo -c -o libbitcoin_node_a-txmempool.obj `if test -f 'txmempool.cpp'; then $(CYGPATH_W) 'txmempool.cpp'; else $(CYGPATH_W) '$(srcdir)/txmempool.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-txmempool.Tpo $(DEPDIR)/libbitcoin_node_a-txmempool.Po
#	$(AM_V_CXX)source='txmempool.cpp' object='libbitcoin_node_a-txmempool.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-txmempool.obj `if test -f 'txmempool.cpp'; then $(CYGPATH_W) 'txmempool.cpp'; else $(CYGPATH_W) '$(srcdir)/txmempool.cpp'; fi`

libbitcoin_node_a-txorphanage.o: txorphanage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-txorphanage.o -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-txorphanage.Tpo -c -o libbitcoin_node_a-txorphanage.o `test -f 'txorphanage.cpp' || echo '$(srcdir)/'`txorphanage.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-txorphanage.Tpo $(DEPDIR)/libbitcoin_node_a-txorphanage.Po
#	$(AM_V_CXX)source='txorphanage.cpp' object='libbitcoin_node_a-txorphanage.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-txorphanage.o `test -f 'txorphanage.cpp' || echo '$(srcdir)/'`txorphanage.cpp

libbitcoin_node_a-txorphanage.obj: txorphanage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-txorphanage.obj -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-txorphanage.Tpo -c -o libbitcoin_node_a-txorphanage.obj `if test -f 'txorphanage.cpp'; then $(CYGPATH_W) 'txorphanage.cpp'; else $(CYGPATH_W) '$(srcdir)/txorphanage.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-txorphanage.Tpo $(DEPDIR)/libbitcoin_node_a-txorphanage.Po
#	$(AM_V_CXX)source='txorphanage.cpp' object='libbitcoin_node_a-txorphanage.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-txorphanage.obj `if test -f 'txorphanage.cpp'; then $(CYGPATH_W) 'txorphanage.cpp'; else $(CYGPATH_W) '$(srcdir)/txorphanage.cpp'; fi`

libbitcoin_node_a-txrequest.o: txrequest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-txrequest.o -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-txrequest.Tpo -c -o libbitcoin_node_a-txrequest.o `test -f 'txrequest.cpp' || echo '$(srcdir)/'`txrequest.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-txrequest.Tpo $(DEPDIR)/libbitcoin_node_a-txrequest.Po
#	$(AM_V_CXX)source='txrequest.cpp' object='libbitcoin_node_a-txrequest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-txrequest.o `test -f 'txrequest.cpp' || echo '$(srcdir)/'`txrequest.cpp

libbitcoin_node_a-txrequest.obj: txrequest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-txrequest.obj -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-txrequest.Tpo -c -o libbitcoin_node_a-txrequest.obj `if test -f 'txrequest.cpp'; then $(CYGPATH_W) 'txrequest.cpp'; else $(CYGPATH_W) '$(srcdir)/txrequest.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-txrequest.Tpo $(DEPDIR)/libbitcoin_node_a-txrequest.Po
#	$(AM_V_CXX)source='txrequest.cpp' object='libbitcoin_node_a-txrequest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-txrequest.obj `if test -f 'txrequest.cpp'; then $(CYGPATH_W) 'txrequest.cpp'; else $(CYGPATH_W) '$(srcdir)/txrequest.cpp'; fi`

libbitcoin_node_a-validation.o: validation.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-validation.o -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-validation.Tpo -c -o libbitcoin_node_a-validation.o `test -f 'validation.cpp' || echo '$(srcdir)/'`validation.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-validation.Tpo $(DEPDIR)/libbitcoin_node_a-validation.Po
#	$(AM_V_CXX)source='validation.cpp' object='libbitcoin_node_a-validation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-validation.o `test -f 'validation.cpp' || echo '$(srcdir)/'`validation.cpp

libbitcoin_node_a-validation.obj: validation.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-validation.obj -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-validation.Tpo -c -o libbitcoin_node_a-validation.obj `if test -f 'validation.cpp'; then $(CYGPATH_W) 'validation.cpp'; else $(CYGPATH_W) '$(srcdir)/validation.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-validation.Tpo $(DEPDIR)/libbitcoin_node_a-validation.Po
#	$(AM_V_CXX)source='validation.cpp' object='libbitcoin_node_a-validation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-validation.obj `if test -f 'validation.cpp'; then $(CYGPATH_W) 'validation.cpp'; else $(CYGPATH_W) '$(srcdir)/validation.cpp'; fi`

libbitcoin_node_a-validationinterface.o: validationinterface.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-validationinterface.o -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-validationinterface.Tpo -c -o libbitcoin_node_a-validationinterface.o `test -f 'validationinterface.cpp' || echo '$(srcdir)/'`validationinterface.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-validationinterface.Tpo $(DEPDIR)/libbitcoin_node_a-validationinterface.Po
#	$(AM_V_CXX)source='validationinterface.cpp' object='libbitcoin_node_a-validationinterface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-validationinterface.o `test -f 'validationinterface.cpp' || echo '$(srcdir)/'`validationinterface.cpp

libbitcoin_node_a-validationinterface.obj: validationinterface.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-validationinterface.obj -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-validationinterface.Tpo -c -o libbitcoin_node_a-validationinterface.obj `if test -f 'validationinterface.cpp'; then $(CYGPATH_W) 'validationinterface.cpp'; else $(CYGPATH_W) '$(srcdir)/validationinterface.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-validationinterface.Tpo $(DEPDIR)/libbitcoin_node_a-validationinterface.Po
#	$(AM_V_CXX)source='validationinterface.cpp' object='libbitcoin_node_a-validationinterface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-validationinterface.obj `if test -f 'validationinterface.cpp'; then $(CYGPATH_W) 'validationinterface.cpp'; else $(CYGPATH_W) '$(srcdir)/validationinterface.cpp'; fi`

libbitcoin_node_a-versionbits.o: versionbits.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-versionbits.o -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-versionbits.Tpo -c -o libbitcoin_node_a-versionbits.o `test -f 'versionbits.cpp' || echo '$(srcdir)/'`versionbits.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-versionbits.Tpo $(DEPDIR)/libbitcoin_node_a-versionbits.Po
#	$(AM_V_CXX)source='versionbits.cpp' object='libbitcoin_node_a-versionbits.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-versionbits.o `test -f 'versionbits.cpp' || echo '$(srcdir)/'`versionbits.cpp

libbitcoin_node_a-versionbits.obj: versionbits.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-versionbits.obj -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-versionbits.Tpo -c -o libbitcoin_node_a-versionbits.obj `if test -f 'versionbits.cpp'; then $(CYGPATH_W) 'versionbits.cpp'; else $(CYGPATH_W) '$(srcdir)/versionbits.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-versionbits.Tpo $(DEPDIR)/libbitcoin_node_a-versionbits.Po
#	$(AM_V_CXX)source='versionbits.cpp' object='libbitcoin_node_a-versionbits.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-versionbits.obj `if test -f 'versionbits.cpp'; then $(CYGPATH_W) 'versionbits.cpp'; else $(CYGPATH_W) '$(srcdir)/versionbits.cpp'; fi`

wallet/libbitcoin_node_a-init.o: wallet/init.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_node_a-init.o -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_node_a-init.Tpo -c -o wallet/libbitcoin_node_a-init.o `test -f 'wallet/init.cpp' || echo '$(srcdir)/'`wallet/init.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_node_a-init.Tpo wallet/$(DEPDIR)/libbitcoin_node_a-init.Po
#	$(AM_V_CXX)source='wallet/init.cpp' object='wallet/libbitcoin_node_a-init.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_node_a-init.o `test -f 'wallet/init.cpp' || echo '$(srcdir)/'`wallet/init.cpp

wallet/libbitcoin_node_a-init.obj: wallet/init.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_node_a-init.obj -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_node_a-init.Tpo -c -o wallet/libbitcoin_node_a-init.obj `if test -f 'wallet/init.cpp'; then $(CYGPATH_W) 'wallet/init.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/init.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_node_a-init.Tpo wallet/$(DEPDIR)/libbitcoin_node_a-init.Po
#	$(AM_V_CXX)source='wallet/init.cpp' object='wallet/libbitcoin_node_a-init.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_node_a-init.obj `if test -f 'wallet/init.cpp'; then $(CYGPATH_W) 'wallet/init.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/init.cpp'; fi`

libbitcoin_node_a-dummywallet.o: dummywallet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-dummywallet.o -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-dummywallet.Tpo -c -o libbitcoin_node_a-dummywallet.o `test -f 'dummywallet.cpp' || echo '$(srcdir)/'`dummywallet.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-dummywallet.Tpo $(DEPDIR)/libbitcoin_node_a-dummywallet.Po
#	$(AM_V_CXX)source='dummywallet.cpp' object='libbitcoin_node_a-dummywallet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-dummywallet.o `test -f 'dummywallet.cpp' || echo '$(srcdir)/'`dummywallet.cpp

libbitcoin_node_a-dummywallet.obj: dummywallet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_node_a-dummywallet.obj -MD -MP -MF $(DEPDIR)/libbitcoin_node_a-dummywallet.Tpo -c -o libbitcoin_node_a-dummywallet.obj `if test -f 'dummywallet.cpp'; then $(CYGPATH_W) 'dummywallet.cpp'; else $(CYGPATH_W) '$(srcdir)/dummywallet.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_node_a-dummywallet.Tpo $(DEPDIR)/libbitcoin_node_a-dummywallet.Po
#	$(AM_V_CXX)source='dummywallet.cpp' object='libbitcoin_node_a-dummywallet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_node_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_node_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_node_a-dummywallet.obj `if test -f 'dummywallet.cpp'; then $(CYGPATH_W) 'dummywallet.cpp'; else $(CYGPATH_W) '$(srcdir)/dummywallet.cpp'; fi`

support/libbitcoin_util_a-lockedpool.o: support/lockedpool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT support/libbitcoin_util_a-lockedpool.o -MD -MP -MF support/$(DEPDIR)/libbitcoin_util_a-lockedpool.Tpo -c -o support/libbitcoin_util_a-lockedpool.o `test -f 'support/lockedpool.cpp' || echo '$(srcdir)/'`support/lockedpool.cpp
	$(AM_V_at)$(am__mv) support/$(DEPDIR)/libbitcoin_util_a-lockedpool.Tpo support/$(DEPDIR)/libbitcoin_util_a-lockedpool.Po
#	$(AM_V_CXX)source='support/lockedpool.cpp' object='support/libbitcoin_util_a-lockedpool.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o support/libbitcoin_util_a-lockedpool.o `test -f 'support/lockedpool.cpp' || echo '$(srcdir)/'`support/lockedpool.cpp

support/libbitcoin_util_a-lockedpool.obj: support/lockedpool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT support/libbitcoin_util_a-lockedpool.obj -MD -MP -MF support/$(DEPDIR)/libbitcoin_util_a-lockedpool.Tpo -c -o support/libbitcoin_util_a-lockedpool.obj `if test -f 'support/lockedpool.cpp'; then $(CYGPATH_W) 'support/lockedpool.cpp'; else $(CYGPATH_W) '$(srcdir)/support/lockedpool.cpp'; fi`
	$(AM_V_at)$(am__mv) support/$(DEPDIR)/libbitcoin_util_a-lockedpool.Tpo support/$(DEPDIR)/libbitcoin_util_a-lockedpool.Po
#	$(AM_V_CXX)source='support/lockedpool.cpp' object='support/libbitcoin_util_a-lockedpool.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o support/libbitcoin_util_a-lockedpool.obj `if test -f 'support/lockedpool.cpp'; then $(CYGPATH_W) 'support/lockedpool.cpp'; else $(CYGPATH_W) '$(srcdir)/support/lockedpool.cpp'; fi`

libbitcoin_util_a-chainparamsbase.o: chainparamsbase.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-chainparamsbase.o -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-chainparamsbase.Tpo -c -o libbitcoin_util_a-chainparamsbase.o `test -f 'chainparamsbase.cpp' || echo '$(srcdir)/'`chainparamsbase.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-chainparamsbase.Tpo $(DEPDIR)/libbitcoin_util_a-chainparamsbase.Po
#	$(AM_V_CXX)source='chainparamsbase.cpp' object='libbitcoin_util_a-chainparamsbase.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-chainparamsbase.o `test -f 'chainparamsbase.cpp' || echo '$(srcdir)/'`chainparamsbase.cpp

libbitcoin_util_a-chainparamsbase.obj: chainparamsbase.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-chainparamsbase.obj -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-chainparamsbase.Tpo -c -o libbitcoin_util_a-chainparamsbase.obj `if test -f 'chainparamsbase.cpp'; then $(CYGPATH_W) 'chainparamsbase.cpp'; else $(CYGPATH_W) '$(srcdir)/chainparamsbase.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-chainparamsbase.Tpo $(DEPDIR)/libbitcoin_util_a-chainparamsbase.Po
#	$(AM_V_CXX)source='chainparamsbase.cpp' object='libbitcoin_util_a-chainparamsbase.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-chainparamsbase.obj `if test -f 'chainparamsbase.cpp'; then $(CYGPATH_W) 'chainparamsbase.cpp'; else $(CYGPATH_W) '$(srcdir)/chainparamsbase.cpp'; fi`

libbitcoin_util_a-clientversion.o: clientversion.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-clientversion.o -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-clientversion.Tpo -c -o libbitcoin_util_a-clientversion.o `test -f 'clientversion.cpp' || echo '$(srcdir)/'`clientversion.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-clientversion.Tpo $(DEPDIR)/libbitcoin_util_a-clientversion.Po
#	$(AM_V_CXX)source='clientversion.cpp' object='libbitcoin_util_a-clientversion.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-clientversion.o `test -f 'clientversion.cpp' || echo '$(srcdir)/'`clientversion.cpp

libbitcoin_util_a-clientversion.obj: clientversion.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-clientversion.obj -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-clientversion.Tpo -c -o libbitcoin_util_a-clientversion.obj `if test -f 'clientversion.cpp'; then $(CYGPATH_W) 'clientversion.cpp'; else $(CYGPATH_W) '$(srcdir)/clientversion.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-clientversion.Tpo $(DEPDIR)/libbitcoin_util_a-clientversion.Po
#	$(AM_V_CXX)source='clientversion.cpp' object='libbitcoin_util_a-clientversion.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-clientversion.obj `if test -f 'clientversion.cpp'; then $(CYGPATH_W) 'clientversion.cpp'; else $(CYGPATH_W) '$(srcdir)/clientversion.cpp'; fi`

libbitcoin_util_a-fs.o: fs.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-fs.o -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-fs.Tpo -c -o libbitcoin_util_a-fs.o `test -f 'fs.cpp' || echo '$(srcdir)/'`fs.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-fs.Tpo $(DEPDIR)/libbitcoin_util_a-fs.Po
#	$(AM_V_CXX)source='fs.cpp' object='libbitcoin_util_a-fs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-fs.o `test -f 'fs.cpp' || echo '$(srcdir)/'`fs.cpp

libbitcoin_util_a-fs.obj: fs.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-fs.obj -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-fs.Tpo -c -o libbitcoin_util_a-fs.obj `if test -f 'fs.cpp'; then $(CYGPATH_W) 'fs.cpp'; else $(CYGPATH_W) '$(srcdir)/fs.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-fs.Tpo $(DEPDIR)/libbitcoin_util_a-fs.Po
#	$(AM_V_CXX)source='fs.cpp' object='libbitcoin_util_a-fs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-fs.obj `if test -f 'fs.cpp'; then $(CYGPATH_W) 'fs.cpp'; else $(CYGPATH_W) '$(srcdir)/fs.cpp'; fi`

interfaces/libbitcoin_util_a-echo.o: interfaces/echo.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT interfaces/libbitcoin_util_a-echo.o -MD -MP -MF interfaces/$(DEPDIR)/libbitcoin_util_a-echo.Tpo -c -o interfaces/libbitcoin_util_a-echo.o `test -f 'interfaces/echo.cpp' || echo '$(srcdir)/'`interfaces/echo.cpp
	$(AM_V_at)$(am__mv) interfaces/$(DEPDIR)/libbitcoin_util_a-echo.Tpo interfaces/$(DEPDIR)/libbitcoin_util_a-echo.Po
#	$(AM_V_CXX)source='interfaces/echo.cpp' object='interfaces/libbitcoin_util_a-echo.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o interfaces/libbitcoin_util_a-echo.o `test -f 'interfaces/echo.cpp' || echo '$(srcdir)/'`interfaces/echo.cpp

interfaces/libbitcoin_util_a-echo.obj: interfaces/echo.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT interfaces/libbitcoin_util_a-echo.obj -MD -MP -MF interfaces/$(DEPDIR)/libbitcoin_util_a-echo.Tpo -c -o interfaces/libbitcoin_util_a-echo.obj `if test -f 'interfaces/echo.cpp'; then $(CYGPATH_W) 'interfaces/echo.cpp'; else $(CYGPATH_W) '$(srcdir)/interfaces/echo.cpp'; fi`
	$(AM_V_at)$(am__mv) interfaces/$(DEPDIR)/libbitcoin_util_a-echo.Tpo interfaces/$(DEPDIR)/libbitcoin_util_a-echo.Po
#	$(AM_V_CXX)source='interfaces/echo.cpp' object='interfaces/libbitcoin_util_a-echo.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o interfaces/libbitcoin_util_a-echo.obj `if test -f 'interfaces/echo.cpp'; then $(CYGPATH_W) 'interfaces/echo.cpp'; else $(CYGPATH_W) '$(srcdir)/interfaces/echo.cpp'; fi`

interfaces/libbitcoin_util_a-handler.o: interfaces/handler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT interfaces/libbitcoin_util_a-handler.o -MD -MP -MF interfaces/$(DEPDIR)/libbitcoin_util_a-handler.Tpo -c -o interfaces/libbitcoin_util_a-handler.o `test -f 'interfaces/handler.cpp' || echo '$(srcdir)/'`interfaces/handler.cpp
	$(AM_V_at)$(am__mv) interfaces/$(DEPDIR)/libbitcoin_util_a-handler.Tpo interfaces/$(DEPDIR)/libbitcoin_util_a-handler.Po
#	$(AM_V_CXX)source='interfaces/handler.cpp' object='interfaces/libbitcoin_util_a-handler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o interfaces/libbitcoin_util_a-handler.o `test -f 'interfaces/handler.cpp' || echo '$(srcdir)/'`interfaces/handler.cpp

interfaces/libbitcoin_util_a-handler.obj: interfaces/handler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT interfaces/libbitcoin_util_a-handler.obj -MD -MP -MF interfaces/$(DEPDIR)/libbitcoin_util_a-handler.Tpo -c -o interfaces/libbitcoin_util_a-handler.obj `if test -f 'interfaces/handler.cpp'; then $(CYGPATH_W) 'interfaces/handler.cpp'; else $(CYGPATH_W) '$(srcdir)/interfaces/handler.cpp'; fi`
	$(AM_V_at)$(am__mv) interfaces/$(DEPDIR)/libbitcoin_util_a-handler.Tpo interfaces/$(DEPDIR)/libbitcoin_util_a-handler.Po
#	$(AM_V_CXX)source='interfaces/handler.cpp' object='interfaces/libbitcoin_util_a-handler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o interfaces/libbitcoin_util_a-handler.obj `if test -f 'interfaces/handler.cpp'; then $(CYGPATH_W) 'interfaces/handler.cpp'; else $(CYGPATH_W) '$(srcdir)/interfaces/handler.cpp'; fi`

interfaces/libbitcoin_util_a-init.o: interfaces/init.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT interfaces/libbitcoin_util_a-init.o -MD -MP -MF interfaces/$(DEPDIR)/libbitcoin_util_a-init.Tpo -c -o interfaces/libbitcoin_util_a-init.o `test -f 'interfaces/init.cpp' || echo '$(srcdir)/'`interfaces/init.cpp
	$(AM_V_at)$(am__mv) interfaces/$(DEPDIR)/libbitcoin_util_a-init.Tpo interfaces/$(DEPDIR)/libbitcoin_util_a-init.Po
#	$(AM_V_CXX)source='interfaces/init.cpp' object='interfaces/libbitcoin_util_a-init.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o interfaces/libbitcoin_util_a-init.o `test -f 'interfaces/init.cpp' || echo '$(srcdir)/'`interfaces/init.cpp

interfaces/libbitcoin_util_a-init.obj: interfaces/init.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT interfaces/libbitcoin_util_a-init.obj -MD -MP -MF interfaces/$(DEPDIR)/libbitcoin_util_a-init.Tpo -c -o interfaces/libbitcoin_util_a-init.obj `if test -f 'interfaces/init.cpp'; then $(CYGPATH_W) 'interfaces/init.cpp'; else $(CYGPATH_W) '$(srcdir)/interfaces/init.cpp'; fi`
	$(AM_V_at)$(am__mv) interfaces/$(DEPDIR)/libbitcoin_util_a-init.Tpo interfaces/$(DEPDIR)/libbitcoin_util_a-init.Po
#	$(AM_V_CXX)source='interfaces/init.cpp' object='interfaces/libbitcoin_util_a-init.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o interfaces/libbitcoin_util_a-init.obj `if test -f 'interfaces/init.cpp'; then $(CYGPATH_W) 'interfaces/init.cpp'; else $(CYGPATH_W) '$(srcdir)/interfaces/init.cpp'; fi`

libbitcoin_util_a-logging.o: logging.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-logging.o -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-logging.Tpo -c -o libbitcoin_util_a-logging.o `test -f 'logging.cpp' || echo '$(srcdir)/'`logging.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-logging.Tpo $(DEPDIR)/libbitcoin_util_a-logging.Po
#	$(AM_V_CXX)source='logging.cpp' object='libbitcoin_util_a-logging.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-logging.o `test -f 'logging.cpp' || echo '$(srcdir)/'`logging.cpp

libbitcoin_util_a-logging.obj: logging.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-logging.obj -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-logging.Tpo -c -o libbitcoin_util_a-logging.obj `if test -f 'logging.cpp'; then $(CYGPATH_W) 'logging.cpp'; else $(CYGPATH_W) '$(srcdir)/logging.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-logging.Tpo $(DEPDIR)/libbitcoin_util_a-logging.Po
#	$(AM_V_CXX)source='logging.cpp' object='libbitcoin_util_a-logging.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-logging.obj `if test -f 'logging.cpp'; then $(CYGPATH_W) 'logging.cpp'; else $(CYGPATH_W) '$(srcdir)/logging.cpp'; fi`

libbitcoin_util_a-random.o: random.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-random.o -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-random.Tpo -c -o libbitcoin_util_a-random.o `test -f 'random.cpp' || echo '$(srcdir)/'`random.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-random.Tpo $(DEPDIR)/libbitcoin_util_a-random.Po
#	$(AM_V_CXX)source='random.cpp' object='libbitcoin_util_a-random.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-random.o `test -f 'random.cpp' || echo '$(srcdir)/'`random.cpp

libbitcoin_util_a-random.obj: random.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-random.obj -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-random.Tpo -c -o libbitcoin_util_a-random.obj `if test -f 'random.cpp'; then $(CYGPATH_W) 'random.cpp'; else $(CYGPATH_W) '$(srcdir)/random.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-random.Tpo $(DEPDIR)/libbitcoin_util_a-random.Po
#	$(AM_V_CXX)source='random.cpp' object='libbitcoin_util_a-random.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-random.obj `if test -f 'random.cpp'; then $(CYGPATH_W) 'random.cpp'; else $(CYGPATH_W) '$(srcdir)/random.cpp'; fi`

libbitcoin_util_a-randomenv.o: randomenv.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-randomenv.o -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-randomenv.Tpo -c -o libbitcoin_util_a-randomenv.o `test -f 'randomenv.cpp' || echo '$(srcdir)/'`randomenv.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-randomenv.Tpo $(DEPDIR)/libbitcoin_util_a-randomenv.Po
#	$(AM_V_CXX)source='randomenv.cpp' object='libbitcoin_util_a-randomenv.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-randomenv.o `test -f 'randomenv.cpp' || echo '$(srcdir)/'`randomenv.cpp

libbitcoin_util_a-randomenv.obj: randomenv.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-randomenv.obj -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-randomenv.Tpo -c -o libbitcoin_util_a-randomenv.obj `if test -f 'randomenv.cpp'; then $(CYGPATH_W) 'randomenv.cpp'; else $(CYGPATH_W) '$(srcdir)/randomenv.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-randomenv.Tpo $(DEPDIR)/libbitcoin_util_a-randomenv.Po
#	$(AM_V_CXX)source='randomenv.cpp' object='libbitcoin_util_a-randomenv.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-randomenv.obj `if test -f 'randomenv.cpp'; then $(CYGPATH_W) 'randomenv.cpp'; else $(CYGPATH_W) '$(srcdir)/randomenv.cpp'; fi`

rpc/libbitcoin_util_a-request.o: rpc/request.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_util_a-request.o -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_util_a-request.Tpo -c -o rpc/libbitcoin_util_a-request.o `test -f 'rpc/request.cpp' || echo '$(srcdir)/'`rpc/request.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_util_a-request.Tpo rpc/$(DEPDIR)/libbitcoin_util_a-request.Po
#	$(AM_V_CXX)source='rpc/request.cpp' object='rpc/libbitcoin_util_a-request.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_util_a-request.o `test -f 'rpc/request.cpp' || echo '$(srcdir)/'`rpc/request.cpp

rpc/libbitcoin_util_a-request.obj: rpc/request.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_util_a-request.obj -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_util_a-request.Tpo -c -o rpc/libbitcoin_util_a-request.obj `if test -f 'rpc/request.cpp'; then $(CYGPATH_W) 'rpc/request.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/request.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_util_a-request.Tpo rpc/$(DEPDIR)/libbitcoin_util_a-request.Po
#	$(AM_V_CXX)source='rpc/request.cpp' object='rpc/libbitcoin_util_a-request.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_util_a-request.obj `if test -f 'rpc/request.cpp'; then $(CYGPATH_W) 'rpc/request.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/request.cpp'; fi`

support/libbitcoin_util_a-cleanse.o: support/cleanse.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT support/libbitcoin_util_a-cleanse.o -MD -MP -MF support/$(DEPDIR)/libbitcoin_util_a-cleanse.Tpo -c -o support/libbitcoin_util_a-cleanse.o `test -f 'support/cleanse.cpp' || echo '$(srcdir)/'`support/cleanse.cpp
	$(AM_V_at)$(am__mv) support/$(DEPDIR)/libbitcoin_util_a-cleanse.Tpo support/$(DEPDIR)/libbitcoin_util_a-cleanse.Po
#	$(AM_V_CXX)source='support/cleanse.cpp' object='support/libbitcoin_util_a-cleanse.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o support/libbitcoin_util_a-cleanse.o `test -f 'support/cleanse.cpp' || echo '$(srcdir)/'`support/cleanse.cpp

support/libbitcoin_util_a-cleanse.obj: support/cleanse.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT support/libbitcoin_util_a-cleanse.obj -MD -MP -MF support/$(DEPDIR)/libbitcoin_util_a-cleanse.Tpo -c -o support/libbitcoin_util_a-cleanse.obj `if test -f 'support/cleanse.cpp'; then $(CYGPATH_W) 'support/cleanse.cpp'; else $(CYGPATH_W) '$(srcdir)/support/cleanse.cpp'; fi`
	$(AM_V_at)$(am__mv) support/$(DEPDIR)/libbitcoin_util_a-cleanse.Tpo support/$(DEPDIR)/libbitcoin_util_a-cleanse.Po
#	$(AM_V_CXX)source='support/cleanse.cpp' object='support/libbitcoin_util_a-cleanse.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o support/libbitcoin_util_a-cleanse.obj `if test -f 'support/cleanse.cpp'; then $(CYGPATH_W) 'support/cleanse.cpp'; else $(CYGPATH_W) '$(srcdir)/support/cleanse.cpp'; fi`

libbitcoin_util_a-sync.o: sync.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-sync.o -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-sync.Tpo -c -o libbitcoin_util_a-sync.o `test -f 'sync.cpp' || echo '$(srcdir)/'`sync.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-sync.Tpo $(DEPDIR)/libbitcoin_util_a-sync.Po
#	$(AM_V_CXX)source='sync.cpp' object='libbitcoin_util_a-sync.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-sync.o `test -f 'sync.cpp' || echo '$(srcdir)/'`sync.cpp

libbitcoin_util_a-sync.obj: sync.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-sync.obj -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-sync.Tpo -c -o libbitcoin_util_a-sync.obj `if test -f 'sync.cpp'; then $(CYGPATH_W) 'sync.cpp'; else $(CYGPATH_W) '$(srcdir)/sync.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-sync.Tpo $(DEPDIR)/libbitcoin_util_a-sync.Po
#	$(AM_V_CXX)source='sync.cpp' object='libbitcoin_util_a-sync.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-sync.obj `if test -f 'sync.cpp'; then $(CYGPATH_W) 'sync.cpp'; else $(CYGPATH_W) '$(srcdir)/sync.cpp'; fi`

libbitcoin_util_a-threadinterrupt.o: threadinterrupt.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-threadinterrupt.o -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-threadinterrupt.Tpo -c -o libbitcoin_util_a-threadinterrupt.o `test -f 'threadinterrupt.cpp' || echo '$(srcdir)/'`threadinterrupt.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-threadinterrupt.Tpo $(DEPDIR)/libbitcoin_util_a-threadinterrupt.Po
#	$(AM_V_CXX)source='threadinterrupt.cpp' object='libbitcoin_util_a-threadinterrupt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-threadinterrupt.o `test -f 'threadinterrupt.cpp' || echo '$(srcdir)/'`threadinterrupt.cpp

libbitcoin_util_a-threadinterrupt.obj: threadinterrupt.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-threadinterrupt.obj -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-threadinterrupt.Tpo -c -o libbitcoin_util_a-threadinterrupt.obj `if test -f 'threadinterrupt.cpp'; then $(CYGPATH_W) 'threadinterrupt.cpp'; else $(CYGPATH_W) '$(srcdir)/threadinterrupt.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-threadinterrupt.Tpo $(DEPDIR)/libbitcoin_util_a-threadinterrupt.Po
#	$(AM_V_CXX)source='threadinterrupt.cpp' object='libbitcoin_util_a-threadinterrupt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-threadinterrupt.obj `if test -f 'threadinterrupt.cpp'; then $(CYGPATH_W) 'threadinterrupt.cpp'; else $(CYGPATH_W) '$(srcdir)/threadinterrupt.cpp'; fi`

util/libbitcoin_util_a-asmap.o: util/asmap.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoin_util_a-asmap.o -MD -MP -MF util/$(DEPDIR)/libbitcoin_util_a-asmap.Tpo -c -o util/libbitcoin_util_a-asmap.o `test -f 'util/asmap.cpp' || echo '$(srcdir)/'`util/asmap.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoin_util_a-asmap.Tpo util/$(DEPDIR)/libbitcoin_util_a-asmap.Po
#	$(AM_V_CXX)source='util/asmap.cpp' object='util/libbitcoin_util_a-asmap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoin_util_a-asmap.o `test -f 'util/asmap.cpp' || echo '$(srcdir)/'`util/asmap.cpp

util/libbitcoin_util_a-asmap.obj: util/asmap.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoin_util_a-asmap.obj -MD -MP -MF util/$(DEPDIR)/libbitcoin_util_a-asmap.Tpo -c -o util/libbitcoin_util_a-asmap.obj `if test -f 'util/asmap.cpp'; then $(CYGPATH_W) 'util/asmap.cpp'; else $(CYGPATH_W) '$(srcdir)/util/asmap.cpp'; fi`
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoin_util_a-asmap.Tpo util/$(DEPDIR)/libbitcoin_util_a-asmap.Po
#	$(AM_V_CXX)source='util/asmap.cpp' object='util/libbitcoin_util_a-asmap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoin_util_a-asmap.obj `if test -f 'util/asmap.cpp'; then $(CYGPATH_W) 'util/asmap.cpp'; else $(CYGPATH_W) '$(srcdir)/util/asmap.cpp'; fi`

util/libbitcoin_util_a-bip32.o: util/bip32.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoin_util_a-bip32.o -MD -MP -MF util/$(DEPDIR)/libbitcoin_util_a-bip32.Tpo -c -o util/libbitcoin_util_a-bip32.o `test -f 'util/bip32.cpp' || echo '$(srcdir)/'`util/bip32.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoin_util_a-bip32.Tpo util/$(DEPDIR)/libbitcoin_util_a-bip32.Po
#	$(AM_V_CXX)source='util/bip32.cpp' object='util/libbitcoin_util_a-bip32.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoin_util_a-bip32.o `test -f 'util/bip32.cpp' || echo '$(srcdir)/'`util/bip32.cpp

util/libbitcoin_util_a-bip32.obj: util/bip32.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoin_util_a-bip32.obj -MD -MP -MF util/$(DEPDIR)/libbitcoin_util_a-bip32.Tpo -c -o util/libbitcoin_util_a-bip32.obj `if test -f 'util/bip32.cpp'; then $(CYGPATH_W) 'util/bip32.cpp'; else $(CYGPATH_W) '$(srcdir)/util/bip32.cpp'; fi`
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoin_util_a-bip32.Tpo util/$(DEPDIR)/libbitcoin_util_a-bip32.Po
#	$(AM_V_CXX)source='util/bip32.cpp' object='util/libbitcoin_util_a-bip32.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoin_util_a-bip32.obj `if test -f 'util/bip32.cpp'; then $(CYGPATH_W) 'util/bip32.cpp'; else $(CYGPATH_W) '$(srcdir)/util/bip32.cpp'; fi`

util/libbitcoin_util_a-bytevectorhash.o: util/bytevectorhash.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoin_util_a-bytevectorhash.o -MD -MP -MF util/$(DEPDIR)/libbitcoin_util_a-bytevectorhash.Tpo -c -o util/libbitcoin_util_a-bytevectorhash.o `test -f 'util/bytevectorhash.cpp' || echo '$(srcdir)/'`util/bytevectorhash.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoin_util_a-bytevectorhash.Tpo util/$(DEPDIR)/libbitcoin_util_a-bytevectorhash.Po
#	$(AM_V_CXX)source='util/bytevectorhash.cpp' object='util/libbitcoin_util_a-bytevectorhash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoin_util_a-bytevectorhash.o `test -f 'util/bytevectorhash.cpp' || echo '$(srcdir)/'`util/bytevectorhash.cpp

util/libbitcoin_util_a-bytevectorhash.obj: util/bytevectorhash.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoin_util_a-bytevectorhash.obj -MD -MP -MF util/$(DEPDIR)/libbitcoin_util_a-bytevectorhash.Tpo -c -o util/libbitcoin_util_a-bytevectorhash.obj `if test -f 'util/bytevectorhash.cpp'; then $(CYGPATH_W) 'util/bytevectorhash.cpp'; else $(CYGPATH_W) '$(srcdir)/util/bytevectorhash.cpp'; fi`
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoin_util_a-bytevectorhash.Tpo util/$(DEPDIR)/libbitcoin_util_a-bytevectorhash.Po
#	$(AM_V_CXX)source='util/bytevectorhash.cpp' object='util/libbitcoin_util_a-bytevectorhash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoin_util_a-bytevectorhash.obj `if test -f 'util/bytevectorhash.cpp'; then $(CYGPATH_W) 'util/bytevectorhash.cpp'; else $(CYGPATH_W) '$(srcdir)/util/bytevectorhash.cpp'; fi`

util/libbitcoin_util_a-check.o: util/check.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoin_util_a-check.o -MD -MP -MF util/$(DEPDIR)/libbitcoin_util_a-check.Tpo -c -o util/libbitcoin_util_a-check.o `test -f 'util/check.cpp' || echo '$(srcdir)/'`util/check.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoin_util_a-check.Tpo util/$(DEPDIR)/libbitcoin_util_a-check.Po
#	$(AM_V_CXX)source='util/check.cpp' object='util/libbitcoin_util_a-check.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoin_util_a-check.o `test -f 'util/check.cpp' || echo '$(srcdir)/'`util/check.cpp

util/libbitcoin_util_a-check.obj: util/check.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoin_util_a-check.obj -MD -MP -MF util/$(DEPDIR)/libbitcoin_util_a-check.Tpo -c -o util/libbitcoin_util_a-check.obj `if test -f 'util/check.cpp'; then $(CYGPATH_W) 'util/check.cpp'; else $(CYGPATH_W) '$(srcdir)/util/check.cpp'; fi`
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoin_util_a-check.Tpo util/$(DEPDIR)/libbitcoin_util_a-check.Po
#	$(AM_V_CXX)source='util/check.cpp' object='util/libbitcoin_util_a-check.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoin_util_a-check.obj `if test -f 'util/check.cpp'; then $(CYGPATH_W) 'util/check.cpp'; else $(CYGPATH_W) '$(srcdir)/util/check.cpp'; fi`

util/libbitcoin_util_a-error.o: util/error.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoin_util_a-error.o -MD -MP -MF util/$(DEPDIR)/libbitcoin_util_a-error.Tpo -c -o util/libbitcoin_util_a-error.o `test -f 'util/error.cpp' || echo '$(srcdir)/'`util/error.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoin_util_a-error.Tpo util/$(DEPDIR)/libbitcoin_util_a-error.Po
#	$(AM_V_CXX)source='util/error.cpp' object='util/libbitcoin_util_a-error.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoin_util_a-error.o `test -f 'util/error.cpp' || echo '$(srcdir)/'`util/error.cpp

util/libbitcoin_util_a-error.obj: util/error.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoin_util_a-error.obj -MD -MP -MF util/$(DEPDIR)/libbitcoin_util_a-error.Tpo -c -o util/libbitcoin_util_a-error.obj `if test -f 'util/error.cpp'; then $(CYGPATH_W) 'util/error.cpp'; else $(CYGPATH_W) '$(srcdir)/util/error.cpp'; fi`
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoin_util_a-error.Tpo util/$(DEPDIR)/libbitcoin_util_a-error.Po
#	$(AM_V_CXX)source='util/error.cpp' object='util/libbitcoin_util_a-error.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoin_util_a-error.obj `if test -f 'util/error.cpp'; then $(CYGPATH_W) 'util/error.cpp'; else $(CYGPATH_W) '$(srcdir)/util/error.cpp'; fi`

util/libbitcoin_util_a-fees.o: util/fees.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoin_util_a-fees.o -MD -MP -MF util/$(DEPDIR)/libbitcoin_util_a-fees.Tpo -c -o util/libbitcoin_util_a-fees.o `test -f 'util/fees.cpp' || echo '$(srcdir)/'`util/fees.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoin_util_a-fees.Tpo util/$(DEPDIR)/libbitcoin_util_a-fees.Po
#	$(AM_V_CXX)source='util/fees.cpp' object='util/libbitcoin_util_a-fees.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoin_util_a-fees.o `test -f 'util/fees.cpp' || echo '$(srcdir)/'`util/fees.cpp

util/libbitcoin_util_a-fees.obj: util/fees.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoin_util_a-fees.obj -MD -MP -MF util/$(DEPDIR)/libbitcoin_util_a-fees.Tpo -c -o util/libbitcoin_util_a-fees.obj `if test -f 'util/fees.cpp'; then $(CYGPATH_W) 'util/fees.cpp'; else $(CYGPATH_W) '$(srcdir)/util/fees.cpp'; fi`
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoin_util_a-fees.Tpo util/$(DEPDIR)/libbitcoin_util_a-fees.Po
#	$(AM_V_CXX)source='util/fees.cpp' object='util/libbitcoin_util_a-fees.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoin_util_a-fees.obj `if test -f 'util/fees.cpp'; then $(CYGPATH_W) 'util/fees.cpp'; else $(CYGPATH_W) '$(srcdir)/util/fees.cpp'; fi`

util/libbitcoin_util_a-getuniquepath.o: util/getuniquepath.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoin_util_a-getuniquepath.o -MD -MP -MF util/$(DEPDIR)/libbitcoin_util_a-getuniquepath.Tpo -c -o util/libbitcoin_util_a-getuniquepath.o `test -f 'util/getuniquepath.cpp' || echo '$(srcdir)/'`util/getuniquepath.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoin_util_a-getuniquepath.Tpo util/$(DEPDIR)/libbitcoin_util_a-getuniquepath.Po
#	$(AM_V_CXX)source='util/getuniquepath.cpp' object='util/libbitcoin_util_a-getuniquepath.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoin_util_a-getuniquepath.o `test -f 'util/getuniquepath.cpp' || echo '$(srcdir)/'`util/getuniquepath.cpp

util/libbitcoin_util_a-getuniquepath.obj: util/getuniquepath.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoin_util_a-getuniquepath.obj -MD -MP -MF util/$(DEPDIR)/libbitcoin_util_a-getuniquepath.Tpo -c -o util/libbitcoin_util_a-getuniquepath.obj `if test -f 'util/getuniquepath.cpp'; then $(CYGPATH_W) 'util/getuniquepath.cpp'; else $(CYGPATH_W) '$(srcdir)/util/getuniquepath.cpp'; fi`
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoin_util_a-getuniquepath.Tpo util/$(DEPDIR)/libbitcoin_util_a-getuniquepath.Po
#	$(AM_V_CXX)source='util/getuniquepath.cpp' object='util/libbitcoin_util_a-getuniquepath.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoin_util_a-getuniquepath.obj `if test -f 'util/getuniquepath.cpp'; then $(CYGPATH_W) 'util/getuniquepath.cpp'; else $(CYGPATH_W) '$(srcdir)/util/getuniquepath.cpp'; fi`

util/libbitcoin_util_a-hasher.o: util/hasher.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoin_util_a-hasher.o -MD -MP -MF util/$(DEPDIR)/libbitcoin_util_a-hasher.Tpo -c -o util/libbitcoin_util_a-hasher.o `test -f 'util/hasher.cpp' || echo '$(srcdir)/'`util/hasher.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoin_util_a-hasher.Tpo util/$(DEPDIR)/libbitcoin_util_a-hasher.Po
#	$(AM_V_CXX)source='util/hasher.cpp' object='util/libbitcoin_util_a-hasher.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoin_util_a-hasher.o `test -f 'util/hasher.cpp' || echo '$(srcdir)/'`util/hasher.cpp

util/libbitcoin_util_a-hasher.obj: util/hasher.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoin_util_a-hasher.obj -MD -MP -MF util/$(DEPDIR)/libbitcoin_util_a-hasher.Tpo -c -o util/libbitcoin_util_a-hasher.obj `if test -f 'util/hasher.cpp'; then $(CYGPATH_W) 'util/hasher.cpp'; else $(CYGPATH_W) '$(srcdir)/util/hasher.cpp'; fi`
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoin_util_a-hasher.Tpo util/$(DEPDIR)/libbitcoin_util_a-hasher.Po
#	$(AM_V_CXX)source='util/hasher.cpp' object='util/libbitcoin_util_a-hasher.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoin_util_a-hasher.obj `if test -f 'util/hasher.cpp'; then $(CYGPATH_W) 'util/hasher.cpp'; else $(CYGPATH_W) '$(srcdir)/util/hasher.cpp'; fi`

util/libbitcoin_util_a-sock.o: util/sock.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoin_util_a-sock.o -MD -MP -MF util/$(DEPDIR)/libbitcoin_util_a-sock.Tpo -c -o util/libbitcoin_util_a-sock.o `test -f 'util/sock.cpp' || echo '$(srcdir)/'`util/sock.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoin_util_a-sock.Tpo util/$(DEPDIR)/libbitcoin_util_a-sock.Po
#	$(AM_V_CXX)source='util/sock.cpp' object='util/libbitcoin_util_a-sock.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoin_util_a-sock.o `test -f 'util/sock.cpp' || echo '$(srcdir)/'`util/sock.cpp

util/libbitcoin_util_a-sock.obj: util/sock.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoin_util_a-sock.obj -MD -MP -MF util/$(DEPDIR)/libbitcoin_util_a-sock.Tpo -c -o util/libbitcoin_util_a-sock.obj `if test -f 'util/sock.cpp'; then $(CYGPATH_W) 'util/sock.cpp'; else $(CYGPATH_W) '$(srcdir)/util/sock.cpp'; fi`
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoin_util_a-sock.Tpo util/$(DEPDIR)/libbitcoin_util_a-sock.Po
#	$(AM_V_CXX)source='util/sock.cpp' object='util/libbitcoin_util_a-sock.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoin_util_a-sock.obj `if test -f 'util/sock.cpp'; then $(CYGPATH_W) 'util/sock.cpp'; else $(CYGPATH_W) '$(srcdir)/util/sock.cpp'; fi`

util/libbitcoin_util_a-syserror.o: util/syserror.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoin_util_a-syserror.o -MD -MP -MF util/$(DEPDIR)/libbitcoin_util_a-syserror.Tpo -c -o util/libbitcoin_util_a-syserror.o `test -f 'util/syserror.cpp' || echo '$(srcdir)/'`util/syserror.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoin_util_a-syserror.Tpo util/$(DEPDIR)/libbitcoin_util_a-syserror.Po
#	$(AM_V_CXX)source='util/syserror.cpp' object='util/libbitcoin_util_a-syserror.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoin_util_a-syserror.o `test -f 'util/syserror.cpp' || echo '$(srcdir)/'`util/syserror.cpp

util/libbitcoin_util_a-syserror.obj: util/syserror.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoin_util_a-syserror.obj -MD -MP -MF util/$(DEPDIR)/libbitcoin_util_a-syserror.Tpo -c -o util/libbitcoin_util_a-syserror.obj `if test -f 'util/syserror.cpp'; then $(CYGPATH_W) 'util/syserror.cpp'; else $(CYGPATH_W) '$(srcdir)/util/syserror.cpp'; fi`
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoin_util_a-syserror.Tpo util/$(DEPDIR)/libbitcoin_util_a-syserror.Po
#	$(AM_V_CXX)source='util/syserror.cpp' object='util/libbitcoin_util_a-syserror.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoin_util_a-syserror.obj `if test -f 'util/syserror.cpp'; then $(CYGPATH_W) 'util/syserror.cpp'; else $(CYGPATH_W) '$(srcdir)/util/syserror.cpp'; fi`

util/libbitcoin_util_a-system.o: util/system.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoin_util_a-system.o -MD -MP -MF util/$(DEPDIR)/libbitcoin_util_a-system.Tpo -c -o util/libbitcoin_util_a-system.o `test -f 'util/system.cpp' || echo '$(srcdir)/'`util/system.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoin_util_a-system.Tpo util/$(DEPDIR)/libbitcoin_util_a-system.Po
#	$(AM_V_CXX)source='util/system.cpp' object='util/libbitcoin_util_a-system.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoin_util_a-system.o `test -f 'util/system.cpp' || echo '$(srcdir)/'`util/system.cpp

util/libbitcoin_util_a-system.obj: util/system.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoin_util_a-system.obj -MD -MP -MF util/$(DEPDIR)/libbitcoin_util_a-system.Tpo -c -o util/libbitcoin_util_a-system.obj `if test -f 'util/system.cpp'; then $(CYGPATH_W) 'util/system.cpp'; else $(CYGPATH_W) '$(srcdir)/util/system.cpp'; fi`
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoin_util_a-system.Tpo util/$(DEPDIR)/libbitcoin_util_a-system.Po
#	$(AM_V_CXX)source='util/system.cpp' object='util/libbitcoin_util_a-system.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoin_util_a-system.obj `if test -f 'util/system.cpp'; then $(CYGPATH_W) 'util/system.cpp'; else $(CYGPATH_W) '$(srcdir)/util/system.cpp'; fi`

util/libbitcoin_util_a-message.o: util/message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoin_util_a-message.o -MD -MP -MF util/$(DEPDIR)/libbitcoin_util_a-message.Tpo -c -o util/libbitcoin_util_a-message.o `test -f 'util/message.cpp' || echo '$(srcdir)/'`util/message.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoin_util_a-message.Tpo util/$(DEPDIR)/libbitcoin_util_a-message.Po
#	$(AM_V_CXX)source='util/message.cpp' object='util/libbitcoin_util_a-message.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoin_util_a-message.o `test -f 'util/message.cpp' || echo '$(srcdir)/'`util/message.cpp

util/libbitcoin_util_a-message.obj: util/message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoin_util_a-message.obj -MD -MP -MF util/$(DEPDIR)/libbitcoin_util_a-message.Tpo -c -o util/libbitcoin_util_a-message.obj `if test -f 'util/message.cpp'; then $(CYGPATH_W) 'util/message.cpp'; else $(CYGPATH_W) '$(srcdir)/util/message.cpp'; fi`
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoin_util_a-message.Tpo util/$(DEPDIR)/libbitcoin_util_a-message.Po
#	$(AM_V_CXX)source='util/message.cpp' object='util/libbitcoin_util_a-message.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoin_util_a-message.obj `if test -f 'util/message.cpp'; then $(CYGPATH_W) 'util/message.cpp'; else $(CYGPATH_W) '$(srcdir)/util/message.cpp'; fi`

util/libbitcoin_util_a-moneystr.o: util/moneystr.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoin_util_a-moneystr.o -MD -MP -MF util/$(DEPDIR)/libbitcoin_util_a-moneystr.Tpo -c -o util/libbitcoin_util_a-moneystr.o `test -f 'util/moneystr.cpp' || echo '$(srcdir)/'`util/moneystr.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoin_util_a-moneystr.Tpo util/$(DEPDIR)/libbitcoin_util_a-moneystr.Po
#	$(AM_V_CXX)source='util/moneystr.cpp' object='util/libbitcoin_util_a-moneystr.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoin_util_a-moneystr.o `test -f 'util/moneystr.cpp' || echo '$(srcdir)/'`util/moneystr.cpp

util/libbitcoin_util_a-moneystr.obj: util/moneystr.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoin_util_a-moneystr.obj -MD -MP -MF util/$(DEPDIR)/libbitcoin_util_a-moneystr.Tpo -c -o util/libbitcoin_util_a-moneystr.obj `if test -f 'util/moneystr.cpp'; then $(CYGPATH_W) 'util/moneystr.cpp'; else $(CYGPATH_W) '$(srcdir)/util/moneystr.cpp'; fi`
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoin_util_a-moneystr.Tpo util/$(DEPDIR)/libbitcoin_util_a-moneystr.Po
#	$(AM_V_CXX)source='util/moneystr.cpp' object='util/libbitcoin_util_a-moneystr.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoin_util_a-moneystr.obj `if test -f 'util/moneystr.cpp'; then $(CYGPATH_W) 'util/moneystr.cpp'; else $(CYGPATH_W) '$(srcdir)/util/moneystr.cpp'; fi`

util/libbitcoin_util_a-rbf.o: util/rbf.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoin_util_a-rbf.o -MD -MP -MF util/$(DEPDIR)/libbitcoin_util_a-rbf.Tpo -c -o util/libbitcoin_util_a-rbf.o `test -f 'util/rbf.cpp' || echo '$(srcdir)/'`util/rbf.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoin_util_a-rbf.Tpo util/$(DEPDIR)/libbitcoin_util_a-rbf.Po
#	$(AM_V_CXX)source='util/rbf.cpp' object='util/libbitcoin_util_a-rbf.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoin_util_a-rbf.o `test -f 'util/rbf.cpp' || echo '$(srcdir)/'`util/rbf.cpp

util/libbitcoin_util_a-rbf.obj: util/rbf.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoin_util_a-rbf.obj -MD -MP -MF util/$(DEPDIR)/libbitcoin_util_a-rbf.Tpo -c -o util/libbitcoin_util_a-rbf.obj `if test -f 'util/rbf.cpp'; then $(CYGPATH_W) 'util/rbf.cpp'; else $(CYGPATH_W) '$(srcdir)/util/rbf.cpp'; fi`
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoin_util_a-rbf.Tpo util/$(DEPDIR)/libbitcoin_util_a-rbf.Po
#	$(AM_V_CXX)source='util/rbf.cpp' object='util/libbitcoin_util_a-rbf.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoin_util_a-rbf.obj `if test -f 'util/rbf.cpp'; then $(CYGPATH_W) 'util/rbf.cpp'; else $(CYGPATH_W) '$(srcdir)/util/rbf.cpp'; fi`

util/libbitcoin_util_a-readwritefile.o: util/readwritefile.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoin_util_a-readwritefile.o -MD -MP -MF util/$(DEPDIR)/libbitcoin_util_a-readwritefile.Tpo -c -o util/libbitcoin_util_a-readwritefile.o `test -f 'util/readwritefile.cpp' || echo '$(srcdir)/'`util/readwritefile.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoin_util_a-readwritefile.Tpo util/$(DEPDIR)/libbitcoin_util_a-readwritefile.Po
#	$(AM_V_CXX)source='util/readwritefile.cpp' object='util/libbitcoin_util_a-readwritefile.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoin_util_a-readwritefile.o `test -f 'util/readwritefile.cpp' || echo '$(srcdir)/'`util/readwritefile.cpp

util/libbitcoin_util_a-readwritefile.obj: util/readwritefile.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoin_util_a-readwritefile.obj -MD -MP -MF util/$(DEPDIR)/libbitcoin_util_a-readwritefile.Tpo -c -o util/libbitcoin_util_a-readwritefile.obj `if test -f 'util/readwritefile.cpp'; then $(CYGPATH_W) 'util/readwritefile.cpp'; else $(CYGPATH_W) '$(srcdir)/util/readwritefile.cpp'; fi`
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoin_util_a-readwritefile.Tpo util/$(DEPDIR)/libbitcoin_util_a-readwritefile.Po
#	$(AM_V_CXX)source='util/readwritefile.cpp' object='util/libbitcoin_util_a-readwritefile.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoin_util_a-readwritefile.obj `if test -f 'util/readwritefile.cpp'; then $(CYGPATH_W) 'util/readwritefile.cpp'; else $(CYGPATH_W) '$(srcdir)/util/readwritefile.cpp'; fi`

util/libbitcoin_util_a-settings.o: util/settings.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoin_util_a-settings.o -MD -MP -MF util/$(DEPDIR)/libbitcoin_util_a-settings.Tpo -c -o util/libbitcoin_util_a-settings.o `test -f 'util/settings.cpp' || echo '$(srcdir)/'`util/settings.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoin_util_a-settings.Tpo util/$(DEPDIR)/libbitcoin_util_a-settings.Po
#	$(AM_V_CXX)source='util/settings.cpp' object='util/libbitcoin_util_a-settings.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoin_util_a-settings.o `test -f 'util/settings.cpp' || echo '$(srcdir)/'`util/settings.cpp

util/libbitcoin_util_a-settings.obj: util/settings.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoin_util_a-settings.obj -MD -MP -MF util/$(DEPDIR)/libbitcoin_util_a-settings.Tpo -c -o util/libbitcoin_util_a-settings.obj `if test -f 'util/settings.cpp'; then $(CYGPATH_W) 'util/settings.cpp'; else $(CYGPATH_W) '$(srcdir)/util/settings.cpp'; fi`
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoin_util_a-settings.Tpo util/$(DEPDIR)/libbitcoin_util_a-settings.Po
#	$(AM_V_CXX)source='util/settings.cpp' object='util/libbitcoin_util_a-settings.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoin_util_a-settings.obj `if test -f 'util/settings.cpp'; then $(CYGPATH_W) 'util/settings.cpp'; else $(CYGPATH_W) '$(srcdir)/util/settings.cpp'; fi`

util/libbitcoin_util_a-thread.o: util/thread.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoin_util_a-thread.o -MD -MP -MF util/$(DEPDIR)/libbitcoin_util_a-thread.Tpo -c -o util/libbitcoin_util_a-thread.o `test -f 'util/thread.cpp' || echo '$(srcdir)/'`util/thread.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoin_util_a-thread.Tpo util/$(DEPDIR)/libbitcoin_util_a-thread.Po
#	$(AM_V_CXX)source='util/thread.cpp' object='util/libbitcoin_util_a-thread.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoin_util_a-thread.o `test -f 'util/thread.cpp' || echo '$(srcdir)/'`util/thread.cpp

util/libbitcoin_util_a-thread.obj: util/thread.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoin_util_a-thread.obj -MD -MP -MF util/$(DEPDIR)/libbitcoin_util_a-thread.Tpo -c -o util/libbitcoin_util_a-thread.obj `if test -f 'util/thread.cpp'; then $(CYGPATH_W) 'util/thread.cpp'; else $(CYGPATH_W) '$(srcdir)/util/thread.cpp'; fi`
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoin_util_a-thread.Tpo util/$(DEPDIR)/libbitcoin_util_a-thread.Po
#	$(AM_V_CXX)source='util/thread.cpp' object='util/libbitcoin_util_a-thread.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoin_util_a-thread.obj `if test -f 'util/thread.cpp'; then $(CYGPATH_W) 'util/thread.cpp'; else $(CYGPATH_W) '$(srcdir)/util/thread.cpp'; fi`

util/libbitcoin_util_a-threadnames.o: util/threadnames.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoin_util_a-threadnames.o -MD -MP -MF util/$(DEPDIR)/libbitcoin_util_a-threadnames.Tpo -c -o util/libbitcoin_util_a-threadnames.o `test -f 'util/threadnames.cpp' || echo '$(srcdir)/'`util/threadnames.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoin_util_a-threadnames.Tpo util/$(DEPDIR)/libbitcoin_util_a-threadnames.Po
#	$(AM_V_CXX)source='util/threadnames.cpp' object='util/libbitcoin_util_a-threadnames.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoin_util_a-threadnames.o `test -f 'util/threadnames.cpp' || echo '$(srcdir)/'`util/threadnames.cpp

util/libbitcoin_util_a-threadnames.obj: util/threadnames.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoin_util_a-threadnames.obj -MD -MP -MF util/$(DEPDIR)/libbitcoin_util_a-threadnames.Tpo -c -o util/libbitcoin_util_a-threadnames.obj `if test -f 'util/threadnames.cpp'; then $(CYGPATH_W) 'util/threadnames.cpp'; else $(CYGPATH_W) '$(srcdir)/util/threadnames.cpp'; fi`
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoin_util_a-threadnames.Tpo util/$(DEPDIR)/libbitcoin_util_a-threadnames.Po
#	$(AM_V_CXX)source='util/threadnames.cpp' object='util/libbitcoin_util_a-threadnames.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoin_util_a-threadnames.obj `if test -f 'util/threadnames.cpp'; then $(CYGPATH_W) 'util/threadnames.cpp'; else $(CYGPATH_W) '$(srcdir)/util/threadnames.cpp'; fi`

util/libbitcoin_util_a-serfloat.o: util/serfloat.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoin_util_a-serfloat.o -MD -MP -MF util/$(DEPDIR)/libbitcoin_util_a-serfloat.Tpo -c -o util/libbitcoin_util_a-serfloat.o `test -f 'util/serfloat.cpp' || echo '$(srcdir)/'`util/serfloat.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoin_util_a-serfloat.Tpo util/$(DEPDIR)/libbitcoin_util_a-serfloat.Po
#	$(AM_V_CXX)source='util/serfloat.cpp' object='util/libbitcoin_util_a-serfloat.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoin_util_a-serfloat.o `test -f 'util/serfloat.cpp' || echo '$(srcdir)/'`util/serfloat.cpp

util/libbitcoin_util_a-serfloat.obj: util/serfloat.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoin_util_a-serfloat.obj -MD -MP -MF util/$(DEPDIR)/libbitcoin_util_a-serfloat.Tpo -c -o util/libbitcoin_util_a-serfloat.obj `if test -f 'util/serfloat.cpp'; then $(CYGPATH_W) 'util/serfloat.cpp'; else $(CYGPATH_W) '$(srcdir)/util/serfloat.cpp'; fi`
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoin_util_a-serfloat.Tpo util/$(DEPDIR)/libbitcoin_util_a-serfloat.Po
#	$(AM_V_CXX)source='util/serfloat.cpp' object='util/libbitcoin_util_a-serfloat.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoin_util_a-serfloat.obj `if test -f 'util/serfloat.cpp'; then $(CYGPATH_W) 'util/serfloat.cpp'; else $(CYGPATH_W) '$(srcdir)/util/serfloat.cpp'; fi`

util/libbitcoin_util_a-spanparsing.o: util/spanparsing.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoin_util_a-spanparsing.o -MD -MP -MF util/$(DEPDIR)/libbitcoin_util_a-spanparsing.Tpo -c -o util/libbitcoin_util_a-spanparsing.o `test -f 'util/spanparsing.cpp' || echo '$(srcdir)/'`util/spanparsing.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoin_util_a-spanparsing.Tpo util/$(DEPDIR)/libbitcoin_util_a-spanparsing.Po
#	$(AM_V_CXX)source='util/spanparsing.cpp' object='util/libbitcoin_util_a-spanparsing.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoin_util_a-spanparsing.o `test -f 'util/spanparsing.cpp' || echo '$(srcdir)/'`util/spanparsing.cpp

util/libbitcoin_util_a-spanparsing.obj: util/spanparsing.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoin_util_a-spanparsing.obj -MD -MP -MF util/$(DEPDIR)/libbitcoin_util_a-spanparsing.Tpo -c -o util/libbitcoin_util_a-spanparsing.obj `if test -f 'util/spanparsing.cpp'; then $(CYGPATH_W) 'util/spanparsing.cpp'; else $(CYGPATH_W) '$(srcdir)/util/spanparsing.cpp'; fi`
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoin_util_a-spanparsing.Tpo util/$(DEPDIR)/libbitcoin_util_a-spanparsing.Po
#	$(AM_V_CXX)source='util/spanparsing.cpp' object='util/libbitcoin_util_a-spanparsing.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoin_util_a-spanparsing.obj `if test -f 'util/spanparsing.cpp'; then $(CYGPATH_W) 'util/spanparsing.cpp'; else $(CYGPATH_W) '$(srcdir)/util/spanparsing.cpp'; fi`

util/libbitcoin_util_a-strencodings.o: util/strencodings.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoin_util_a-strencodings.o -MD -MP -MF util/$(DEPDIR)/libbitcoin_util_a-strencodings.Tpo -c -o util/libbitcoin_util_a-strencodings.o `test -f 'util/strencodings.cpp' || echo '$(srcdir)/'`util/strencodings.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoin_util_a-strencodings.Tpo util/$(DEPDIR)/libbitcoin_util_a-strencodings.Po
#	$(AM_V_CXX)source='util/strencodings.cpp' object='util/libbitcoin_util_a-strencodings.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoin_util_a-strencodings.o `test -f 'util/strencodings.cpp' || echo '$(srcdir)/'`util/strencodings.cpp

util/libbitcoin_util_a-strencodings.obj: util/strencodings.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoin_util_a-strencodings.obj -MD -MP -MF util/$(DEPDIR)/libbitcoin_util_a-strencodings.Tpo -c -o util/libbitcoin_util_a-strencodings.obj `if test -f 'util/strencodings.cpp'; then $(CYGPATH_W) 'util/strencodings.cpp'; else $(CYGPATH_W) '$(srcdir)/util/strencodings.cpp'; fi`
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoin_util_a-strencodings.Tpo util/$(DEPDIR)/libbitcoin_util_a-strencodings.Po
#	$(AM_V_CXX)source='util/strencodings.cpp' object='util/libbitcoin_util_a-strencodings.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoin_util_a-strencodings.obj `if test -f 'util/strencodings.cpp'; then $(CYGPATH_W) 'util/strencodings.cpp'; else $(CYGPATH_W) '$(srcdir)/util/strencodings.cpp'; fi`

util/libbitcoin_util_a-string.o: util/string.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoin_util_a-string.o -MD -MP -MF util/$(DEPDIR)/libbitcoin_util_a-string.Tpo -c -o util/libbitcoin_util_a-string.o `test -f 'util/string.cpp' || echo '$(srcdir)/'`util/string.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoin_util_a-string.Tpo util/$(DEPDIR)/libbitcoin_util_a-string.Po
#	$(AM_V_CXX)source='util/string.cpp' object='util/libbitcoin_util_a-string.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoin_util_a-string.o `test -f 'util/string.cpp' || echo '$(srcdir)/'`util/string.cpp

util/libbitcoin_util_a-string.obj: util/string.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoin_util_a-string.obj -MD -MP -MF util/$(DEPDIR)/libbitcoin_util_a-string.Tpo -c -o util/libbitcoin_util_a-string.obj `if test -f 'util/string.cpp'; then $(CYGPATH_W) 'util/string.cpp'; else $(CYGPATH_W) '$(srcdir)/util/string.cpp'; fi`
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoin_util_a-string.Tpo util/$(DEPDIR)/libbitcoin_util_a-string.Po
#	$(AM_V_CXX)source='util/string.cpp' object='util/libbitcoin_util_a-string.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoin_util_a-string.obj `if test -f 'util/string.cpp'; then $(CYGPATH_W) 'util/string.cpp'; else $(CYGPATH_W) '$(srcdir)/util/string.cpp'; fi`

util/libbitcoin_util_a-syscall_sandbox.o: util/syscall_sandbox.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoin_util_a-syscall_sandbox.o -MD -MP -MF util/$(DEPDIR)/libbitcoin_util_a-syscall_sandbox.Tpo -c -o util/libbitcoin_util_a-syscall_sandbox.o `test -f 'util/syscall_sandbox.cpp' || echo '$(srcdir)/'`util/syscall_sandbox.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoin_util_a-syscall_sandbox.Tpo util/$(DEPDIR)/libbitcoin_util_a-syscall_sandbox.Po
#	$(AM_V_CXX)source='util/syscall_sandbox.cpp' object='util/libbitcoin_util_a-syscall_sandbox.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoin_util_a-syscall_sandbox.o `test -f 'util/syscall_sandbox.cpp' || echo '$(srcdir)/'`util/syscall_sandbox.cpp

util/libbitcoin_util_a-syscall_sandbox.obj: util/syscall_sandbox.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoin_util_a-syscall_sandbox.obj -MD -MP -MF util/$(DEPDIR)/libbitcoin_util_a-syscall_sandbox.Tpo -c -o util/libbitcoin_util_a-syscall_sandbox.obj `if test -f 'util/syscall_sandbox.cpp'; then $(CYGPATH_W) 'util/syscall_sandbox.cpp'; else $(CYGPATH_W) '$(srcdir)/util/syscall_sandbox.cpp'; fi`
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoin_util_a-syscall_sandbox.Tpo util/$(DEPDIR)/libbitcoin_util_a-syscall_sandbox.Po
#	$(AM_V_CXX)source='util/syscall_sandbox.cpp' object='util/libbitcoin_util_a-syscall_sandbox.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoin_util_a-syscall_sandbox.obj `if test -f 'util/syscall_sandbox.cpp'; then $(CYGPATH_W) 'util/syscall_sandbox.cpp'; else $(CYGPATH_W) '$(srcdir)/util/syscall_sandbox.cpp'; fi`

util/libbitcoin_util_a-time.o: util/time.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoin_util_a-time.o -MD -MP -MF util/$(DEPDIR)/libbitcoin_util_a-time.Tpo -c -o util/libbitcoin_util_a-time.o `test -f 'util/time.cpp' || echo '$(srcdir)/'`util/time.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoin_util_a-time.Tpo util/$(DEPDIR)/libbitcoin_util_a-time.Po
#	$(AM_V_CXX)source='util/time.cpp' object='util/libbitcoin_util_a-time.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoin_util_a-time.o `test -f 'util/time.cpp' || echo '$(srcdir)/'`util/time.cpp

util/libbitcoin_util_a-time.obj: util/time.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoin_util_a-time.obj -MD -MP -MF util/$(DEPDIR)/libbitcoin_util_a-time.Tpo -c -o util/libbitcoin_util_a-time.obj `if test -f 'util/time.cpp'; then $(CYGPATH_W) 'util/time.cpp'; else $(CYGPATH_W) '$(srcdir)/util/time.cpp'; fi`
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoin_util_a-time.Tpo util/$(DEPDIR)/libbitcoin_util_a-time.Po
#	$(AM_V_CXX)source='util/time.cpp' object='util/libbitcoin_util_a-time.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoin_util_a-time.obj `if test -f 'util/time.cpp'; then $(CYGPATH_W) 'util/time.cpp'; else $(CYGPATH_W) '$(srcdir)/util/time.cpp'; fi`

util/libbitcoin_util_a-tokenpipe.o: util/tokenpipe.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoin_util_a-tokenpipe.o -MD -MP -MF util/$(DEPDIR)/libbitcoin_util_a-tokenpipe.Tpo -c -o util/libbitcoin_util_a-tokenpipe.o `test -f 'util/tokenpipe.cpp' || echo '$(srcdir)/'`util/tokenpipe.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoin_util_a-tokenpipe.Tpo util/$(DEPDIR)/libbitcoin_util_a-tokenpipe.Po
#	$(AM_V_CXX)source='util/tokenpipe.cpp' object='util/libbitcoin_util_a-tokenpipe.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoin_util_a-tokenpipe.o `test -f 'util/tokenpipe.cpp' || echo '$(srcdir)/'`util/tokenpipe.cpp

util/libbitcoin_util_a-tokenpipe.obj: util/tokenpipe.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoin_util_a-tokenpipe.obj -MD -MP -MF util/$(DEPDIR)/libbitcoin_util_a-tokenpipe.Tpo -c -o util/libbitcoin_util_a-tokenpipe.obj `if test -f 'util/tokenpipe.cpp'; then $(CYGPATH_W) 'util/tokenpipe.cpp'; else $(CYGPATH_W) '$(srcdir)/util/tokenpipe.cpp'; fi`
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoin_util_a-tokenpipe.Tpo util/$(DEPDIR)/libbitcoin_util_a-tokenpipe.Po
#	$(AM_V_CXX)source='util/tokenpipe.cpp' object='util/libbitcoin_util_a-tokenpipe.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoin_util_a-tokenpipe.obj `if test -f 'util/tokenpipe.cpp'; then $(CYGPATH_W) 'util/tokenpipe.cpp'; else $(CYGPATH_W) '$(srcdir)/util/tokenpipe.cpp'; fi`

util/libbitcoin_util_a-url.o: util/url.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoin_util_a-url.o -MD -MP -MF util/$(DEPDIR)/libbitcoin_util_a-url.Tpo -c -o util/libbitcoin_util_a-url.o `test -f 'util/url.cpp' || echo '$(srcdir)/'`util/url.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoin_util_a-url.Tpo util/$(DEPDIR)/libbitcoin_util_a-url.Po
#	$(AM_V_CXX)source='util/url.cpp' object='util/libbitcoin_util_a-url.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoin_util_a-url.o `test -f 'util/url.cpp' || echo '$(srcdir)/'`util/url.cpp

util/libbitcoin_util_a-url.obj: util/url.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoin_util_a-url.obj -MD -MP -MF util/$(DEPDIR)/libbitcoin_util_a-url.Tpo -c -o util/libbitcoin_util_a-url.obj `if test -f 'util/url.cpp'; then $(CYGPATH_W) 'util/url.cpp'; else $(CYGPATH_W) '$(srcdir)/util/url.cpp'; fi`
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoin_util_a-url.Tpo util/$(DEPDIR)/libbitcoin_util_a-url.Po
#	$(AM_V_CXX)source='util/url.cpp' object='util/libbitcoin_util_a-url.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoin_util_a-url.obj `if test -f 'util/url.cpp'; then $(CYGPATH_W) 'util/url.cpp'; else $(CYGPATH_W) '$(srcdir)/util/url.cpp'; fi`

wallet/libbitcoin_wallet_a-coincontrol.o: wallet/coincontrol.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-coincontrol.o -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-coincontrol.Tpo -c -o wallet/libbitcoin_wallet_a-coincontrol.o `test -f 'wallet/coincontrol.cpp' || echo '$(srcdir)/'`wallet/coincontrol.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-coincontrol.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-coincontrol.Po
#	$(AM_V_CXX)source='wallet/coincontrol.cpp' object='wallet/libbitcoin_wallet_a-coincontrol.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-coincontrol.o `test -f 'wallet/coincontrol.cpp' || echo '$(srcdir)/'`wallet/coincontrol.cpp

wallet/libbitcoin_wallet_a-coincontrol.obj: wallet/coincontrol.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-coincontrol.obj -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-coincontrol.Tpo -c -o wallet/libbitcoin_wallet_a-coincontrol.obj `if test -f 'wallet/coincontrol.cpp'; then $(CYGPATH_W) 'wallet/coincontrol.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/coincontrol.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-coincontrol.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-coincontrol.Po
#	$(AM_V_CXX)source='wallet/coincontrol.cpp' object='wallet/libbitcoin_wallet_a-coincontrol.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-coincontrol.obj `if test -f 'wallet/coincontrol.cpp'; then $(CYGPATH_W) 'wallet/coincontrol.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/coincontrol.cpp'; fi`

wallet/libbitcoin_wallet_a-context.o: wallet/context.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-context.o -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-context.Tpo -c -o wallet/libbitcoin_wallet_a-context.o `test -f 'wallet/context.cpp' || echo '$(srcdir)/'`wallet/context.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-context.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-context.Po
#	$(AM_V_CXX)source='wallet/context.cpp' object='wallet/libbitcoin_wallet_a-context.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-context.o `test -f 'wallet/context.cpp' || echo '$(srcdir)/'`wallet/context.cpp

wallet/libbitcoin_wallet_a-context.obj: wallet/context.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-context.obj -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-context.Tpo -c -o wallet/libbitcoin_wallet_a-context.obj `if test -f 'wallet/context.cpp'; then $(CYGPATH_W) 'wallet/context.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/context.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-context.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-context.Po
#	$(AM_V_CXX)source='wallet/context.cpp' object='wallet/libbitcoin_wallet_a-context.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-context.obj `if test -f 'wallet/context.cpp'; then $(CYGPATH_W) 'wallet/context.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/context.cpp'; fi`

wallet/libbitcoin_wallet_a-crypter.o: wallet/crypter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-crypter.o -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-crypter.Tpo -c -o wallet/libbitcoin_wallet_a-crypter.o `test -f 'wallet/crypter.cpp' || echo '$(srcdir)/'`wallet/crypter.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-crypter.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-crypter.Po
#	$(AM_V_CXX)source='wallet/crypter.cpp' object='wallet/libbitcoin_wallet_a-crypter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-crypter.o `test -f 'wallet/crypter.cpp' || echo '$(srcdir)/'`wallet/crypter.cpp

wallet/libbitcoin_wallet_a-crypter.obj: wallet/crypter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-crypter.obj -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-crypter.Tpo -c -o wallet/libbitcoin_wallet_a-crypter.obj `if test -f 'wallet/crypter.cpp'; then $(CYGPATH_W) 'wallet/crypter.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/crypter.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-crypter.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-crypter.Po
#	$(AM_V_CXX)source='wallet/crypter.cpp' object='wallet/libbitcoin_wallet_a-crypter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-crypter.obj `if test -f 'wallet/crypter.cpp'; then $(CYGPATH_W) 'wallet/crypter.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/crypter.cpp'; fi`

wallet/libbitcoin_wallet_a-db.o: wallet/db.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-db.o -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-db.Tpo -c -o wallet/libbitcoin_wallet_a-db.o `test -f 'wallet/db.cpp' || echo '$(srcdir)/'`wallet/db.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-db.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-db.Po
#	$(AM_V_CXX)source='wallet/db.cpp' object='wallet/libbitcoin_wallet_a-db.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-db.o `test -f 'wallet/db.cpp' || echo '$(srcdir)/'`wallet/db.cpp

wallet/libbitcoin_wallet_a-db.obj: wallet/db.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-db.obj -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-db.Tpo -c -o wallet/libbitcoin_wallet_a-db.obj `if test -f 'wallet/db.cpp'; then $(CYGPATH_W) 'wallet/db.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/db.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-db.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-db.Po
#	$(AM_V_CXX)source='wallet/db.cpp' object='wallet/libbitcoin_wallet_a-db.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-db.obj `if test -f 'wallet/db.cpp'; then $(CYGPATH_W) 'wallet/db.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/db.cpp'; fi`

wallet/libbitcoin_wallet_a-dump.o: wallet/dump.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-dump.o -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-dump.Tpo -c -o wallet/libbitcoin_wallet_a-dump.o `test -f 'wallet/dump.cpp' || echo '$(srcdir)/'`wallet/dump.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-dump.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-dump.Po
#	$(AM_V_CXX)source='wallet/dump.cpp' object='wallet/libbitcoin_wallet_a-dump.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-dump.o `test -f 'wallet/dump.cpp' || echo '$(srcdir)/'`wallet/dump.cpp

wallet/libbitcoin_wallet_a-dump.obj: wallet/dump.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-dump.obj -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-dump.Tpo -c -o wallet/libbitcoin_wallet_a-dump.obj `if test -f 'wallet/dump.cpp'; then $(CYGPATH_W) 'wallet/dump.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/dump.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-dump.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-dump.Po
#	$(AM_V_CXX)source='wallet/dump.cpp' object='wallet/libbitcoin_wallet_a-dump.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-dump.obj `if test -f 'wallet/dump.cpp'; then $(CYGPATH_W) 'wallet/dump.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/dump.cpp'; fi`

wallet/libbitcoin_wallet_a-external_signer_scriptpubkeyman.o: wallet/external_signer_scriptpubkeyman.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-external_signer_scriptpubkeyman.o -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-external_signer_scriptpubkeyman.Tpo -c -o wallet/libbitcoin_wallet_a-external_signer_scriptpubkeyman.o `test -f 'wallet/external_signer_scriptpubkeyman.cpp' || echo '$(srcdir)/'`wallet/external_signer_scriptpubkeyman.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-external_signer_scriptpubkeyman.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-external_signer_scriptpubkeyman.Po
#	$(AM_V_CXX)source='wallet/external_signer_scriptpubkeyman.cpp' object='wallet/libbitcoin_wallet_a-external_signer_scriptpubkeyman.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-external_signer_scriptpubkeyman.o `test -f 'wallet/external_signer_scriptpubkeyman.cpp' || echo '$(srcdir)/'`wallet/external_signer_scriptpubkeyman.cpp

wallet/libbitcoin_wallet_a-external_signer_scriptpubkeyman.obj: wallet/external_signer_scriptpubkeyman.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-external_signer_scriptpubkeyman.obj -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-external_signer_scriptpubkeyman.Tpo -c -o wallet/libbitcoin_wallet_a-external_signer_scriptpubkeyman.obj `if test -f 'wallet/external_signer_scriptpubkeyman.cpp'; then $(CYGPATH_W) 'wallet/external_signer_scriptpubkeyman.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/external_signer_scriptpubkeyman.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-external_signer_scriptpubkeyman.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-external_signer_scriptpubkeyman.Po
#	$(AM_V_CXX)source='wallet/external_signer_scriptpubkeyman.cpp' object='wallet/libbitcoin_wallet_a-external_signer_scriptpubkeyman.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-external_signer_scriptpubkeyman.obj `if test -f 'wallet/external_signer_scriptpubkeyman.cpp'; then $(CYGPATH_W) 'wallet/external_signer_scriptpubkeyman.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/external_signer_scriptpubkeyman.cpp'; fi`

wallet/libbitcoin_wallet_a-feebumper.o: wallet/feebumper.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-feebumper.o -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-feebumper.Tpo -c -o wallet/libbitcoin_wallet_a-feebumper.o `test -f 'wallet/feebumper.cpp' || echo '$(srcdir)/'`wallet/feebumper.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-feebumper.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-feebumper.Po
#	$(AM_V_CXX)source='wallet/feebumper.cpp' object='wallet/libbitcoin_wallet_a-feebumper.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-feebumper.o `test -f 'wallet/feebumper.cpp' || echo '$(srcdir)/'`wallet/feebumper.cpp

wallet/libbitcoin_wallet_a-feebumper.obj: wallet/feebumper.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-feebumper.obj -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-feebumper.Tpo -c -o wallet/libbitcoin_wallet_a-feebumper.obj `if test -f 'wallet/feebumper.cpp'; then $(CYGPATH_W) 'wallet/feebumper.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/feebumper.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-feebumper.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-feebumper.Po
#	$(AM_V_CXX)source='wallet/feebumper.cpp' object='wallet/libbitcoin_wallet_a-feebumper.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-feebumper.obj `if test -f 'wallet/feebumper.cpp'; then $(CYGPATH_W) 'wallet/feebumper.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/feebumper.cpp'; fi`

wallet/libbitcoin_wallet_a-fees.o: wallet/fees.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-fees.o -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-fees.Tpo -c -o wallet/libbitcoin_wallet_a-fees.o `test -f 'wallet/fees.cpp' || echo '$(srcdir)/'`wallet/fees.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-fees.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-fees.Po
#	$(AM_V_CXX)source='wallet/fees.cpp' object='wallet/libbitcoin_wallet_a-fees.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-fees.o `test -f 'wallet/fees.cpp' || echo '$(srcdir)/'`wallet/fees.cpp

wallet/libbitcoin_wallet_a-fees.obj: wallet/fees.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-fees.obj -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-fees.Tpo -c -o wallet/libbitcoin_wallet_a-fees.obj `if test -f 'wallet/fees.cpp'; then $(CYGPATH_W) 'wallet/fees.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/fees.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-fees.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-fees.Po
#	$(AM_V_CXX)source='wallet/fees.cpp' object='wallet/libbitcoin_wallet_a-fees.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-fees.obj `if test -f 'wallet/fees.cpp'; then $(CYGPATH_W) 'wallet/fees.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/fees.cpp'; fi`

wallet/libbitcoin_wallet_a-interfaces.o: wallet/interfaces.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-interfaces.o -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-interfaces.Tpo -c -o wallet/libbitcoin_wallet_a-interfaces.o `test -f 'wallet/interfaces.cpp' || echo '$(srcdir)/'`wallet/interfaces.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-interfaces.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-interfaces.Po
#	$(AM_V_CXX)source='wallet/interfaces.cpp' object='wallet/libbitcoin_wallet_a-interfaces.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-interfaces.o `test -f 'wallet/interfaces.cpp' || echo '$(srcdir)/'`wallet/interfaces.cpp

wallet/libbitcoin_wallet_a-interfaces.obj: wallet/interfaces.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-interfaces.obj -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-interfaces.Tpo -c -o wallet/libbitcoin_wallet_a-interfaces.obj `if test -f 'wallet/interfaces.cpp'; then $(CYGPATH_W) 'wallet/interfaces.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/interfaces.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-interfaces.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-interfaces.Po
#	$(AM_V_CXX)source='wallet/interfaces.cpp' object='wallet/libbitcoin_wallet_a-interfaces.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-interfaces.obj `if test -f 'wallet/interfaces.cpp'; then $(CYGPATH_W) 'wallet/interfaces.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/interfaces.cpp'; fi`

wallet/libbitcoin_wallet_a-load.o: wallet/load.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-load.o -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-load.Tpo -c -o wallet/libbitcoin_wallet_a-load.o `test -f 'wallet/load.cpp' || echo '$(srcdir)/'`wallet/load.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-load.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-load.Po
#	$(AM_V_CXX)source='wallet/load.cpp' object='wallet/libbitcoin_wallet_a-load.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-load.o `test -f 'wallet/load.cpp' || echo '$(srcdir)/'`wallet/load.cpp

wallet/libbitcoin_wallet_a-load.obj: wallet/load.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-load.obj -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-load.Tpo -c -o wallet/libbitcoin_wallet_a-load.obj `if test -f 'wallet/load.cpp'; then $(CYGPATH_W) 'wallet/load.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/load.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-load.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-load.Po
#	$(AM_V_CXX)source='wallet/load.cpp' object='wallet/libbitcoin_wallet_a-load.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-load.obj `if test -f 'wallet/load.cpp'; then $(CYGPATH_W) 'wallet/load.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/load.cpp'; fi`

wallet/libbitcoin_wallet_a-receive.o: wallet/receive.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-receive.o -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-receive.Tpo -c -o wallet/libbitcoin_wallet_a-receive.o `test -f 'wallet/receive.cpp' || echo '$(srcdir)/'`wallet/receive.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-receive.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-receive.Po
#	$(AM_V_CXX)source='wallet/receive.cpp' object='wallet/libbitcoin_wallet_a-receive.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-receive.o `test -f 'wallet/receive.cpp' || echo '$(srcdir)/'`wallet/receive.cpp

wallet/libbitcoin_wallet_a-receive.obj: wallet/receive.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-receive.obj -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-receive.Tpo -c -o wallet/libbitcoin_wallet_a-receive.obj `if test -f 'wallet/receive.cpp'; then $(CYGPATH_W) 'wallet/receive.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/receive.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-receive.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-receive.Po
#	$(AM_V_CXX)source='wallet/receive.cpp' object='wallet/libbitcoin_wallet_a-receive.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-receive.obj `if test -f 'wallet/receive.cpp'; then $(CYGPATH_W) 'wallet/receive.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/receive.cpp'; fi`

wallet/rpc/libbitcoin_wallet_a-addresses.o: wallet/rpc/addresses.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/rpc/libbitcoin_wallet_a-addresses.o -MD -MP -MF wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-addresses.Tpo -c -o wallet/rpc/libbitcoin_wallet_a-addresses.o `test -f 'wallet/rpc/addresses.cpp' || echo '$(srcdir)/'`wallet/rpc/addresses.cpp
	$(AM_V_at)$(am__mv) wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-addresses.Tpo wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-addresses.Po
#	$(AM_V_CXX)source='wallet/rpc/addresses.cpp' object='wallet/rpc/libbitcoin_wallet_a-addresses.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/rpc/libbitcoin_wallet_a-addresses.o `test -f 'wallet/rpc/addresses.cpp' || echo '$(srcdir)/'`wallet/rpc/addresses.cpp

wallet/rpc/libbitcoin_wallet_a-addresses.obj: wallet/rpc/addresses.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/rpc/libbitcoin_wallet_a-addresses.obj -MD -MP -MF wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-addresses.Tpo -c -o wallet/rpc/libbitcoin_wallet_a-addresses.obj `if test -f 'wallet/rpc/addresses.cpp'; then $(CYGPATH_W) 'wallet/rpc/addresses.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/rpc/addresses.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-addresses.Tpo wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-addresses.Po
#	$(AM_V_CXX)source='wallet/rpc/addresses.cpp' object='wallet/rpc/libbitcoin_wallet_a-addresses.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/rpc/libbitcoin_wallet_a-addresses.obj `if test -f 'wallet/rpc/addresses.cpp'; then $(CYGPATH_W) 'wallet/rpc/addresses.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/rpc/addresses.cpp'; fi`

wallet/rpc/libbitcoin_wallet_a-backup.o: wallet/rpc/backup.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/rpc/libbitcoin_wallet_a-backup.o -MD -MP -MF wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-backup.Tpo -c -o wallet/rpc/libbitcoin_wallet_a-backup.o `test -f 'wallet/rpc/backup.cpp' || echo '$(srcdir)/'`wallet/rpc/backup.cpp
	$(AM_V_at)$(am__mv) wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-backup.Tpo wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-backup.Po
#	$(AM_V_CXX)source='wallet/rpc/backup.cpp' object='wallet/rpc/libbitcoin_wallet_a-backup.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/rpc/libbitcoin_wallet_a-backup.o `test -f 'wallet/rpc/backup.cpp' || echo '$(srcdir)/'`wallet/rpc/backup.cpp

wallet/rpc/libbitcoin_wallet_a-backup.obj: wallet/rpc/backup.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/rpc/libbitcoin_wallet_a-backup.obj -MD -MP -MF wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-backup.Tpo -c -o wallet/rpc/libbitcoin_wallet_a-backup.obj `if test -f 'wallet/rpc/backup.cpp'; then $(CYGPATH_W) 'wallet/rpc/backup.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/rpc/backup.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-backup.Tpo wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-backup.Po
#	$(AM_V_CXX)source='wallet/rpc/backup.cpp' object='wallet/rpc/libbitcoin_wallet_a-backup.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/rpc/libbitcoin_wallet_a-backup.obj `if test -f 'wallet/rpc/backup.cpp'; then $(CYGPATH_W) 'wallet/rpc/backup.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/rpc/backup.cpp'; fi`

wallet/rpc/libbitcoin_wallet_a-coins.o: wallet/rpc/coins.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/rpc/libbitcoin_wallet_a-coins.o -MD -MP -MF wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-coins.Tpo -c -o wallet/rpc/libbitcoin_wallet_a-coins.o `test -f 'wallet/rpc/coins.cpp' || echo '$(srcdir)/'`wallet/rpc/coins.cpp
	$(AM_V_at)$(am__mv) wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-coins.Tpo wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-coins.Po
#	$(AM_V_CXX)source='wallet/rpc/coins.cpp' object='wallet/rpc/libbitcoin_wallet_a-coins.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/rpc/libbitcoin_wallet_a-coins.o `test -f 'wallet/rpc/coins.cpp' || echo '$(srcdir)/'`wallet/rpc/coins.cpp

wallet/rpc/libbitcoin_wallet_a-coins.obj: wallet/rpc/coins.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/rpc/libbitcoin_wallet_a-coins.obj -MD -MP -MF wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-coins.Tpo -c -o wallet/rpc/libbitcoin_wallet_a-coins.obj `if test -f 'wallet/rpc/coins.cpp'; then $(CYGPATH_W) 'wallet/rpc/coins.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/rpc/coins.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-coins.Tpo wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-coins.Po
#	$(AM_V_CXX)source='wallet/rpc/coins.cpp' object='wallet/rpc/libbitcoin_wallet_a-coins.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/rpc/libbitcoin_wallet_a-coins.obj `if test -f 'wallet/rpc/coins.cpp'; then $(CYGPATH_W) 'wallet/rpc/coins.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/rpc/coins.cpp'; fi`

wallet/rpc/libbitcoin_wallet_a-encrypt.o: wallet/rpc/encrypt.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/rpc/libbitcoin_wallet_a-encrypt.o -MD -MP -MF wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-encrypt.Tpo -c -o wallet/rpc/libbitcoin_wallet_a-encrypt.o `test -f 'wallet/rpc/encrypt.cpp' || echo '$(srcdir)/'`wallet/rpc/encrypt.cpp
	$(AM_V_at)$(am__mv) wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-encrypt.Tpo wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-encrypt.Po
#	$(AM_V_CXX)source='wallet/rpc/encrypt.cpp' object='wallet/rpc/libbitcoin_wallet_a-encrypt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/rpc/libbitcoin_wallet_a-encrypt.o `test -f 'wallet/rpc/encrypt.cpp' || echo '$(srcdir)/'`wallet/rpc/encrypt.cpp

wallet/rpc/libbitcoin_wallet_a-encrypt.obj: wallet/rpc/encrypt.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/rpc/libbitcoin_wallet_a-encrypt.obj -MD -MP -MF wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-encrypt.Tpo -c -o wallet/rpc/libbitcoin_wallet_a-encrypt.obj `if test -f 'wallet/rpc/encrypt.cpp'; then $(CYGPATH_W) 'wallet/rpc/encrypt.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/rpc/encrypt.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-encrypt.Tpo wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-encrypt.Po
#	$(AM_V_CXX)source='wallet/rpc/encrypt.cpp' object='wallet/rpc/libbitcoin_wallet_a-encrypt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/rpc/libbitcoin_wallet_a-encrypt.obj `if test -f 'wallet/rpc/encrypt.cpp'; then $(CYGPATH_W) 'wallet/rpc/encrypt.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/rpc/encrypt.cpp'; fi`

wallet/rpc/libbitcoin_wallet_a-spend.o: wallet/rpc/spend.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/rpc/libbitcoin_wallet_a-spend.o -MD -MP -MF wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-spend.Tpo -c -o wallet/rpc/libbitcoin_wallet_a-spend.o `test -f 'wallet/rpc/spend.cpp' || echo '$(srcdir)/'`wallet/rpc/spend.cpp
	$(AM_V_at)$(am__mv) wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-spend.Tpo wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-spend.Po
#	$(AM_V_CXX)source='wallet/rpc/spend.cpp' object='wallet/rpc/libbitcoin_wallet_a-spend.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/rpc/libbitcoin_wallet_a-spend.o `test -f 'wallet/rpc/spend.cpp' || echo '$(srcdir)/'`wallet/rpc/spend.cpp

wallet/rpc/libbitcoin_wallet_a-spend.obj: wallet/rpc/spend.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/rpc/libbitcoin_wallet_a-spend.obj -MD -MP -MF wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-spend.Tpo -c -o wallet/rpc/libbitcoin_wallet_a-spend.obj `if test -f 'wallet/rpc/spend.cpp'; then $(CYGPATH_W) 'wallet/rpc/spend.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/rpc/spend.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-spend.Tpo wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-spend.Po
#	$(AM_V_CXX)source='wallet/rpc/spend.cpp' object='wallet/rpc/libbitcoin_wallet_a-spend.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/rpc/libbitcoin_wallet_a-spend.obj `if test -f 'wallet/rpc/spend.cpp'; then $(CYGPATH_W) 'wallet/rpc/spend.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/rpc/spend.cpp'; fi`

wallet/rpc/libbitcoin_wallet_a-signmessage.o: wallet/rpc/signmessage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/rpc/libbitcoin_wallet_a-signmessage.o -MD -MP -MF wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-signmessage.Tpo -c -o wallet/rpc/libbitcoin_wallet_a-signmessage.o `test -f 'wallet/rpc/signmessage.cpp' || echo '$(srcdir)/'`wallet/rpc/signmessage.cpp
	$(AM_V_at)$(am__mv) wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-signmessage.Tpo wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-signmessage.Po
#	$(AM_V_CXX)source='wallet/rpc/signmessage.cpp' object='wallet/rpc/libbitcoin_wallet_a-signmessage.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/rpc/libbitcoin_wallet_a-signmessage.o `test -f 'wallet/rpc/signmessage.cpp' || echo '$(srcdir)/'`wallet/rpc/signmessage.cpp

wallet/rpc/libbitcoin_wallet_a-signmessage.obj: wallet/rpc/signmessage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/rpc/libbitcoin_wallet_a-signmessage.obj -MD -MP -MF wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-signmessage.Tpo -c -o wallet/rpc/libbitcoin_wallet_a-signmessage.obj `if test -f 'wallet/rpc/signmessage.cpp'; then $(CYGPATH_W) 'wallet/rpc/signmessage.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/rpc/signmessage.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-signmessage.Tpo wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-signmessage.Po
#	$(AM_V_CXX)source='wallet/rpc/signmessage.cpp' object='wallet/rpc/libbitcoin_wallet_a-signmessage.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/rpc/libbitcoin_wallet_a-signmessage.obj `if test -f 'wallet/rpc/signmessage.cpp'; then $(CYGPATH_W) 'wallet/rpc/signmessage.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/rpc/signmessage.cpp'; fi`

wallet/rpc/libbitcoin_wallet_a-transactions.o: wallet/rpc/transactions.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/rpc/libbitcoin_wallet_a-transactions.o -MD -MP -MF wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-transactions.Tpo -c -o wallet/rpc/libbitcoin_wallet_a-transactions.o `test -f 'wallet/rpc/transactions.cpp' || echo '$(srcdir)/'`wallet/rpc/transactions.cpp
	$(AM_V_at)$(am__mv) wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-transactions.Tpo wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-transactions.Po
#	$(AM_V_CXX)source='wallet/rpc/transactions.cpp' object='wallet/rpc/libbitcoin_wallet_a-transactions.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/rpc/libbitcoin_wallet_a-transactions.o `test -f 'wallet/rpc/transactions.cpp' || echo '$(srcdir)/'`wallet/rpc/transactions.cpp

wallet/rpc/libbitcoin_wallet_a-transactions.obj: wallet/rpc/transactions.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/rpc/libbitcoin_wallet_a-transactions.obj -MD -MP -MF wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-transactions.Tpo -c -o wallet/rpc/libbitcoin_wallet_a-transactions.obj `if test -f 'wallet/rpc/transactions.cpp'; then $(CYGPATH_W) 'wallet/rpc/transactions.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/rpc/transactions.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-transactions.Tpo wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-transactions.Po
#	$(AM_V_CXX)source='wallet/rpc/transactions.cpp' object='wallet/rpc/libbitcoin_wallet_a-transactions.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/rpc/libbitcoin_wallet_a-transactions.obj `if test -f 'wallet/rpc/transactions.cpp'; then $(CYGPATH_W) 'wallet/rpc/transactions.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/rpc/transactions.cpp'; fi`

wallet/rpc/libbitcoin_wallet_a-util.o: wallet/rpc/util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/rpc/libbitcoin_wallet_a-util.o -MD -MP -MF wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-util.Tpo -c -o wallet/rpc/libbitcoin_wallet_a-util.o `test -f 'wallet/rpc/util.cpp' || echo '$(srcdir)/'`wallet/rpc/util.cpp
	$(AM_V_at)$(am__mv) wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-util.Tpo wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-util.Po
#	$(AM_V_CXX)source='wallet/rpc/util.cpp' object='wallet/rpc/libbitcoin_wallet_a-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/rpc/libbitcoin_wallet_a-util.o `test -f 'wallet/rpc/util.cpp' || echo '$(srcdir)/'`wallet/rpc/util.cpp

wallet/rpc/libbitcoin_wallet_a-util.obj: wallet/rpc/util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/rpc/libbitcoin_wallet_a-util.obj -MD -MP -MF wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-util.Tpo -c -o wallet/rpc/libbitcoin_wallet_a-util.obj `if test -f 'wallet/rpc/util.cpp'; then $(CYGPATH_W) 'wallet/rpc/util.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/rpc/util.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-util.Tpo wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-util.Po
#	$(AM_V_CXX)source='wallet/rpc/util.cpp' object='wallet/rpc/libbitcoin_wallet_a-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/rpc/libbitcoin_wallet_a-util.obj `if test -f 'wallet/rpc/util.cpp'; then $(CYGPATH_W) 'wallet/rpc/util.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/rpc/util.cpp'; fi`

wallet/rpc/libbitcoin_wallet_a-wallet.o: wallet/rpc/wallet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/rpc/libbitcoin_wallet_a-wallet.o -MD -MP -MF wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-wallet.Tpo -c -o wallet/rpc/libbitcoin_wallet_a-wallet.o `test -f 'wallet/rpc/wallet.cpp' || echo '$(srcdir)/'`wallet/rpc/wallet.cpp
	$(AM_V_at)$(am__mv) wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-wallet.Tpo wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-wallet.Po
#	$(AM_V_CXX)source='wallet/rpc/wallet.cpp' object='wallet/rpc/libbitcoin_wallet_a-wallet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/rpc/libbitcoin_wallet_a-wallet.o `test -f 'wallet/rpc/wallet.cpp' || echo '$(srcdir)/'`wallet/rpc/wallet.cpp

wallet/rpc/libbitcoin_wallet_a-wallet.obj: wallet/rpc/wallet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/rpc/libbitcoin_wallet_a-wallet.obj -MD -MP -MF wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-wallet.Tpo -c -o wallet/rpc/libbitcoin_wallet_a-wallet.obj `if test -f 'wallet/rpc/wallet.cpp'; then $(CYGPATH_W) 'wallet/rpc/wallet.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/rpc/wallet.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-wallet.Tpo wallet/rpc/$(DEPDIR)/libbitcoin_wallet_a-wallet.Po
#	$(AM_V_CXX)source='wallet/rpc/wallet.cpp' object='wallet/rpc/libbitcoin_wallet_a-wallet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/rpc/libbitcoin_wallet_a-wallet.obj `if test -f 'wallet/rpc/wallet.cpp'; then $(CYGPATH_W) 'wallet/rpc/wallet.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/rpc/wallet.cpp'; fi`

wallet/libbitcoin_wallet_a-scriptpubkeyman.o: wallet/scriptpubkeyman.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-scriptpubkeyman.o -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-scriptpubkeyman.Tpo -c -o wallet/libbitcoin_wallet_a-scriptpubkeyman.o `test -f 'wallet/scriptpubkeyman.cpp' || echo '$(srcdir)/'`wallet/scriptpubkeyman.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-scriptpubkeyman.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-scriptpubkeyman.Po
#	$(AM_V_CXX)source='wallet/scriptpubkeyman.cpp' object='wallet/libbitcoin_wallet_a-scriptpubkeyman.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-scriptpubkeyman.o `test -f 'wallet/scriptpubkeyman.cpp' || echo '$(srcdir)/'`wallet/scriptpubkeyman.cpp

wallet/libbitcoin_wallet_a-scriptpubkeyman.obj: wallet/scriptpubkeyman.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-scriptpubkeyman.obj -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-scriptpubkeyman.Tpo -c -o wallet/libbitcoin_wallet_a-scriptpubkeyman.obj `if test -f 'wallet/scriptpubkeyman.cpp'; then $(CYGPATH_W) 'wallet/scriptpubkeyman.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/scriptpubkeyman.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-scriptpubkeyman.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-scriptpubkeyman.Po
#	$(AM_V_CXX)source='wallet/scriptpubkeyman.cpp' object='wallet/libbitcoin_wallet_a-scriptpubkeyman.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-scriptpubkeyman.obj `if test -f 'wallet/scriptpubkeyman.cpp'; then $(CYGPATH_W) 'wallet/scriptpubkeyman.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/scriptpubkeyman.cpp'; fi`

wallet/libbitcoin_wallet_a-spend.o: wallet/spend.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-spend.o -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-spend.Tpo -c -o wallet/libbitcoin_wallet_a-spend.o `test -f 'wallet/spend.cpp' || echo '$(srcdir)/'`wallet/spend.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-spend.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-spend.Po
#	$(AM_V_CXX)source='wallet/spend.cpp' object='wallet/libbitcoin_wallet_a-spend.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-spend.o `test -f 'wallet/spend.cpp' || echo '$(srcdir)/'`wallet/spend.cpp

wallet/libbitcoin_wallet_a-spend.obj: wallet/spend.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-spend.obj -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-spend.Tpo -c -o wallet/libbitcoin_wallet_a-spend.obj `if test -f 'wallet/spend.cpp'; then $(CYGPATH_W) 'wallet/spend.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/spend.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-spend.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-spend.Po
#	$(AM_V_CXX)source='wallet/spend.cpp' object='wallet/libbitcoin_wallet_a-spend.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-spend.obj `if test -f 'wallet/spend.cpp'; then $(CYGPATH_W) 'wallet/spend.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/spend.cpp'; fi`

wallet/libbitcoin_wallet_a-transaction.o: wallet/transaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-transaction.o -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-transaction.Tpo -c -o wallet/libbitcoin_wallet_a-transaction.o `test -f 'wallet/transaction.cpp' || echo '$(srcdir)/'`wallet/transaction.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-transaction.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-transaction.Po
#	$(AM_V_CXX)source='wallet/transaction.cpp' object='wallet/libbitcoin_wallet_a-transaction.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-transaction.o `test -f 'wallet/transaction.cpp' || echo '$(srcdir)/'`wallet/transaction.cpp

wallet/libbitcoin_wallet_a-transaction.obj: wallet/transaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-transaction.obj -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-transaction.Tpo -c -o wallet/libbitcoin_wallet_a-transaction.obj `if test -f 'wallet/transaction.cpp'; then $(CYGPATH_W) 'wallet/transaction.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/transaction.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-transaction.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-transaction.Po
#	$(AM_V_CXX)source='wallet/transaction.cpp' object='wallet/libbitcoin_wallet_a-transaction.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-transaction.obj `if test -f 'wallet/transaction.cpp'; then $(CYGPATH_W) 'wallet/transaction.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/transaction.cpp'; fi`

wallet/libbitcoin_wallet_a-wallet.o: wallet/wallet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-wallet.o -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-wallet.Tpo -c -o wallet/libbitcoin_wallet_a-wallet.o `test -f 'wallet/wallet.cpp' || echo '$(srcdir)/'`wallet/wallet.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-wallet.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-wallet.Po
#	$(AM_V_CXX)source='wallet/wallet.cpp' object='wallet/libbitcoin_wallet_a-wallet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-wallet.o `test -f 'wallet/wallet.cpp' || echo '$(srcdir)/'`wallet/wallet.cpp

wallet/libbitcoin_wallet_a-wallet.obj: wallet/wallet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-wallet.obj -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-wallet.Tpo -c -o wallet/libbitcoin_wallet_a-wallet.obj `if test -f 'wallet/wallet.cpp'; then $(CYGPATH_W) 'wallet/wallet.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/wallet.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-wallet.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-wallet.Po
#	$(AM_V_CXX)source='wallet/wallet.cpp' object='wallet/libbitcoin_wallet_a-wallet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-wallet.obj `if test -f 'wallet/wallet.cpp'; then $(CYGPATH_W) 'wallet/wallet.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/wallet.cpp'; fi`

wallet/libbitcoin_wallet_a-walletdb.o: wallet/walletdb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-walletdb.o -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-walletdb.Tpo -c -o wallet/libbitcoin_wallet_a-walletdb.o `test -f 'wallet/walletdb.cpp' || echo '$(srcdir)/'`wallet/walletdb.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-walletdb.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-walletdb.Po
#	$(AM_V_CXX)source='wallet/walletdb.cpp' object='wallet/libbitcoin_wallet_a-walletdb.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-walletdb.o `test -f 'wallet/walletdb.cpp' || echo '$(srcdir)/'`wallet/walletdb.cpp

wallet/libbitcoin_wallet_a-walletdb.obj: wallet/walletdb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-walletdb.obj -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-walletdb.Tpo -c -o wallet/libbitcoin_wallet_a-walletdb.obj `if test -f 'wallet/walletdb.cpp'; then $(CYGPATH_W) 'wallet/walletdb.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/walletdb.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-walletdb.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-walletdb.Po
#	$(AM_V_CXX)source='wallet/walletdb.cpp' object='wallet/libbitcoin_wallet_a-walletdb.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-walletdb.obj `if test -f 'wallet/walletdb.cpp'; then $(CYGPATH_W) 'wallet/walletdb.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/walletdb.cpp'; fi`

wallet/libbitcoin_wallet_a-walletutil.o: wallet/walletutil.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-walletutil.o -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-walletutil.Tpo -c -o wallet/libbitcoin_wallet_a-walletutil.o `test -f 'wallet/walletutil.cpp' || echo '$(srcdir)/'`wallet/walletutil.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-walletutil.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-walletutil.Po
#	$(AM_V_CXX)source='wallet/walletutil.cpp' object='wallet/libbitcoin_wallet_a-walletutil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-walletutil.o `test -f 'wallet/walletutil.cpp' || echo '$(srcdir)/'`wallet/walletutil.cpp

wallet/libbitcoin_wallet_a-walletutil.obj: wallet/walletutil.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-walletutil.obj -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-walletutil.Tpo -c -o wallet/libbitcoin_wallet_a-walletutil.obj `if test -f 'wallet/walletutil.cpp'; then $(CYGPATH_W) 'wallet/walletutil.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/walletutil.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-walletutil.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-walletutil.Po
#	$(AM_V_CXX)source='wallet/walletutil.cpp' object='wallet/libbitcoin_wallet_a-walletutil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-walletutil.obj `if test -f 'wallet/walletutil.cpp'; then $(CYGPATH_W) 'wallet/walletutil.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/walletutil.cpp'; fi`

wallet/libbitcoin_wallet_a-coinselection.o: wallet/coinselection.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-coinselection.o -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-coinselection.Tpo -c -o wallet/libbitcoin_wallet_a-coinselection.o `test -f 'wallet/coinselection.cpp' || echo '$(srcdir)/'`wallet/coinselection.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-coinselection.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-coinselection.Po
#	$(AM_V_CXX)source='wallet/coinselection.cpp' object='wallet/libbitcoin_wallet_a-coinselection.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-coinselection.o `test -f 'wallet/coinselection.cpp' || echo '$(srcdir)/'`wallet/coinselection.cpp

wallet/libbitcoin_wallet_a-coinselection.obj: wallet/coinselection.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-coinselection.obj -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-coinselection.Tpo -c -o wallet/libbitcoin_wallet_a-coinselection.obj `if test -f 'wallet/coinselection.cpp'; then $(CYGPATH_W) 'wallet/coinselection.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/coinselection.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-coinselection.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-coinselection.Po
#	$(AM_V_CXX)source='wallet/coinselection.cpp' object='wallet/libbitcoin_wallet_a-coinselection.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-coinselection.obj `if test -f 'wallet/coinselection.cpp'; then $(CYGPATH_W) 'wallet/coinselection.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/coinselection.cpp'; fi`

wallet/libbitcoin_wallet_a-sqlite.o: wallet/sqlite.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-sqlite.o -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-sqlite.Tpo -c -o wallet/libbitcoin_wallet_a-sqlite.o `test -f 'wallet/sqlite.cpp' || echo '$(srcdir)/'`wallet/sqlite.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-sqlite.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-sqlite.Po
#	$(AM_V_CXX)source='wallet/sqlite.cpp' object='wallet/libbitcoin_wallet_a-sqlite.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-sqlite.o `test -f 'wallet/sqlite.cpp' || echo '$(srcdir)/'`wallet/sqlite.cpp

wallet/libbitcoin_wallet_a-sqlite.obj: wallet/sqlite.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-sqlite.obj -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-sqlite.Tpo -c -o wallet/libbitcoin_wallet_a-sqlite.obj `if test -f 'wallet/sqlite.cpp'; then $(CYGPATH_W) 'wallet/sqlite.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/sqlite.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-sqlite.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-sqlite.Po
#	$(AM_V_CXX)source='wallet/sqlite.cpp' object='wallet/libbitcoin_wallet_a-sqlite.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-sqlite.obj `if test -f 'wallet/sqlite.cpp'; then $(CYGPATH_W) 'wallet/sqlite.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/sqlite.cpp'; fi`

wallet/libbitcoin_wallet_a-bdb.o: wallet/bdb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-bdb.o -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-bdb.Tpo -c -o wallet/libbitcoin_wallet_a-bdb.o `test -f 'wallet/bdb.cpp' || echo '$(srcdir)/'`wallet/bdb.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-bdb.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-bdb.Po
#	$(AM_V_CXX)source='wallet/bdb.cpp' object='wallet/libbitcoin_wallet_a-bdb.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-bdb.o `test -f 'wallet/bdb.cpp' || echo '$(srcdir)/'`wallet/bdb.cpp

wallet/libbitcoin_wallet_a-bdb.obj: wallet/bdb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-bdb.obj -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-bdb.Tpo -c -o wallet/libbitcoin_wallet_a-bdb.obj `if test -f 'wallet/bdb.cpp'; then $(CYGPATH_W) 'wallet/bdb.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/bdb.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-bdb.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-bdb.Po
#	$(AM_V_CXX)source='wallet/bdb.cpp' object='wallet/libbitcoin_wallet_a-bdb.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-bdb.obj `if test -f 'wallet/bdb.cpp'; then $(CYGPATH_W) 'wallet/bdb.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/bdb.cpp'; fi`

wallet/libbitcoin_wallet_a-salvage.o: wallet/salvage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-salvage.o -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-salvage.Tpo -c -o wallet/libbitcoin_wallet_a-salvage.o `test -f 'wallet/salvage.cpp' || echo '$(srcdir)/'`wallet/salvage.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-salvage.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-salvage.Po
#	$(AM_V_CXX)source='wallet/salvage.cpp' object='wallet/libbitcoin_wallet_a-salvage.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-salvage.o `test -f 'wallet/salvage.cpp' || echo '$(srcdir)/'`wallet/salvage.cpp

wallet/libbitcoin_wallet_a-salvage.obj: wallet/salvage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-salvage.obj -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-salvage.Tpo -c -o wallet/libbitcoin_wallet_a-salvage.obj `if test -f 'wallet/salvage.cpp'; then $(CYGPATH_W) 'wallet/salvage.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/salvage.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-salvage.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-salvage.Po
#	$(AM_V_CXX)source='wallet/salvage.cpp' object='wallet/libbitcoin_wallet_a-salvage.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-salvage.obj `if test -f 'wallet/salvage.cpp'; then $(CYGPATH_W) 'wallet/salvage.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/salvage.cpp'; fi`

wallet/libbitcoin_wallet_tool_a-wallettool.o: wallet/wallettool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_tool_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_tool_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_tool_a-wallettool.o -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_tool_a-wallettool.Tpo -c -o wallet/libbitcoin_wallet_tool_a-wallettool.o `test -f 'wallet/wallettool.cpp' || echo '$(srcdir)/'`wallet/wallettool.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_tool_a-wallettool.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_tool_a-wallettool.Po
#	$(AM_V_CXX)source='wallet/wallettool.cpp' object='wallet/libbitcoin_wallet_tool_a-wallettool.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_tool_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_tool_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_tool_a-wallettool.o `test -f 'wallet/wallettool.cpp' || echo '$(srcdir)/'`wallet/wallettool.cpp

wallet/libbitcoin_wallet_tool_a-wallettool.obj: wallet/wallettool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_tool_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_tool_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_tool_a-wallettool.obj -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_tool_a-wallettool.Tpo -c -o wallet/libbitcoin_wallet_tool_a-wallettool.obj `if test -f 'wallet/wallettool.cpp'; then $(CYGPATH_W) 'wallet/wallettool.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/wallettool.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_tool_a-wallettool.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_tool_a-wallettool.Po
#	$(AM_V_CXX)source='wallet/wallettool.cpp' object='wallet/libbitcoin_wallet_tool_a-wallettool.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_tool_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_tool_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_tool_a-wallettool.obj `if test -f 'wallet/wallettool.cpp'; then $(CYGPATH_W) 'wallet/wallettool.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/wallettool.cpp'; fi`

zmq/libbitcoin_zmq_a-zmqabstractnotifier.o: zmq/zmqabstractnotifier.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_zmq_a_CXXFLAGS) $(CXXFLAGS) -MT zmq/libbitcoin_zmq_a-zmqabstractnotifier.o -MD -MP -MF zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqabstractnotifier.Tpo -c -o zmq/libbitcoin_zmq_a-zmqabstractnotifier.o `test -f 'zmq/zmqabstractnotifier.cpp' || echo '$(srcdir)/'`zmq/zmqabstractnotifier.cpp
	$(AM_V_at)$(am__mv) zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqabstractnotifier.Tpo zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqabstractnotifier.Po
#	$(AM_V_CXX)source='zmq/zmqabstractnotifier.cpp' object='zmq/libbitcoin_zmq_a-zmqabstractnotifier.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_zmq_a_CXXFLAGS) $(CXXFLAGS) -c -o zmq/libbitcoin_zmq_a-zmqabstractnotifier.o `test -f 'zmq/zmqabstractnotifier.cpp' || echo '$(srcdir)/'`zmq/zmqabstractnotifier.cpp

zmq/libbitcoin_zmq_a-zmqabstractnotifier.obj: zmq/zmqabstractnotifier.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_zmq_a_CXXFLAGS) $(CXXFLAGS) -MT zmq/libbitcoin_zmq_a-zmqabstractnotifier.obj -MD -MP -MF zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqabstractnotifier.Tpo -c -o zmq/libbitcoin_zmq_a-zmqabstractnotifier.obj `if test -f 'zmq/zmqabstractnotifier.cpp'; then $(CYGPATH_W) 'zmq/zmqabstractnotifier.cpp'; else $(CYGPATH_W) '$(srcdir)/zmq/zmqabstractnotifier.cpp'; fi`
	$(AM_V_at)$(am__mv) zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqabstractnotifier.Tpo zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqabstractnotifier.Po
#	$(AM_V_CXX)source='zmq/zmqabstractnotifier.cpp' object='zmq/libbitcoin_zmq_a-zmqabstractnotifier.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_zmq_a_CXXFLAGS) $(CXXFLAGS) -c -o zmq/libbitcoin_zmq_a-zmqabstractnotifier.obj `if test -f 'zmq/zmqabstractnotifier.cpp'; then $(CYGPATH_W) 'zmq/zmqabstractnotifier.cpp'; else $(CYGPATH_W) '$(srcdir)/zmq/zmqabstractnotifier.cpp'; fi`

zmq/libbitcoin_zmq_a-zmqnotificationinterface.o: zmq/zmqnotificationinterface.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_zmq_a_CXXFLAGS) $(CXXFLAGS) -MT zmq/libbitcoin_zmq_a-zmqnotificationinterface.o -MD -MP -MF zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqnotificationinterface.Tpo -c -o zmq/libbitcoin_zmq_a-zmqnotificationinterface.o `test -f 'zmq/zmqnotificationinterface.cpp' || echo '$(srcdir)/'`zmq/zmqnotificationinterface.cpp
	$(AM_V_at)$(am__mv) zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqnotificationinterface.Tpo zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqnotificationinterface.Po
#	$(AM_V_CXX)source='zmq/zmqnotificationinterface.cpp' object='zmq/libbitcoin_zmq_a-zmqnotificationinterface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_zmq_a_CXXFLAGS) $(CXXFLAGS) -c -o zmq/libbitcoin_zmq_a-zmqnotificationinterface.o `test -f 'zmq/zmqnotificationinterface.cpp' || echo '$(srcdir)/'`zmq/zmqnotificationinterface.cpp

zmq/libbitcoin_zmq_a-zmqnotificationinterface.obj: zmq/zmqnotificationinterface.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_zmq_a_CXXFLAGS) $(CXXFLAGS) -MT zmq/libbitcoin_zmq_a-zmqnotificationinterface.obj -MD -MP -MF zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqnotificationinterface.Tpo -c -o zmq/libbitcoin_zmq_a-zmqnotificationinterface.obj `if test -f 'zmq/zmqnotificationinterface.cpp'; then $(CYGPATH_W) 'zmq/zmqnotificationinterface.cpp'; else $(CYGPATH_W) '$(srcdir)/zmq/zmqnotificationinterface.cpp'; fi`
	$(AM_V_at)$(am__mv) zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqnotificationinterface.Tpo zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqnotificationinterface.Po
#	$(AM_V_CXX)source='zmq/zmqnotificationinterface.cpp' object='zmq/libbitcoin_zmq_a-zmqnotificationinterface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_zmq_a_CXXFLAGS) $(CXXFLAGS) -c -o zmq/libbitcoin_zmq_a-zmqnotificationinterface.obj `if test -f 'zmq/zmqnotificationinterface.cpp'; then $(CYGPATH_W) 'zmq/zmqnotificationinterface.cpp'; else $(CYGPATH_W) '$(srcdir)/zmq/zmqnotificationinterface.cpp'; fi`

zmq/libbitcoin_zmq_a-zmqpublishnotifier.o: zmq/zmqpublishnotifier.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_zmq_a_CXXFLAGS) $(CXXFLAGS) -MT zmq/libbitcoin_zmq_a-zmqpublishnotifier.o -MD -MP -MF zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqpublishnotifier.Tpo -c -o zmq/libbitcoin_zmq_a-zmqpublishnotifier.o `test -f 'zmq/zmqpublishnotifier.cpp' || echo '$(srcdir)/'`zmq/zmqpublishnotifier.cpp
	$(AM_V_at)$(am__mv) zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqpublishnotifier.Tpo zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqpublishnotifier.Po
#	$(AM_V_CXX)source='zmq/zmqpublishnotifier.cpp' object='zmq/libbitcoin_zmq_a-zmqpublishnotifier.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_zmq_a_CXXFLAGS) $(CXXFLAGS) -c -o zmq/libbitcoin_zmq_a-zmqpublishnotifier.o `test -f 'zmq/zmqpublishnotifier.cpp' || echo '$(srcdir)/'`zmq/zmqpublishnotifier.cpp

zmq/libbitcoin_zmq_a-zmqpublishnotifier.obj: zmq/zmqpublishnotifier.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_zmq_a_CXXFLAGS) $(CXXFLAGS) -MT zmq/libbitcoin_zmq_a-zmqpublishnotifier.obj -MD -MP -MF zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqpublishnotifier.Tpo -c -o zmq/libbitcoin_zmq_a-zmqpublishnotifier.obj `if test -f 'zmq/zmqpublishnotifier.cpp'; then $(CYGPATH_W) 'zmq/zmqpublishnotifier.cpp'; else $(CYGPATH_W) '$(srcdir)/zmq/zmqpublishnotifier.cpp'; fi`
	$(AM_V_at)$(am__mv) zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqpublishnotifier.Tpo zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqpublishnotifier.Po
#	$(AM_V_CXX)source='zmq/zmqpublishnotifier.cpp' object='zmq/libbitcoin_zmq_a-zmqpublishnotifier.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_zmq_a_CXXFLAGS) $(CXXFLAGS) -c -o zmq/libbitcoin_zmq_a-zmqpublishnotifier.obj `if test -f 'zmq/zmqpublishnotifier.cpp'; then $(CYGPATH_W) 'zmq/zmqpublishnotifier.cpp'; else $(CYGPATH_W) '$(srcdir)/zmq/zmqpublishnotifier.cpp'; fi`

zmq/libbitcoin_zmq_a-zmqrpc.o: zmq/zmqrpc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_zmq_a_CXXFLAGS) $(CXXFLAGS) -MT zmq/libbitcoin_zmq_a-zmqrpc.o -MD -MP -MF zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqrpc.Tpo -c -o zmq/libbitcoin_zmq_a-zmqrpc.o `test -f 'zmq/zmqrpc.cpp' || echo '$(srcdir)/'`zmq/zmqrpc.cpp
	$(AM_V_at)$(am__mv) zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqrpc.Tpo zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqrpc.Po
#	$(AM_V_CXX)source='zmq/zmqrpc.cpp' object='zmq/libbitcoin_zmq_a-zmqrpc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_zmq_a_CXXFLAGS) $(CXXFLAGS) -c -o zmq/libbitcoin_zmq_a-zmqrpc.o `test -f 'zmq/zmqrpc.cpp' || echo '$(srcdir)/'`zmq/zmqrpc.cpp

zmq/libbitcoin_zmq_a-zmqrpc.obj: zmq/zmqrpc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_zmq_a_CXXFLAGS) $(CXXFLAGS) -MT zmq/libbitcoin_zmq_a-zmqrpc.obj -MD -MP -MF zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqrpc.Tpo -c -o zmq/libbitcoin_zmq_a-zmqrpc.obj `if test -f 'zmq/zmqrpc.cpp'; then $(CYGPATH_W) 'zmq/zmqrpc.cpp'; else $(CYGPATH_W) '$(srcdir)/zmq/zmqrpc.cpp'; fi`
	$(AM_V_at)$(am__mv) zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqrpc.Tpo zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqrpc.Po
#	$(AM_V_CXX)source='zmq/zmqrpc.cpp' object='zmq/libbitcoin_zmq_a-zmqrpc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_zmq_a_CXXFLAGS) $(CXXFLAGS) -c -o zmq/libbitcoin_zmq_a-zmqrpc.obj `if test -f 'zmq/zmqrpc.cpp'; then $(CYGPATH_W) 'zmq/zmqrpc.cpp'; else $(CYGPATH_W) '$(srcdir)/zmq/zmqrpc.cpp'; fi`

zmq/libbitcoin_zmq_a-zmqutil.o: zmq/zmqutil.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_zmq_a_CXXFLAGS) $(CXXFLAGS) -MT zmq/libbitcoin_zmq_a-zmqutil.o -MD -MP -MF zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqutil.Tpo -c -o zmq/libbitcoin_zmq_a-zmqutil.o `test -f 'zmq/zmqutil.cpp' || echo '$(srcdir)/'`zmq/zmqutil.cpp
	$(AM_V_at)$(am__mv) zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqutil.Tpo zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqutil.Po
#	$(AM_V_CXX)source='zmq/zmqutil.cpp' object='zmq/libbitcoin_zmq_a-zmqutil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_zmq_a_CXXFLAGS) $(CXXFLAGS) -c -o zmq/libbitcoin_zmq_a-zmqutil.o `test -f 'zmq/zmqutil.cpp' || echo '$(srcdir)/'`zmq/zmqutil.cpp

zmq/libbitcoin_zmq_a-zmqutil.obj: zmq/zmqutil.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_zmq_a_CXXFLAGS) $(CXXFLAGS) -MT zmq/libbitcoin_zmq_a-zmqutil.obj -MD -MP -MF zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqutil.Tpo -c -o zmq/libbitcoin_zmq_a-zmqutil.obj `if test -f 'zmq/zmqutil.cpp'; then $(CYGPATH_W) 'zmq/zmqutil.cpp'; else $(CYGPATH_W) '$(srcdir)/zmq/zmqutil.cpp'; fi`
	$(AM_V_at)$(am__mv) zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqutil.Tpo zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqutil.Po
#	$(AM_V_CXX)source='zmq/zmqutil.cpp' object='zmq/libbitcoin_zmq_a-zmqutil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_zmq_a_CXXFLAGS) $(CXXFLAGS) -c -o zmq/libbitcoin_zmq_a-zmqutil.obj `if test -f 'zmq/zmqutil.cpp'; then $(CYGPATH_W) 'zmq/zmqutil.cpp'; else $(CYGPATH_W) '$(srcdir)/zmq/zmqutil.cpp'; fi`

test/fuzz/libtest_fuzz_a-fuzz.o: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_fuzz_a_CPPFLAGS) $(CPPFLAGS) $(libtest_fuzz_a_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/libtest_fuzz_a-fuzz.o -MD -MP -MF test/fuzz/$(DEPDIR)/libtest_fuzz_a-fuzz.Tpo -c -o test/fuzz/libtest_fuzz_a-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/libtest_fuzz_a-fuzz.Tpo test/fuzz/$(DEPDIR)/libtest_fuzz_a-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/libtest_fuzz_a-fuzz.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_fuzz_a_CPPFLAGS) $(CPPFLAGS) $(libtest_fuzz_a_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/libtest_fuzz_a-fuzz.o `test -f 'test/fuzz/fuzz.cpp' || echo '$(srcdir)/'`test/fuzz/fuzz.cpp

test/fuzz/libtest_fuzz_a-fuzz.obj: test/fuzz/fuzz.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_fuzz_a_CPPFLAGS) $(CPPFLAGS) $(libtest_fuzz_a_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/libtest_fuzz_a-fuzz.obj -MD -MP -MF test/fuzz/$(DEPDIR)/libtest_fuzz_a-fuzz.Tpo -c -o test/fuzz/libtest_fuzz_a-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/libtest_fuzz_a-fuzz.Tpo test/fuzz/$(DEPDIR)/libtest_fuzz_a-fuzz.Po
#	$(AM_V_CXX)source='test/fuzz/fuzz.cpp' object='test/fuzz/libtest_fuzz_a-fuzz.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_fuzz_a_CPPFLAGS) $(CPPFLAGS) $(libtest_fuzz_a_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/libtest_fuzz_a-fuzz.obj `if test -f 'test/fuzz/fuzz.cpp'; then $(CYGPATH_W) 'test/fuzz/fuzz.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fuzz.cpp'; fi`

test/fuzz/libtest_fuzz_a-util.o: test/fuzz/util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_fuzz_a_CPPFLAGS) $(CPPFLAGS) $(libtest_fuzz_a_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/libtest_fuzz_a-util.o -MD -MP -MF test/fuzz/$(DEPDIR)/libtest_fuzz_a-util.Tpo -c -o test/fuzz/libtest_fuzz_a-util.o `test -f 'test/fuzz/util.cpp' || echo '$(srcdir)/'`test/fuzz/util.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/libtest_fuzz_a-util.Tpo test/fuzz/$(DEPDIR)/libtest_fuzz_a-util.Po
#	$(AM_V_CXX)source='test/fuzz/util.cpp' object='test/fuzz/libtest_fuzz_a-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_fuzz_a_CPPFLAGS) $(CPPFLAGS) $(libtest_fuzz_a_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/libtest_fuzz_a-util.o `test -f 'test/fuzz/util.cpp' || echo '$(srcdir)/'`test/fuzz/util.cpp

test/fuzz/libtest_fuzz_a-util.obj: test/fuzz/util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_fuzz_a_CPPFLAGS) $(CPPFLAGS) $(libtest_fuzz_a_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/libtest_fuzz_a-util.obj -MD -MP -MF test/fuzz/$(DEPDIR)/libtest_fuzz_a-util.Tpo -c -o test/fuzz/libtest_fuzz_a-util.obj `if test -f 'test/fuzz/util.cpp'; then $(CYGPATH_W) 'test/fuzz/util.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/util.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/libtest_fuzz_a-util.Tpo test/fuzz/$(DEPDIR)/libtest_fuzz_a-util.Po
#	$(AM_V_CXX)source='test/fuzz/util.cpp' object='test/fuzz/libtest_fuzz_a-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_fuzz_a_CPPFLAGS) $(CPPFLAGS) $(libtest_fuzz_a_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/libtest_fuzz_a-util.obj `if test -f 'test/fuzz/util.cpp'; then $(CYGPATH_W) 'test/fuzz/util.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/util.cpp'; fi`

test/util/libtest_util_a-blockfilter.o: test/util/blockfilter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -MT test/util/libtest_util_a-blockfilter.o -MD -MP -MF test/util/$(DEPDIR)/libtest_util_a-blockfilter.Tpo -c -o test/util/libtest_util_a-blockfilter.o `test -f 'test/util/blockfilter.cpp' || echo '$(srcdir)/'`test/util/blockfilter.cpp
	$(AM_V_at)$(am__mv) test/util/$(DEPDIR)/libtest_util_a-blockfilter.Tpo test/util/$(DEPDIR)/libtest_util_a-blockfilter.Po
#	$(AM_V_CXX)source='test/util/blockfilter.cpp' object='test/util/libtest_util_a-blockfilter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -c -o test/util/libtest_util_a-blockfilter.o `test -f 'test/util/blockfilter.cpp' || echo '$(srcdir)/'`test/util/blockfilter.cpp

test/util/libtest_util_a-blockfilter.obj: test/util/blockfilter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -MT test/util/libtest_util_a-blockfilter.obj -MD -MP -MF test/util/$(DEPDIR)/libtest_util_a-blockfilter.Tpo -c -o test/util/libtest_util_a-blockfilter.obj `if test -f 'test/util/blockfilter.cpp'; then $(CYGPATH_W) 'test/util/blockfilter.cpp'; else $(CYGPATH_W) '$(srcdir)/test/util/blockfilter.cpp'; fi`
	$(AM_V_at)$(am__mv) test/util/$(DEPDIR)/libtest_util_a-blockfilter.Tpo test/util/$(DEPDIR)/libtest_util_a-blockfilter.Po
#	$(AM_V_CXX)source='test/util/blockfilter.cpp' object='test/util/libtest_util_a-blockfilter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -c -o test/util/libtest_util_a-blockfilter.obj `if test -f 'test/util/blockfilter.cpp'; then $(CYGPATH_W) 'test/util/blockfilter.cpp'; else $(CYGPATH_W) '$(srcdir)/test/util/blockfilter.cpp'; fi`

test/util/libtest_util_a-logging.o: test/util/logging.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -MT test/util/libtest_util_a-logging.o -MD -MP -MF test/util/$(DEPDIR)/libtest_util_a-logging.Tpo -c -o test/util/libtest_util_a-logging.o `test -f 'test/util/logging.cpp' || echo '$(srcdir)/'`test/util/logging.cpp
	$(AM_V_at)$(am__mv) test/util/$(DEPDIR)/libtest_util_a-logging.Tpo test/util/$(DEPDIR)/libtest_util_a-logging.Po
#	$(AM_V_CXX)source='test/util/logging.cpp' object='test/util/libtest_util_a-logging.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -c -o test/util/libtest_util_a-logging.o `test -f 'test/util/logging.cpp' || echo '$(srcdir)/'`test/util/logging.cpp

test/util/libtest_util_a-logging.obj: test/util/logging.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -MT test/util/libtest_util_a-logging.obj -MD -MP -MF test/util/$(DEPDIR)/libtest_util_a-logging.Tpo -c -o test/util/libtest_util_a-logging.obj `if test -f 'test/util/logging.cpp'; then $(CYGPATH_W) 'test/util/logging.cpp'; else $(CYGPATH_W) '$(srcdir)/test/util/logging.cpp'; fi`
	$(AM_V_at)$(am__mv) test/util/$(DEPDIR)/libtest_util_a-logging.Tpo test/util/$(DEPDIR)/libtest_util_a-logging.Po
#	$(AM_V_CXX)source='test/util/logging.cpp' object='test/util/libtest_util_a-logging.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -c -o test/util/libtest_util_a-logging.obj `if test -f 'test/util/logging.cpp'; then $(CYGPATH_W) 'test/util/logging.cpp'; else $(CYGPATH_W) '$(srcdir)/test/util/logging.cpp'; fi`

test/util/libtest_util_a-mining.o: test/util/mining.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -MT test/util/libtest_util_a-mining.o -MD -MP -MF test/util/$(DEPDIR)/libtest_util_a-mining.Tpo -c -o test/util/libtest_util_a-mining.o `test -f 'test/util/mining.cpp' || echo '$(srcdir)/'`test/util/mining.cpp
	$(AM_V_at)$(am__mv) test/util/$(DEPDIR)/libtest_util_a-mining.Tpo test/util/$(DEPDIR)/libtest_util_a-mining.Po
#	$(AM_V_CXX)source='test/util/mining.cpp' object='test/util/libtest_util_a-mining.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -c -o test/util/libtest_util_a-mining.o `test -f 'test/util/mining.cpp' || echo '$(srcdir)/'`test/util/mining.cpp

test/util/libtest_util_a-mining.obj: test/util/mining.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -MT test/util/libtest_util_a-mining.obj -MD -MP -MF test/util/$(DEPDIR)/libtest_util_a-mining.Tpo -c -o test/util/libtest_util_a-mining.obj `if test -f 'test/util/mining.cpp'; then $(CYGPATH_W) 'test/util/mining.cpp'; else $(CYGPATH_W) '$(srcdir)/test/util/mining.cpp'; fi`
	$(AM_V_at)$(am__mv) test/util/$(DEPDIR)/libtest_util_a-mining.Tpo test/util/$(DEPDIR)/libtest_util_a-mining.Po
#	$(AM_V_CXX)source='test/util/mining.cpp' object='test/util/libtest_util_a-mining.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -c -o test/util/libtest_util_a-mining.obj `if test -f 'test/util/mining.cpp'; then $(CYGPATH_W) 'test/util/mining.cpp'; else $(CYGPATH_W) '$(srcdir)/test/util/mining.cpp'; fi`

test/util/libtest_util_a-net.o: test/util/net.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -MT test/util/libtest_util_a-net.o -MD -MP -MF test/util/$(DEPDIR)/libtest_util_a-net.Tpo -c -o test/util/libtest_util_a-net.o `test -f 'test/util/net.cpp' || echo '$(srcdir)/'`test/util/net.cpp
	$(AM_V_at)$(am__mv) test/util/$(DEPDIR)/libtest_util_a-net.Tpo test/util/$(DEPDIR)/libtest_util_a-net.Po
#	$(AM_V_CXX)source='test/util/net.cpp' object='test/util/libtest_util_a-net.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -c -o test/util/libtest_util_a-net.o `test -f 'test/util/net.cpp' || echo '$(srcdir)/'`test/util/net.cpp

test/util/libtest_util_a-net.obj: test/util/net.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -MT test/util/libtest_util_a-net.obj -MD -MP -MF test/util/$(DEPDIR)/libtest_util_a-net.Tpo -c -o test/util/libtest_util_a-net.obj `if test -f 'test/util/net.cpp'; then $(CYGPATH_W) 'test/util/net.cpp'; else $(CYGPATH_W) '$(srcdir)/test/util/net.cpp'; fi`
	$(AM_V_at)$(am__mv) test/util/$(DEPDIR)/libtest_util_a-net.Tpo test/util/$(DEPDIR)/libtest_util_a-net.Po
#	$(AM_V_CXX)source='test/util/net.cpp' object='test/util/libtest_util_a-net.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -c -o test/util/libtest_util_a-net.obj `if test -f 'test/util/net.cpp'; then $(CYGPATH_W) 'test/util/net.cpp'; else $(CYGPATH_W) '$(srcdir)/test/util/net.cpp'; fi`

test/util/libtest_util_a-script.o: test/util/script.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -MT test/util/libtest_util_a-script.o -MD -MP -MF test/util/$(DEPDIR)/libtest_util_a-script.Tpo -c -o test/util/libtest_util_a-script.o `test -f 'test/util/script.cpp' || echo '$(srcdir)/'`test/util/script.cpp
	$(AM_V_at)$(am__mv) test/util/$(DEPDIR)/libtest_util_a-script.Tpo test/util/$(DEPDIR)/libtest_util_a-script.Po
#	$(AM_V_CXX)source='test/util/script.cpp' object='test/util/libtest_util_a-script.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -c -o test/util/libtest_util_a-script.o `test -f 'test/util/script.cpp' || echo '$(srcdir)/'`test/util/script.cpp

test/util/libtest_util_a-script.obj: test/util/script.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -MT test/util/libtest_util_a-script.obj -MD -MP -MF test/util/$(DEPDIR)/libtest_util_a-script.Tpo -c -o test/util/libtest_util_a-script.obj `if test -f 'test/util/script.cpp'; then $(CYGPATH_W) 'test/util/script.cpp'; else $(CYGPATH_W) '$(srcdir)/test/util/script.cpp'; fi`
	$(AM_V_at)$(am__mv) test/util/$(DEPDIR)/libtest_util_a-script.Tpo test/util/$(DEPDIR)/libtest_util_a-script.Po
#	$(AM_V_CXX)source='test/util/script.cpp' object='test/util/libtest_util_a-script.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -c -o test/util/libtest_util_a-script.obj `if test -f 'test/util/script.cpp'; then $(CYGPATH_W) 'test/util/script.cpp'; else $(CYGPATH_W) '$(srcdir)/test/util/script.cpp'; fi`

test/util/libtest_util_a-setup_common.o: test/util/setup_common.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -MT test/util/libtest_util_a-setup_common.o -MD -MP -MF test/util/$(DEPDIR)/libtest_util_a-setup_common.Tpo -c -o test/util/libtest_util_a-setup_common.o `test -f 'test/util/setup_common.cpp' || echo '$(srcdir)/'`test/util/setup_common.cpp
	$(AM_V_at)$(am__mv) test/util/$(DEPDIR)/libtest_util_a-setup_common.Tpo test/util/$(DEPDIR)/libtest_util_a-setup_common.Po
#	$(AM_V_CXX)source='test/util/setup_common.cpp' object='test/util/libtest_util_a-setup_common.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -c -o test/util/libtest_util_a-setup_common.o `test -f 'test/util/setup_common.cpp' || echo '$(srcdir)/'`test/util/setup_common.cpp

test/util/libtest_util_a-setup_common.obj: test/util/setup_common.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -MT test/util/libtest_util_a-setup_common.obj -MD -MP -MF test/util/$(DEPDIR)/libtest_util_a-setup_common.Tpo -c -o test/util/libtest_util_a-setup_common.obj `if test -f 'test/util/setup_common.cpp'; then $(CYGPATH_W) 'test/util/setup_common.cpp'; else $(CYGPATH_W) '$(srcdir)/test/util/setup_common.cpp'; fi`
	$(AM_V_at)$(am__mv) test/util/$(DEPDIR)/libtest_util_a-setup_common.Tpo test/util/$(DEPDIR)/libtest_util_a-setup_common.Po
#	$(AM_V_CXX)source='test/util/setup_common.cpp' object='test/util/libtest_util_a-setup_common.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -c -o test/util/libtest_util_a-setup_common.obj `if test -f 'test/util/setup_common.cpp'; then $(CYGPATH_W) 'test/util/setup_common.cpp'; else $(CYGPATH_W) '$(srcdir)/test/util/setup_common.cpp'; fi`

test/util/libtest_util_a-str.o: test/util/str.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -MT test/util/libtest_util_a-str.o -MD -MP -MF test/util/$(DEPDIR)/libtest_util_a-str.Tpo -c -o test/util/libtest_util_a-str.o `test -f 'test/util/str.cpp' || echo '$(srcdir)/'`test/util/str.cpp
	$(AM_V_at)$(am__mv) test/util/$(DEPDIR)/libtest_util_a-str.Tpo test/util/$(DEPDIR)/libtest_util_a-str.Po
#	$(AM_V_CXX)source='test/util/str.cpp' object='test/util/libtest_util_a-str.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -c -o test/util/libtest_util_a-str.o `test -f 'test/util/str.cpp' || echo '$(srcdir)/'`test/util/str.cpp

test/util/libtest_util_a-str.obj: test/util/str.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -MT test/util/libtest_util_a-str.obj -MD -MP -MF test/util/$(DEPDIR)/libtest_util_a-str.Tpo -c -o test/util/libtest_util_a-str.obj `if test -f 'test/util/str.cpp'; then $(CYGPATH_W) 'test/util/str.cpp'; else $(CYGPATH_W) '$(srcdir)/test/util/str.cpp'; fi`
	$(AM_V_at)$(am__mv) test/util/$(DEPDIR)/libtest_util_a-str.Tpo test/util/$(DEPDIR)/libtest_util_a-str.Po
#	$(AM_V_CXX)source='test/util/str.cpp' object='test/util/libtest_util_a-str.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -c -o test/util/libtest_util_a-str.obj `if test -f 'test/util/str.cpp'; then $(CYGPATH_W) 'test/util/str.cpp'; else $(CYGPATH_W) '$(srcdir)/test/util/str.cpp'; fi`

test/util/libtest_util_a-transaction_utils.o: test/util/transaction_utils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -MT test/util/libtest_util_a-transaction_utils.o -MD -MP -MF test/util/$(DEPDIR)/libtest_util_a-transaction_utils.Tpo -c -o test/util/libtest_util_a-transaction_utils.o `test -f 'test/util/transaction_utils.cpp' || echo '$(srcdir)/'`test/util/transaction_utils.cpp
	$(AM_V_at)$(am__mv) test/util/$(DEPDIR)/libtest_util_a-transaction_utils.Tpo test/util/$(DEPDIR)/libtest_util_a-transaction_utils.Po
#	$(AM_V_CXX)source='test/util/transaction_utils.cpp' object='test/util/libtest_util_a-transaction_utils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -c -o test/util/libtest_util_a-transaction_utils.o `test -f 'test/util/transaction_utils.cpp' || echo '$(srcdir)/'`test/util/transaction_utils.cpp

test/util/libtest_util_a-transaction_utils.obj: test/util/transaction_utils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -MT test/util/libtest_util_a-transaction_utils.obj -MD -MP -MF test/util/$(DEPDIR)/libtest_util_a-transaction_utils.Tpo -c -o test/util/libtest_util_a-transaction_utils.obj `if test -f 'test/util/transaction_utils.cpp'; then $(CYGPATH_W) 'test/util/transaction_utils.cpp'; else $(CYGPATH_W) '$(srcdir)/test/util/transaction_utils.cpp'; fi`
	$(AM_V_at)$(am__mv) test/util/$(DEPDIR)/libtest_util_a-transaction_utils.Tpo test/util/$(DEPDIR)/libtest_util_a-transaction_utils.Po
#	$(AM_V_CXX)source='test/util/transaction_utils.cpp' object='test/util/libtest_util_a-transaction_utils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -c -o test/util/libtest_util_a-transaction_utils.obj `if test -f 'test/util/transaction_utils.cpp'; then $(CYGPATH_W) 'test/util/transaction_utils.cpp'; else $(CYGPATH_W) '$(srcdir)/test/util/transaction_utils.cpp'; fi`

test/util/libtest_util_a-validation.o: test/util/validation.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -MT test/util/libtest_util_a-validation.o -MD -MP -MF test/util/$(DEPDIR)/libtest_util_a-validation.Tpo -c -o test/util/libtest_util_a-validation.o `test -f 'test/util/validation.cpp' || echo '$(srcdir)/'`test/util/validation.cpp
	$(AM_V_at)$(am__mv) test/util/$(DEPDIR)/libtest_util_a-validation.Tpo test/util/$(DEPDIR)/libtest_util_a-validation.Po
#	$(AM_V_CXX)source='test/util/validation.cpp' object='test/util/libtest_util_a-validation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -c -o test/util/libtest_util_a-validation.o `test -f 'test/util/validation.cpp' || echo '$(srcdir)/'`test/util/validation.cpp

test/util/libtest_util_a-validation.obj: test/util/validation.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -MT test/util/libtest_util_a-validation.obj -MD -MP -MF test/util/$(DEPDIR)/libtest_util_a-validation.Tpo -c -o test/util/libtest_util_a-validation.obj `if test -f 'test/util/validation.cpp'; then $(CYGPATH_W) 'test/util/validation.cpp'; else $(CYGPATH_W) '$(srcdir)/test/util/validation.cpp'; fi`
	$(AM_V_at)$(am__mv) test/util/$(DEPDIR)/libtest_util_a-validation.Tpo test/util/$(DEPDIR)/libtest_util_a-validation.Po
#	$(AM_V_CXX)source='test/util/validation.cpp' object='test/util/libtest_util_a-validation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -c -o test/util/libtest_util_a-validation.obj `if test -f 'test/util/validation.cpp'; then $(CYGPATH_W) 'test/util/validation.cpp'; else $(CYGPATH_W) '$(srcdir)/test/util/validation.cpp'; fi`

test/util/libtest_util_a-wallet.o: test/util/wallet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -MT test/util/libtest_util_a-wallet.o -MD -MP -MF test/util/$(DEPDIR)/libtest_util_a-wallet.Tpo -c -o test/util/libtest_util_a-wallet.o `test -f 'test/util/wallet.cpp' || echo '$(srcdir)/'`test/util/wallet.cpp
	$(AM_V_at)$(am__mv) test/util/$(DEPDIR)/libtest_util_a-wallet.Tpo test/util/$(DEPDIR)/libtest_util_a-wallet.Po
#	$(AM_V_CXX)source='test/util/wallet.cpp' object='test/util/libtest_util_a-wallet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -c -o test/util/libtest_util_a-wallet.o `test -f 'test/util/wallet.cpp' || echo '$(srcdir)/'`test/util/wallet.cpp

test/util/libtest_util_a-wallet.obj: test/util/wallet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -MT test/util/libtest_util_a-wallet.obj -MD -MP -MF test/util/$(DEPDIR)/libtest_util_a-wallet.Tpo -c -o test/util/libtest_util_a-wallet.obj `if test -f 'test/util/wallet.cpp'; then $(CYGPATH_W) 'test/util/wallet.cpp'; else $(CYGPATH_W) '$(srcdir)/test/util/wallet.cpp'; fi`
	$(AM_V_at)$(am__mv) test/util/$(DEPDIR)/libtest_util_a-wallet.Tpo test/util/$(DEPDIR)/libtest_util_a-wallet.Po
#	$(AM_V_CXX)source='test/util/wallet.cpp' object='test/util/libtest_util_a-wallet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtest_util_a_CPPFLAGS) $(CPPFLAGS) $(libtest_util_a_CXXFLAGS) $(CXXFLAGS) -c -o test/util/libtest_util_a-wallet.obj `if test -f 'test/util/wallet.cpp'; then $(CYGPATH_W) 'test/util/wallet.cpp'; else $(CYGPATH_W) '$(srcdir)/test/util/wallet.cpp'; fi`

minisketch/src/fields/minisketch_libminisketch_a-generic_1byte.o: minisketch/src/fields/generic_1byte.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_a_CXXFLAGS) $(CXXFLAGS) -MT minisketch/src/fields/minisketch_libminisketch_a-generic_1byte.o -MD -MP -MF minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_a-generic_1byte.Tpo -c -o minisketch/src/fields/minisketch_libminisketch_a-generic_1byte.o `test -f 'minisketch/src/fields/generic_1byte.cpp' || echo '$(srcdir)/'`minisketch/src/fields/generic_1byte.cpp
	$(AM_V_at)$(am__mv) minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_a-generic_1byte.Tpo minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_a-generic_1byte.Po
#	$(AM_V_CXX)source='minisketch/src/fields/generic_1byte.cpp' object='minisketch/src/fields/minisketch_libminisketch_a-generic_1byte.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_a_CXXFLAGS) $(CXXFLAGS) -c -o minisketch/src/fields/minisketch_libminisketch_a-generic_1byte.o `test -f 'minisketch/src/fields/generic_1byte.cpp' || echo '$(srcdir)/'`minisketch/src/fields/generic_1byte.cpp

minisketch/src/fields/minisketch_libminisketch_a-generic_1byte.obj: minisketch/src/fields/generic_1byte.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_a_CXXFLAGS) $(CXXFLAGS) -MT minisketch/src/fields/minisketch_libminisketch_a-generic_1byte.obj -MD -MP -MF minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_a-generic_1byte.Tpo -c -o minisketch/src/fields/minisketch_libminisketch_a-generic_1byte.obj `if test -f 'minisketch/src/fields/generic_1byte.cpp'; then $(CYGPATH_W) 'minisketch/src/fields/generic_1byte.cpp'; else $(CYGPATH_W) '$(srcdir)/minisketch/src/fields/generic_1byte.cpp'; fi`
	$(AM_V_at)$(am__mv) minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_a-generic_1byte.Tpo minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_a-generic_1byte.Po
#	$(AM_V_CXX)source='minisketch/src/fields/generic_1byte.cpp' object='minisketch/src/fields/minisketch_libminisketch_a-generic_1byte.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_a_CXXFLAGS) $(CXXFLAGS) -c -o minisketch/src/fields/minisketch_libminisketch_a-generic_1byte.obj `if test -f 'minisketch/src/fields/generic_1byte.cpp'; then $(CYGPATH_W) 'minisketch/src/fields/generic_1byte.cpp'; else $(CYGPATH_W) '$(srcdir)/minisketch/src/fields/generic_1byte.cpp'; fi`

minisketch/src/fields/minisketch_libminisketch_a-generic_2bytes.o: minisketch/src/fields/generic_2bytes.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_a_CXXFLAGS) $(CXXFLAGS) -MT minisketch/src/fields/minisketch_libminisketch_a-generic_2bytes.o -MD -MP -MF minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_a-generic_2bytes.Tpo -c -o minisketch/src/fields/minisketch_libminisketch_a-generic_2bytes.o `test -f 'minisketch/src/fields/generic_2bytes.cpp' || echo '$(srcdir)/'`minisketch/src/fields/generic_2bytes.cpp
	$(AM_V_at)$(am__mv) minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_a-generic_2bytes.Tpo minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_a-generic_2bytes.Po
#	$(AM_V_CXX)source='minisketch/src/fields/generic_2bytes.cpp' object='minisketch/src/fields/minisketch_libminisketch_a-generic_2bytes.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_a_CXXFLAGS) $(CXXFLAGS) -c -o minisketch/src/fields/minisketch_libminisketch_a-generic_2bytes.o `test -f 'minisketch/src/fields/generic_2bytes.cpp' || echo '$(srcdir)/'`minisketch/src/fields/generic_2bytes.cpp

minisketch/src/fields/minisketch_libminisketch_a-generic_2bytes.obj: minisketch/src/fields/generic_2bytes.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_a_CXXFLAGS) $(CXXFLAGS) -MT minisketch/src/fields/minisketch_libminisketch_a-generic_2bytes.obj -MD -MP -MF minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_a-generic_2bytes.Tpo -c -o minisketch/src/fields/minisketch_libminisketch_a-generic_2bytes.obj `if test -f 'minisketch/src/fields/generic_2bytes.cpp'; then $(CYGPATH_W) 'minisketch/src/fields/generic_2bytes.cpp'; else $(CYGPATH_W) '$(srcdir)/minisketch/src/fields/generic_2bytes.cpp'; fi`
	$(AM_V_at)$(am__mv) minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_a-generic_2bytes.Tpo minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_a-generic_2bytes.Po
#	$(AM_V_CXX)source='minisketch/src/fields/generic_2bytes.cpp' object='minisketch/src/fields/minisketch_libminisketch_a-generic_2bytes.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_a_CXXFLAGS) $(CXXFLAGS) -c -o minisketch/src/fields/minisketch_libminisketch_a-generic_2bytes.obj `if test -f 'minisketch/src/fields/generic_2bytes.cpp'; then $(CYGPATH_W) 'minisketch/src/fields/generic_2bytes.cpp'; else $(CYGPATH_W) '$(srcdir)/minisketch/src/fields/generic_2bytes.cpp'; fi`

minisketch/src/fields/minisketch_libminisketch_a-generic_3bytes.o: minisketch/src/fields/generic_3bytes.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_a_CXXFLAGS) $(CXXFLAGS) -MT minisketch/src/fields/minisketch_libminisketch_a-generic_3bytes.o -MD -MP -MF minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_a-generic_3bytes.Tpo -c -o minisketch/src/fields/minisketch_libminisketch_a-generic_3bytes.o `test -f 'minisketch/src/fields/generic_3bytes.cpp' || echo '$(srcdir)/'`minisketch/src/fields/generic_3bytes.cpp
	$(AM_V_at)$(am__mv) minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_a-generic_3bytes.Tpo minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_a-generic_3bytes.Po
#	$(AM_V_CXX)source='minisketch/src/fields/generic_3bytes.cpp' object='minisketch/src/fields/minisketch_libminisketch_a-generic_3bytes.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_a_CXXFLAGS) $(CXXFLAGS) -c -o minisketch/src/fields/minisketch_libminisketch_a-generic_3bytes.o `test -f 'minisketch/src/fields/generic_3bytes.cpp' || echo '$(srcdir)/'`minisketch/src/fields/generic_3bytes.cpp

minisketch/src/fields/minisketch_libminisketch_a-generic_3bytes.obj: minisketch/src/fields/generic_3bytes.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_a_CXXFLAGS) $(CXXFLAGS) -MT minisketch/src/fields/minisketch_libminisketch_a-generic_3bytes.obj -MD -MP -MF minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_a-generic_3bytes.Tpo -c -o minisketch/src/fields/minisketch_libminisketch_a-generic_3bytes.obj `if test -f 'minisketch/src/fields/generic_3bytes.cpp'; then $(CYGPATH_W) 'minisketch/src/fields/generic_3bytes.cpp'; else $(CYGPATH_W) '$(srcdir)/minisketch/src/fields/generic_3bytes.cpp'; fi`
	$(AM_V_at)$(am__mv) minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_a-generic_3bytes.Tpo minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_a-generic_3bytes.Po
#	$(AM_V_CXX)source='minisketch/src/fields/generic_3bytes.cpp' object='minisketch/src/fields/minisketch_libminisketch_a-generic_3bytes.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_a_CXXFLAGS) $(CXXFLAGS) -c -o minisketch/src/fields/minisketch_libminisketch_a-generic_3bytes.obj `if test -f 'minisketch/src/fields/generic_3bytes.cpp'; then $(CYGPATH_W) 'minisketch/src/fields/generic_3bytes.cpp'; else $(CYGPATH_W) '$(srcdir)/minisketch/src/fields/generic_3bytes.cpp'; fi`

minisketch/src/fields/minisketch_libminisketch_a-generic_4bytes.o: minisketch/src/fields/generic_4bytes.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_a_CXXFLAGS) $(CXXFLAGS) -MT minisketch/src/fields/minisketch_libminisketch_a-generic_4bytes.o -MD -MP -MF minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_a-generic_4bytes.Tpo -c -o minisketch/src/fields/minisketch_libminisketch_a-generic_4bytes.o `test -f 'minisketch/src/fields/generic_4bytes.cpp' || echo '$(srcdir)/'`minisketch/src/fields/generic_4bytes.cpp
	$(AM_V_at)$(am__mv) minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_a-generic_4bytes.Tpo minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_a-generic_4bytes.Po
#	$(AM_V_CXX)source='minisketch/src/fields/generic_4bytes.cpp' object='minisketch/src/fields/minisketch_libminisketch_a-generic_4bytes.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_a_CXXFLAGS) $(CXXFLAGS) -c -o minisketch/src/fields/minisketch_libminisketch_a-generic_4bytes.o `test -f 'minisketch/src/fields/generic_4bytes.cpp' || echo '$(srcdir)/'`minisketch/src/fields/generic_4bytes.cpp

minisketch/src/fields/minisketch_libminisketch_a-generic_4bytes.obj: minisketch/src/fields/generic_4bytes.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_a_CXXFLAGS) $(CXXFLAGS) -MT minisketch/src/fields/minisketch_libminisketch_a-generic_4bytes.obj -MD -MP -MF minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_a-generic_4bytes.Tpo -c -o minisketch/src/fields/minisketch_libminisketch_a-generic_4bytes.obj `if test -f 'minisketch/src/fields/generic_4bytes.cpp'; then $(CYGPATH_W) 'minisketch/src/fields/generic_4bytes.cpp'; else $(CYGPATH_W) '$(srcdir)/minisketch/src/fields/generic_4bytes.cpp'; fi`
	$(AM_V_at)$(am__mv) minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_a-generic_4bytes.Tpo minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_a-generic_4bytes.Po
#	$(AM_V_CXX)source='minisketch/src/fields/generic_4bytes.cpp' object='minisketch/src/fields/minisketch_libminisketch_a-generic_4bytes.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_a_CXXFLAGS) $(CXXFLAGS) -c -o minisketch/src/fields/minisketch_libminisketch_a-generic_4bytes.obj `if test -f 'minisketch/src/fields/generic_4bytes.cpp'; then $(CYGPATH_W) 'minisketch/src/fields/generic_4bytes.cpp'; else $(CYGPATH_W) '$(srcdir)/minisketch/src/fields/generic_4bytes.cpp'; fi`

minisketch/src/fields/minisketch_libminisketch_a-generic_5bytes.o: minisketch/src/fields/generic_5bytes.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_a_CXXFLAGS) $(CXXFLAGS) -MT minisketch/src/fields/minisketch_libminisketch_a-generic_5bytes.o -MD -MP -MF minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_a-generic_5bytes.Tpo -c -o minisketch/src/fields/minisketch_libminisketch_a-generic_5bytes.o `test -f 'minisketch/src/fields/generic_5bytes.cpp' || echo '$(srcdir)/'`minisketch/src/fields/generic_5bytes.cpp
	$(AM_V_at)$(am__mv) minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_a-generic_5bytes.Tpo minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_a-generic_5bytes.Po
#	$(AM_V_CXX)source='minisketch/src/fields/generic_5bytes.cpp' object='minisketch/src/fields/minisketch_libminisketch_a-generic_5bytes.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_a_CXXFLAGS) $(CXXFLAGS) -c -o minisketch/src/fields/minisketch_libminisketch_a-generic_5bytes.o `test -f 'minisketch/src/fields/generic_5bytes.cpp' || echo '$(srcdir)/'`minisketch/src/fields/generic_5bytes.cpp

minisketch/src/fields/minisketch_libminisketch_a-generic_5bytes.obj: minisketch/src/fields/generic_5bytes.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_a_CXXFLAGS) $(CXXFLAGS) -MT minisketch/src/fields/minisketch_libminisketch_a-generic_5bytes.obj -MD -MP -MF minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_a-generic_5bytes.Tpo -c -o minisketch/src/fields/minisketch_libminisketch_a-generic_5bytes.obj `if test -f 'minisketch/src/fields/generic_5bytes.cpp'; then $(CYGPATH_W) 'minisketch/src/fields/generic_5bytes.cpp'; else $(CYGPATH_W) '$(srcdir)/minisketch/src/fields/generic_5bytes.cpp'; fi`
	$(AM_V_at)$(am__mv) minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_a-generic_5bytes.Tpo minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_a-generic_5bytes.Po
#	$(AM_V_CXX)source='minisketch/src/fields/generic_5bytes.cpp' object='minisketch/src/fields/minisketch_libminisketch_a-generic_5bytes.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_a_CXXFLAGS) $(CXXFLAGS) -c -o minisketch/src/fields/minisketch_libminisketch_a-generic_5bytes.obj `if test -f 'minisketch/src/fields/generic_5bytes.cpp'; then $(CYGPATH_W) 'minisketch/src/fields/generic_5bytes.cpp'; else $(CYGPATH_W) '$(srcdir)/minisketch/src/fields/generic_5bytes.cpp'; fi`

minisketch/src/fields/minisketch_libminisketch_a-generic_6bytes.o: minisketch/src/fields/generic_6bytes.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_a_CXXFLAGS) $(CXXFLAGS) -MT minisketch/src/fields/minisketch_libminisketch_a-generic_6bytes.o -MD -MP -MF minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_a-generic_6bytes.Tpo -c -o minisketch/src/fields/minisketch_libminisketch_a-generic_6bytes.o `test -f 'minisketch/src/fields/generic_6bytes.cpp' || echo '$(srcdir)/'`minisketch/src/fields/generic_6bytes.cpp
	$(AM_V_at)$(am__mv) minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_a-generic_6bytes.Tpo minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_a-generic_6bytes.Po
#	$(AM_V_CXX)source='minisketch/src/fields/generic_6bytes.cpp' object='minisketch/src/fields/minisketch_libminisketch_a-generic_6bytes.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_a_CXXFLAGS) $(CXXFLAGS) -c -o minisketch/src/fields/minisketch_libminisketch_a-generic_6bytes.o `test -f 'minisketch/src/fields/generic_6bytes.cpp' || echo '$(srcdir)/'`minisketch/src/fields/generic_6bytes.cpp

minisketch/src/fields/minisketch_libminisketch_a-generic_6bytes.obj: minisketch/src/fields/generic_6bytes.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_a_CXXFLAGS) $(CXXFLAGS) -MT minisketch/src/fields/minisketch_libminisketch_a-generic_6bytes.obj -MD -MP -MF minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_a-generic_6bytes.Tpo -c -o minisketch/src/fields/minisketch_libminisketch_a-generic_6bytes.obj `if test -f 'minisketch/src/fields/generic_6bytes.cpp'; then $(CYGPATH_W) 'minisketch/src/fields/generic_6bytes.cpp'; else $(CYGPATH_W) '$(srcdir)/minisketch/src/fields/generic_6bytes.cpp'; fi`
	$(AM_V_at)$(am__mv) minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_a-generic_6bytes.Tpo minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_a-generic_6bytes.Po
#	$(AM_V_CXX)source='minisketch/src/fields/generic_6bytes.cpp' object='minisketch/src/fields/minisketch_libminisketch_a-generic_6bytes.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_a_CXXFLAGS) $(CXXFLAGS) -c -o minisketch/src/fields/minisketch_libminisketch_a-generic_6bytes.obj `if test -f 'minisketch/src/fields/generic_6bytes.cpp'; then $(CYGPATH_W) 'minisketch/src/fields/generic_6bytes.cpp'; else $(CYGPATH_W) '$(srcdir)/minisketch/src/fields/generic_6bytes.cpp'; fi`

minisketch/src/fields/minisketch_libminisketch_a-generic_7bytes.o: minisketch/src/fields/generic_7bytes.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_a_CXXFLAGS) $(CXXFLAGS) -MT minisketch/src/fields/minisketch_libminisketch_a-generic_7bytes.o -MD -MP -MF minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_a-generic_7bytes.Tpo -c -o minisketch/src/fields/minisketch_libminisketch_a-generic_7bytes.o `test -f 'minisketch/src/fields/generic_7bytes.cpp' || echo '$(srcdir)/'`minisketch/src/fields/generic_7bytes.cpp
	$(AM_V_at)$(am__mv) minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_a-generic_7bytes.Tpo minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_a-generic_7bytes.Po
#	$(AM_V_CXX)source='minisketch/src/fields/generic_7bytes.cpp' object='minisketch/src/fields/minisketch_libminisketch_a-generic_7bytes.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_a_CXXFLAGS) $(CXXFLAGS) -c -o minisketch/src/fields/minisketch_libminisketch_a-generic_7bytes.o `test -f 'minisketch/src/fields/generic_7bytes.cpp' || echo '$(srcdir)/'`minisketch/src/fields/generic_7bytes.cpp

minisketch/src/fields/minisketch_libminisketch_a-generic_7bytes.obj: minisketch/src/fields/generic_7bytes.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_a_CXXFLAGS) $(CXXFLAGS) -MT minisketch/src/fields/minisketch_libminisketch_a-generic_7bytes.obj -MD -MP -MF minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_a-generic_7bytes.Tpo -c -o minisketch/src/fields/minisketch_libminisketch_a-generic_7bytes.obj `if test -f 'minisketch/src/fields/generic_7bytes.cpp'; then $(CYGPATH_W) 'minisketch/src/fields/generic_7bytes.cpp'; else $(CYGPATH_W) '$(srcdir)/minisketch/src/fields/generic_7bytes.cpp'; fi`
	$(AM_V_at)$(am__mv) minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_a-generic_7bytes.Tpo minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_a-generic_7bytes.Po
#	$(AM_V_CXX)source='minisketch/src/fields/generic_7bytes.cpp' object='minisketch/src/fields/minisketch_libminisketch_a-generic_7bytes.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_a_CXXFLAGS) $(CXXFLAGS) -c -o minisketch/src/fields/minisketch_libminisketch_a-generic_7bytes.obj `if test -f 'minisketch/src/fields/generic_7bytes.cpp'; then $(CYGPATH_W) 'minisketch/src/fields/generic_7bytes.cpp'; else $(CYGPATH_W) '$(srcdir)/minisketch/src/fields/generic_7bytes.cpp'; fi`

minisketch/src/fields/minisketch_libminisketch_a-generic_8bytes.o: minisketch/src/fields/generic_8bytes.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_a_CXXFLAGS) $(CXXFLAGS) -MT minisketch/src/fields/minisketch_libminisketch_a-generic_8bytes.o -MD -MP -MF minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_a-generic_8bytes.Tpo -c -o minisketch/src/fields/minisketch_libminisketch_a-generic_8bytes.o `test -f 'minisketch/src/fields/generic_8bytes.cpp' || echo '$(srcdir)/'`minisketch/src/fields/generic_8bytes.cpp
	$(AM_V_at)$(am__mv) minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_a-generic_8bytes.Tpo minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_a-generic_8bytes.Po
#	$(AM_V_CXX)source='minisketch/src/fields/generic_8bytes.cpp' object='minisketch/src/fields/minisketch_libminisketch_a-generic_8bytes.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_a_CXXFLAGS) $(CXXFLAGS) -c -o minisketch/src/fields/minisketch_libminisketch_a-generic_8bytes.o `test -f 'minisketch/src/fields/generic_8bytes.cpp' || echo '$(srcdir)/'`minisketch/src/fields/generic_8bytes.cpp

minisketch/src/fields/minisketch_libminisketch_a-generic_8bytes.obj: minisketch/src/fields/generic_8bytes.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_a_CXXFLAGS) $(CXXFLAGS) -MT minisketch/src/fields/minisketch_libminisketch_a-generic_8bytes.obj -MD -MP -MF minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_a-generic_8bytes.Tpo -c -o minisketch/src/fields/minisketch_libminisketch_a-generic_8bytes.obj `if test -f 'minisketch/src/fields/generic_8bytes.cpp'; then $(CYGPATH_W) 'minisketch/src/fields/generic_8bytes.cpp'; else $(CYGPATH_W) '$(srcdir)/minisketch/src/fields/generic_8bytes.cpp'; fi`
	$(AM_V_at)$(am__mv) minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_a-generic_8bytes.Tpo minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_a-generic_8bytes.Po
#	$(AM_V_CXX)source='minisketch/src/fields/generic_8bytes.cpp' object='minisketch/src/fields/minisketch_libminisketch_a-generic_8bytes.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_a_CXXFLAGS) $(CXXFLAGS) -c -o minisketch/src/fields/minisketch_libminisketch_a-generic_8bytes.obj `if test -f 'minisketch/src/fields/generic_8bytes.cpp'; then $(CYGPATH_W) 'minisketch/src/fields/generic_8bytes.cpp'; else $(CYGPATH_W) '$(srcdir)/minisketch/src/fields/generic_8bytes.cpp'; fi`

minisketch/src/minisketch_libminisketch_a-minisketch.o: minisketch/src/minisketch.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_a_CXXFLAGS) $(CXXFLAGS) -MT minisketch/src/minisketch_libminisketch_a-minisketch.o -MD -MP -MF minisketch/src/$(DEPDIR)/minisketch_libminisketch_a-minisketch.Tpo -c -o minisketch/src/minisketch_libminisketch_a-minisketch.o `test -f 'minisketch/src/minisketch.cpp' || echo '$(srcdir)/'`minisketch/src/minisketch.cpp
	$(AM_V_at)$(am__mv) minisketch/src/$(DEPDIR)/minisketch_libminisketch_a-minisketch.Tpo minisketch/src/$(DEPDIR)/minisketch_libminisketch_a-minisketch.Po
#	$(AM_V_CXX)source='minisketch/src/minisketch.cpp' object='minisketch/src/minisketch_libminisketch_a-minisketch.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_a_CXXFLAGS) $(CXXFLAGS) -c -o minisketch/src/minisketch_libminisketch_a-minisketch.o `test -f 'minisketch/src/minisketch.cpp' || echo '$(srcdir)/'`minisketch/src/minisketch.cpp

minisketch/src/minisketch_libminisketch_a-minisketch.obj: minisketch/src/minisketch.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_a_CXXFLAGS) $(CXXFLAGS) -MT minisketch/src/minisketch_libminisketch_a-minisketch.obj -MD -MP -MF minisketch/src/$(DEPDIR)/minisketch_libminisketch_a-minisketch.Tpo -c -o minisketch/src/minisketch_libminisketch_a-minisketch.obj `if test -f 'minisketch/src/minisketch.cpp'; then $(CYGPATH_W) 'minisketch/src/minisketch.cpp'; else $(CYGPATH_W) '$(srcdir)/minisketch/src/minisketch.cpp'; fi`
	$(AM_V_at)$(am__mv) minisketch/src/$(DEPDIR)/minisketch_libminisketch_a-minisketch.Tpo minisketch/src/$(DEPDIR)/minisketch_libminisketch_a-minisketch.Po
#	$(AM_V_CXX)source='minisketch/src/minisketch.cpp' object='minisketch/src/minisketch_libminisketch_a-minisketch.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_a_CXXFLAGS) $(CXXFLAGS) -c -o minisketch/src/minisketch_libminisketch_a-minisketch.obj `if test -f 'minisketch/src/minisketch.cpp'; then $(CYGPATH_W) 'minisketch/src/minisketch.cpp'; else $(CYGPATH_W) '$(srcdir)/minisketch/src/minisketch.cpp'; fi`

minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_1byte.o: minisketch/src/fields/clmul_1byte.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_clmul_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_clmul_a_CXXFLAGS) $(CXXFLAGS) -MT minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_1byte.o -MD -MP -MF minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_clmul_a-clmul_1byte.Tpo -c -o minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_1byte.o `test -f 'minisketch/src/fields/clmul_1byte.cpp' || echo '$(srcdir)/'`minisketch/src/fields/clmul_1byte.cpp
	$(AM_V_at)$(am__mv) minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_clmul_a-clmul_1byte.Tpo minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_clmul_a-clmul_1byte.Po
#	$(AM_V_CXX)source='minisketch/src/fields/clmul_1byte.cpp' object='minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_1byte.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_clmul_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_clmul_a_CXXFLAGS) $(CXXFLAGS) -c -o minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_1byte.o `test -f 'minisketch/src/fields/clmul_1byte.cpp' || echo '$(srcdir)/'`minisketch/src/fields/clmul_1byte.cpp

minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_1byte.obj: minisketch/src/fields/clmul_1byte.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_clmul_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_clmul_a_CXXFLAGS) $(CXXFLAGS) -MT minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_1byte.obj -MD -MP -MF minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_clmul_a-clmul_1byte.Tpo -c -o minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_1byte.obj `if test -f 'minisketch/src/fields/clmul_1byte.cpp'; then $(CYGPATH_W) 'minisketch/src/fields/clmul_1byte.cpp'; else $(CYGPATH_W) '$(srcdir)/minisketch/src/fields/clmul_1byte.cpp'; fi`
	$(AM_V_at)$(am__mv) minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_clmul_a-clmul_1byte.Tpo minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_clmul_a-clmul_1byte.Po
#	$(AM_V_CXX)source='minisketch/src/fields/clmul_1byte.cpp' object='minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_1byte.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_clmul_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_clmul_a_CXXFLAGS) $(CXXFLAGS) -c -o minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_1byte.obj `if test -f 'minisketch/src/fields/clmul_1byte.cpp'; then $(CYGPATH_W) 'minisketch/src/fields/clmul_1byte.cpp'; else $(CYGPATH_W) '$(srcdir)/minisketch/src/fields/clmul_1byte.cpp'; fi`

minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_2bytes.o: minisketch/src/fields/clmul_2bytes.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_clmul_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_clmul_a_CXXFLAGS) $(CXXFLAGS) -MT minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_2bytes.o -MD -MP -MF minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_clmul_a-clmul_2bytes.Tpo -c -o minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_2bytes.o `test -f 'minisketch/src/fields/clmul_2bytes.cpp' || echo '$(srcdir)/'`minisketch/src/fields/clmul_2bytes.cpp
	$(AM_V_at)$(am__mv) minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_clmul_a-clmul_2bytes.Tpo minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_clmul_a-clmul_2bytes.Po
#	$(AM_V_CXX)source='minisketch/src/fields/clmul_2bytes.cpp' object='minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_2bytes.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_clmul_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_clmul_a_CXXFLAGS) $(CXXFLAGS) -c -o minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_2bytes.o `test -f 'minisketch/src/fields/clmul_2bytes.cpp' || echo '$(srcdir)/'`minisketch/src/fields/clmul_2bytes.cpp

minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_2bytes.obj: minisketch/src/fields/clmul_2bytes.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_clmul_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_clmul_a_CXXFLAGS) $(CXXFLAGS) -MT minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_2bytes.obj -MD -MP -MF minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_clmul_a-clmul_2bytes.Tpo -c -o minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_2bytes.obj `if test -f 'minisketch/src/fields/clmul_2bytes.cpp'; then $(CYGPATH_W) 'minisketch/src/fields/clmul_2bytes.cpp'; else $(CYGPATH_W) '$(srcdir)/minisketch/src/fields/clmul_2bytes.cpp'; fi`
	$(AM_V_at)$(am__mv) minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_clmul_a-clmul_2bytes.Tpo minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_clmul_a-clmul_2bytes.Po
#	$(AM_V_CXX)source='minisketch/src/fields/clmul_2bytes.cpp' object='minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_2bytes.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_clmul_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_clmul_a_CXXFLAGS) $(CXXFLAGS) -c -o minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_2bytes.obj `if test -f 'minisketch/src/fields/clmul_2bytes.cpp'; then $(CYGPATH_W) 'minisketch/src/fields/clmul_2bytes.cpp'; else $(CYGPATH_W) '$(srcdir)/minisketch/src/fields/clmul_2bytes.cpp'; fi`

minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_3bytes.o: minisketch/src/fields/clmul_3bytes.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_clmul_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_clmul_a_CXXFLAGS) $(CXXFLAGS) -MT minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_3bytes.o -MD -MP -MF minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_clmul_a-clmul_3bytes.Tpo -c -o minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_3bytes.o `test -f 'minisketch/src/fields/clmul_3bytes.cpp' || echo '$(srcdir)/'`minisketch/src/fields/clmul_3bytes.cpp
	$(AM_V_at)$(am__mv) minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_clmul_a-clmul_3bytes.Tpo minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_clmul_a-clmul_3bytes.Po
#	$(AM_V_CXX)source='minisketch/src/fields/clmul_3bytes.cpp' object='minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_3bytes.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_clmul_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_clmul_a_CXXFLAGS) $(CXXFLAGS) -c -o minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_3bytes.o `test -f 'minisketch/src/fields/clmul_3bytes.cpp' || echo '$(srcdir)/'`minisketch/src/fields/clmul_3bytes.cpp

minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_3bytes.obj: minisketch/src/fields/clmul_3bytes.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_clmul_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_clmul_a_CXXFLAGS) $(CXXFLAGS) -MT minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_3bytes.obj -MD -MP -MF minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_clmul_a-clmul_3bytes.Tpo -c -o minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_3bytes.obj `if test -f 'minisketch/src/fields/clmul_3bytes.cpp'; then $(CYGPATH_W) 'minisketch/src/fields/clmul_3bytes.cpp'; else $(CYGPATH_W) '$(srcdir)/minisketch/src/fields/clmul_3bytes.cpp'; fi`
	$(AM_V_at)$(am__mv) minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_clmul_a-clmul_3bytes.Tpo minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_clmul_a-clmul_3bytes.Po
#	$(AM_V_CXX)source='minisketch/src/fields/clmul_3bytes.cpp' object='minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_3bytes.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_clmul_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_clmul_a_CXXFLAGS) $(CXXFLAGS) -c -o minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_3bytes.obj `if test -f 'minisketch/src/fields/clmul_3bytes.cpp'; then $(CYGPATH_W) 'minisketch/src/fields/clmul_3bytes.cpp'; else $(CYGPATH_W) '$(srcdir)/minisketch/src/fields/clmul_3bytes.cpp'; fi`

minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_4bytes.o: minisketch/src/fields/clmul_4bytes.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_clmul_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_clmul_a_CXXFLAGS) $(CXXFLAGS) -MT minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_4bytes.o -MD -MP -MF minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_clmul_a-clmul_4bytes.Tpo -c -o minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_4bytes.o `test -f 'minisketch/src/fields/clmul_4bytes.cpp' || echo '$(srcdir)/'`minisketch/src/fields/clmul_4bytes.cpp
	$(AM_V_at)$(am__mv) minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_clmul_a-clmul_4bytes.Tpo minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_clmul_a-clmul_4bytes.Po
#	$(AM_V_CXX)source='minisketch/src/fields/clmul_4bytes.cpp' object='minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_4bytes.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_clmul_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_clmul_a_CXXFLAGS) $(CXXFLAGS) -c -o minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_4bytes.o `test -f 'minisketch/src/fields/clmul_4bytes.cpp' || echo '$(srcdir)/'`minisketch/src/fields/clmul_4bytes.cpp

minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_4bytes.obj: minisketch/src/fields/clmul_4bytes.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_clmul_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_clmul_a_CXXFLAGS) $(CXXFLAGS) -MT minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_4bytes.obj -MD -MP -MF minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_clmul_a-clmul_4bytes.Tpo -c -o minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_4bytes.obj `if test -f 'minisketch/src/fields/clmul_4bytes.cpp'; then $(CYGPATH_W) 'minisketch/src/fields/clmul_4bytes.cpp'; else $(CYGPATH_W) '$(srcdir)/minisketch/src/fields/clmul_4bytes.cpp'; fi`
	$(AM_V_at)$(am__mv) minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_clmul_a-clmul_4bytes.Tpo minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_clmul_a-clmul_4bytes.Po
#	$(AM_V_CXX)source='minisketch/src/fields/clmul_4bytes.cpp' object='minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_4bytes.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_clmul_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_clmul_a_CXXFLAGS) $(CXXFLAGS) -c -o minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_4bytes.obj `if test -f 'minisketch/src/fields/clmul_4bytes.cpp'; then $(CYGPATH_W) 'minisketch/src/fields/clmul_4bytes.cpp'; else $(CYGPATH_W) '$(srcdir)/minisketch/src/fields/clmul_4bytes.cpp'; fi`

minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_5bytes.o: minisketch/src/fields/clmul_5bytes.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_clmul_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_clmul_a_CXXFLAGS) $(CXXFLAGS) -MT minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_5bytes.o -MD -MP -MF minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_clmul_a-clmul_5bytes.Tpo -c -o minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_5bytes.o `test -f 'minisketch/src/fields/clmul_5bytes.cpp' || echo '$(srcdir)/'`minisketch/src/fields/clmul_5bytes.cpp
	$(AM_V_at)$(am__mv) minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_clmul_a-clmul_5bytes.Tpo minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_clmul_a-clmul_5bytes.Po
#	$(AM_V_CXX)source='minisketch/src/fields/clmul_5bytes.cpp' object='minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_5bytes.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_clmul_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_clmul_a_CXXFLAGS) $(CXXFLAGS) -c -o minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_5bytes.o `test -f 'minisketch/src/fields/clmul_5bytes.cpp' || echo '$(srcdir)/'`minisketch/src/fields/clmul_5bytes.cpp

minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_5bytes.obj: minisketch/src/fields/clmul_5bytes.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_clmul_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_clmul_a_CXXFLAGS) $(CXXFLAGS) -MT minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_5bytes.obj -MD -MP -MF minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_clmul_a-clmul_5bytes.Tpo -c -o minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_5bytes.obj `if test -f 'minisketch/src/fields/clmul_5bytes.cpp'; then $(CYGPATH_W) 'minisketch/src/fields/clmul_5bytes.cpp'; else $(CYGPATH_W) '$(srcdir)/minisketch/src/fields/clmul_5bytes.cpp'; fi`
	$(AM_V_at)$(am__mv) minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_clmul_a-clmul_5bytes.Tpo minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_clmul_a-clmul_5bytes.Po
#	$(AM_V_CXX)source='minisketch/src/fields/clmul_5bytes.cpp' object='minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_5bytes.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_clmul_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_clmul_a_CXXFLAGS) $(CXXFLAGS) -c -o minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_5bytes.obj `if test -f 'minisketch/src/fields/clmul_5bytes.cpp'; then $(CYGPATH_W) 'minisketch/src/fields/clmul_5bytes.cpp'; else $(CYGPATH_W) '$(srcdir)/minisketch/src/fields/clmul_5bytes.cpp'; fi`

minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_6bytes.o: minisketch/src/fields/clmul_6bytes.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_clmul_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_clmul_a_CXXFLAGS) $(CXXFLAGS) -MT minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_6bytes.o -MD -MP -MF minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_clmul_a-clmul_6bytes.Tpo -c -o minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_6bytes.o `test -f 'minisketch/src/fields/clmul_6bytes.cpp' || echo '$(srcdir)/'`minisketch/src/fields/clmul_6bytes.cpp
	$(AM_V_at)$(am__mv) minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_clmul_a-clmul_6bytes.Tpo minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_clmul_a-clmul_6bytes.Po
#	$(AM_V_CXX)source='minisketch/src/fields/clmul_6bytes.cpp' object='minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_6bytes.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_clmul_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_clmul_a_CXXFLAGS) $(CXXFLAGS) -c -o minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_6bytes.o `test -f 'minisketch/src/fields/clmul_6bytes.cpp' || echo '$(srcdir)/'`minisketch/src/fields/clmul_6bytes.cpp

minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_6bytes.obj: minisketch/src/fields/clmul_6bytes.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_clmul_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_clmul_a_CXXFLAGS) $(CXXFLAGS) -MT minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_6bytes.obj -MD -MP -MF minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_clmul_a-clmul_6bytes.Tpo -c -o minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_6bytes.obj `if test -f 'minisketch/src/fields/clmul_6bytes.cpp'; then $(CYGPATH_W) 'minisketch/src/fields/clmul_6bytes.cpp'; else $(CYGPATH_W) '$(srcdir)/minisketch/src/fields/clmul_6bytes.cpp'; fi`
	$(AM_V_at)$(am__mv) minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_clmul_a-clmul_6bytes.Tpo minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_clmul_a-clmul_6bytes.Po
#	$(AM_V_CXX)source='minisketch/src/fields/clmul_6bytes.cpp' object='minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_6bytes.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_clmul_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_clmul_a_CXXFLAGS) $(CXXFLAGS) -c -o minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_6bytes.obj `if test -f 'minisketch/src/fields/clmul_6bytes.cpp'; then $(CYGPATH_W) 'minisketch/src/fields/clmul_6bytes.cpp'; else $(CYGPATH_W) '$(srcdir)/minisketch/src/fields/clmul_6bytes.cpp'; fi`

minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_7bytes.o: minisketch/src/fields/clmul_7bytes.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_clmul_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_clmul_a_CXXFLAGS) $(CXXFLAGS) -MT minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_7bytes.o -MD -MP -MF minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_clmul_a-clmul_7bytes.Tpo -c -o minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_7bytes.o `test -f 'minisketch/src/fields/clmul_7bytes.cpp' || echo '$(srcdir)/'`minisketch/src/fields/clmul_7bytes.cpp
	$(AM_V_at)$(am__mv) minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_clmul_a-clmul_7bytes.Tpo minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_clmul_a-clmul_7bytes.Po
#	$(AM_V_CXX)source='minisketch/src/fields/clmul_7bytes.cpp' object='minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_7bytes.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_clmul_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_clmul_a_CXXFLAGS) $(CXXFLAGS) -c -o minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_7bytes.o `test -f 'minisketch/src/fields/clmul_7bytes.cpp' || echo '$(srcdir)/'`minisketch/src/fields/clmul_7bytes.cpp

minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_7bytes.obj: minisketch/src/fields/clmul_7bytes.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_clmul_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_clmul_a_CXXFLAGS) $(CXXFLAGS) -MT minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_7bytes.obj -MD -MP -MF minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_clmul_a-clmul_7bytes.Tpo -c -o minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_7bytes.obj `if test -f 'minisketch/src/fields/clmul_7bytes.cpp'; then $(CYGPATH_W) 'minisketch/src/fields/clmul_7bytes.cpp'; else $(CYGPATH_W) '$(srcdir)/minisketch/src/fields/clmul_7bytes.cpp'; fi`
	$(AM_V_at)$(am__mv) minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_clmul_a-clmul_7bytes.Tpo minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_clmul_a-clmul_7bytes.Po
#	$(AM_V_CXX)source='minisketch/src/fields/clmul_7bytes.cpp' object='minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_7bytes.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_clmul_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_clmul_a_CXXFLAGS) $(CXXFLAGS) -c -o minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_7bytes.obj `if test -f 'minisketch/src/fields/clmul_7bytes.cpp'; then $(CYGPATH_W) 'minisketch/src/fields/clmul_7bytes.cpp'; else $(CYGPATH_W) '$(srcdir)/minisketch/src/fields/clmul_7bytes.cpp'; fi`

minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_8bytes.o: minisketch/src/fields/clmul_8bytes.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_clmul_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_clmul_a_CXXFLAGS) $(CXXFLAGS) -MT minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_8bytes.o -MD -MP -MF minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_clmul_a-clmul_8bytes.Tpo -c -o minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_8bytes.o `test -f 'minisketch/src/fields/clmul_8bytes.cpp' || echo '$(srcdir)/'`minisketch/src/fields/clmul_8bytes.cpp
	$(AM_V_at)$(am__mv) minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_clmul_a-clmul_8bytes.Tpo minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_clmul_a-clmul_8bytes.Po
#	$(AM_V_CXX)source='minisketch/src/fields/clmul_8bytes.cpp' object='minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_8bytes.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_clmul_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_clmul_a_CXXFLAGS) $(CXXFLAGS) -c -o minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_8bytes.o `test -f 'minisketch/src/fields/clmul_8bytes.cpp' || echo '$(srcdir)/'`minisketch/src/fields/clmul_8bytes.cpp

minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_8bytes.obj: minisketch/src/fields/clmul_8bytes.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_clmul_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_clmul_a_CXXFLAGS) $(CXXFLAGS) -MT minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_8bytes.obj -MD -MP -MF minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_clmul_a-clmul_8bytes.Tpo -c -o minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_8bytes.obj `if test -f 'minisketch/src/fields/clmul_8bytes.cpp'; then $(CYGPATH_W) 'minisketch/src/fields/clmul_8bytes.cpp'; else $(CYGPATH_W) '$(srcdir)/minisketch/src/fields/clmul_8bytes.cpp'; fi`
	$(AM_V_at)$(am__mv) minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_clmul_a-clmul_8bytes.Tpo minisketch/src/fields/$(DEPDIR)/minisketch_libminisketch_clmul_a-clmul_8bytes.Po
#	$(AM_V_CXX)source='minisketch/src/fields/clmul_8bytes.cpp' object='minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_8bytes.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_libminisketch_clmul_a_CPPFLAGS) $(CPPFLAGS) $(minisketch_libminisketch_clmul_a_CXXFLAGS) $(CXXFLAGS) -c -o minisketch/src/fields/minisketch_libminisketch_clmul_a-clmul_8bytes.obj `if test -f 'minisketch/src/fields/clmul_8bytes.cpp'; then $(CYGPATH_W) 'minisketch/src/fields/clmul_8bytes.cpp'; else $(CYGPATH_W) '$(srcdir)/minisketch/src/fields/clmul_8bytes.cpp'; fi`

qt/qt_libbitcoinqt_a-bantablemodel.o: qt/bantablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-bantablemodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-bantablemodel.Tpo -c -o qt/qt_libbitcoinqt_a-bantablemodel.o `test -f 'qt/bantablemodel.cpp' || echo '$(srcdir)/'`qt/bantablemodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-bantablemodel.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-bantablemodel.Po
#	$(AM_V_CXX)source='qt/bantablemodel.cpp' object='qt/qt_libbitcoinqt_a-bantablemodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-bantablemodel.o `test -f 'qt/bantablemodel.cpp' || echo '$(srcdir)/'`qt/bantablemodel.cpp

qt/qt_libbitcoinqt_a-bantablemodel.obj: qt/bantablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-bantablemodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-bantablemodel.Tpo -c -o qt/qt_libbitcoinqt_a-bantablemodel.obj `if test -f 'qt/bantablemodel.cpp'; then $(CYGPATH_W) 'qt/bantablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bantablemodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-bantablemodel.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-bantablemodel.Po
#	$(AM_V_CXX)source='qt/bantablemodel.cpp' object='qt/qt_libbitcoinqt_a-bantablemodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-bantablemodel.obj `if test -f 'qt/bantablemodel.cpp'; then $(CYGPATH_W) 'qt/bantablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bantablemodel.cpp'; fi`

qt/qt_libbitcoinqt_a-bitcoin.o: qt/bitcoin.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-bitcoin.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoin.Tpo -c -o qt/qt_libbitcoinqt_a-bitcoin.o `test -f 'qt/bitcoin.cpp' || echo '$(srcdir)/'`qt/bitcoin.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoin.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoin.Po
#	$(AM_V_CXX)source='qt/bitcoin.cpp' object='qt/qt_libbitcoinqt_a-bitcoin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-bitcoin.o `test -f 'qt/bitcoin.cpp' || echo '$(srcdir)/'`qt/bitcoin.cpp

qt/qt_libbitcoinqt_a-bitcoin.obj: qt/bitcoin.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-bitcoin.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoin.Tpo -c -o qt/qt_libbitcoinqt_a-bitcoin.obj `if test -f 'qt/bitcoin.cpp'; then $(CYGPATH_W) 'qt/bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitcoin.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoin.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoin.Po
#	$(AM_V_CXX)source='qt/bitcoin.cpp' object='qt/qt_libbitcoinqt_a-bitcoin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-bitcoin.obj `if test -f 'qt/bitcoin.cpp'; then $(CYGPATH_W) 'qt/bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitcoin.cpp'; fi`

qt/qt_libbitcoinqt_a-bitcoinaddressvalidator.o: qt/bitcoinaddressvalidator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-bitcoinaddressvalidator.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoinaddressvalidator.Tpo -c -o qt/qt_libbitcoinqt_a-bitcoinaddressvalidator.o `test -f 'qt/bitcoinaddressvalidator.cpp' || echo '$(srcdir)/'`qt/bitcoinaddressvalidator.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoinaddressvalidator.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoinaddressvalidator.Po
#	$(AM_V_CXX)source='qt/bitcoinaddressvalidator.cpp' object='qt/qt_libbitcoinqt_a-bitcoinaddressvalidator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-bitcoinaddressvalidator.o `test -f 'qt/bitcoinaddressvalidator.cpp' || echo '$(srcdir)/'`qt/bitcoinaddressvalidator.cpp

qt/qt_libbitcoinqt_a-bitcoinaddressvalidator.obj: qt/bitcoinaddressvalidator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-bitcoinaddressvalidator.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoinaddressvalidator.Tpo -c -o qt/qt_libbitcoinqt_a-bitcoinaddressvalidator.obj `if test -f 'qt/bitcoinaddressvalidator.cpp'; then $(CYGPATH_W) 'qt/bitcoinaddressvalidator.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitcoinaddressvalidator.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoinaddressvalidator.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoinaddressvalidator.Po
#	$(AM_V_CXX)source='qt/bitcoinaddressvalidator.cpp' object='qt/qt_libbitcoinqt_a-bitcoinaddressvalidator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-bitcoinaddressvalidator.obj `if test -f 'qt/bitcoinaddressvalidator.cpp'; then $(CYGPATH_W) 'qt/bitcoinaddressvalidator.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitcoinaddressvalidator.cpp'; fi`

qt/qt_libbitcoinqt_a-bitcoinamountfield.o: qt/bitcoinamountfield.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-bitcoinamountfield.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoinamountfield.Tpo -c -o qt/qt_libbitcoinqt_a-bitcoinamountfield.o `test -f 'qt/bitcoinamountfield.cpp' || echo '$(srcdir)/'`qt/bitcoinamountfield.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoinamountfield.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoinamountfield.Po
#	$(AM_V_CXX)source='qt/bitcoinamountfield.cpp' object='qt/qt_libbitcoinqt_a-bitcoinamountfield.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-bitcoinamountfield.o `test -f 'qt/bitcoinamountfield.cpp' || echo '$(srcdir)/'`qt/bitcoinamountfield.cpp

qt/qt_libbitcoinqt_a-bitcoinamountfield.obj: qt/bitcoinamountfield.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-bitcoinamountfield.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoinamountfield.Tpo -c -o qt/qt_libbitcoinqt_a-bitcoinamountfield.obj `if test -f 'qt/bitcoinamountfield.cpp'; then $(CYGPATH_W) 'qt/bitcoinamountfield.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitcoinamountfield.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoinamountfield.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoinamountfield.Po
#	$(AM_V_CXX)source='qt/bitcoinamountfield.cpp' object='qt/qt_libbitcoinqt_a-bitcoinamountfield.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-bitcoinamountfield.obj `if test -f 'qt/bitcoinamountfield.cpp'; then $(CYGPATH_W) 'qt/bitcoinamountfield.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitcoinamountfield.cpp'; fi`

qt/qt_libbitcoinqt_a-bitcoingui.o: qt/bitcoingui.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-bitcoingui.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoingui.Tpo -c -o qt/qt_libbitcoinqt_a-bitcoingui.o `test -f 'qt/bitcoingui.cpp' || echo '$(srcdir)/'`qt/bitcoingui.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoingui.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoingui.Po
#	$(AM_V_CXX)source='qt/bitcoingui.cpp' object='qt/qt_libbitcoinqt_a-bitcoingui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-bitcoingui.o `test -f 'qt/bitcoingui.cpp' || echo '$(srcdir)/'`qt/bitcoingui.cpp

qt/qt_libbitcoinqt_a-bitcoingui.obj: qt/bitcoingui.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-bitcoingui.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoingui.Tpo -c -o qt/qt_libbitcoinqt_a-bitcoingui.obj `if test -f 'qt/bitcoingui.cpp'; then $(CYGPATH_W) 'qt/bitcoingui.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitcoingui.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoingui.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoingui.Po
#	$(AM_V_CXX)source='qt/bitcoingui.cpp' object='qt/qt_libbitcoinqt_a-bitcoingui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-bitcoingui.obj `if test -f 'qt/bitcoingui.cpp'; then $(CYGPATH_W) 'qt/bitcoingui.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitcoingui.cpp'; fi`

qt/qt_libbitcoinqt_a-bitcoinunits.o: qt/bitcoinunits.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-bitcoinunits.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoinunits.Tpo -c -o qt/qt_libbitcoinqt_a-bitcoinunits.o `test -f 'qt/bitcoinunits.cpp' || echo '$(srcdir)/'`qt/bitcoinunits.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoinunits.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoinunits.Po
#	$(AM_V_CXX)source='qt/bitcoinunits.cpp' object='qt/qt_libbitcoinqt_a-bitcoinunits.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-bitcoinunits.o `test -f 'qt/bitcoinunits.cpp' || echo '$(srcdir)/'`qt/bitcoinunits.cpp

qt/qt_libbitcoinqt_a-bitcoinunits.obj: qt/bitcoinunits.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-bitcoinunits.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoinunits.Tpo -c -o qt/qt_libbitcoinqt_a-bitcoinunits.obj `if test -f 'qt/bitcoinunits.cpp'; then $(CYGPATH_W) 'qt/bitcoinunits.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitcoinunits.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoinunits.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-bitcoinunits.Po
#	$(AM_V_CXX)source='qt/bitcoinunits.cpp' object='qt/qt_libbitcoinqt_a-bitcoinunits.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-bitcoinunits.obj `if test -f 'qt/bitcoinunits.cpp'; then $(CYGPATH_W) 'qt/bitcoinunits.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/bitcoinunits.cpp'; fi`

qt/qt_libbitcoinqt_a-clientmodel.o: qt/clientmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-clientmodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-clientmodel.Tpo -c -o qt/qt_libbitcoinqt_a-clientmodel.o `test -f 'qt/clientmodel.cpp' || echo '$(srcdir)/'`qt/clientmodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-clientmodel.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-clientmodel.Po
#	$(AM_V_CXX)source='qt/clientmodel.cpp' object='qt/qt_libbitcoinqt_a-clientmodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-clientmodel.o `test -f 'qt/clientmodel.cpp' || echo '$(srcdir)/'`qt/clientmodel.cpp

qt/qt_libbitcoinqt_a-clientmodel.obj: qt/clientmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-clientmodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-clientmodel.Tpo -c -o qt/qt_libbitcoinqt_a-clientmodel.obj `if test -f 'qt/clientmodel.cpp'; then $(CYGPATH_W) 'qt/clientmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/clientmodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-clientmodel.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-clientmodel.Po
#	$(AM_V_CXX)source='qt/clientmodel.cpp' object='qt/qt_libbitcoinqt_a-clientmodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-clientmodel.obj `if test -f 'qt/clientmodel.cpp'; then $(CYGPATH_W) 'qt/clientmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/clientmodel.cpp'; fi`

qt/qt_libbitcoinqt_a-csvmodelwriter.o: qt/csvmodelwriter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-csvmodelwriter.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-csvmodelwriter.Tpo -c -o qt/qt_libbitcoinqt_a-csvmodelwriter.o `test -f 'qt/csvmodelwriter.cpp' || echo '$(srcdir)/'`qt/csvmodelwriter.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-csvmodelwriter.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-csvmodelwriter.Po
#	$(AM_V_CXX)source='qt/csvmodelwriter.cpp' object='qt/qt_libbitcoinqt_a-csvmodelwriter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-csvmodelwriter.o `test -f 'qt/csvmodelwriter.cpp' || echo '$(srcdir)/'`qt/csvmodelwriter.cpp

qt/qt_libbitcoinqt_a-csvmodelwriter.obj: qt/csvmodelwriter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-csvmodelwriter.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-csvmodelwriter.Tpo -c -o qt/qt_libbitcoinqt_a-csvmodelwriter.obj `if test -f 'qt/csvmodelwriter.cpp'; then $(CYGPATH_W) 'qt/csvmodelwriter.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/csvmodelwriter.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-csvmodelwriter.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-csvmodelwriter.Po
#	$(AM_V_CXX)source='qt/csvmodelwriter.cpp' object='qt/qt_libbitcoinqt_a-csvmodelwriter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-csvmodelwriter.obj `if test -f 'qt/csvmodelwriter.cpp'; then $(CYGPATH_W) 'qt/csvmodelwriter.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/csvmodelwriter.cpp'; fi`

qt/qt_libbitcoinqt_a-guiutil.o: qt/guiutil.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-guiutil.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-guiutil.Tpo -c -o qt/qt_libbitcoinqt_a-guiutil.o `test -f 'qt/guiutil.cpp' || echo '$(srcdir)/'`qt/guiutil.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-guiutil.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-guiutil.Po
#	$(AM_V_CXX)source='qt/guiutil.cpp' object='qt/qt_libbitcoinqt_a-guiutil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-guiutil.o `test -f 'qt/guiutil.cpp' || echo '$(srcdir)/'`qt/guiutil.cpp

qt/qt_libbitcoinqt_a-guiutil.obj: qt/guiutil.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-guiutil.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-guiutil.Tpo -c -o qt/qt_libbitcoinqt_a-guiutil.obj `if test -f 'qt/guiutil.cpp'; then $(CYGPATH_W) 'qt/guiutil.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/guiutil.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-guiutil.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-guiutil.Po
#	$(AM_V_CXX)source='qt/guiutil.cpp' object='qt/qt_libbitcoinqt_a-guiutil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-guiutil.obj `if test -f 'qt/guiutil.cpp'; then $(CYGPATH_W) 'qt/guiutil.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/guiutil.cpp'; fi`

qt/qt_libbitcoinqt_a-initexecutor.o: qt/initexecutor.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-initexecutor.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-initexecutor.Tpo -c -o qt/qt_libbitcoinqt_a-initexecutor.o `test -f 'qt/initexecutor.cpp' || echo '$(srcdir)/'`qt/initexecutor.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-initexecutor.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-initexecutor.Po
#	$(AM_V_CXX)source='qt/initexecutor.cpp' object='qt/qt_libbitcoinqt_a-initexecutor.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-initexecutor.o `test -f 'qt/initexecutor.cpp' || echo '$(srcdir)/'`qt/initexecutor.cpp

qt/qt_libbitcoinqt_a-initexecutor.obj: qt/initexecutor.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-initexecutor.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-initexecutor.Tpo -c -o qt/qt_libbitcoinqt_a-initexecutor.obj `if test -f 'qt/initexecutor.cpp'; then $(CYGPATH_W) 'qt/initexecutor.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/initexecutor.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-initexecutor.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-initexecutor.Po
#	$(AM_V_CXX)source='qt/initexecutor.cpp' object='qt/qt_libbitcoinqt_a-initexecutor.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-initexecutor.obj `if test -f 'qt/initexecutor.cpp'; then $(CYGPATH_W) 'qt/initexecutor.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/initexecutor.cpp'; fi`

qt/qt_libbitcoinqt_a-intro.o: qt/intro.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-intro.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-intro.Tpo -c -o qt/qt_libbitcoinqt_a-intro.o `test -f 'qt/intro.cpp' || echo '$(srcdir)/'`qt/intro.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-intro.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-intro.Po
#	$(AM_V_CXX)source='qt/intro.cpp' object='qt/qt_libbitcoinqt_a-intro.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-intro.o `test -f 'qt/intro.cpp' || echo '$(srcdir)/'`qt/intro.cpp

qt/qt_libbitcoinqt_a-intro.obj: qt/intro.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-intro.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-intro.Tpo -c -o qt/qt_libbitcoinqt_a-intro.obj `if test -f 'qt/intro.cpp'; then $(CYGPATH_W) 'qt/intro.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/intro.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-intro.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-intro.Po
#	$(AM_V_CXX)source='qt/intro.cpp' object='qt/qt_libbitcoinqt_a-intro.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-intro.obj `if test -f 'qt/intro.cpp'; then $(CYGPATH_W) 'qt/intro.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/intro.cpp'; fi`

qt/qt_libbitcoinqt_a-modaloverlay.o: qt/modaloverlay.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-modaloverlay.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-modaloverlay.Tpo -c -o qt/qt_libbitcoinqt_a-modaloverlay.o `test -f 'qt/modaloverlay.cpp' || echo '$(srcdir)/'`qt/modaloverlay.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-modaloverlay.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-modaloverlay.Po
#	$(AM_V_CXX)source='qt/modaloverlay.cpp' object='qt/qt_libbitcoinqt_a-modaloverlay.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-modaloverlay.o `test -f 'qt/modaloverlay.cpp' || echo '$(srcdir)/'`qt/modaloverlay.cpp

qt/qt_libbitcoinqt_a-modaloverlay.obj: qt/modaloverlay.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-modaloverlay.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-modaloverlay.Tpo -c -o qt/qt_libbitcoinqt_a-modaloverlay.obj `if test -f 'qt/modaloverlay.cpp'; then $(CYGPATH_W) 'qt/modaloverlay.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/modaloverlay.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-modaloverlay.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-modaloverlay.Po
#	$(AM_V_CXX)source='qt/modaloverlay.cpp' object='qt/qt_libbitcoinqt_a-modaloverlay.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-modaloverlay.obj `if test -f 'qt/modaloverlay.cpp'; then $(CYGPATH_W) 'qt/modaloverlay.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/modaloverlay.cpp'; fi`

qt/qt_libbitcoinqt_a-networkstyle.o: qt/networkstyle.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-networkstyle.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-networkstyle.Tpo -c -o qt/qt_libbitcoinqt_a-networkstyle.o `test -f 'qt/networkstyle.cpp' || echo '$(srcdir)/'`qt/networkstyle.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-networkstyle.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-networkstyle.Po
#	$(AM_V_CXX)source='qt/networkstyle.cpp' object='qt/qt_libbitcoinqt_a-networkstyle.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-networkstyle.o `test -f 'qt/networkstyle.cpp' || echo '$(srcdir)/'`qt/networkstyle.cpp

qt/qt_libbitcoinqt_a-networkstyle.obj: qt/networkstyle.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-networkstyle.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-networkstyle.Tpo -c -o qt/qt_libbitcoinqt_a-networkstyle.obj `if test -f 'qt/networkstyle.cpp'; then $(CYGPATH_W) 'qt/networkstyle.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/networkstyle.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-networkstyle.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-networkstyle.Po
#	$(AM_V_CXX)source='qt/networkstyle.cpp' object='qt/qt_libbitcoinqt_a-networkstyle.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-networkstyle.obj `if test -f 'qt/networkstyle.cpp'; then $(CYGPATH_W) 'qt/networkstyle.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/networkstyle.cpp'; fi`

qt/qt_libbitcoinqt_a-notificator.o: qt/notificator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-notificator.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-notificator.Tpo -c -o qt/qt_libbitcoinqt_a-notificator.o `test -f 'qt/notificator.cpp' || echo '$(srcdir)/'`qt/notificator.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-notificator.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-notificator.Po
#	$(AM_V_CXX)source='qt/notificator.cpp' object='qt/qt_libbitcoinqt_a-notificator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-notificator.o `test -f 'qt/notificator.cpp' || echo '$(srcdir)/'`qt/notificator.cpp

qt/qt_libbitcoinqt_a-notificator.obj: qt/notificator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-notificator.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-notificator.Tpo -c -o qt/qt_libbitcoinqt_a-notificator.obj `if test -f 'qt/notificator.cpp'; then $(CYGPATH_W) 'qt/notificator.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/notificator.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-notificator.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-notificator.Po
#	$(AM_V_CXX)source='qt/notificator.cpp' object='qt/qt_libbitcoinqt_a-notificator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-notificator.obj `if test -f 'qt/notificator.cpp'; then $(CYGPATH_W) 'qt/notificator.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/notificator.cpp'; fi`

qt/qt_libbitcoinqt_a-optionsdialog.o: qt/optionsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-optionsdialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-optionsdialog.Tpo -c -o qt/qt_libbitcoinqt_a-optionsdialog.o `test -f 'qt/optionsdialog.cpp' || echo '$(srcdir)/'`qt/optionsdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-optionsdialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-optionsdialog.Po
#	$(AM_V_CXX)source='qt/optionsdialog.cpp' object='qt/qt_libbitcoinqt_a-optionsdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-optionsdialog.o `test -f 'qt/optionsdialog.cpp' || echo '$(srcdir)/'`qt/optionsdialog.cpp

qt/qt_libbitcoinqt_a-optionsdialog.obj: qt/optionsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-optionsdialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-optionsdialog.Tpo -c -o qt/qt_libbitcoinqt_a-optionsdialog.obj `if test -f 'qt/optionsdialog.cpp'; then $(CYGPATH_W) 'qt/optionsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/optionsdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-optionsdialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-optionsdialog.Po
#	$(AM_V_CXX)source='qt/optionsdialog.cpp' object='qt/qt_libbitcoinqt_a-optionsdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-optionsdialog.obj `if test -f 'qt/optionsdialog.cpp'; then $(CYGPATH_W) 'qt/optionsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/optionsdialog.cpp'; fi`

qt/qt_libbitcoinqt_a-optionsmodel.o: qt/optionsmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-optionsmodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-optionsmodel.Tpo -c -o qt/qt_libbitcoinqt_a-optionsmodel.o `test -f 'qt/optionsmodel.cpp' || echo '$(srcdir)/'`qt/optionsmodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-optionsmodel.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-optionsmodel.Po
#	$(AM_V_CXX)source='qt/optionsmodel.cpp' object='qt/qt_libbitcoinqt_a-optionsmodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-optionsmodel.o `test -f 'qt/optionsmodel.cpp' || echo '$(srcdir)/'`qt/optionsmodel.cpp

qt/qt_libbitcoinqt_a-optionsmodel.obj: qt/optionsmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-optionsmodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-optionsmodel.Tpo -c -o qt/qt_libbitcoinqt_a-optionsmodel.obj `if test -f 'qt/optionsmodel.cpp'; then $(CYGPATH_W) 'qt/optionsmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/optionsmodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-optionsmodel.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-optionsmodel.Po
#	$(AM_V_CXX)source='qt/optionsmodel.cpp' object='qt/qt_libbitcoinqt_a-optionsmodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-optionsmodel.obj `if test -f 'qt/optionsmodel.cpp'; then $(CYGPATH_W) 'qt/optionsmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/optionsmodel.cpp'; fi`

qt/qt_libbitcoinqt_a-peertablemodel.o: qt/peertablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-peertablemodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-peertablemodel.Tpo -c -o qt/qt_libbitcoinqt_a-peertablemodel.o `test -f 'qt/peertablemodel.cpp' || echo '$(srcdir)/'`qt/peertablemodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-peertablemodel.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-peertablemodel.Po
#	$(AM_V_CXX)source='qt/peertablemodel.cpp' object='qt/qt_libbitcoinqt_a-peertablemodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-peertablemodel.o `test -f 'qt/peertablemodel.cpp' || echo '$(srcdir)/'`qt/peertablemodel.cpp

qt/qt_libbitcoinqt_a-peertablemodel.obj: qt/peertablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-peertablemodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-peertablemodel.Tpo -c -o qt/qt_libbitcoinqt_a-peertablemodel.obj `if test -f 'qt/peertablemodel.cpp'; then $(CYGPATH_W) 'qt/peertablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/peertablemodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-peertablemodel.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-peertablemodel.Po
#	$(AM_V_CXX)source='qt/peertablemodel.cpp' object='qt/qt_libbitcoinqt_a-peertablemodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-peertablemodel.obj `if test -f 'qt/peertablemodel.cpp'; then $(CYGPATH_W) 'qt/peertablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/peertablemodel.cpp'; fi`

qt/qt_libbitcoinqt_a-peertablesortproxy.o: qt/peertablesortproxy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-peertablesortproxy.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-peertablesortproxy.Tpo -c -o qt/qt_libbitcoinqt_a-peertablesortproxy.o `test -f 'qt/peertablesortproxy.cpp' || echo '$(srcdir)/'`qt/peertablesortproxy.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-peertablesortproxy.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-peertablesortproxy.Po
#	$(AM_V_CXX)source='qt/peertablesortproxy.cpp' object='qt/qt_libbitcoinqt_a-peertablesortproxy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-peertablesortproxy.o `test -f 'qt/peertablesortproxy.cpp' || echo '$(srcdir)/'`qt/peertablesortproxy.cpp

qt/qt_libbitcoinqt_a-peertablesortproxy.obj: qt/peertablesortproxy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-peertablesortproxy.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-peertablesortproxy.Tpo -c -o qt/qt_libbitcoinqt_a-peertablesortproxy.obj `if test -f 'qt/peertablesortproxy.cpp'; then $(CYGPATH_W) 'qt/peertablesortproxy.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/peertablesortproxy.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-peertablesortproxy.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-peertablesortproxy.Po
#	$(AM_V_CXX)source='qt/peertablesortproxy.cpp' object='qt/qt_libbitcoinqt_a-peertablesortproxy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-peertablesortproxy.obj `if test -f 'qt/peertablesortproxy.cpp'; then $(CYGPATH_W) 'qt/peertablesortproxy.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/peertablesortproxy.cpp'; fi`

qt/qt_libbitcoinqt_a-platformstyle.o: qt/platformstyle.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-platformstyle.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-platformstyle.Tpo -c -o qt/qt_libbitcoinqt_a-platformstyle.o `test -f 'qt/platformstyle.cpp' || echo '$(srcdir)/'`qt/platformstyle.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-platformstyle.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-platformstyle.Po
#	$(AM_V_CXX)source='qt/platformstyle.cpp' object='qt/qt_libbitcoinqt_a-platformstyle.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-platformstyle.o `test -f 'qt/platformstyle.cpp' || echo '$(srcdir)/'`qt/platformstyle.cpp

qt/qt_libbitcoinqt_a-platformstyle.obj: qt/platformstyle.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-platformstyle.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-platformstyle.Tpo -c -o qt/qt_libbitcoinqt_a-platformstyle.obj `if test -f 'qt/platformstyle.cpp'; then $(CYGPATH_W) 'qt/platformstyle.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/platformstyle.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-platformstyle.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-platformstyle.Po
#	$(AM_V_CXX)source='qt/platformstyle.cpp' object='qt/qt_libbitcoinqt_a-platformstyle.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-platformstyle.obj `if test -f 'qt/platformstyle.cpp'; then $(CYGPATH_W) 'qt/platformstyle.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/platformstyle.cpp'; fi`

qt/qt_libbitcoinqt_a-qvalidatedlineedit.o: qt/qvalidatedlineedit.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-qvalidatedlineedit.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-qvalidatedlineedit.Tpo -c -o qt/qt_libbitcoinqt_a-qvalidatedlineedit.o `test -f 'qt/qvalidatedlineedit.cpp' || echo '$(srcdir)/'`qt/qvalidatedlineedit.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-qvalidatedlineedit.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-qvalidatedlineedit.Po
#	$(AM_V_CXX)source='qt/qvalidatedlineedit.cpp' object='qt/qt_libbitcoinqt_a-qvalidatedlineedit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-qvalidatedlineedit.o `test -f 'qt/qvalidatedlineedit.cpp' || echo '$(srcdir)/'`qt/qvalidatedlineedit.cpp

qt/qt_libbitcoinqt_a-qvalidatedlineedit.obj: qt/qvalidatedlineedit.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-qvalidatedlineedit.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-qvalidatedlineedit.Tpo -c -o qt/qt_libbitcoinqt_a-qvalidatedlineedit.obj `if test -f 'qt/qvalidatedlineedit.cpp'; then $(CYGPATH_W) 'qt/qvalidatedlineedit.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qvalidatedlineedit.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-qvalidatedlineedit.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-qvalidatedlineedit.Po
#	$(AM_V_CXX)source='qt/qvalidatedlineedit.cpp' object='qt/qt_libbitcoinqt_a-qvalidatedlineedit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-qvalidatedlineedit.obj `if test -f 'qt/qvalidatedlineedit.cpp'; then $(CYGPATH_W) 'qt/qvalidatedlineedit.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qvalidatedlineedit.cpp'; fi`

qt/qt_libbitcoinqt_a-qvaluecombobox.o: qt/qvaluecombobox.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-qvaluecombobox.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-qvaluecombobox.Tpo -c -o qt/qt_libbitcoinqt_a-qvaluecombobox.o `test -f 'qt/qvaluecombobox.cpp' || echo '$(srcdir)/'`qt/qvaluecombobox.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-qvaluecombobox.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-qvaluecombobox.Po
#	$(AM_V_CXX)source='qt/qvaluecombobox.cpp' object='qt/qt_libbitcoinqt_a-qvaluecombobox.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-qvaluecombobox.o `test -f 'qt/qvaluecombobox.cpp' || echo '$(srcdir)/'`qt/qvaluecombobox.cpp

qt/qt_libbitcoinqt_a-qvaluecombobox.obj: qt/qvaluecombobox.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-qvaluecombobox.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-qvaluecombobox.Tpo -c -o qt/qt_libbitcoinqt_a-qvaluecombobox.obj `if test -f 'qt/qvaluecombobox.cpp'; then $(CYGPATH_W) 'qt/qvaluecombobox.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qvaluecombobox.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-qvaluecombobox.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-qvaluecombobox.Po
#	$(AM_V_CXX)source='qt/qvaluecombobox.cpp' object='qt/qt_libbitcoinqt_a-qvaluecombobox.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-qvaluecombobox.obj `if test -f 'qt/qvaluecombobox.cpp'; then $(CYGPATH_W) 'qt/qvaluecombobox.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qvaluecombobox.cpp'; fi`

qt/qt_libbitcoinqt_a-rpcconsole.o: qt/rpcconsole.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-rpcconsole.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-rpcconsole.Tpo -c -o qt/qt_libbitcoinqt_a-rpcconsole.o `test -f 'qt/rpcconsole.cpp' || echo '$(srcdir)/'`qt/rpcconsole.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-rpcconsole.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-rpcconsole.Po
#	$(AM_V_CXX)source='qt/rpcconsole.cpp' object='qt/qt_libbitcoinqt_a-rpcconsole.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-rpcconsole.o `test -f 'qt/rpcconsole.cpp' || echo '$(srcdir)/'`qt/rpcconsole.cpp

qt/qt_libbitcoinqt_a-rpcconsole.obj: qt/rpcconsole.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-rpcconsole.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-rpcconsole.Tpo -c -o qt/qt_libbitcoinqt_a-rpcconsole.obj `if test -f 'qt/rpcconsole.cpp'; then $(CYGPATH_W) 'qt/rpcconsole.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/rpcconsole.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-rpcconsole.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-rpcconsole.Po
#	$(AM_V_CXX)source='qt/rpcconsole.cpp' object='qt/qt_libbitcoinqt_a-rpcconsole.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-rpcconsole.obj `if test -f 'qt/rpcconsole.cpp'; then $(CYGPATH_W) 'qt/rpcconsole.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/rpcconsole.cpp'; fi`

qt/qt_libbitcoinqt_a-splashscreen.o: qt/splashscreen.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-splashscreen.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-splashscreen.Tpo -c -o qt/qt_libbitcoinqt_a-splashscreen.o `test -f 'qt/splashscreen.cpp' || echo '$(srcdir)/'`qt/splashscreen.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-splashscreen.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-splashscreen.Po
#	$(AM_V_CXX)source='qt/splashscreen.cpp' object='qt/qt_libbitcoinqt_a-splashscreen.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-splashscreen.o `test -f 'qt/splashscreen.cpp' || echo '$(srcdir)/'`qt/splashscreen.cpp

qt/qt_libbitcoinqt_a-splashscreen.obj: qt/splashscreen.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-splashscreen.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-splashscreen.Tpo -c -o qt/qt_libbitcoinqt_a-splashscreen.obj `if test -f 'qt/splashscreen.cpp'; then $(CYGPATH_W) 'qt/splashscreen.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/splashscreen.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-splashscreen.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-splashscreen.Po
#	$(AM_V_CXX)source='qt/splashscreen.cpp' object='qt/qt_libbitcoinqt_a-splashscreen.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-splashscreen.obj `if test -f 'qt/splashscreen.cpp'; then $(CYGPATH_W) 'qt/splashscreen.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/splashscreen.cpp'; fi`

qt/qt_libbitcoinqt_a-trafficgraphwidget.o: qt/trafficgraphwidget.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-trafficgraphwidget.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-trafficgraphwidget.Tpo -c -o qt/qt_libbitcoinqt_a-trafficgraphwidget.o `test -f 'qt/trafficgraphwidget.cpp' || echo '$(srcdir)/'`qt/trafficgraphwidget.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-trafficgraphwidget.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-trafficgraphwidget.Po
#	$(AM_V_CXX)source='qt/trafficgraphwidget.cpp' object='qt/qt_libbitcoinqt_a-trafficgraphwidget.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-trafficgraphwidget.o `test -f 'qt/trafficgraphwidget.cpp' || echo '$(srcdir)/'`qt/trafficgraphwidget.cpp

qt/qt_libbitcoinqt_a-trafficgraphwidget.obj: qt/trafficgraphwidget.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-trafficgraphwidget.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-trafficgraphwidget.Tpo -c -o qt/qt_libbitcoinqt_a-trafficgraphwidget.obj `if test -f 'qt/trafficgraphwidget.cpp'; then $(CYGPATH_W) 'qt/trafficgraphwidget.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/trafficgraphwidget.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-trafficgraphwidget.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-trafficgraphwidget.Po
#	$(AM_V_CXX)source='qt/trafficgraphwidget.cpp' object='qt/qt_libbitcoinqt_a-trafficgraphwidget.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-trafficgraphwidget.obj `if test -f 'qt/trafficgraphwidget.cpp'; then $(CYGPATH_W) 'qt/trafficgraphwidget.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/trafficgraphwidget.cpp'; fi`

qt/qt_libbitcoinqt_a-utilitydialog.o: qt/utilitydialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-utilitydialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-utilitydialog.Tpo -c -o qt/qt_libbitcoinqt_a-utilitydialog.o `test -f 'qt/utilitydialog.cpp' || echo '$(srcdir)/'`qt/utilitydialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-utilitydialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-utilitydialog.Po
#	$(AM_V_CXX)source='qt/utilitydialog.cpp' object='qt/qt_libbitcoinqt_a-utilitydialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-utilitydialog.o `test -f 'qt/utilitydialog.cpp' || echo '$(srcdir)/'`qt/utilitydialog.cpp

qt/qt_libbitcoinqt_a-utilitydialog.obj: qt/utilitydialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-utilitydialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-utilitydialog.Tpo -c -o qt/qt_libbitcoinqt_a-utilitydialog.obj `if test -f 'qt/utilitydialog.cpp'; then $(CYGPATH_W) 'qt/utilitydialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/utilitydialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-utilitydialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-utilitydialog.Po
#	$(AM_V_CXX)source='qt/utilitydialog.cpp' object='qt/qt_libbitcoinqt_a-utilitydialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-utilitydialog.obj `if test -f 'qt/utilitydialog.cpp'; then $(CYGPATH_W) 'qt/utilitydialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/utilitydialog.cpp'; fi`

qt/qt_libbitcoinqt_a-winshutdownmonitor.o: qt/winshutdownmonitor.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-winshutdownmonitor.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-winshutdownmonitor.Tpo -c -o qt/qt_libbitcoinqt_a-winshutdownmonitor.o `test -f 'qt/winshutdownmonitor.cpp' || echo '$(srcdir)/'`qt/winshutdownmonitor.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-winshutdownmonitor.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-winshutdownmonitor.Po
#	$(AM_V_CXX)source='qt/winshutdownmonitor.cpp' object='qt/qt_libbitcoinqt_a-winshutdownmonitor.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-winshutdownmonitor.o `test -f 'qt/winshutdownmonitor.cpp' || echo '$(srcdir)/'`qt/winshutdownmonitor.cpp

qt/qt_libbitcoinqt_a-winshutdownmonitor.obj: qt/winshutdownmonitor.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-winshutdownmonitor.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-winshutdownmonitor.Tpo -c -o qt/qt_libbitcoinqt_a-winshutdownmonitor.obj `if test -f 'qt/winshutdownmonitor.cpp'; then $(CYGPATH_W) 'qt/winshutdownmonitor.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/winshutdownmonitor.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-winshutdownmonitor.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-winshutdownmonitor.Po
#	$(AM_V_CXX)source='qt/winshutdownmonitor.cpp' object='qt/qt_libbitcoinqt_a-winshutdownmonitor.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-winshutdownmonitor.obj `if test -f 'qt/winshutdownmonitor.cpp'; then $(CYGPATH_W) 'qt/winshutdownmonitor.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/winshutdownmonitor.cpp'; fi`

qt/qt_libbitcoinqt_a-addressbookpage.o: qt/addressbookpage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-addressbookpage.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-addressbookpage.Tpo -c -o qt/qt_libbitcoinqt_a-addressbookpage.o `test -f 'qt/addressbookpage.cpp' || echo '$(srcdir)/'`qt/addressbookpage.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-addressbookpage.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-addressbookpage.Po
#	$(AM_V_CXX)source='qt/addressbookpage.cpp' object='qt/qt_libbitcoinqt_a-addressbookpage.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-addressbookpage.o `test -f 'qt/addressbookpage.cpp' || echo '$(srcdir)/'`qt/addressbookpage.cpp

qt/qt_libbitcoinqt_a-addressbookpage.obj: qt/addressbookpage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-addressbookpage.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-addressbookpage.Tpo -c -o qt/qt_libbitcoinqt_a-addressbookpage.obj `if test -f 'qt/addressbookpage.cpp'; then $(CYGPATH_W) 'qt/addressbookpage.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/addressbookpage.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-addressbookpage.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-addressbookpage.Po
#	$(AM_V_CXX)source='qt/addressbookpage.cpp' object='qt/qt_libbitcoinqt_a-addressbookpage.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-addressbookpage.obj `if test -f 'qt/addressbookpage.cpp'; then $(CYGPATH_W) 'qt/addressbookpage.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/addressbookpage.cpp'; fi`

qt/qt_libbitcoinqt_a-addresstablemodel.o: qt/addresstablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-addresstablemodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-addresstablemodel.Tpo -c -o qt/qt_libbitcoinqt_a-addresstablemodel.o `test -f 'qt/addresstablemodel.cpp' || echo '$(srcdir)/'`qt/addresstablemodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-addresstablemodel.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-addresstablemodel.Po
#	$(AM_V_CXX)source='qt/addresstablemodel.cpp' object='qt/qt_libbitcoinqt_a-addresstablemodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-addresstablemodel.o `test -f 'qt/addresstablemodel.cpp' || echo '$(srcdir)/'`qt/addresstablemodel.cpp

qt/qt_libbitcoinqt_a-addresstablemodel.obj: qt/addresstablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-addresstablemodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-addresstablemodel.Tpo -c -o qt/qt_libbitcoinqt_a-addresstablemodel.obj `if test -f 'qt/addresstablemodel.cpp'; then $(CYGPATH_W) 'qt/addresstablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/addresstablemodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-addresstablemodel.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-addresstablemodel.Po
#	$(AM_V_CXX)source='qt/addresstablemodel.cpp' object='qt/qt_libbitcoinqt_a-addresstablemodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-addresstablemodel.obj `if test -f 'qt/addresstablemodel.cpp'; then $(CYGPATH_W) 'qt/addresstablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/addresstablemodel.cpp'; fi`

qt/qt_libbitcoinqt_a-askpassphrasedialog.o: qt/askpassphrasedialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-askpassphrasedialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-askpassphrasedialog.Tpo -c -o qt/qt_libbitcoinqt_a-askpassphrasedialog.o `test -f 'qt/askpassphrasedialog.cpp' || echo '$(srcdir)/'`qt/askpassphrasedialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-askpassphrasedialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-askpassphrasedialog.Po
#	$(AM_V_CXX)source='qt/askpassphrasedialog.cpp' object='qt/qt_libbitcoinqt_a-askpassphrasedialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-askpassphrasedialog.o `test -f 'qt/askpassphrasedialog.cpp' || echo '$(srcdir)/'`qt/askpassphrasedialog.cpp

qt/qt_libbitcoinqt_a-askpassphrasedialog.obj: qt/askpassphrasedialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-askpassphrasedialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-askpassphrasedialog.Tpo -c -o qt/qt_libbitcoinqt_a-askpassphrasedialog.obj `if test -f 'qt/askpassphrasedialog.cpp'; then $(CYGPATH_W) 'qt/askpassphrasedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/askpassphrasedialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-askpassphrasedialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-askpassphrasedialog.Po
#	$(AM_V_CXX)source='qt/askpassphrasedialog.cpp' object='qt/qt_libbitcoinqt_a-askpassphrasedialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-askpassphrasedialog.obj `if test -f 'qt/askpassphrasedialog.cpp'; then $(CYGPATH_W) 'qt/askpassphrasedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/askpassphrasedialog.cpp'; fi`

qt/qt_libbitcoinqt_a-coincontroldialog.o: qt/coincontroldialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-coincontroldialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-coincontroldialog.Tpo -c -o qt/qt_libbitcoinqt_a-coincontroldialog.o `test -f 'qt/coincontroldialog.cpp' || echo '$(srcdir)/'`qt/coincontroldialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-coincontroldialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-coincontroldialog.Po
#	$(AM_V_CXX)source='qt/coincontroldialog.cpp' object='qt/qt_libbitcoinqt_a-coincontroldialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-coincontroldialog.o `test -f 'qt/coincontroldialog.cpp' || echo '$(srcdir)/'`qt/coincontroldialog.cpp

qt/qt_libbitcoinqt_a-coincontroldialog.obj: qt/coincontroldialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-coincontroldialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-coincontroldialog.Tpo -c -o qt/qt_libbitcoinqt_a-coincontroldialog.obj `if test -f 'qt/coincontroldialog.cpp'; then $(CYGPATH_W) 'qt/coincontroldialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/coincontroldialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-coincontroldialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-coincontroldialog.Po
#	$(AM_V_CXX)source='qt/coincontroldialog.cpp' object='qt/qt_libbitcoinqt_a-coincontroldialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-coincontroldialog.obj `if test -f 'qt/coincontroldialog.cpp'; then $(CYGPATH_W) 'qt/coincontroldialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/coincontroldialog.cpp'; fi`

qt/qt_libbitcoinqt_a-coincontroltreewidget.o: qt/coincontroltreewidget.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-coincontroltreewidget.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-coincontroltreewidget.Tpo -c -o qt/qt_libbitcoinqt_a-coincontroltreewidget.o `test -f 'qt/coincontroltreewidget.cpp' || echo '$(srcdir)/'`qt/coincontroltreewidget.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-coincontroltreewidget.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-coincontroltreewidget.Po
#	$(AM_V_CXX)source='qt/coincontroltreewidget.cpp' object='qt/qt_libbitcoinqt_a-coincontroltreewidget.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-coincontroltreewidget.o `test -f 'qt/coincontroltreewidget.cpp' || echo '$(srcdir)/'`qt/coincontroltreewidget.cpp

qt/qt_libbitcoinqt_a-coincontroltreewidget.obj: qt/coincontroltreewidget.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-coincontroltreewidget.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-coincontroltreewidget.Tpo -c -o qt/qt_libbitcoinqt_a-coincontroltreewidget.obj `if test -f 'qt/coincontroltreewidget.cpp'; then $(CYGPATH_W) 'qt/coincontroltreewidget.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/coincontroltreewidget.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-coincontroltreewidget.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-coincontroltreewidget.Po
#	$(AM_V_CXX)source='qt/coincontroltreewidget.cpp' object='qt/qt_libbitcoinqt_a-coincontroltreewidget.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-coincontroltreewidget.obj `if test -f 'qt/coincontroltreewidget.cpp'; then $(CYGPATH_W) 'qt/coincontroltreewidget.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/coincontroltreewidget.cpp'; fi`

qt/qt_libbitcoinqt_a-createwalletdialog.o: qt/createwalletdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-createwalletdialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-createwalletdialog.Tpo -c -o qt/qt_libbitcoinqt_a-createwalletdialog.o `test -f 'qt/createwalletdialog.cpp' || echo '$(srcdir)/'`qt/createwalletdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-createwalletdialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-createwalletdialog.Po
#	$(AM_V_CXX)source='qt/createwalletdialog.cpp' object='qt/qt_libbitcoinqt_a-createwalletdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-createwalletdialog.o `test -f 'qt/createwalletdialog.cpp' || echo '$(srcdir)/'`qt/createwalletdialog.cpp

qt/qt_libbitcoinqt_a-createwalletdialog.obj: qt/createwalletdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-createwalletdialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-createwalletdialog.Tpo -c -o qt/qt_libbitcoinqt_a-createwalletdialog.obj `if test -f 'qt/createwalletdialog.cpp'; then $(CYGPATH_W) 'qt/createwalletdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/createwalletdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-createwalletdialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-createwalletdialog.Po
#	$(AM_V_CXX)source='qt/createwalletdialog.cpp' object='qt/qt_libbitcoinqt_a-createwalletdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-createwalletdialog.obj `if test -f 'qt/createwalletdialog.cpp'; then $(CYGPATH_W) 'qt/createwalletdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/createwalletdialog.cpp'; fi`

qt/qt_libbitcoinqt_a-editaddressdialog.o: qt/editaddressdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-editaddressdialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-editaddressdialog.Tpo -c -o qt/qt_libbitcoinqt_a-editaddressdialog.o `test -f 'qt/editaddressdialog.cpp' || echo '$(srcdir)/'`qt/editaddressdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-editaddressdialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-editaddressdialog.Po
#	$(AM_V_CXX)source='qt/editaddressdialog.cpp' object='qt/qt_libbitcoinqt_a-editaddressdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-editaddressdialog.o `test -f 'qt/editaddressdialog.cpp' || echo '$(srcdir)/'`qt/editaddressdialog.cpp

qt/qt_libbitcoinqt_a-editaddressdialog.obj: qt/editaddressdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-editaddressdialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-editaddressdialog.Tpo -c -o qt/qt_libbitcoinqt_a-editaddressdialog.obj `if test -f 'qt/editaddressdialog.cpp'; then $(CYGPATH_W) 'qt/editaddressdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/editaddressdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-editaddressdialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-editaddressdialog.Po
#	$(AM_V_CXX)source='qt/editaddressdialog.cpp' object='qt/qt_libbitcoinqt_a-editaddressdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-editaddressdialog.obj `if test -f 'qt/editaddressdialog.cpp'; then $(CYGPATH_W) 'qt/editaddressdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/editaddressdialog.cpp'; fi`

qt/qt_libbitcoinqt_a-openuridialog.o: qt/openuridialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-openuridialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-openuridialog.Tpo -c -o qt/qt_libbitcoinqt_a-openuridialog.o `test -f 'qt/openuridialog.cpp' || echo '$(srcdir)/'`qt/openuridialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-openuridialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-openuridialog.Po
#	$(AM_V_CXX)source='qt/openuridialog.cpp' object='qt/qt_libbitcoinqt_a-openuridialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-openuridialog.o `test -f 'qt/openuridialog.cpp' || echo '$(srcdir)/'`qt/openuridialog.cpp

qt/qt_libbitcoinqt_a-openuridialog.obj: qt/openuridialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-openuridialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-openuridialog.Tpo -c -o qt/qt_libbitcoinqt_a-openuridialog.obj `if test -f 'qt/openuridialog.cpp'; then $(CYGPATH_W) 'qt/openuridialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/openuridialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-openuridialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-openuridialog.Po
#	$(AM_V_CXX)source='qt/openuridialog.cpp' object='qt/qt_libbitcoinqt_a-openuridialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-openuridialog.obj `if test -f 'qt/openuridialog.cpp'; then $(CYGPATH_W) 'qt/openuridialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/openuridialog.cpp'; fi`

qt/qt_libbitcoinqt_a-overviewpage.o: qt/overviewpage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-overviewpage.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-overviewpage.Tpo -c -o qt/qt_libbitcoinqt_a-overviewpage.o `test -f 'qt/overviewpage.cpp' || echo '$(srcdir)/'`qt/overviewpage.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-overviewpage.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-overviewpage.Po
#	$(AM_V_CXX)source='qt/overviewpage.cpp' object='qt/qt_libbitcoinqt_a-overviewpage.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-overviewpage.o `test -f 'qt/overviewpage.cpp' || echo '$(srcdir)/'`qt/overviewpage.cpp

qt/qt_libbitcoinqt_a-overviewpage.obj: qt/overviewpage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-overviewpage.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-overviewpage.Tpo -c -o qt/qt_libbitcoinqt_a-overviewpage.obj `if test -f 'qt/overviewpage.cpp'; then $(CYGPATH_W) 'qt/overviewpage.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/overviewpage.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-overviewpage.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-overviewpage.Po
#	$(AM_V_CXX)source='qt/overviewpage.cpp' object='qt/qt_libbitcoinqt_a-overviewpage.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-overviewpage.obj `if test -f 'qt/overviewpage.cpp'; then $(CYGPATH_W) 'qt/overviewpage.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/overviewpage.cpp'; fi`

qt/qt_libbitcoinqt_a-paymentserver.o: qt/paymentserver.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-paymentserver.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-paymentserver.Tpo -c -o qt/qt_libbitcoinqt_a-paymentserver.o `test -f 'qt/paymentserver.cpp' || echo '$(srcdir)/'`qt/paymentserver.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-paymentserver.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-paymentserver.Po
#	$(AM_V_CXX)source='qt/paymentserver.cpp' object='qt/qt_libbitcoinqt_a-paymentserver.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-paymentserver.o `test -f 'qt/paymentserver.cpp' || echo '$(srcdir)/'`qt/paymentserver.cpp

qt/qt_libbitcoinqt_a-paymentserver.obj: qt/paymentserver.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-paymentserver.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-paymentserver.Tpo -c -o qt/qt_libbitcoinqt_a-paymentserver.obj `if test -f 'qt/paymentserver.cpp'; then $(CYGPATH_W) 'qt/paymentserver.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/paymentserver.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-paymentserver.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-paymentserver.Po
#	$(AM_V_CXX)source='qt/paymentserver.cpp' object='qt/qt_libbitcoinqt_a-paymentserver.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-paymentserver.obj `if test -f 'qt/paymentserver.cpp'; then $(CYGPATH_W) 'qt/paymentserver.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/paymentserver.cpp'; fi`

qt/qt_libbitcoinqt_a-psbtoperationsdialog.o: qt/psbtoperationsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-psbtoperationsdialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-psbtoperationsdialog.Tpo -c -o qt/qt_libbitcoinqt_a-psbtoperationsdialog.o `test -f 'qt/psbtoperationsdialog.cpp' || echo '$(srcdir)/'`qt/psbtoperationsdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-psbtoperationsdialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-psbtoperationsdialog.Po
#	$(AM_V_CXX)source='qt/psbtoperationsdialog.cpp' object='qt/qt_libbitcoinqt_a-psbtoperationsdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-psbtoperationsdialog.o `test -f 'qt/psbtoperationsdialog.cpp' || echo '$(srcdir)/'`qt/psbtoperationsdialog.cpp

qt/qt_libbitcoinqt_a-psbtoperationsdialog.obj: qt/psbtoperationsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-psbtoperationsdialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-psbtoperationsdialog.Tpo -c -o qt/qt_libbitcoinqt_a-psbtoperationsdialog.obj `if test -f 'qt/psbtoperationsdialog.cpp'; then $(CYGPATH_W) 'qt/psbtoperationsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/psbtoperationsdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-psbtoperationsdialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-psbtoperationsdialog.Po
#	$(AM_V_CXX)source='qt/psbtoperationsdialog.cpp' object='qt/qt_libbitcoinqt_a-psbtoperationsdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-psbtoperationsdialog.obj `if test -f 'qt/psbtoperationsdialog.cpp'; then $(CYGPATH_W) 'qt/psbtoperationsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/psbtoperationsdialog.cpp'; fi`

qt/qt_libbitcoinqt_a-qrimagewidget.o: qt/qrimagewidget.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-qrimagewidget.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-qrimagewidget.Tpo -c -o qt/qt_libbitcoinqt_a-qrimagewidget.o `test -f 'qt/qrimagewidget.cpp' || echo '$(srcdir)/'`qt/qrimagewidget.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-qrimagewidget.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-qrimagewidget.Po
#	$(AM_V_CXX)source='qt/qrimagewidget.cpp' object='qt/qt_libbitcoinqt_a-qrimagewidget.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-qrimagewidget.o `test -f 'qt/qrimagewidget.cpp' || echo '$(srcdir)/'`qt/qrimagewidget.cpp

qt/qt_libbitcoinqt_a-qrimagewidget.obj: qt/qrimagewidget.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-qrimagewidget.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-qrimagewidget.Tpo -c -o qt/qt_libbitcoinqt_a-qrimagewidget.obj `if test -f 'qt/qrimagewidget.cpp'; then $(CYGPATH_W) 'qt/qrimagewidget.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qrimagewidget.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-qrimagewidget.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-qrimagewidget.Po
#	$(AM_V_CXX)source='qt/qrimagewidget.cpp' object='qt/qt_libbitcoinqt_a-qrimagewidget.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-qrimagewidget.obj `if test -f 'qt/qrimagewidget.cpp'; then $(CYGPATH_W) 'qt/qrimagewidget.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qrimagewidget.cpp'; fi`

qt/qt_libbitcoinqt_a-receivecoinsdialog.o: qt/receivecoinsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-receivecoinsdialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-receivecoinsdialog.Tpo -c -o qt/qt_libbitcoinqt_a-receivecoinsdialog.o `test -f 'qt/receivecoinsdialog.cpp' || echo '$(srcdir)/'`qt/receivecoinsdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-receivecoinsdialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-receivecoinsdialog.Po
#	$(AM_V_CXX)source='qt/receivecoinsdialog.cpp' object='qt/qt_libbitcoinqt_a-receivecoinsdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-receivecoinsdialog.o `test -f 'qt/receivecoinsdialog.cpp' || echo '$(srcdir)/'`qt/receivecoinsdialog.cpp

qt/qt_libbitcoinqt_a-receivecoinsdialog.obj: qt/receivecoinsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-receivecoinsdialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-receivecoinsdialog.Tpo -c -o qt/qt_libbitcoinqt_a-receivecoinsdialog.obj `if test -f 'qt/receivecoinsdialog.cpp'; then $(CYGPATH_W) 'qt/receivecoinsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/receivecoinsdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-receivecoinsdialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-receivecoinsdialog.Po
#	$(AM_V_CXX)source='qt/receivecoinsdialog.cpp' object='qt/qt_libbitcoinqt_a-receivecoinsdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-receivecoinsdialog.obj `if test -f 'qt/receivecoinsdialog.cpp'; then $(CYGPATH_W) 'qt/receivecoinsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/receivecoinsdialog.cpp'; fi`

qt/qt_libbitcoinqt_a-receiverequestdialog.o: qt/receiverequestdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-receiverequestdialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-receiverequestdialog.Tpo -c -o qt/qt_libbitcoinqt_a-receiverequestdialog.o `test -f 'qt/receiverequestdialog.cpp' || echo '$(srcdir)/'`qt/receiverequestdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-receiverequestdialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-receiverequestdialog.Po
#	$(AM_V_CXX)source='qt/receiverequestdialog.cpp' object='qt/qt_libbitcoinqt_a-receiverequestdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-receiverequestdialog.o `test -f 'qt/receiverequestdialog.cpp' || echo '$(srcdir)/'`qt/receiverequestdialog.cpp

qt/qt_libbitcoinqt_a-receiverequestdialog.obj: qt/receiverequestdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-receiverequestdialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-receiverequestdialog.Tpo -c -o qt/qt_libbitcoinqt_a-receiverequestdialog.obj `if test -f 'qt/receiverequestdialog.cpp'; then $(CYGPATH_W) 'qt/receiverequestdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/receiverequestdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-receiverequestdialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-receiverequestdialog.Po
#	$(AM_V_CXX)source='qt/receiverequestdialog.cpp' object='qt/qt_libbitcoinqt_a-receiverequestdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-receiverequestdialog.obj `if test -f 'qt/receiverequestdialog.cpp'; then $(CYGPATH_W) 'qt/receiverequestdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/receiverequestdialog.cpp'; fi`

qt/qt_libbitcoinqt_a-recentrequeststablemodel.o: qt/recentrequeststablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-recentrequeststablemodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-recentrequeststablemodel.Tpo -c -o qt/qt_libbitcoinqt_a-recentrequeststablemodel.o `test -f 'qt/recentrequeststablemodel.cpp' || echo '$(srcdir)/'`qt/recentrequeststablemodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-recentrequeststablemodel.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-recentrequeststablemodel.Po
#	$(AM_V_CXX)source='qt/recentrequeststablemodel.cpp' object='qt/qt_libbitcoinqt_a-recentrequeststablemodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-recentrequeststablemodel.o `test -f 'qt/recentrequeststablemodel.cpp' || echo '$(srcdir)/'`qt/recentrequeststablemodel.cpp

qt/qt_libbitcoinqt_a-recentrequeststablemodel.obj: qt/recentrequeststablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-recentrequeststablemodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-recentrequeststablemodel.Tpo -c -o qt/qt_libbitcoinqt_a-recentrequeststablemodel.obj `if test -f 'qt/recentrequeststablemodel.cpp'; then $(CYGPATH_W) 'qt/recentrequeststablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/recentrequeststablemodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-recentrequeststablemodel.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-recentrequeststablemodel.Po
#	$(AM_V_CXX)source='qt/recentrequeststablemodel.cpp' object='qt/qt_libbitcoinqt_a-recentrequeststablemodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-recentrequeststablemodel.obj `if test -f 'qt/recentrequeststablemodel.cpp'; then $(CYGPATH_W) 'qt/recentrequeststablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/recentrequeststablemodel.cpp'; fi`

qt/qt_libbitcoinqt_a-sendcoinsdialog.o: qt/sendcoinsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-sendcoinsdialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-sendcoinsdialog.Tpo -c -o qt/qt_libbitcoinqt_a-sendcoinsdialog.o `test -f 'qt/sendcoinsdialog.cpp' || echo '$(srcdir)/'`qt/sendcoinsdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-sendcoinsdialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-sendcoinsdialog.Po
#	$(AM_V_CXX)source='qt/sendcoinsdialog.cpp' object='qt/qt_libbitcoinqt_a-sendcoinsdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-sendcoinsdialog.o `test -f 'qt/sendcoinsdialog.cpp' || echo '$(srcdir)/'`qt/sendcoinsdialog.cpp

qt/qt_libbitcoinqt_a-sendcoinsdialog.obj: qt/sendcoinsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-sendcoinsdialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-sendcoinsdialog.Tpo -c -o qt/qt_libbitcoinqt_a-sendcoinsdialog.obj `if test -f 'qt/sendcoinsdialog.cpp'; then $(CYGPATH_W) 'qt/sendcoinsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/sendcoinsdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-sendcoinsdialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-sendcoinsdialog.Po
#	$(AM_V_CXX)source='qt/sendcoinsdialog.cpp' object='qt/qt_libbitcoinqt_a-sendcoinsdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-sendcoinsdialog.obj `if test -f 'qt/sendcoinsdialog.cpp'; then $(CYGPATH_W) 'qt/sendcoinsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/sendcoinsdialog.cpp'; fi`

qt/qt_libbitcoinqt_a-sendcoinsentry.o: qt/sendcoinsentry.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-sendcoinsentry.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-sendcoinsentry.Tpo -c -o qt/qt_libbitcoinqt_a-sendcoinsentry.o `test -f 'qt/sendcoinsentry.cpp' || echo '$(srcdir)/'`qt/sendcoinsentry.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-sendcoinsentry.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-sendcoinsentry.Po
#	$(AM_V_CXX)source='qt/sendcoinsentry.cpp' object='qt/qt_libbitcoinqt_a-sendcoinsentry.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-sendcoinsentry.o `test -f 'qt/sendcoinsentry.cpp' || echo '$(srcdir)/'`qt/sendcoinsentry.cpp

qt/qt_libbitcoinqt_a-sendcoinsentry.obj: qt/sendcoinsentry.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-sendcoinsentry.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-sendcoinsentry.Tpo -c -o qt/qt_libbitcoinqt_a-sendcoinsentry.obj `if test -f 'qt/sendcoinsentry.cpp'; then $(CYGPATH_W) 'qt/sendcoinsentry.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/sendcoinsentry.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-sendcoinsentry.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-sendcoinsentry.Po
#	$(AM_V_CXX)source='qt/sendcoinsentry.cpp' object='qt/qt_libbitcoinqt_a-sendcoinsentry.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-sendcoinsentry.obj `if test -f 'qt/sendcoinsentry.cpp'; then $(CYGPATH_W) 'qt/sendcoinsentry.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/sendcoinsentry.cpp'; fi`

qt/qt_libbitcoinqt_a-signverifymessagedialog.o: qt/signverifymessagedialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-signverifymessagedialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-signverifymessagedialog.Tpo -c -o qt/qt_libbitcoinqt_a-signverifymessagedialog.o `test -f 'qt/signverifymessagedialog.cpp' || echo '$(srcdir)/'`qt/signverifymessagedialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-signverifymessagedialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-signverifymessagedialog.Po
#	$(AM_V_CXX)source='qt/signverifymessagedialog.cpp' object='qt/qt_libbitcoinqt_a-signverifymessagedialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-signverifymessagedialog.o `test -f 'qt/signverifymessagedialog.cpp' || echo '$(srcdir)/'`qt/signverifymessagedialog.cpp

qt/qt_libbitcoinqt_a-signverifymessagedialog.obj: qt/signverifymessagedialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-signverifymessagedialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-signverifymessagedialog.Tpo -c -o qt/qt_libbitcoinqt_a-signverifymessagedialog.obj `if test -f 'qt/signverifymessagedialog.cpp'; then $(CYGPATH_W) 'qt/signverifymessagedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/signverifymessagedialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-signverifymessagedialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-signverifymessagedialog.Po
#	$(AM_V_CXX)source='qt/signverifymessagedialog.cpp' object='qt/qt_libbitcoinqt_a-signverifymessagedialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-signverifymessagedialog.obj `if test -f 'qt/signverifymessagedialog.cpp'; then $(CYGPATH_W) 'qt/signverifymessagedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/signverifymessagedialog.cpp'; fi`

qt/qt_libbitcoinqt_a-transactiondesc.o: qt/transactiondesc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-transactiondesc.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-transactiondesc.Tpo -c -o qt/qt_libbitcoinqt_a-transactiondesc.o `test -f 'qt/transactiondesc.cpp' || echo '$(srcdir)/'`qt/transactiondesc.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-transactiondesc.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-transactiondesc.Po
#	$(AM_V_CXX)source='qt/transactiondesc.cpp' object='qt/qt_libbitcoinqt_a-transactiondesc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-transactiondesc.o `test -f 'qt/transactiondesc.cpp' || echo '$(srcdir)/'`qt/transactiondesc.cpp

qt/qt_libbitcoinqt_a-transactiondesc.obj: qt/transactiondesc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-transactiondesc.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-transactiondesc.Tpo -c -o qt/qt_libbitcoinqt_a-transactiondesc.obj `if test -f 'qt/transactiondesc.cpp'; then $(CYGPATH_W) 'qt/transactiondesc.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactiondesc.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-transactiondesc.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-transactiondesc.Po
#	$(AM_V_CXX)source='qt/transactiondesc.cpp' object='qt/qt_libbitcoinqt_a-transactiondesc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-transactiondesc.obj `if test -f 'qt/transactiondesc.cpp'; then $(CYGPATH_W) 'qt/transactiondesc.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactiondesc.cpp'; fi`

qt/qt_libbitcoinqt_a-transactiondescdialog.o: qt/transactiondescdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-transactiondescdialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-transactiondescdialog.Tpo -c -o qt/qt_libbitcoinqt_a-transactiondescdialog.o `test -f 'qt/transactiondescdialog.cpp' || echo '$(srcdir)/'`qt/transactiondescdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-transactiondescdialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-transactiondescdialog.Po
#	$(AM_V_CXX)source='qt/transactiondescdialog.cpp' object='qt/qt_libbitcoinqt_a-transactiondescdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-transactiondescdialog.o `test -f 'qt/transactiondescdialog.cpp' || echo '$(srcdir)/'`qt/transactiondescdialog.cpp

qt/qt_libbitcoinqt_a-transactiondescdialog.obj: qt/transactiondescdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-transactiondescdialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-transactiondescdialog.Tpo -c -o qt/qt_libbitcoinqt_a-transactiondescdialog.obj `if test -f 'qt/transactiondescdialog.cpp'; then $(CYGPATH_W) 'qt/transactiondescdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactiondescdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-transactiondescdialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-transactiondescdialog.Po
#	$(AM_V_CXX)source='qt/transactiondescdialog.cpp' object='qt/qt_libbitcoinqt_a-transactiondescdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-transactiondescdialog.obj `if test -f 'qt/transactiondescdialog.cpp'; then $(CYGPATH_W) 'qt/transactiondescdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactiondescdialog.cpp'; fi`

qt/qt_libbitcoinqt_a-transactionfilterproxy.o: qt/transactionfilterproxy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-transactionfilterproxy.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-transactionfilterproxy.Tpo -c -o qt/qt_libbitcoinqt_a-transactionfilterproxy.o `test -f 'qt/transactionfilterproxy.cpp' || echo '$(srcdir)/'`qt/transactionfilterproxy.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-transactionfilterproxy.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-transactionfilterproxy.Po
#	$(AM_V_CXX)source='qt/transactionfilterproxy.cpp' object='qt/qt_libbitcoinqt_a-transactionfilterproxy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-transactionfilterproxy.o `test -f 'qt/transactionfilterproxy.cpp' || echo '$(srcdir)/'`qt/transactionfilterproxy.cpp

qt/qt_libbitcoinqt_a-transactionfilterproxy.obj: qt/transactionfilterproxy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-transactionfilterproxy.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-transactionfilterproxy.Tpo -c -o qt/qt_libbitcoinqt_a-transactionfilterproxy.obj `if test -f 'qt/transactionfilterproxy.cpp'; then $(CYGPATH_W) 'qt/transactionfilterproxy.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactionfilterproxy.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-transactionfilterproxy.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-transactionfilterproxy.Po
#	$(AM_V_CXX)source='qt/transactionfilterproxy.cpp' object='qt/qt_libbitcoinqt_a-transactionfilterproxy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-transactionfilterproxy.obj `if test -f 'qt/transactionfilterproxy.cpp'; then $(CYGPATH_W) 'qt/transactionfilterproxy.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactionfilterproxy.cpp'; fi`

qt/qt_libbitcoinqt_a-transactionrecord.o: qt/transactionrecord.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-transactionrecord.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-transactionrecord.Tpo -c -o qt/qt_libbitcoinqt_a-transactionrecord.o `test -f 'qt/transactionrecord.cpp' || echo '$(srcdir)/'`qt/transactionrecord.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-transactionrecord.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-transactionrecord.Po
#	$(AM_V_CXX)source='qt/transactionrecord.cpp' object='qt/qt_libbitcoinqt_a-transactionrecord.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-transactionrecord.o `test -f 'qt/transactionrecord.cpp' || echo '$(srcdir)/'`qt/transactionrecord.cpp

qt/qt_libbitcoinqt_a-transactionrecord.obj: qt/transactionrecord.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-transactionrecord.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-transactionrecord.Tpo -c -o qt/qt_libbitcoinqt_a-transactionrecord.obj `if test -f 'qt/transactionrecord.cpp'; then $(CYGPATH_W) 'qt/transactionrecord.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactionrecord.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-transactionrecord.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-transactionrecord.Po
#	$(AM_V_CXX)source='qt/transactionrecord.cpp' object='qt/qt_libbitcoinqt_a-transactionrecord.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-transactionrecord.obj `if test -f 'qt/transactionrecord.cpp'; then $(CYGPATH_W) 'qt/transactionrecord.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactionrecord.cpp'; fi`

qt/qt_libbitcoinqt_a-transactiontablemodel.o: qt/transactiontablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-transactiontablemodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-transactiontablemodel.Tpo -c -o qt/qt_libbitcoinqt_a-transactiontablemodel.o `test -f 'qt/transactiontablemodel.cpp' || echo '$(srcdir)/'`qt/transactiontablemodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-transactiontablemodel.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-transactiontablemodel.Po
#	$(AM_V_CXX)source='qt/transactiontablemodel.cpp' object='qt/qt_libbitcoinqt_a-transactiontablemodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-transactiontablemodel.o `test -f 'qt/transactiontablemodel.cpp' || echo '$(srcdir)/'`qt/transactiontablemodel.cpp

qt/qt_libbitcoinqt_a-transactiontablemodel.obj: qt/transactiontablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-transactiontablemodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-transactiontablemodel.Tpo -c -o qt/qt_libbitcoinqt_a-transactiontablemodel.obj `if test -f 'qt/transactiontablemodel.cpp'; then $(CYGPATH_W) 'qt/transactiontablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactiontablemodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-transactiontablemodel.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-transactiontablemodel.Po
#	$(AM_V_CXX)source='qt/transactiontablemodel.cpp' object='qt/qt_libbitcoinqt_a-transactiontablemodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-transactiontablemodel.obj `if test -f 'qt/transactiontablemodel.cpp'; then $(CYGPATH_W) 'qt/transactiontablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactiontablemodel.cpp'; fi`

qt/qt_libbitcoinqt_a-transactionview.o: qt/transactionview.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-transactionview.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-transactionview.Tpo -c -o qt/qt_libbitcoinqt_a-transactionview.o `test -f 'qt/transactionview.cpp' || echo '$(srcdir)/'`qt/transactionview.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-transactionview.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-transactionview.Po
#	$(AM_V_CXX)source='qt/transactionview.cpp' object='qt/qt_libbitcoinqt_a-transactionview.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-transactionview.o `test -f 'qt/transactionview.cpp' || echo '$(srcdir)/'`qt/transactionview.cpp

qt/qt_libbitcoinqt_a-transactionview.obj: qt/transactionview.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-transactionview.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-transactionview.Tpo -c -o qt/qt_libbitcoinqt_a-transactionview.obj `if test -f 'qt/transactionview.cpp'; then $(CYGPATH_W) 'qt/transactionview.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactionview.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-transactionview.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-transactionview.Po
#	$(AM_V_CXX)source='qt/transactionview.cpp' object='qt/qt_libbitcoinqt_a-transactionview.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-transactionview.obj `if test -f 'qt/transactionview.cpp'; then $(CYGPATH_W) 'qt/transactionview.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/transactionview.cpp'; fi`

qt/qt_libbitcoinqt_a-walletcontroller.o: qt/walletcontroller.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-walletcontroller.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-walletcontroller.Tpo -c -o qt/qt_libbitcoinqt_a-walletcontroller.o `test -f 'qt/walletcontroller.cpp' || echo '$(srcdir)/'`qt/walletcontroller.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-walletcontroller.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-walletcontroller.Po
#	$(AM_V_CXX)source='qt/walletcontroller.cpp' object='qt/qt_libbitcoinqt_a-walletcontroller.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-walletcontroller.o `test -f 'qt/walletcontroller.cpp' || echo '$(srcdir)/'`qt/walletcontroller.cpp

qt/qt_libbitcoinqt_a-walletcontroller.obj: qt/walletcontroller.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-walletcontroller.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-walletcontroller.Tpo -c -o qt/qt_libbitcoinqt_a-walletcontroller.obj `if test -f 'qt/walletcontroller.cpp'; then $(CYGPATH_W) 'qt/walletcontroller.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/walletcontroller.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-walletcontroller.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-walletcontroller.Po
#	$(AM_V_CXX)source='qt/walletcontroller.cpp' object='qt/qt_libbitcoinqt_a-walletcontroller.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-walletcontroller.obj `if test -f 'qt/walletcontroller.cpp'; then $(CYGPATH_W) 'qt/walletcontroller.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/walletcontroller.cpp'; fi`

qt/qt_libbitcoinqt_a-walletframe.o: qt/walletframe.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-walletframe.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-walletframe.Tpo -c -o qt/qt_libbitcoinqt_a-walletframe.o `test -f 'qt/walletframe.cpp' || echo '$(srcdir)/'`qt/walletframe.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-walletframe.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-walletframe.Po
#	$(AM_V_CXX)source='qt/walletframe.cpp' object='qt/qt_libbitcoinqt_a-walletframe.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-walletframe.o `test -f 'qt/walletframe.cpp' || echo '$(srcdir)/'`qt/walletframe.cpp

qt/qt_libbitcoinqt_a-walletframe.obj: qt/walletframe.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-walletframe.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-walletframe.Tpo -c -o qt/qt_libbitcoinqt_a-walletframe.obj `if test -f 'qt/walletframe.cpp'; then $(CYGPATH_W) 'qt/walletframe.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/walletframe.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-walletframe.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-walletframe.Po
#	$(AM_V_CXX)source='qt/walletframe.cpp' object='qt/qt_libbitcoinqt_a-walletframe.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-walletframe.obj `if test -f 'qt/walletframe.cpp'; then $(CYGPATH_W) 'qt/walletframe.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/walletframe.cpp'; fi`

qt/qt_libbitcoinqt_a-walletmodel.o: qt/walletmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-walletmodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-walletmodel.Tpo -c -o qt/qt_libbitcoinqt_a-walletmodel.o `test -f 'qt/walletmodel.cpp' || echo '$(srcdir)/'`qt/walletmodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-walletmodel.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-walletmodel.Po
#	$(AM_V_CXX)source='qt/walletmodel.cpp' object='qt/qt_libbitcoinqt_a-walletmodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-walletmodel.o `test -f 'qt/walletmodel.cpp' || echo '$(srcdir)/'`qt/walletmodel.cpp

qt/qt_libbitcoinqt_a-walletmodel.obj: qt/walletmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-walletmodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-walletmodel.Tpo -c -o qt/qt_libbitcoinqt_a-walletmodel.obj `if test -f 'qt/walletmodel.cpp'; then $(CYGPATH_W) 'qt/walletmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/walletmodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-walletmodel.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-walletmodel.Po
#	$(AM_V_CXX)source='qt/walletmodel.cpp' object='qt/qt_libbitcoinqt_a-walletmodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-walletmodel.obj `if test -f 'qt/walletmodel.cpp'; then $(CYGPATH_W) 'qt/walletmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/walletmodel.cpp'; fi`

qt/qt_libbitcoinqt_a-walletmodeltransaction.o: qt/walletmodeltransaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-walletmodeltransaction.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-walletmodeltransaction.Tpo -c -o qt/qt_libbitcoinqt_a-walletmodeltransaction.o `test -f 'qt/walletmodeltransaction.cpp' || echo '$(srcdir)/'`qt/walletmodeltransaction.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-walletmodeltransaction.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-walletmodeltransaction.Po
#	$(AM_V_CXX)source='qt/walletmodeltransaction.cpp' object='qt/qt_libbitcoinqt_a-walletmodeltransaction.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-walletmodeltransaction.o `test -f 'qt/walletmodeltransaction.cpp' || echo '$(srcdir)/'`qt/walletmodeltransaction.cpp

qt/qt_libbitcoinqt_a-walletmodeltransaction.obj: qt/walletmodeltransaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-walletmodeltransaction.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-walletmodeltransaction.Tpo -c -o qt/qt_libbitcoinqt_a-walletmodeltransaction.obj `if test -f 'qt/walletmodeltransaction.cpp'; then $(CYGPATH_W) 'qt/walletmodeltransaction.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/walletmodeltransaction.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-walletmodeltransaction.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-walletmodeltransaction.Po
#	$(AM_V_CXX)source='qt/walletmodeltransaction.cpp' object='qt/qt_libbitcoinqt_a-walletmodeltransaction.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-walletmodeltransaction.obj `if test -f 'qt/walletmodeltransaction.cpp'; then $(CYGPATH_W) 'qt/walletmodeltransaction.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/walletmodeltransaction.cpp'; fi`

qt/qt_libbitcoinqt_a-walletview.o: qt/walletview.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-walletview.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-walletview.Tpo -c -o qt/qt_libbitcoinqt_a-walletview.o `test -f 'qt/walletview.cpp' || echo '$(srcdir)/'`qt/walletview.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-walletview.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-walletview.Po
#	$(AM_V_CXX)source='qt/walletview.cpp' object='qt/qt_libbitcoinqt_a-walletview.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-walletview.o `test -f 'qt/walletview.cpp' || echo '$(srcdir)/'`qt/walletview.cpp

qt/qt_libbitcoinqt_a-walletview.obj: qt/walletview.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-walletview.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-walletview.Tpo -c -o qt/qt_libbitcoinqt_a-walletview.obj `if test -f 'qt/walletview.cpp'; then $(CYGPATH_W) 'qt/walletview.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/walletview.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-walletview.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-walletview.Po
#	$(AM_V_CXX)source='qt/walletview.cpp' object='qt/qt_libbitcoinqt_a-walletview.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-walletview.obj `if test -f 'qt/walletview.cpp'; then $(CYGPATH_W) 'qt/walletview.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/walletview.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_addressbookpage.o: qt/moc_addressbookpage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_addressbookpage.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_addressbookpage.Tpo -c -o qt/qt_libbitcoinqt_a-moc_addressbookpage.o `test -f 'qt/moc_addressbookpage.cpp' || echo '$(srcdir)/'`qt/moc_addressbookpage.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_addressbookpage.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_addressbookpage.Po
#	$(AM_V_CXX)source='qt/moc_addressbookpage.cpp' object='qt/qt_libbitcoinqt_a-moc_addressbookpage.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_addressbookpage.o `test -f 'qt/moc_addressbookpage.cpp' || echo '$(srcdir)/'`qt/moc_addressbookpage.cpp

qt/qt_libbitcoinqt_a-moc_addressbookpage.obj: qt/moc_addressbookpage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_addressbookpage.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_addressbookpage.Tpo -c -o qt/qt_libbitcoinqt_a-moc_addressbookpage.obj `if test -f 'qt/moc_addressbookpage.cpp'; then $(CYGPATH_W) 'qt/moc_addressbookpage.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_addressbookpage.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_addressbookpage.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_addressbookpage.Po
#	$(AM_V_CXX)source='qt/moc_addressbookpage.cpp' object='qt/qt_libbitcoinqt_a-moc_addressbookpage.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_addressbookpage.obj `if test -f 'qt/moc_addressbookpage.cpp'; then $(CYGPATH_W) 'qt/moc_addressbookpage.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_addressbookpage.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_addresstablemodel.o: qt/moc_addresstablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_addresstablemodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_addresstablemodel.Tpo -c -o qt/qt_libbitcoinqt_a-moc_addresstablemodel.o `test -f 'qt/moc_addresstablemodel.cpp' || echo '$(srcdir)/'`qt/moc_addresstablemodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_addresstablemodel.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_addresstablemodel.Po
#	$(AM_V_CXX)source='qt/moc_addresstablemodel.cpp' object='qt/qt_libbitcoinqt_a-moc_addresstablemodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_addresstablemodel.o `test -f 'qt/moc_addresstablemodel.cpp' || echo '$(srcdir)/'`qt/moc_addresstablemodel.cpp

qt/qt_libbitcoinqt_a-moc_addresstablemodel.obj: qt/moc_addresstablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_addresstablemodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_addresstablemodel.Tpo -c -o qt/qt_libbitcoinqt_a-moc_addresstablemodel.obj `if test -f 'qt/moc_addresstablemodel.cpp'; then $(CYGPATH_W) 'qt/moc_addresstablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_addresstablemodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_addresstablemodel.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_addresstablemodel.Po
#	$(AM_V_CXX)source='qt/moc_addresstablemodel.cpp' object='qt/qt_libbitcoinqt_a-moc_addresstablemodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_addresstablemodel.obj `if test -f 'qt/moc_addresstablemodel.cpp'; then $(CYGPATH_W) 'qt/moc_addresstablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_addresstablemodel.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_askpassphrasedialog.o: qt/moc_askpassphrasedialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_askpassphrasedialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_askpassphrasedialog.Tpo -c -o qt/qt_libbitcoinqt_a-moc_askpassphrasedialog.o `test -f 'qt/moc_askpassphrasedialog.cpp' || echo '$(srcdir)/'`qt/moc_askpassphrasedialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_askpassphrasedialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_askpassphrasedialog.Po
#	$(AM_V_CXX)source='qt/moc_askpassphrasedialog.cpp' object='qt/qt_libbitcoinqt_a-moc_askpassphrasedialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_askpassphrasedialog.o `test -f 'qt/moc_askpassphrasedialog.cpp' || echo '$(srcdir)/'`qt/moc_askpassphrasedialog.cpp

qt/qt_libbitcoinqt_a-moc_askpassphrasedialog.obj: qt/moc_askpassphrasedialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_askpassphrasedialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_askpassphrasedialog.Tpo -c -o qt/qt_libbitcoinqt_a-moc_askpassphrasedialog.obj `if test -f 'qt/moc_askpassphrasedialog.cpp'; then $(CYGPATH_W) 'qt/moc_askpassphrasedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_askpassphrasedialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_askpassphrasedialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_askpassphrasedialog.Po
#	$(AM_V_CXX)source='qt/moc_askpassphrasedialog.cpp' object='qt/qt_libbitcoinqt_a-moc_askpassphrasedialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_askpassphrasedialog.obj `if test -f 'qt/moc_askpassphrasedialog.cpp'; then $(CYGPATH_W) 'qt/moc_askpassphrasedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_askpassphrasedialog.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_createwalletdialog.o: qt/moc_createwalletdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_createwalletdialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_createwalletdialog.Tpo -c -o qt/qt_libbitcoinqt_a-moc_createwalletdialog.o `test -f 'qt/moc_createwalletdialog.cpp' || echo '$(srcdir)/'`qt/moc_createwalletdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_createwalletdialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_createwalletdialog.Po
#	$(AM_V_CXX)source='qt/moc_createwalletdialog.cpp' object='qt/qt_libbitcoinqt_a-moc_createwalletdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_createwalletdialog.o `test -f 'qt/moc_createwalletdialog.cpp' || echo '$(srcdir)/'`qt/moc_createwalletdialog.cpp

qt/qt_libbitcoinqt_a-moc_createwalletdialog.obj: qt/moc_createwalletdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_createwalletdialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_createwalletdialog.Tpo -c -o qt/qt_libbitcoinqt_a-moc_createwalletdialog.obj `if test -f 'qt/moc_createwalletdialog.cpp'; then $(CYGPATH_W) 'qt/moc_createwalletdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_createwalletdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_createwalletdialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_createwalletdialog.Po
#	$(AM_V_CXX)source='qt/moc_createwalletdialog.cpp' object='qt/qt_libbitcoinqt_a-moc_createwalletdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_createwalletdialog.obj `if test -f 'qt/moc_createwalletdialog.cpp'; then $(CYGPATH_W) 'qt/moc_createwalletdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_createwalletdialog.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_bantablemodel.o: qt/moc_bantablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_bantablemodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bantablemodel.Tpo -c -o qt/qt_libbitcoinqt_a-moc_bantablemodel.o `test -f 'qt/moc_bantablemodel.cpp' || echo '$(srcdir)/'`qt/moc_bantablemodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bantablemodel.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bantablemodel.Po
#	$(AM_V_CXX)source='qt/moc_bantablemodel.cpp' object='qt/qt_libbitcoinqt_a-moc_bantablemodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_bantablemodel.o `test -f 'qt/moc_bantablemodel.cpp' || echo '$(srcdir)/'`qt/moc_bantablemodel.cpp

qt/qt_libbitcoinqt_a-moc_bantablemodel.obj: qt/moc_bantablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_bantablemodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bantablemodel.Tpo -c -o qt/qt_libbitcoinqt_a-moc_bantablemodel.obj `if test -f 'qt/moc_bantablemodel.cpp'; then $(CYGPATH_W) 'qt/moc_bantablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_bantablemodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bantablemodel.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bantablemodel.Po
#	$(AM_V_CXX)source='qt/moc_bantablemodel.cpp' object='qt/qt_libbitcoinqt_a-moc_bantablemodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_bantablemodel.obj `if test -f 'qt/moc_bantablemodel.cpp'; then $(CYGPATH_W) 'qt/moc_bantablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_bantablemodel.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_bitcoin.o: qt/moc_bitcoin.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_bitcoin.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoin.Tpo -c -o qt/qt_libbitcoinqt_a-moc_bitcoin.o `test -f 'qt/moc_bitcoin.cpp' || echo '$(srcdir)/'`qt/moc_bitcoin.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoin.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoin.Po
#	$(AM_V_CXX)source='qt/moc_bitcoin.cpp' object='qt/qt_libbitcoinqt_a-moc_bitcoin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_bitcoin.o `test -f 'qt/moc_bitcoin.cpp' || echo '$(srcdir)/'`qt/moc_bitcoin.cpp

qt/qt_libbitcoinqt_a-moc_bitcoin.obj: qt/moc_bitcoin.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_bitcoin.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoin.Tpo -c -o qt/qt_libbitcoinqt_a-moc_bitcoin.obj `if test -f 'qt/moc_bitcoin.cpp'; then $(CYGPATH_W) 'qt/moc_bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_bitcoin.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoin.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoin.Po
#	$(AM_V_CXX)source='qt/moc_bitcoin.cpp' object='qt/qt_libbitcoinqt_a-moc_bitcoin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_bitcoin.obj `if test -f 'qt/moc_bitcoin.cpp'; then $(CYGPATH_W) 'qt/moc_bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_bitcoin.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_bitcoinaddressvalidator.o: qt/moc_bitcoinaddressvalidator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_bitcoinaddressvalidator.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoinaddressvalidator.Tpo -c -o qt/qt_libbitcoinqt_a-moc_bitcoinaddressvalidator.o `test -f 'qt/moc_bitcoinaddressvalidator.cpp' || echo '$(srcdir)/'`qt/moc_bitcoinaddressvalidator.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoinaddressvalidator.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoinaddressvalidator.Po
#	$(AM_V_CXX)source='qt/moc_bitcoinaddressvalidator.cpp' object='qt/qt_libbitcoinqt_a-moc_bitcoinaddressvalidator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_bitcoinaddressvalidator.o `test -f 'qt/moc_bitcoinaddressvalidator.cpp' || echo '$(srcdir)/'`qt/moc_bitcoinaddressvalidator.cpp

qt/qt_libbitcoinqt_a-moc_bitcoinaddressvalidator.obj: qt/moc_bitcoinaddressvalidator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_bitcoinaddressvalidator.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoinaddressvalidator.Tpo -c -o qt/qt_libbitcoinqt_a-moc_bitcoinaddressvalidator.obj `if test -f 'qt/moc_bitcoinaddressvalidator.cpp'; then $(CYGPATH_W) 'qt/moc_bitcoinaddressvalidator.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_bitcoinaddressvalidator.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoinaddressvalidator.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoinaddressvalidator.Po
#	$(AM_V_CXX)source='qt/moc_bitcoinaddressvalidator.cpp' object='qt/qt_libbitcoinqt_a-moc_bitcoinaddressvalidator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_bitcoinaddressvalidator.obj `if test -f 'qt/moc_bitcoinaddressvalidator.cpp'; then $(CYGPATH_W) 'qt/moc_bitcoinaddressvalidator.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_bitcoinaddressvalidator.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_bitcoinamountfield.o: qt/moc_bitcoinamountfield.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_bitcoinamountfield.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoinamountfield.Tpo -c -o qt/qt_libbitcoinqt_a-moc_bitcoinamountfield.o `test -f 'qt/moc_bitcoinamountfield.cpp' || echo '$(srcdir)/'`qt/moc_bitcoinamountfield.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoinamountfield.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoinamountfield.Po
#	$(AM_V_CXX)source='qt/moc_bitcoinamountfield.cpp' object='qt/qt_libbitcoinqt_a-moc_bitcoinamountfield.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_bitcoinamountfield.o `test -f 'qt/moc_bitcoinamountfield.cpp' || echo '$(srcdir)/'`qt/moc_bitcoinamountfield.cpp

qt/qt_libbitcoinqt_a-moc_bitcoinamountfield.obj: qt/moc_bitcoinamountfield.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_bitcoinamountfield.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoinamountfield.Tpo -c -o qt/qt_libbitcoinqt_a-moc_bitcoinamountfield.obj `if test -f 'qt/moc_bitcoinamountfield.cpp'; then $(CYGPATH_W) 'qt/moc_bitcoinamountfield.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_bitcoinamountfield.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoinamountfield.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoinamountfield.Po
#	$(AM_V_CXX)source='qt/moc_bitcoinamountfield.cpp' object='qt/qt_libbitcoinqt_a-moc_bitcoinamountfield.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_bitcoinamountfield.obj `if test -f 'qt/moc_bitcoinamountfield.cpp'; then $(CYGPATH_W) 'qt/moc_bitcoinamountfield.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_bitcoinamountfield.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_bitcoingui.o: qt/moc_bitcoingui.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_bitcoingui.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoingui.Tpo -c -o qt/qt_libbitcoinqt_a-moc_bitcoingui.o `test -f 'qt/moc_bitcoingui.cpp' || echo '$(srcdir)/'`qt/moc_bitcoingui.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoingui.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoingui.Po
#	$(AM_V_CXX)source='qt/moc_bitcoingui.cpp' object='qt/qt_libbitcoinqt_a-moc_bitcoingui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_bitcoingui.o `test -f 'qt/moc_bitcoingui.cpp' || echo '$(srcdir)/'`qt/moc_bitcoingui.cpp

qt/qt_libbitcoinqt_a-moc_bitcoingui.obj: qt/moc_bitcoingui.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_bitcoingui.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoingui.Tpo -c -o qt/qt_libbitcoinqt_a-moc_bitcoingui.obj `if test -f 'qt/moc_bitcoingui.cpp'; then $(CYGPATH_W) 'qt/moc_bitcoingui.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_bitcoingui.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoingui.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoingui.Po
#	$(AM_V_CXX)source='qt/moc_bitcoingui.cpp' object='qt/qt_libbitcoinqt_a-moc_bitcoingui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_bitcoingui.obj `if test -f 'qt/moc_bitcoingui.cpp'; then $(CYGPATH_W) 'qt/moc_bitcoingui.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_bitcoingui.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_bitcoinunits.o: qt/moc_bitcoinunits.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_bitcoinunits.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoinunits.Tpo -c -o qt/qt_libbitcoinqt_a-moc_bitcoinunits.o `test -f 'qt/moc_bitcoinunits.cpp' || echo '$(srcdir)/'`qt/moc_bitcoinunits.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoinunits.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoinunits.Po
#	$(AM_V_CXX)source='qt/moc_bitcoinunits.cpp' object='qt/qt_libbitcoinqt_a-moc_bitcoinunits.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_bitcoinunits.o `test -f 'qt/moc_bitcoinunits.cpp' || echo '$(srcdir)/'`qt/moc_bitcoinunits.cpp

qt/qt_libbitcoinqt_a-moc_bitcoinunits.obj: qt/moc_bitcoinunits.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_bitcoinunits.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoinunits.Tpo -c -o qt/qt_libbitcoinqt_a-moc_bitcoinunits.obj `if test -f 'qt/moc_bitcoinunits.cpp'; then $(CYGPATH_W) 'qt/moc_bitcoinunits.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_bitcoinunits.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoinunits.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_bitcoinunits.Po
#	$(AM_V_CXX)source='qt/moc_bitcoinunits.cpp' object='qt/qt_libbitcoinqt_a-moc_bitcoinunits.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_bitcoinunits.obj `if test -f 'qt/moc_bitcoinunits.cpp'; then $(CYGPATH_W) 'qt/moc_bitcoinunits.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_bitcoinunits.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_clientmodel.o: qt/moc_clientmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_clientmodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_clientmodel.Tpo -c -o qt/qt_libbitcoinqt_a-moc_clientmodel.o `test -f 'qt/moc_clientmodel.cpp' || echo '$(srcdir)/'`qt/moc_clientmodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_clientmodel.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_clientmodel.Po
#	$(AM_V_CXX)source='qt/moc_clientmodel.cpp' object='qt/qt_libbitcoinqt_a-moc_clientmodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_clientmodel.o `test -f 'qt/moc_clientmodel.cpp' || echo '$(srcdir)/'`qt/moc_clientmodel.cpp

qt/qt_libbitcoinqt_a-moc_clientmodel.obj: qt/moc_clientmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_clientmodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_clientmodel.Tpo -c -o qt/qt_libbitcoinqt_a-moc_clientmodel.obj `if test -f 'qt/moc_clientmodel.cpp'; then $(CYGPATH_W) 'qt/moc_clientmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_clientmodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_clientmodel.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_clientmodel.Po
#	$(AM_V_CXX)source='qt/moc_clientmodel.cpp' object='qt/qt_libbitcoinqt_a-moc_clientmodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_clientmodel.obj `if test -f 'qt/moc_clientmodel.cpp'; then $(CYGPATH_W) 'qt/moc_clientmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_clientmodel.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_coincontroldialog.o: qt/moc_coincontroldialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_coincontroldialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_coincontroldialog.Tpo -c -o qt/qt_libbitcoinqt_a-moc_coincontroldialog.o `test -f 'qt/moc_coincontroldialog.cpp' || echo '$(srcdir)/'`qt/moc_coincontroldialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_coincontroldialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_coincontroldialog.Po
#	$(AM_V_CXX)source='qt/moc_coincontroldialog.cpp' object='qt/qt_libbitcoinqt_a-moc_coincontroldialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_coincontroldialog.o `test -f 'qt/moc_coincontroldialog.cpp' || echo '$(srcdir)/'`qt/moc_coincontroldialog.cpp

qt/qt_libbitcoinqt_a-moc_coincontroldialog.obj: qt/moc_coincontroldialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_coincontroldialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_coincontroldialog.Tpo -c -o qt/qt_libbitcoinqt_a-moc_coincontroldialog.obj `if test -f 'qt/moc_coincontroldialog.cpp'; then $(CYGPATH_W) 'qt/moc_coincontroldialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_coincontroldialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_coincontroldialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_coincontroldialog.Po
#	$(AM_V_CXX)source='qt/moc_coincontroldialog.cpp' object='qt/qt_libbitcoinqt_a-moc_coincontroldialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_coincontroldialog.obj `if test -f 'qt/moc_coincontroldialog.cpp'; then $(CYGPATH_W) 'qt/moc_coincontroldialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_coincontroldialog.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_coincontroltreewidget.o: qt/moc_coincontroltreewidget.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_coincontroltreewidget.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_coincontroltreewidget.Tpo -c -o qt/qt_libbitcoinqt_a-moc_coincontroltreewidget.o `test -f 'qt/moc_coincontroltreewidget.cpp' || echo '$(srcdir)/'`qt/moc_coincontroltreewidget.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_coincontroltreewidget.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_coincontroltreewidget.Po
#	$(AM_V_CXX)source='qt/moc_coincontroltreewidget.cpp' object='qt/qt_libbitcoinqt_a-moc_coincontroltreewidget.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_coincontroltreewidget.o `test -f 'qt/moc_coincontroltreewidget.cpp' || echo '$(srcdir)/'`qt/moc_coincontroltreewidget.cpp

qt/qt_libbitcoinqt_a-moc_coincontroltreewidget.obj: qt/moc_coincontroltreewidget.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_coincontroltreewidget.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_coincontroltreewidget.Tpo -c -o qt/qt_libbitcoinqt_a-moc_coincontroltreewidget.obj `if test -f 'qt/moc_coincontroltreewidget.cpp'; then $(CYGPATH_W) 'qt/moc_coincontroltreewidget.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_coincontroltreewidget.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_coincontroltreewidget.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_coincontroltreewidget.Po
#	$(AM_V_CXX)source='qt/moc_coincontroltreewidget.cpp' object='qt/qt_libbitcoinqt_a-moc_coincontroltreewidget.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_coincontroltreewidget.obj `if test -f 'qt/moc_coincontroltreewidget.cpp'; then $(CYGPATH_W) 'qt/moc_coincontroltreewidget.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_coincontroltreewidget.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_csvmodelwriter.o: qt/moc_csvmodelwriter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_csvmodelwriter.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_csvmodelwriter.Tpo -c -o qt/qt_libbitcoinqt_a-moc_csvmodelwriter.o `test -f 'qt/moc_csvmodelwriter.cpp' || echo '$(srcdir)/'`qt/moc_csvmodelwriter.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_csvmodelwriter.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_csvmodelwriter.Po
#	$(AM_V_CXX)source='qt/moc_csvmodelwriter.cpp' object='qt/qt_libbitcoinqt_a-moc_csvmodelwriter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_csvmodelwriter.o `test -f 'qt/moc_csvmodelwriter.cpp' || echo '$(srcdir)/'`qt/moc_csvmodelwriter.cpp

qt/qt_libbitcoinqt_a-moc_csvmodelwriter.obj: qt/moc_csvmodelwriter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_csvmodelwriter.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_csvmodelwriter.Tpo -c -o qt/qt_libbitcoinqt_a-moc_csvmodelwriter.obj `if test -f 'qt/moc_csvmodelwriter.cpp'; then $(CYGPATH_W) 'qt/moc_csvmodelwriter.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_csvmodelwriter.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_csvmodelwriter.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_csvmodelwriter.Po
#	$(AM_V_CXX)source='qt/moc_csvmodelwriter.cpp' object='qt/qt_libbitcoinqt_a-moc_csvmodelwriter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_csvmodelwriter.obj `if test -f 'qt/moc_csvmodelwriter.cpp'; then $(CYGPATH_W) 'qt/moc_csvmodelwriter.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_csvmodelwriter.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_editaddressdialog.o: qt/moc_editaddressdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_editaddressdialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_editaddressdialog.Tpo -c -o qt/qt_libbitcoinqt_a-moc_editaddressdialog.o `test -f 'qt/moc_editaddressdialog.cpp' || echo '$(srcdir)/'`qt/moc_editaddressdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_editaddressdialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_editaddressdialog.Po
#	$(AM_V_CXX)source='qt/moc_editaddressdialog.cpp' object='qt/qt_libbitcoinqt_a-moc_editaddressdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_editaddressdialog.o `test -f 'qt/moc_editaddressdialog.cpp' || echo '$(srcdir)/'`qt/moc_editaddressdialog.cpp

qt/qt_libbitcoinqt_a-moc_editaddressdialog.obj: qt/moc_editaddressdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_editaddressdialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_editaddressdialog.Tpo -c -o qt/qt_libbitcoinqt_a-moc_editaddressdialog.obj `if test -f 'qt/moc_editaddressdialog.cpp'; then $(CYGPATH_W) 'qt/moc_editaddressdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_editaddressdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_editaddressdialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_editaddressdialog.Po
#	$(AM_V_CXX)source='qt/moc_editaddressdialog.cpp' object='qt/qt_libbitcoinqt_a-moc_editaddressdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_editaddressdialog.obj `if test -f 'qt/moc_editaddressdialog.cpp'; then $(CYGPATH_W) 'qt/moc_editaddressdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_editaddressdialog.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_guiutil.o: qt/moc_guiutil.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_guiutil.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_guiutil.Tpo -c -o qt/qt_libbitcoinqt_a-moc_guiutil.o `test -f 'qt/moc_guiutil.cpp' || echo '$(srcdir)/'`qt/moc_guiutil.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_guiutil.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_guiutil.Po
#	$(AM_V_CXX)source='qt/moc_guiutil.cpp' object='qt/qt_libbitcoinqt_a-moc_guiutil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_guiutil.o `test -f 'qt/moc_guiutil.cpp' || echo '$(srcdir)/'`qt/moc_guiutil.cpp

qt/qt_libbitcoinqt_a-moc_guiutil.obj: qt/moc_guiutil.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_guiutil.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_guiutil.Tpo -c -o qt/qt_libbitcoinqt_a-moc_guiutil.obj `if test -f 'qt/moc_guiutil.cpp'; then $(CYGPATH_W) 'qt/moc_guiutil.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_guiutil.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_guiutil.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_guiutil.Po
#	$(AM_V_CXX)source='qt/moc_guiutil.cpp' object='qt/qt_libbitcoinqt_a-moc_guiutil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_guiutil.obj `if test -f 'qt/moc_guiutil.cpp'; then $(CYGPATH_W) 'qt/moc_guiutil.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_guiutil.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_initexecutor.o: qt/moc_initexecutor.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_initexecutor.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_initexecutor.Tpo -c -o qt/qt_libbitcoinqt_a-moc_initexecutor.o `test -f 'qt/moc_initexecutor.cpp' || echo '$(srcdir)/'`qt/moc_initexecutor.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_initexecutor.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_initexecutor.Po
#	$(AM_V_CXX)source='qt/moc_initexecutor.cpp' object='qt/qt_libbitcoinqt_a-moc_initexecutor.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_initexecutor.o `test -f 'qt/moc_initexecutor.cpp' || echo '$(srcdir)/'`qt/moc_initexecutor.cpp

qt/qt_libbitcoinqt_a-moc_initexecutor.obj: qt/moc_initexecutor.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_initexecutor.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_initexecutor.Tpo -c -o qt/qt_libbitcoinqt_a-moc_initexecutor.obj `if test -f 'qt/moc_initexecutor.cpp'; then $(CYGPATH_W) 'qt/moc_initexecutor.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_initexecutor.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_initexecutor.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_initexecutor.Po
#	$(AM_V_CXX)source='qt/moc_initexecutor.cpp' object='qt/qt_libbitcoinqt_a-moc_initexecutor.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_initexecutor.obj `if test -f 'qt/moc_initexecutor.cpp'; then $(CYGPATH_W) 'qt/moc_initexecutor.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_initexecutor.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_intro.o: qt/moc_intro.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_intro.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_intro.Tpo -c -o qt/qt_libbitcoinqt_a-moc_intro.o `test -f 'qt/moc_intro.cpp' || echo '$(srcdir)/'`qt/moc_intro.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_intro.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_intro.Po
#	$(AM_V_CXX)source='qt/moc_intro.cpp' object='qt/qt_libbitcoinqt_a-moc_intro.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_intro.o `test -f 'qt/moc_intro.cpp' || echo '$(srcdir)/'`qt/moc_intro.cpp

qt/qt_libbitcoinqt_a-moc_intro.obj: qt/moc_intro.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_intro.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_intro.Tpo -c -o qt/qt_libbitcoinqt_a-moc_intro.obj `if test -f 'qt/moc_intro.cpp'; then $(CYGPATH_W) 'qt/moc_intro.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_intro.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_intro.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_intro.Po
#	$(AM_V_CXX)source='qt/moc_intro.cpp' object='qt/qt_libbitcoinqt_a-moc_intro.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_intro.obj `if test -f 'qt/moc_intro.cpp'; then $(CYGPATH_W) 'qt/moc_intro.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_intro.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_macdockiconhandler.o: qt/moc_macdockiconhandler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_macdockiconhandler.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_macdockiconhandler.Tpo -c -o qt/qt_libbitcoinqt_a-moc_macdockiconhandler.o `test -f 'qt/moc_macdockiconhandler.cpp' || echo '$(srcdir)/'`qt/moc_macdockiconhandler.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_macdockiconhandler.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_macdockiconhandler.Po
#	$(AM_V_CXX)source='qt/moc_macdockiconhandler.cpp' object='qt/qt_libbitcoinqt_a-moc_macdockiconhandler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_macdockiconhandler.o `test -f 'qt/moc_macdockiconhandler.cpp' || echo '$(srcdir)/'`qt/moc_macdockiconhandler.cpp

qt/qt_libbitcoinqt_a-moc_macdockiconhandler.obj: qt/moc_macdockiconhandler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_macdockiconhandler.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_macdockiconhandler.Tpo -c -o qt/qt_libbitcoinqt_a-moc_macdockiconhandler.obj `if test -f 'qt/moc_macdockiconhandler.cpp'; then $(CYGPATH_W) 'qt/moc_macdockiconhandler.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_macdockiconhandler.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_macdockiconhandler.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_macdockiconhandler.Po
#	$(AM_V_CXX)source='qt/moc_macdockiconhandler.cpp' object='qt/qt_libbitcoinqt_a-moc_macdockiconhandler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_macdockiconhandler.obj `if test -f 'qt/moc_macdockiconhandler.cpp'; then $(CYGPATH_W) 'qt/moc_macdockiconhandler.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_macdockiconhandler.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_macnotificationhandler.o: qt/moc_macnotificationhandler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_macnotificationhandler.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_macnotificationhandler.Tpo -c -o qt/qt_libbitcoinqt_a-moc_macnotificationhandler.o `test -f 'qt/moc_macnotificationhandler.cpp' || echo '$(srcdir)/'`qt/moc_macnotificationhandler.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_macnotificationhandler.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_macnotificationhandler.Po
#	$(AM_V_CXX)source='qt/moc_macnotificationhandler.cpp' object='qt/qt_libbitcoinqt_a-moc_macnotificationhandler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_macnotificationhandler.o `test -f 'qt/moc_macnotificationhandler.cpp' || echo '$(srcdir)/'`qt/moc_macnotificationhandler.cpp

qt/qt_libbitcoinqt_a-moc_macnotificationhandler.obj: qt/moc_macnotificationhandler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_macnotificationhandler.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_macnotificationhandler.Tpo -c -o qt/qt_libbitcoinqt_a-moc_macnotificationhandler.obj `if test -f 'qt/moc_macnotificationhandler.cpp'; then $(CYGPATH_W) 'qt/moc_macnotificationhandler.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_macnotificationhandler.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_macnotificationhandler.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_macnotificationhandler.Po
#	$(AM_V_CXX)source='qt/moc_macnotificationhandler.cpp' object='qt/qt_libbitcoinqt_a-moc_macnotificationhandler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_macnotificationhandler.obj `if test -f 'qt/moc_macnotificationhandler.cpp'; then $(CYGPATH_W) 'qt/moc_macnotificationhandler.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_macnotificationhandler.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_modaloverlay.o: qt/moc_modaloverlay.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_modaloverlay.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_modaloverlay.Tpo -c -o qt/qt_libbitcoinqt_a-moc_modaloverlay.o `test -f 'qt/moc_modaloverlay.cpp' || echo '$(srcdir)/'`qt/moc_modaloverlay.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_modaloverlay.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_modaloverlay.Po
#	$(AM_V_CXX)source='qt/moc_modaloverlay.cpp' object='qt/qt_libbitcoinqt_a-moc_modaloverlay.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_modaloverlay.o `test -f 'qt/moc_modaloverlay.cpp' || echo '$(srcdir)/'`qt/moc_modaloverlay.cpp

qt/qt_libbitcoinqt_a-moc_modaloverlay.obj: qt/moc_modaloverlay.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_modaloverlay.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_modaloverlay.Tpo -c -o qt/qt_libbitcoinqt_a-moc_modaloverlay.obj `if test -f 'qt/moc_modaloverlay.cpp'; then $(CYGPATH_W) 'qt/moc_modaloverlay.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_modaloverlay.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_modaloverlay.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_modaloverlay.Po
#	$(AM_V_CXX)source='qt/moc_modaloverlay.cpp' object='qt/qt_libbitcoinqt_a-moc_modaloverlay.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_modaloverlay.obj `if test -f 'qt/moc_modaloverlay.cpp'; then $(CYGPATH_W) 'qt/moc_modaloverlay.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_modaloverlay.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_notificator.o: qt/moc_notificator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_notificator.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_notificator.Tpo -c -o qt/qt_libbitcoinqt_a-moc_notificator.o `test -f 'qt/moc_notificator.cpp' || echo '$(srcdir)/'`qt/moc_notificator.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_notificator.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_notificator.Po
#	$(AM_V_CXX)source='qt/moc_notificator.cpp' object='qt/qt_libbitcoinqt_a-moc_notificator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_notificator.o `test -f 'qt/moc_notificator.cpp' || echo '$(srcdir)/'`qt/moc_notificator.cpp

qt/qt_libbitcoinqt_a-moc_notificator.obj: qt/moc_notificator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_notificator.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_notificator.Tpo -c -o qt/qt_libbitcoinqt_a-moc_notificator.obj `if test -f 'qt/moc_notificator.cpp'; then $(CYGPATH_W) 'qt/moc_notificator.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_notificator.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_notificator.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_notificator.Po
#	$(AM_V_CXX)source='qt/moc_notificator.cpp' object='qt/qt_libbitcoinqt_a-moc_notificator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_notificator.obj `if test -f 'qt/moc_notificator.cpp'; then $(CYGPATH_W) 'qt/moc_notificator.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_notificator.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_openuridialog.o: qt/moc_openuridialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_openuridialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_openuridialog.Tpo -c -o qt/qt_libbitcoinqt_a-moc_openuridialog.o `test -f 'qt/moc_openuridialog.cpp' || echo '$(srcdir)/'`qt/moc_openuridialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_openuridialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_openuridialog.Po
#	$(AM_V_CXX)source='qt/moc_openuridialog.cpp' object='qt/qt_libbitcoinqt_a-moc_openuridialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_openuridialog.o `test -f 'qt/moc_openuridialog.cpp' || echo '$(srcdir)/'`qt/moc_openuridialog.cpp

qt/qt_libbitcoinqt_a-moc_openuridialog.obj: qt/moc_openuridialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_openuridialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_openuridialog.Tpo -c -o qt/qt_libbitcoinqt_a-moc_openuridialog.obj `if test -f 'qt/moc_openuridialog.cpp'; then $(CYGPATH_W) 'qt/moc_openuridialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_openuridialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_openuridialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_openuridialog.Po
#	$(AM_V_CXX)source='qt/moc_openuridialog.cpp' object='qt/qt_libbitcoinqt_a-moc_openuridialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_openuridialog.obj `if test -f 'qt/moc_openuridialog.cpp'; then $(CYGPATH_W) 'qt/moc_openuridialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_openuridialog.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_optionsdialog.o: qt/moc_optionsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_optionsdialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_optionsdialog.Tpo -c -o qt/qt_libbitcoinqt_a-moc_optionsdialog.o `test -f 'qt/moc_optionsdialog.cpp' || echo '$(srcdir)/'`qt/moc_optionsdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_optionsdialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_optionsdialog.Po
#	$(AM_V_CXX)source='qt/moc_optionsdialog.cpp' object='qt/qt_libbitcoinqt_a-moc_optionsdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_optionsdialog.o `test -f 'qt/moc_optionsdialog.cpp' || echo '$(srcdir)/'`qt/moc_optionsdialog.cpp

qt/qt_libbitcoinqt_a-moc_optionsdialog.obj: qt/moc_optionsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_optionsdialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_optionsdialog.Tpo -c -o qt/qt_libbitcoinqt_a-moc_optionsdialog.obj `if test -f 'qt/moc_optionsdialog.cpp'; then $(CYGPATH_W) 'qt/moc_optionsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_optionsdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_optionsdialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_optionsdialog.Po
#	$(AM_V_CXX)source='qt/moc_optionsdialog.cpp' object='qt/qt_libbitcoinqt_a-moc_optionsdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_optionsdialog.obj `if test -f 'qt/moc_optionsdialog.cpp'; then $(CYGPATH_W) 'qt/moc_optionsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_optionsdialog.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_optionsmodel.o: qt/moc_optionsmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_optionsmodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_optionsmodel.Tpo -c -o qt/qt_libbitcoinqt_a-moc_optionsmodel.o `test -f 'qt/moc_optionsmodel.cpp' || echo '$(srcdir)/'`qt/moc_optionsmodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_optionsmodel.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_optionsmodel.Po
#	$(AM_V_CXX)source='qt/moc_optionsmodel.cpp' object='qt/qt_libbitcoinqt_a-moc_optionsmodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_optionsmodel.o `test -f 'qt/moc_optionsmodel.cpp' || echo '$(srcdir)/'`qt/moc_optionsmodel.cpp

qt/qt_libbitcoinqt_a-moc_optionsmodel.obj: qt/moc_optionsmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_optionsmodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_optionsmodel.Tpo -c -o qt/qt_libbitcoinqt_a-moc_optionsmodel.obj `if test -f 'qt/moc_optionsmodel.cpp'; then $(CYGPATH_W) 'qt/moc_optionsmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_optionsmodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_optionsmodel.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_optionsmodel.Po
#	$(AM_V_CXX)source='qt/moc_optionsmodel.cpp' object='qt/qt_libbitcoinqt_a-moc_optionsmodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_optionsmodel.obj `if test -f 'qt/moc_optionsmodel.cpp'; then $(CYGPATH_W) 'qt/moc_optionsmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_optionsmodel.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_overviewpage.o: qt/moc_overviewpage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_overviewpage.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_overviewpage.Tpo -c -o qt/qt_libbitcoinqt_a-moc_overviewpage.o `test -f 'qt/moc_overviewpage.cpp' || echo '$(srcdir)/'`qt/moc_overviewpage.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_overviewpage.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_overviewpage.Po
#	$(AM_V_CXX)source='qt/moc_overviewpage.cpp' object='qt/qt_libbitcoinqt_a-moc_overviewpage.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_overviewpage.o `test -f 'qt/moc_overviewpage.cpp' || echo '$(srcdir)/'`qt/moc_overviewpage.cpp

qt/qt_libbitcoinqt_a-moc_overviewpage.obj: qt/moc_overviewpage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_overviewpage.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_overviewpage.Tpo -c -o qt/qt_libbitcoinqt_a-moc_overviewpage.obj `if test -f 'qt/moc_overviewpage.cpp'; then $(CYGPATH_W) 'qt/moc_overviewpage.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_overviewpage.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_overviewpage.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_overviewpage.Po
#	$(AM_V_CXX)source='qt/moc_overviewpage.cpp' object='qt/qt_libbitcoinqt_a-moc_overviewpage.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_overviewpage.obj `if test -f 'qt/moc_overviewpage.cpp'; then $(CYGPATH_W) 'qt/moc_overviewpage.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_overviewpage.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_peertablemodel.o: qt/moc_peertablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_peertablemodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_peertablemodel.Tpo -c -o qt/qt_libbitcoinqt_a-moc_peertablemodel.o `test -f 'qt/moc_peertablemodel.cpp' || echo '$(srcdir)/'`qt/moc_peertablemodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_peertablemodel.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_peertablemodel.Po
#	$(AM_V_CXX)source='qt/moc_peertablemodel.cpp' object='qt/qt_libbitcoinqt_a-moc_peertablemodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_peertablemodel.o `test -f 'qt/moc_peertablemodel.cpp' || echo '$(srcdir)/'`qt/moc_peertablemodel.cpp

qt/qt_libbitcoinqt_a-moc_peertablemodel.obj: qt/moc_peertablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_peertablemodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_peertablemodel.Tpo -c -o qt/qt_libbitcoinqt_a-moc_peertablemodel.obj `if test -f 'qt/moc_peertablemodel.cpp'; then $(CYGPATH_W) 'qt/moc_peertablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_peertablemodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_peertablemodel.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_peertablemodel.Po
#	$(AM_V_CXX)source='qt/moc_peertablemodel.cpp' object='qt/qt_libbitcoinqt_a-moc_peertablemodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_peertablemodel.obj `if test -f 'qt/moc_peertablemodel.cpp'; then $(CYGPATH_W) 'qt/moc_peertablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_peertablemodel.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_peertablesortproxy.o: qt/moc_peertablesortproxy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_peertablesortproxy.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_peertablesortproxy.Tpo -c -o qt/qt_libbitcoinqt_a-moc_peertablesortproxy.o `test -f 'qt/moc_peertablesortproxy.cpp' || echo '$(srcdir)/'`qt/moc_peertablesortproxy.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_peertablesortproxy.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_peertablesortproxy.Po
#	$(AM_V_CXX)source='qt/moc_peertablesortproxy.cpp' object='qt/qt_libbitcoinqt_a-moc_peertablesortproxy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_peertablesortproxy.o `test -f 'qt/moc_peertablesortproxy.cpp' || echo '$(srcdir)/'`qt/moc_peertablesortproxy.cpp

qt/qt_libbitcoinqt_a-moc_peertablesortproxy.obj: qt/moc_peertablesortproxy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_peertablesortproxy.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_peertablesortproxy.Tpo -c -o qt/qt_libbitcoinqt_a-moc_peertablesortproxy.obj `if test -f 'qt/moc_peertablesortproxy.cpp'; then $(CYGPATH_W) 'qt/moc_peertablesortproxy.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_peertablesortproxy.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_peertablesortproxy.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_peertablesortproxy.Po
#	$(AM_V_CXX)source='qt/moc_peertablesortproxy.cpp' object='qt/qt_libbitcoinqt_a-moc_peertablesortproxy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_peertablesortproxy.obj `if test -f 'qt/moc_peertablesortproxy.cpp'; then $(CYGPATH_W) 'qt/moc_peertablesortproxy.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_peertablesortproxy.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_paymentserver.o: qt/moc_paymentserver.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_paymentserver.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_paymentserver.Tpo -c -o qt/qt_libbitcoinqt_a-moc_paymentserver.o `test -f 'qt/moc_paymentserver.cpp' || echo '$(srcdir)/'`qt/moc_paymentserver.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_paymentserver.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_paymentserver.Po
#	$(AM_V_CXX)source='qt/moc_paymentserver.cpp' object='qt/qt_libbitcoinqt_a-moc_paymentserver.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_paymentserver.o `test -f 'qt/moc_paymentserver.cpp' || echo '$(srcdir)/'`qt/moc_paymentserver.cpp

qt/qt_libbitcoinqt_a-moc_paymentserver.obj: qt/moc_paymentserver.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_paymentserver.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_paymentserver.Tpo -c -o qt/qt_libbitcoinqt_a-moc_paymentserver.obj `if test -f 'qt/moc_paymentserver.cpp'; then $(CYGPATH_W) 'qt/moc_paymentserver.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_paymentserver.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_paymentserver.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_paymentserver.Po
#	$(AM_V_CXX)source='qt/moc_paymentserver.cpp' object='qt/qt_libbitcoinqt_a-moc_paymentserver.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_paymentserver.obj `if test -f 'qt/moc_paymentserver.cpp'; then $(CYGPATH_W) 'qt/moc_paymentserver.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_paymentserver.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_psbtoperationsdialog.o: qt/moc_psbtoperationsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_psbtoperationsdialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_psbtoperationsdialog.Tpo -c -o qt/qt_libbitcoinqt_a-moc_psbtoperationsdialog.o `test -f 'qt/moc_psbtoperationsdialog.cpp' || echo '$(srcdir)/'`qt/moc_psbtoperationsdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_psbtoperationsdialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_psbtoperationsdialog.Po
#	$(AM_V_CXX)source='qt/moc_psbtoperationsdialog.cpp' object='qt/qt_libbitcoinqt_a-moc_psbtoperationsdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_psbtoperationsdialog.o `test -f 'qt/moc_psbtoperationsdialog.cpp' || echo '$(srcdir)/'`qt/moc_psbtoperationsdialog.cpp

qt/qt_libbitcoinqt_a-moc_psbtoperationsdialog.obj: qt/moc_psbtoperationsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_psbtoperationsdialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_psbtoperationsdialog.Tpo -c -o qt/qt_libbitcoinqt_a-moc_psbtoperationsdialog.obj `if test -f 'qt/moc_psbtoperationsdialog.cpp'; then $(CYGPATH_W) 'qt/moc_psbtoperationsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_psbtoperationsdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_psbtoperationsdialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_psbtoperationsdialog.Po
#	$(AM_V_CXX)source='qt/moc_psbtoperationsdialog.cpp' object='qt/qt_libbitcoinqt_a-moc_psbtoperationsdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_psbtoperationsdialog.obj `if test -f 'qt/moc_psbtoperationsdialog.cpp'; then $(CYGPATH_W) 'qt/moc_psbtoperationsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_psbtoperationsdialog.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_qrimagewidget.o: qt/moc_qrimagewidget.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_qrimagewidget.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_qrimagewidget.Tpo -c -o qt/qt_libbitcoinqt_a-moc_qrimagewidget.o `test -f 'qt/moc_qrimagewidget.cpp' || echo '$(srcdir)/'`qt/moc_qrimagewidget.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_qrimagewidget.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_qrimagewidget.Po
#	$(AM_V_CXX)source='qt/moc_qrimagewidget.cpp' object='qt/qt_libbitcoinqt_a-moc_qrimagewidget.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_qrimagewidget.o `test -f 'qt/moc_qrimagewidget.cpp' || echo '$(srcdir)/'`qt/moc_qrimagewidget.cpp

qt/qt_libbitcoinqt_a-moc_qrimagewidget.obj: qt/moc_qrimagewidget.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_qrimagewidget.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_qrimagewidget.Tpo -c -o qt/qt_libbitcoinqt_a-moc_qrimagewidget.obj `if test -f 'qt/moc_qrimagewidget.cpp'; then $(CYGPATH_W) 'qt/moc_qrimagewidget.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_qrimagewidget.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_qrimagewidget.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_qrimagewidget.Po
#	$(AM_V_CXX)source='qt/moc_qrimagewidget.cpp' object='qt/qt_libbitcoinqt_a-moc_qrimagewidget.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_qrimagewidget.obj `if test -f 'qt/moc_qrimagewidget.cpp'; then $(CYGPATH_W) 'qt/moc_qrimagewidget.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_qrimagewidget.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_qvalidatedlineedit.o: qt/moc_qvalidatedlineedit.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_qvalidatedlineedit.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_qvalidatedlineedit.Tpo -c -o qt/qt_libbitcoinqt_a-moc_qvalidatedlineedit.o `test -f 'qt/moc_qvalidatedlineedit.cpp' || echo '$(srcdir)/'`qt/moc_qvalidatedlineedit.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_qvalidatedlineedit.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_qvalidatedlineedit.Po
#	$(AM_V_CXX)source='qt/moc_qvalidatedlineedit.cpp' object='qt/qt_libbitcoinqt_a-moc_qvalidatedlineedit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_qvalidatedlineedit.o `test -f 'qt/moc_qvalidatedlineedit.cpp' || echo '$(srcdir)/'`qt/moc_qvalidatedlineedit.cpp

qt/qt_libbitcoinqt_a-moc_qvalidatedlineedit.obj: qt/moc_qvalidatedlineedit.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_qvalidatedlineedit.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_qvalidatedlineedit.Tpo -c -o qt/qt_libbitcoinqt_a-moc_qvalidatedlineedit.obj `if test -f 'qt/moc_qvalidatedlineedit.cpp'; then $(CYGPATH_W) 'qt/moc_qvalidatedlineedit.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_qvalidatedlineedit.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_qvalidatedlineedit.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_qvalidatedlineedit.Po
#	$(AM_V_CXX)source='qt/moc_qvalidatedlineedit.cpp' object='qt/qt_libbitcoinqt_a-moc_qvalidatedlineedit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_qvalidatedlineedit.obj `if test -f 'qt/moc_qvalidatedlineedit.cpp'; then $(CYGPATH_W) 'qt/moc_qvalidatedlineedit.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_qvalidatedlineedit.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_qvaluecombobox.o: qt/moc_qvaluecombobox.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_qvaluecombobox.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_qvaluecombobox.Tpo -c -o qt/qt_libbitcoinqt_a-moc_qvaluecombobox.o `test -f 'qt/moc_qvaluecombobox.cpp' || echo '$(srcdir)/'`qt/moc_qvaluecombobox.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_qvaluecombobox.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_qvaluecombobox.Po
#	$(AM_V_CXX)source='qt/moc_qvaluecombobox.cpp' object='qt/qt_libbitcoinqt_a-moc_qvaluecombobox.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_qvaluecombobox.o `test -f 'qt/moc_qvaluecombobox.cpp' || echo '$(srcdir)/'`qt/moc_qvaluecombobox.cpp

qt/qt_libbitcoinqt_a-moc_qvaluecombobox.obj: qt/moc_qvaluecombobox.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_qvaluecombobox.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_qvaluecombobox.Tpo -c -o qt/qt_libbitcoinqt_a-moc_qvaluecombobox.obj `if test -f 'qt/moc_qvaluecombobox.cpp'; then $(CYGPATH_W) 'qt/moc_qvaluecombobox.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_qvaluecombobox.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_qvaluecombobox.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_qvaluecombobox.Po
#	$(AM_V_CXX)source='qt/moc_qvaluecombobox.cpp' object='qt/qt_libbitcoinqt_a-moc_qvaluecombobox.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_qvaluecombobox.obj `if test -f 'qt/moc_qvaluecombobox.cpp'; then $(CYGPATH_W) 'qt/moc_qvaluecombobox.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_qvaluecombobox.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_receivecoinsdialog.o: qt/moc_receivecoinsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_receivecoinsdialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_receivecoinsdialog.Tpo -c -o qt/qt_libbitcoinqt_a-moc_receivecoinsdialog.o `test -f 'qt/moc_receivecoinsdialog.cpp' || echo '$(srcdir)/'`qt/moc_receivecoinsdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_receivecoinsdialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_receivecoinsdialog.Po
#	$(AM_V_CXX)source='qt/moc_receivecoinsdialog.cpp' object='qt/qt_libbitcoinqt_a-moc_receivecoinsdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_receivecoinsdialog.o `test -f 'qt/moc_receivecoinsdialog.cpp' || echo '$(srcdir)/'`qt/moc_receivecoinsdialog.cpp

qt/qt_libbitcoinqt_a-moc_receivecoinsdialog.obj: qt/moc_receivecoinsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_receivecoinsdialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_receivecoinsdialog.Tpo -c -o qt/qt_libbitcoinqt_a-moc_receivecoinsdialog.obj `if test -f 'qt/moc_receivecoinsdialog.cpp'; then $(CYGPATH_W) 'qt/moc_receivecoinsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_receivecoinsdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_receivecoinsdialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_receivecoinsdialog.Po
#	$(AM_V_CXX)source='qt/moc_receivecoinsdialog.cpp' object='qt/qt_libbitcoinqt_a-moc_receivecoinsdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_receivecoinsdialog.obj `if test -f 'qt/moc_receivecoinsdialog.cpp'; then $(CYGPATH_W) 'qt/moc_receivecoinsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_receivecoinsdialog.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_receiverequestdialog.o: qt/moc_receiverequestdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_receiverequestdialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_receiverequestdialog.Tpo -c -o qt/qt_libbitcoinqt_a-moc_receiverequestdialog.o `test -f 'qt/moc_receiverequestdialog.cpp' || echo '$(srcdir)/'`qt/moc_receiverequestdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_receiverequestdialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_receiverequestdialog.Po
#	$(AM_V_CXX)source='qt/moc_receiverequestdialog.cpp' object='qt/qt_libbitcoinqt_a-moc_receiverequestdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_receiverequestdialog.o `test -f 'qt/moc_receiverequestdialog.cpp' || echo '$(srcdir)/'`qt/moc_receiverequestdialog.cpp

qt/qt_libbitcoinqt_a-moc_receiverequestdialog.obj: qt/moc_receiverequestdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_receiverequestdialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_receiverequestdialog.Tpo -c -o qt/qt_libbitcoinqt_a-moc_receiverequestdialog.obj `if test -f 'qt/moc_receiverequestdialog.cpp'; then $(CYGPATH_W) 'qt/moc_receiverequestdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_receiverequestdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_receiverequestdialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_receiverequestdialog.Po
#	$(AM_V_CXX)source='qt/moc_receiverequestdialog.cpp' object='qt/qt_libbitcoinqt_a-moc_receiverequestdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_receiverequestdialog.obj `if test -f 'qt/moc_receiverequestdialog.cpp'; then $(CYGPATH_W) 'qt/moc_receiverequestdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_receiverequestdialog.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_recentrequeststablemodel.o: qt/moc_recentrequeststablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_recentrequeststablemodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_recentrequeststablemodel.Tpo -c -o qt/qt_libbitcoinqt_a-moc_recentrequeststablemodel.o `test -f 'qt/moc_recentrequeststablemodel.cpp' || echo '$(srcdir)/'`qt/moc_recentrequeststablemodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_recentrequeststablemodel.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_recentrequeststablemodel.Po
#	$(AM_V_CXX)source='qt/moc_recentrequeststablemodel.cpp' object='qt/qt_libbitcoinqt_a-moc_recentrequeststablemodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_recentrequeststablemodel.o `test -f 'qt/moc_recentrequeststablemodel.cpp' || echo '$(srcdir)/'`qt/moc_recentrequeststablemodel.cpp

qt/qt_libbitcoinqt_a-moc_recentrequeststablemodel.obj: qt/moc_recentrequeststablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_recentrequeststablemodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_recentrequeststablemodel.Tpo -c -o qt/qt_libbitcoinqt_a-moc_recentrequeststablemodel.obj `if test -f 'qt/moc_recentrequeststablemodel.cpp'; then $(CYGPATH_W) 'qt/moc_recentrequeststablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_recentrequeststablemodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_recentrequeststablemodel.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_recentrequeststablemodel.Po
#	$(AM_V_CXX)source='qt/moc_recentrequeststablemodel.cpp' object='qt/qt_libbitcoinqt_a-moc_recentrequeststablemodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_recentrequeststablemodel.obj `if test -f 'qt/moc_recentrequeststablemodel.cpp'; then $(CYGPATH_W) 'qt/moc_recentrequeststablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_recentrequeststablemodel.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_rpcconsole.o: qt/moc_rpcconsole.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_rpcconsole.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_rpcconsole.Tpo -c -o qt/qt_libbitcoinqt_a-moc_rpcconsole.o `test -f 'qt/moc_rpcconsole.cpp' || echo '$(srcdir)/'`qt/moc_rpcconsole.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_rpcconsole.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_rpcconsole.Po
#	$(AM_V_CXX)source='qt/moc_rpcconsole.cpp' object='qt/qt_libbitcoinqt_a-moc_rpcconsole.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_rpcconsole.o `test -f 'qt/moc_rpcconsole.cpp' || echo '$(srcdir)/'`qt/moc_rpcconsole.cpp

qt/qt_libbitcoinqt_a-moc_rpcconsole.obj: qt/moc_rpcconsole.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_rpcconsole.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_rpcconsole.Tpo -c -o qt/qt_libbitcoinqt_a-moc_rpcconsole.obj `if test -f 'qt/moc_rpcconsole.cpp'; then $(CYGPATH_W) 'qt/moc_rpcconsole.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_rpcconsole.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_rpcconsole.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_rpcconsole.Po
#	$(AM_V_CXX)source='qt/moc_rpcconsole.cpp' object='qt/qt_libbitcoinqt_a-moc_rpcconsole.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_rpcconsole.obj `if test -f 'qt/moc_rpcconsole.cpp'; then $(CYGPATH_W) 'qt/moc_rpcconsole.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_rpcconsole.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_sendcoinsdialog.o: qt/moc_sendcoinsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_sendcoinsdialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_sendcoinsdialog.Tpo -c -o qt/qt_libbitcoinqt_a-moc_sendcoinsdialog.o `test -f 'qt/moc_sendcoinsdialog.cpp' || echo '$(srcdir)/'`qt/moc_sendcoinsdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_sendcoinsdialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_sendcoinsdialog.Po
#	$(AM_V_CXX)source='qt/moc_sendcoinsdialog.cpp' object='qt/qt_libbitcoinqt_a-moc_sendcoinsdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_sendcoinsdialog.o `test -f 'qt/moc_sendcoinsdialog.cpp' || echo '$(srcdir)/'`qt/moc_sendcoinsdialog.cpp

qt/qt_libbitcoinqt_a-moc_sendcoinsdialog.obj: qt/moc_sendcoinsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_sendcoinsdialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_sendcoinsdialog.Tpo -c -o qt/qt_libbitcoinqt_a-moc_sendcoinsdialog.obj `if test -f 'qt/moc_sendcoinsdialog.cpp'; then $(CYGPATH_W) 'qt/moc_sendcoinsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_sendcoinsdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_sendcoinsdialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_sendcoinsdialog.Po
#	$(AM_V_CXX)source='qt/moc_sendcoinsdialog.cpp' object='qt/qt_libbitcoinqt_a-moc_sendcoinsdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_sendcoinsdialog.obj `if test -f 'qt/moc_sendcoinsdialog.cpp'; then $(CYGPATH_W) 'qt/moc_sendcoinsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_sendcoinsdialog.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_sendcoinsentry.o: qt/moc_sendcoinsentry.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_sendcoinsentry.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_sendcoinsentry.Tpo -c -o qt/qt_libbitcoinqt_a-moc_sendcoinsentry.o `test -f 'qt/moc_sendcoinsentry.cpp' || echo '$(srcdir)/'`qt/moc_sendcoinsentry.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_sendcoinsentry.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_sendcoinsentry.Po
#	$(AM_V_CXX)source='qt/moc_sendcoinsentry.cpp' object='qt/qt_libbitcoinqt_a-moc_sendcoinsentry.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_sendcoinsentry.o `test -f 'qt/moc_sendcoinsentry.cpp' || echo '$(srcdir)/'`qt/moc_sendcoinsentry.cpp

qt/qt_libbitcoinqt_a-moc_sendcoinsentry.obj: qt/moc_sendcoinsentry.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_sendcoinsentry.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_sendcoinsentry.Tpo -c -o qt/qt_libbitcoinqt_a-moc_sendcoinsentry.obj `if test -f 'qt/moc_sendcoinsentry.cpp'; then $(CYGPATH_W) 'qt/moc_sendcoinsentry.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_sendcoinsentry.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_sendcoinsentry.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_sendcoinsentry.Po
#	$(AM_V_CXX)source='qt/moc_sendcoinsentry.cpp' object='qt/qt_libbitcoinqt_a-moc_sendcoinsentry.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_sendcoinsentry.obj `if test -f 'qt/moc_sendcoinsentry.cpp'; then $(CYGPATH_W) 'qt/moc_sendcoinsentry.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_sendcoinsentry.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_signverifymessagedialog.o: qt/moc_signverifymessagedialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_signverifymessagedialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_signverifymessagedialog.Tpo -c -o qt/qt_libbitcoinqt_a-moc_signverifymessagedialog.o `test -f 'qt/moc_signverifymessagedialog.cpp' || echo '$(srcdir)/'`qt/moc_signverifymessagedialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_signverifymessagedialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_signverifymessagedialog.Po
#	$(AM_V_CXX)source='qt/moc_signverifymessagedialog.cpp' object='qt/qt_libbitcoinqt_a-moc_signverifymessagedialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_signverifymessagedialog.o `test -f 'qt/moc_signverifymessagedialog.cpp' || echo '$(srcdir)/'`qt/moc_signverifymessagedialog.cpp

qt/qt_libbitcoinqt_a-moc_signverifymessagedialog.obj: qt/moc_signverifymessagedialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_signverifymessagedialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_signverifymessagedialog.Tpo -c -o qt/qt_libbitcoinqt_a-moc_signverifymessagedialog.obj `if test -f 'qt/moc_signverifymessagedialog.cpp'; then $(CYGPATH_W) 'qt/moc_signverifymessagedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_signverifymessagedialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_signverifymessagedialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_signverifymessagedialog.Po
#	$(AM_V_CXX)source='qt/moc_signverifymessagedialog.cpp' object='qt/qt_libbitcoinqt_a-moc_signverifymessagedialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_signverifymessagedialog.obj `if test -f 'qt/moc_signverifymessagedialog.cpp'; then $(CYGPATH_W) 'qt/moc_signverifymessagedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_signverifymessagedialog.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_splashscreen.o: qt/moc_splashscreen.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_splashscreen.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_splashscreen.Tpo -c -o qt/qt_libbitcoinqt_a-moc_splashscreen.o `test -f 'qt/moc_splashscreen.cpp' || echo '$(srcdir)/'`qt/moc_splashscreen.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_splashscreen.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_splashscreen.Po
#	$(AM_V_CXX)source='qt/moc_splashscreen.cpp' object='qt/qt_libbitcoinqt_a-moc_splashscreen.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_splashscreen.o `test -f 'qt/moc_splashscreen.cpp' || echo '$(srcdir)/'`qt/moc_splashscreen.cpp

qt/qt_libbitcoinqt_a-moc_splashscreen.obj: qt/moc_splashscreen.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_splashscreen.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_splashscreen.Tpo -c -o qt/qt_libbitcoinqt_a-moc_splashscreen.obj `if test -f 'qt/moc_splashscreen.cpp'; then $(CYGPATH_W) 'qt/moc_splashscreen.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_splashscreen.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_splashscreen.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_splashscreen.Po
#	$(AM_V_CXX)source='qt/moc_splashscreen.cpp' object='qt/qt_libbitcoinqt_a-moc_splashscreen.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_splashscreen.obj `if test -f 'qt/moc_splashscreen.cpp'; then $(CYGPATH_W) 'qt/moc_splashscreen.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_splashscreen.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_trafficgraphwidget.o: qt/moc_trafficgraphwidget.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_trafficgraphwidget.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_trafficgraphwidget.Tpo -c -o qt/qt_libbitcoinqt_a-moc_trafficgraphwidget.o `test -f 'qt/moc_trafficgraphwidget.cpp' || echo '$(srcdir)/'`qt/moc_trafficgraphwidget.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_trafficgraphwidget.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_trafficgraphwidget.Po
#	$(AM_V_CXX)source='qt/moc_trafficgraphwidget.cpp' object='qt/qt_libbitcoinqt_a-moc_trafficgraphwidget.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_trafficgraphwidget.o `test -f 'qt/moc_trafficgraphwidget.cpp' || echo '$(srcdir)/'`qt/moc_trafficgraphwidget.cpp

qt/qt_libbitcoinqt_a-moc_trafficgraphwidget.obj: qt/moc_trafficgraphwidget.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_trafficgraphwidget.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_trafficgraphwidget.Tpo -c -o qt/qt_libbitcoinqt_a-moc_trafficgraphwidget.obj `if test -f 'qt/moc_trafficgraphwidget.cpp'; then $(CYGPATH_W) 'qt/moc_trafficgraphwidget.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_trafficgraphwidget.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_trafficgraphwidget.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_trafficgraphwidget.Po
#	$(AM_V_CXX)source='qt/moc_trafficgraphwidget.cpp' object='qt/qt_libbitcoinqt_a-moc_trafficgraphwidget.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_trafficgraphwidget.obj `if test -f 'qt/moc_trafficgraphwidget.cpp'; then $(CYGPATH_W) 'qt/moc_trafficgraphwidget.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_trafficgraphwidget.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_transactiondesc.o: qt/moc_transactiondesc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_transactiondesc.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactiondesc.Tpo -c -o qt/qt_libbitcoinqt_a-moc_transactiondesc.o `test -f 'qt/moc_transactiondesc.cpp' || echo '$(srcdir)/'`qt/moc_transactiondesc.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactiondesc.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactiondesc.Po
#	$(AM_V_CXX)source='qt/moc_transactiondesc.cpp' object='qt/qt_libbitcoinqt_a-moc_transactiondesc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_transactiondesc.o `test -f 'qt/moc_transactiondesc.cpp' || echo '$(srcdir)/'`qt/moc_transactiondesc.cpp

qt/qt_libbitcoinqt_a-moc_transactiondesc.obj: qt/moc_transactiondesc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_transactiondesc.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactiondesc.Tpo -c -o qt/qt_libbitcoinqt_a-moc_transactiondesc.obj `if test -f 'qt/moc_transactiondesc.cpp'; then $(CYGPATH_W) 'qt/moc_transactiondesc.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactiondesc.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactiondesc.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactiondesc.Po
#	$(AM_V_CXX)source='qt/moc_transactiondesc.cpp' object='qt/qt_libbitcoinqt_a-moc_transactiondesc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_transactiondesc.obj `if test -f 'qt/moc_transactiondesc.cpp'; then $(CYGPATH_W) 'qt/moc_transactiondesc.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactiondesc.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_transactiondescdialog.o: qt/moc_transactiondescdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_transactiondescdialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactiondescdialog.Tpo -c -o qt/qt_libbitcoinqt_a-moc_transactiondescdialog.o `test -f 'qt/moc_transactiondescdialog.cpp' || echo '$(srcdir)/'`qt/moc_transactiondescdialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactiondescdialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactiondescdialog.Po
#	$(AM_V_CXX)source='qt/moc_transactiondescdialog.cpp' object='qt/qt_libbitcoinqt_a-moc_transactiondescdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_transactiondescdialog.o `test -f 'qt/moc_transactiondescdialog.cpp' || echo '$(srcdir)/'`qt/moc_transactiondescdialog.cpp

qt/qt_libbitcoinqt_a-moc_transactiondescdialog.obj: qt/moc_transactiondescdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_transactiondescdialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactiondescdialog.Tpo -c -o qt/qt_libbitcoinqt_a-moc_transactiondescdialog.obj `if test -f 'qt/moc_transactiondescdialog.cpp'; then $(CYGPATH_W) 'qt/moc_transactiondescdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactiondescdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactiondescdialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactiondescdialog.Po
#	$(AM_V_CXX)source='qt/moc_transactiondescdialog.cpp' object='qt/qt_libbitcoinqt_a-moc_transactiondescdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_transactiondescdialog.obj `if test -f 'qt/moc_transactiondescdialog.cpp'; then $(CYGPATH_W) 'qt/moc_transactiondescdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactiondescdialog.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_transactionfilterproxy.o: qt/moc_transactionfilterproxy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_transactionfilterproxy.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactionfilterproxy.Tpo -c -o qt/qt_libbitcoinqt_a-moc_transactionfilterproxy.o `test -f 'qt/moc_transactionfilterproxy.cpp' || echo '$(srcdir)/'`qt/moc_transactionfilterproxy.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactionfilterproxy.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactionfilterproxy.Po
#	$(AM_V_CXX)source='qt/moc_transactionfilterproxy.cpp' object='qt/qt_libbitcoinqt_a-moc_transactionfilterproxy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_transactionfilterproxy.o `test -f 'qt/moc_transactionfilterproxy.cpp' || echo '$(srcdir)/'`qt/moc_transactionfilterproxy.cpp

qt/qt_libbitcoinqt_a-moc_transactionfilterproxy.obj: qt/moc_transactionfilterproxy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_transactionfilterproxy.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactionfilterproxy.Tpo -c -o qt/qt_libbitcoinqt_a-moc_transactionfilterproxy.obj `if test -f 'qt/moc_transactionfilterproxy.cpp'; then $(CYGPATH_W) 'qt/moc_transactionfilterproxy.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactionfilterproxy.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactionfilterproxy.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactionfilterproxy.Po
#	$(AM_V_CXX)source='qt/moc_transactionfilterproxy.cpp' object='qt/qt_libbitcoinqt_a-moc_transactionfilterproxy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_transactionfilterproxy.obj `if test -f 'qt/moc_transactionfilterproxy.cpp'; then $(CYGPATH_W) 'qt/moc_transactionfilterproxy.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactionfilterproxy.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_transactionoverviewwidget.o: qt/moc_transactionoverviewwidget.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_transactionoverviewwidget.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactionoverviewwidget.Tpo -c -o qt/qt_libbitcoinqt_a-moc_transactionoverviewwidget.o `test -f 'qt/moc_transactionoverviewwidget.cpp' || echo '$(srcdir)/'`qt/moc_transactionoverviewwidget.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactionoverviewwidget.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactionoverviewwidget.Po
#	$(AM_V_CXX)source='qt/moc_transactionoverviewwidget.cpp' object='qt/qt_libbitcoinqt_a-moc_transactionoverviewwidget.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_transactionoverviewwidget.o `test -f 'qt/moc_transactionoverviewwidget.cpp' || echo '$(srcdir)/'`qt/moc_transactionoverviewwidget.cpp

qt/qt_libbitcoinqt_a-moc_transactionoverviewwidget.obj: qt/moc_transactionoverviewwidget.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_transactionoverviewwidget.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactionoverviewwidget.Tpo -c -o qt/qt_libbitcoinqt_a-moc_transactionoverviewwidget.obj `if test -f 'qt/moc_transactionoverviewwidget.cpp'; then $(CYGPATH_W) 'qt/moc_transactionoverviewwidget.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactionoverviewwidget.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactionoverviewwidget.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactionoverviewwidget.Po
#	$(AM_V_CXX)source='qt/moc_transactionoverviewwidget.cpp' object='qt/qt_libbitcoinqt_a-moc_transactionoverviewwidget.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_transactionoverviewwidget.obj `if test -f 'qt/moc_transactionoverviewwidget.cpp'; then $(CYGPATH_W) 'qt/moc_transactionoverviewwidget.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactionoverviewwidget.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_transactiontablemodel.o: qt/moc_transactiontablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_transactiontablemodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactiontablemodel.Tpo -c -o qt/qt_libbitcoinqt_a-moc_transactiontablemodel.o `test -f 'qt/moc_transactiontablemodel.cpp' || echo '$(srcdir)/'`qt/moc_transactiontablemodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactiontablemodel.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactiontablemodel.Po
#	$(AM_V_CXX)source='qt/moc_transactiontablemodel.cpp' object='qt/qt_libbitcoinqt_a-moc_transactiontablemodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_transactiontablemodel.o `test -f 'qt/moc_transactiontablemodel.cpp' || echo '$(srcdir)/'`qt/moc_transactiontablemodel.cpp

qt/qt_libbitcoinqt_a-moc_transactiontablemodel.obj: qt/moc_transactiontablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_transactiontablemodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactiontablemodel.Tpo -c -o qt/qt_libbitcoinqt_a-moc_transactiontablemodel.obj `if test -f 'qt/moc_transactiontablemodel.cpp'; then $(CYGPATH_W) 'qt/moc_transactiontablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactiontablemodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactiontablemodel.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactiontablemodel.Po
#	$(AM_V_CXX)source='qt/moc_transactiontablemodel.cpp' object='qt/qt_libbitcoinqt_a-moc_transactiontablemodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_transactiontablemodel.obj `if test -f 'qt/moc_transactiontablemodel.cpp'; then $(CYGPATH_W) 'qt/moc_transactiontablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactiontablemodel.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_transactionview.o: qt/moc_transactionview.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_transactionview.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactionview.Tpo -c -o qt/qt_libbitcoinqt_a-moc_transactionview.o `test -f 'qt/moc_transactionview.cpp' || echo '$(srcdir)/'`qt/moc_transactionview.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactionview.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactionview.Po
#	$(AM_V_CXX)source='qt/moc_transactionview.cpp' object='qt/qt_libbitcoinqt_a-moc_transactionview.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_transactionview.o `test -f 'qt/moc_transactionview.cpp' || echo '$(srcdir)/'`qt/moc_transactionview.cpp

qt/qt_libbitcoinqt_a-moc_transactionview.obj: qt/moc_transactionview.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_transactionview.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactionview.Tpo -c -o qt/qt_libbitcoinqt_a-moc_transactionview.obj `if test -f 'qt/moc_transactionview.cpp'; then $(CYGPATH_W) 'qt/moc_transactionview.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactionview.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactionview.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_transactionview.Po
#	$(AM_V_CXX)source='qt/moc_transactionview.cpp' object='qt/qt_libbitcoinqt_a-moc_transactionview.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_transactionview.obj `if test -f 'qt/moc_transactionview.cpp'; then $(CYGPATH_W) 'qt/moc_transactionview.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_transactionview.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_utilitydialog.o: qt/moc_utilitydialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_utilitydialog.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_utilitydialog.Tpo -c -o qt/qt_libbitcoinqt_a-moc_utilitydialog.o `test -f 'qt/moc_utilitydialog.cpp' || echo '$(srcdir)/'`qt/moc_utilitydialog.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_utilitydialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_utilitydialog.Po
#	$(AM_V_CXX)source='qt/moc_utilitydialog.cpp' object='qt/qt_libbitcoinqt_a-moc_utilitydialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_utilitydialog.o `test -f 'qt/moc_utilitydialog.cpp' || echo '$(srcdir)/'`qt/moc_utilitydialog.cpp

qt/qt_libbitcoinqt_a-moc_utilitydialog.obj: qt/moc_utilitydialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_utilitydialog.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_utilitydialog.Tpo -c -o qt/qt_libbitcoinqt_a-moc_utilitydialog.obj `if test -f 'qt/moc_utilitydialog.cpp'; then $(CYGPATH_W) 'qt/moc_utilitydialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_utilitydialog.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_utilitydialog.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_utilitydialog.Po
#	$(AM_V_CXX)source='qt/moc_utilitydialog.cpp' object='qt/qt_libbitcoinqt_a-moc_utilitydialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_utilitydialog.obj `if test -f 'qt/moc_utilitydialog.cpp'; then $(CYGPATH_W) 'qt/moc_utilitydialog.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_utilitydialog.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_walletcontroller.o: qt/moc_walletcontroller.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_walletcontroller.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_walletcontroller.Tpo -c -o qt/qt_libbitcoinqt_a-moc_walletcontroller.o `test -f 'qt/moc_walletcontroller.cpp' || echo '$(srcdir)/'`qt/moc_walletcontroller.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_walletcontroller.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_walletcontroller.Po
#	$(AM_V_CXX)source='qt/moc_walletcontroller.cpp' object='qt/qt_libbitcoinqt_a-moc_walletcontroller.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_walletcontroller.o `test -f 'qt/moc_walletcontroller.cpp' || echo '$(srcdir)/'`qt/moc_walletcontroller.cpp

qt/qt_libbitcoinqt_a-moc_walletcontroller.obj: qt/moc_walletcontroller.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_walletcontroller.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_walletcontroller.Tpo -c -o qt/qt_libbitcoinqt_a-moc_walletcontroller.obj `if test -f 'qt/moc_walletcontroller.cpp'; then $(CYGPATH_W) 'qt/moc_walletcontroller.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_walletcontroller.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_walletcontroller.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_walletcontroller.Po
#	$(AM_V_CXX)source='qt/moc_walletcontroller.cpp' object='qt/qt_libbitcoinqt_a-moc_walletcontroller.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_walletcontroller.obj `if test -f 'qt/moc_walletcontroller.cpp'; then $(CYGPATH_W) 'qt/moc_walletcontroller.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_walletcontroller.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_walletframe.o: qt/moc_walletframe.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_walletframe.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_walletframe.Tpo -c -o qt/qt_libbitcoinqt_a-moc_walletframe.o `test -f 'qt/moc_walletframe.cpp' || echo '$(srcdir)/'`qt/moc_walletframe.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_walletframe.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_walletframe.Po
#	$(AM_V_CXX)source='qt/moc_walletframe.cpp' object='qt/qt_libbitcoinqt_a-moc_walletframe.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_walletframe.o `test -f 'qt/moc_walletframe.cpp' || echo '$(srcdir)/'`qt/moc_walletframe.cpp

qt/qt_libbitcoinqt_a-moc_walletframe.obj: qt/moc_walletframe.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_walletframe.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_walletframe.Tpo -c -o qt/qt_libbitcoinqt_a-moc_walletframe.obj `if test -f 'qt/moc_walletframe.cpp'; then $(CYGPATH_W) 'qt/moc_walletframe.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_walletframe.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_walletframe.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_walletframe.Po
#	$(AM_V_CXX)source='qt/moc_walletframe.cpp' object='qt/qt_libbitcoinqt_a-moc_walletframe.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_walletframe.obj `if test -f 'qt/moc_walletframe.cpp'; then $(CYGPATH_W) 'qt/moc_walletframe.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_walletframe.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_walletmodel.o: qt/moc_walletmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_walletmodel.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_walletmodel.Tpo -c -o qt/qt_libbitcoinqt_a-moc_walletmodel.o `test -f 'qt/moc_walletmodel.cpp' || echo '$(srcdir)/'`qt/moc_walletmodel.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_walletmodel.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_walletmodel.Po
#	$(AM_V_CXX)source='qt/moc_walletmodel.cpp' object='qt/qt_libbitcoinqt_a-moc_walletmodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_walletmodel.o `test -f 'qt/moc_walletmodel.cpp' || echo '$(srcdir)/'`qt/moc_walletmodel.cpp

qt/qt_libbitcoinqt_a-moc_walletmodel.obj: qt/moc_walletmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_walletmodel.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_walletmodel.Tpo -c -o qt/qt_libbitcoinqt_a-moc_walletmodel.obj `if test -f 'qt/moc_walletmodel.cpp'; then $(CYGPATH_W) 'qt/moc_walletmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_walletmodel.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_walletmodel.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_walletmodel.Po
#	$(AM_V_CXX)source='qt/moc_walletmodel.cpp' object='qt/qt_libbitcoinqt_a-moc_walletmodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_walletmodel.obj `if test -f 'qt/moc_walletmodel.cpp'; then $(CYGPATH_W) 'qt/moc_walletmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_walletmodel.cpp'; fi`

qt/qt_libbitcoinqt_a-moc_walletview.o: qt/moc_walletview.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_walletview.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_walletview.Tpo -c -o qt/qt_libbitcoinqt_a-moc_walletview.o `test -f 'qt/moc_walletview.cpp' || echo '$(srcdir)/'`qt/moc_walletview.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_walletview.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_walletview.Po
#	$(AM_V_CXX)source='qt/moc_walletview.cpp' object='qt/qt_libbitcoinqt_a-moc_walletview.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_walletview.o `test -f 'qt/moc_walletview.cpp' || echo '$(srcdir)/'`qt/moc_walletview.cpp

qt/qt_libbitcoinqt_a-moc_walletview.obj: qt/moc_walletview.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-moc_walletview.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_walletview.Tpo -c -o qt/qt_libbitcoinqt_a-moc_walletview.obj `if test -f 'qt/moc_walletview.cpp'; then $(CYGPATH_W) 'qt/moc_walletview.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_walletview.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_walletview.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-moc_walletview.Po
#	$(AM_V_CXX)source='qt/moc_walletview.cpp' object='qt/qt_libbitcoinqt_a-moc_walletview.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-moc_walletview.obj `if test -f 'qt/moc_walletview.cpp'; then $(CYGPATH_W) 'qt/moc_walletview.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/moc_walletview.cpp'; fi`

qt/qt_libbitcoinqt_a-qrc_bitcoin.o: qt/qrc_bitcoin.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-qrc_bitcoin.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-qrc_bitcoin.Tpo -c -o qt/qt_libbitcoinqt_a-qrc_bitcoin.o `test -f 'qt/qrc_bitcoin.cpp' || echo '$(srcdir)/'`qt/qrc_bitcoin.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-qrc_bitcoin.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-qrc_bitcoin.Po
#	$(AM_V_CXX)source='qt/qrc_bitcoin.cpp' object='qt/qt_libbitcoinqt_a-qrc_bitcoin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-qrc_bitcoin.o `test -f 'qt/qrc_bitcoin.cpp' || echo '$(srcdir)/'`qt/qrc_bitcoin.cpp

qt/qt_libbitcoinqt_a-qrc_bitcoin.obj: qt/qrc_bitcoin.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-qrc_bitcoin.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-qrc_bitcoin.Tpo -c -o qt/qt_libbitcoinqt_a-qrc_bitcoin.obj `if test -f 'qt/qrc_bitcoin.cpp'; then $(CYGPATH_W) 'qt/qrc_bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qrc_bitcoin.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-qrc_bitcoin.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-qrc_bitcoin.Po
#	$(AM_V_CXX)source='qt/qrc_bitcoin.cpp' object='qt/qt_libbitcoinqt_a-qrc_bitcoin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-qrc_bitcoin.obj `if test -f 'qt/qrc_bitcoin.cpp'; then $(CYGPATH_W) 'qt/qrc_bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qrc_bitcoin.cpp'; fi`

qt/qt_libbitcoinqt_a-qrc_bitcoin_locale.o: qt/qrc_bitcoin_locale.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-qrc_bitcoin_locale.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-qrc_bitcoin_locale.Tpo -c -o qt/qt_libbitcoinqt_a-qrc_bitcoin_locale.o `test -f 'qt/qrc_bitcoin_locale.cpp' || echo '$(srcdir)/'`qt/qrc_bitcoin_locale.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-qrc_bitcoin_locale.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-qrc_bitcoin_locale.Po
#	$(AM_V_CXX)source='qt/qrc_bitcoin_locale.cpp' object='qt/qt_libbitcoinqt_a-qrc_bitcoin_locale.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-qrc_bitcoin_locale.o `test -f 'qt/qrc_bitcoin_locale.cpp' || echo '$(srcdir)/'`qt/qrc_bitcoin_locale.cpp

qt/qt_libbitcoinqt_a-qrc_bitcoin_locale.obj: qt/qrc_bitcoin_locale.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_libbitcoinqt_a-qrc_bitcoin_locale.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-qrc_bitcoin_locale.Tpo -c -o qt/qt_libbitcoinqt_a-qrc_bitcoin_locale.obj `if test -f 'qt/qrc_bitcoin_locale.cpp'; then $(CYGPATH_W) 'qt/qrc_bitcoin_locale.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qrc_bitcoin_locale.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-qrc_bitcoin_locale.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-qrc_bitcoin_locale.Po
#	$(AM_V_CXX)source='qt/qrc_bitcoin_locale.cpp' object='qt/qt_libbitcoinqt_a-qrc_bitcoin_locale.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_libbitcoinqt_a-qrc_bitcoin_locale.obj `if test -f 'qt/qrc_bitcoin_locale.cpp'; then $(CYGPATH_W) 'qt/qrc_bitcoin_locale.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/qrc_bitcoin_locale.cpp'; fi`

crc32c/src/crc32c_libcrc32c_la-crc32c.lo: crc32c/src/crc32c.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crc32c_libcrc32c_la_CPPFLAGS) $(CPPFLAGS) $(crc32c_libcrc32c_la_CXXFLAGS) $(CXXFLAGS) -MT crc32c/src/crc32c_libcrc32c_la-crc32c.lo -MD -MP -MF crc32c/src/$(DEPDIR)/crc32c_libcrc32c_la-crc32c.Tpo -c -o crc32c/src/crc32c_libcrc32c_la-crc32c.lo `test -f 'crc32c/src/crc32c.cc' || echo '$(srcdir)/'`crc32c/src/crc32c.cc
	$(AM_V_at)$(am__mv) crc32c/src/$(DEPDIR)/crc32c_libcrc32c_la-crc32c.Tpo crc32c/src/$(DEPDIR)/crc32c_libcrc32c_la-crc32c.Plo
#	$(AM_V_CXX)source='crc32c/src/crc32c.cc' object='crc32c/src/crc32c_libcrc32c_la-crc32c.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crc32c_libcrc32c_la_CPPFLAGS) $(CPPFLAGS) $(crc32c_libcrc32c_la_CXXFLAGS) $(CXXFLAGS) -c -o crc32c/src/crc32c_libcrc32c_la-crc32c.lo `test -f 'crc32c/src/crc32c.cc' || echo '$(srcdir)/'`crc32c/src/crc32c.cc

crc32c/src/crc32c_libcrc32c_la-crc32c_portable.lo: crc32c/src/crc32c_portable.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crc32c_libcrc32c_la_CPPFLAGS) $(CPPFLAGS) $(crc32c_libcrc32c_la_CXXFLAGS) $(CXXFLAGS) -MT crc32c/src/crc32c_libcrc32c_la-crc32c_portable.lo -MD -MP -MF crc32c/src/$(DEPDIR)/crc32c_libcrc32c_la-crc32c_portable.Tpo -c -o crc32c/src/crc32c_libcrc32c_la-crc32c_portable.lo `test -f 'crc32c/src/crc32c_portable.cc' || echo '$(srcdir)/'`crc32c/src/crc32c_portable.cc
	$(AM_V_at)$(am__mv) crc32c/src/$(DEPDIR)/crc32c_libcrc32c_la-crc32c_portable.Tpo crc32c/src/$(DEPDIR)/crc32c_libcrc32c_la-crc32c_portable.Plo
#	$(AM_V_CXX)source='crc32c/src/crc32c_portable.cc' object='crc32c/src/crc32c_libcrc32c_la-crc32c_portable.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crc32c_libcrc32c_la_CPPFLAGS) $(CPPFLAGS) $(crc32c_libcrc32c_la_CXXFLAGS) $(CXXFLAGS) -c -o crc32c/src/crc32c_libcrc32c_la-crc32c_portable.lo `test -f 'crc32c/src/crc32c_portable.cc' || echo '$(srcdir)/'`crc32c/src/crc32c_portable.cc

crc32c/src/crc32c_libcrc32c_arm_crc_la-crc32c_arm64.lo: crc32c/src/crc32c_arm64.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crc32c_libcrc32c_arm_crc_la_CPPFLAGS) $(CPPFLAGS) $(crc32c_libcrc32c_arm_crc_la_CXXFLAGS) $(CXXFLAGS) -MT crc32c/src/crc32c_libcrc32c_arm_crc_la-crc32c_arm64.lo -MD -MP -MF crc32c/src/$(DEPDIR)/crc32c_libcrc32c_arm_crc_la-crc32c_arm64.Tpo -c -o crc32c/src/crc32c_libcrc32c_arm_crc_la-crc32c_arm64.lo `test -f 'crc32c/src/crc32c_arm64.cc' || echo '$(srcdir)/'`crc32c/src/crc32c_arm64.cc
	$(AM_V_at)$(am__mv) crc32c/src/$(DEPDIR)/crc32c_libcrc32c_arm_crc_la-crc32c_arm64.Tpo crc32c/src/$(DEPDIR)/crc32c_libcrc32c_arm_crc_la-crc32c_arm64.Plo
#	$(AM_V_CXX)source='crc32c/src/crc32c_arm64.cc' object='crc32c/src/crc32c_libcrc32c_arm_crc_la-crc32c_arm64.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crc32c_libcrc32c_arm_crc_la_CPPFLAGS) $(CPPFLAGS) $(crc32c_libcrc32c_arm_crc_la_CXXFLAGS) $(CXXFLAGS) -c -o crc32c/src/crc32c_libcrc32c_arm_crc_la-crc32c_arm64.lo `test -f 'crc32c/src/crc32c_arm64.cc' || echo '$(srcdir)/'`crc32c/src/crc32c_arm64.cc

crc32c/src/crc32c_libcrc32c_sse42_la-crc32c_sse42.lo: crc32c/src/crc32c_sse42.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crc32c_libcrc32c_sse42_la_CPPFLAGS) $(CPPFLAGS) $(crc32c_libcrc32c_sse42_la_CXXFLAGS) $(CXXFLAGS) -MT crc32c/src/crc32c_libcrc32c_sse42_la-crc32c_sse42.lo -MD -MP -MF crc32c/src/$(DEPDIR)/crc32c_libcrc32c_sse42_la-crc32c_sse42.Tpo -c -o crc32c/src/crc32c_libcrc32c_sse42_la-crc32c_sse42.lo `test -f 'crc32c/src/crc32c_sse42.cc' || echo '$(srcdir)/'`crc32c/src/crc32c_sse42.cc
	$(AM_V_at)$(am__mv) crc32c/src/$(DEPDIR)/crc32c_libcrc32c_sse42_la-crc32c_sse42.Tpo crc32c/src/$(DEPDIR)/crc32c_libcrc32c_sse42_la-crc32c_sse42.Plo
#	$(AM_V_CXX)source='crc32c/src/crc32c_sse42.cc' object='crc32c/src/crc32c_libcrc32c_sse42_la-crc32c_sse42.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crc32c_libcrc32c_sse42_la_CPPFLAGS) $(CPPFLAGS) $(crc32c_libcrc32c_sse42_la_CXXFLAGS) $(CXXFLAGS) -c -o crc32c/src/crc32c_libcrc32c_sse42_la-crc32c_sse42.lo `test -f 'crc32c/src/crc32c_sse42.cc' || echo '$(srcdir)/'`crc32c/src/crc32c_sse42.cc

crypto/crypto_libbitcoin_crypto_arm_shani_la-sha256_arm_shani.lo: crypto/sha256_arm_shani.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_arm_shani_la_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_arm_shani_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitcoin_crypto_arm_shani_la-sha256_arm_shani.lo -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitcoin_crypto_arm_shani_la-sha256_arm_shani.Tpo -c -o crypto/crypto_libbitcoin_crypto_arm_shani_la-sha256_arm_shani.lo `test -f 'crypto/sha256_arm_shani.cpp' || echo '$(srcdir)/'`crypto/sha256_arm_shani.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitcoin_crypto_arm_shani_la-sha256_arm_shani.Tpo crypto/$(DEPDIR)/crypto_libbitcoin_crypto_arm_shani_la-sha256_arm_shani.Plo
#	$(AM_V_CXX)source='crypto/sha256_arm_shani.cpp' object='crypto/crypto_libbitcoin_crypto_arm_shani_la-sha256_arm_shani.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_arm_shani_la_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_arm_shani_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitcoin_crypto_arm_shani_la-sha256_arm_shani.lo `test -f 'crypto/sha256_arm_shani.cpp' || echo '$(srcdir)/'`crypto/sha256_arm_shani.cpp

crypto/crypto_libbitcoin_crypto_avx2_la-sha256_avx2.lo: crypto/sha256_avx2.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_avx2_la_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_avx2_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitcoin_crypto_avx2_la-sha256_avx2.lo -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitcoin_crypto_avx2_la-sha256_avx2.Tpo -c -o crypto/crypto_libbitcoin_crypto_avx2_la-sha256_avx2.lo `test -f 'crypto/sha256_avx2.cpp' || echo '$(srcdir)/'`crypto/sha256_avx2.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitcoin_crypto_avx2_la-sha256_avx2.Tpo crypto/$(DEPDIR)/crypto_libbitcoin_crypto_avx2_la-sha256_avx2.Plo
#	$(AM_V_CXX)source='crypto/sha256_avx2.cpp' object='crypto/crypto_libbitcoin_crypto_avx2_la-sha256_avx2.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_avx2_la_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_avx2_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitcoin_crypto_avx2_la-sha256_avx2.lo `test -f 'crypto/sha256_avx2.cpp' || echo '$(srcdir)/'`crypto/sha256_avx2.cpp

crypto/crypto_libbitcoin_crypto_base_la-aes.lo: crypto/aes.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_base_la_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_base_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitcoin_crypto_base_la-aes.lo -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-aes.Tpo -c -o crypto/crypto_libbitcoin_crypto_base_la-aes.lo `test -f 'crypto/aes.cpp' || echo '$(srcdir)/'`crypto/aes.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-aes.Tpo crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-aes.Plo
#	$(AM_V_CXX)source='crypto/aes.cpp' object='crypto/crypto_libbitcoin_crypto_base_la-aes.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_base_la_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_base_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitcoin_crypto_base_la-aes.lo `test -f 'crypto/aes.cpp' || echo '$(srcdir)/'`crypto/aes.cpp

crypto/crypto_libbitcoin_crypto_base_la-chacha_poly_aead.lo: crypto/chacha_poly_aead.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_base_la_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_base_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitcoin_crypto_base_la-chacha_poly_aead.lo -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-chacha_poly_aead.Tpo -c -o crypto/crypto_libbitcoin_crypto_base_la-chacha_poly_aead.lo `test -f 'crypto/chacha_poly_aead.cpp' || echo '$(srcdir)/'`crypto/chacha_poly_aead.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-chacha_poly_aead.Tpo crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-chacha_poly_aead.Plo
#	$(AM_V_CXX)source='crypto/chacha_poly_aead.cpp' object='crypto/crypto_libbitcoin_crypto_base_la-chacha_poly_aead.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_base_la_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_base_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitcoin_crypto_base_la-chacha_poly_aead.lo `test -f 'crypto/chacha_poly_aead.cpp' || echo '$(srcdir)/'`crypto/chacha_poly_aead.cpp

crypto/crypto_libbitcoin_crypto_base_la-chacha20.lo: crypto/chacha20.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_base_la_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_base_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitcoin_crypto_base_la-chacha20.lo -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-chacha20.Tpo -c -o crypto/crypto_libbitcoin_crypto_base_la-chacha20.lo `test -f 'crypto/chacha20.cpp' || echo '$(srcdir)/'`crypto/chacha20.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-chacha20.Tpo crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-chacha20.Plo
#	$(AM_V_CXX)source='crypto/chacha20.cpp' object='crypto/crypto_libbitcoin_crypto_base_la-chacha20.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_base_la_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_base_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitcoin_crypto_base_la-chacha20.lo `test -f 'crypto/chacha20.cpp' || echo '$(srcdir)/'`crypto/chacha20.cpp

crypto/crypto_libbitcoin_crypto_base_la-hkdf_sha256_32.lo: crypto/hkdf_sha256_32.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_base_la_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_base_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitcoin_crypto_base_la-hkdf_sha256_32.lo -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-hkdf_sha256_32.Tpo -c -o crypto/crypto_libbitcoin_crypto_base_la-hkdf_sha256_32.lo `test -f 'crypto/hkdf_sha256_32.cpp' || echo '$(srcdir)/'`crypto/hkdf_sha256_32.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-hkdf_sha256_32.Tpo crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-hkdf_sha256_32.Plo
#	$(AM_V_CXX)source='crypto/hkdf_sha256_32.cpp' object='crypto/crypto_libbitcoin_crypto_base_la-hkdf_sha256_32.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_base_la_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_base_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitcoin_crypto_base_la-hkdf_sha256_32.lo `test -f 'crypto/hkdf_sha256_32.cpp' || echo '$(srcdir)/'`crypto/hkdf_sha256_32.cpp

crypto/crypto_libbitcoin_crypto_base_la-hmac_sha256.lo: crypto/hmac_sha256.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_base_la_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_base_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitcoin_crypto_base_la-hmac_sha256.lo -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-hmac_sha256.Tpo -c -o crypto/crypto_libbitcoin_crypto_base_la-hmac_sha256.lo `test -f 'crypto/hmac_sha256.cpp' || echo '$(srcdir)/'`crypto/hmac_sha256.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-hmac_sha256.Tpo crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-hmac_sha256.Plo
#	$(AM_V_CXX)source='crypto/hmac_sha256.cpp' object='crypto/crypto_libbitcoin_crypto_base_la-hmac_sha256.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_base_la_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_base_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitcoin_crypto_base_la-hmac_sha256.lo `test -f 'crypto/hmac_sha256.cpp' || echo '$(srcdir)/'`crypto/hmac_sha256.cpp

crypto/crypto_libbitcoin_crypto_base_la-hmac_sha512.lo: crypto/hmac_sha512.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_base_la_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_base_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitcoin_crypto_base_la-hmac_sha512.lo -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-hmac_sha512.Tpo -c -o crypto/crypto_libbitcoin_crypto_base_la-hmac_sha512.lo `test -f 'crypto/hmac_sha512.cpp' || echo '$(srcdir)/'`crypto/hmac_sha512.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-hmac_sha512.Tpo crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-hmac_sha512.Plo
#	$(AM_V_CXX)source='crypto/hmac_sha512.cpp' object='crypto/crypto_libbitcoin_crypto_base_la-hmac_sha512.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_base_la_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_base_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitcoin_crypto_base_la-hmac_sha512.lo `test -f 'crypto/hmac_sha512.cpp' || echo '$(srcdir)/'`crypto/hmac_sha512.cpp

crypto/crypto_libbitcoin_crypto_base_la-poly1305.lo: crypto/poly1305.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_base_la_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_base_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitcoin_crypto_base_la-poly1305.lo -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-poly1305.Tpo -c -o crypto/crypto_libbitcoin_crypto_base_la-poly1305.lo `test -f 'crypto/poly1305.cpp' || echo '$(srcdir)/'`crypto/poly1305.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-poly1305.Tpo crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-poly1305.Plo
#	$(AM_V_CXX)source='crypto/poly1305.cpp' object='crypto/crypto_libbitcoin_crypto_base_la-poly1305.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_base_la_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_base_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitcoin_crypto_base_la-poly1305.lo `test -f 'crypto/poly1305.cpp' || echo '$(srcdir)/'`crypto/poly1305.cpp

crypto/crypto_libbitcoin_crypto_base_la-muhash.lo: crypto/muhash.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_base_la_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_base_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitcoin_crypto_base_la-muhash.lo -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-muhash.Tpo -c -o crypto/crypto_libbitcoin_crypto_base_la-muhash.lo `test -f 'crypto/muhash.cpp' || echo '$(srcdir)/'`crypto/muhash.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-muhash.Tpo crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-muhash.Plo
#	$(AM_V_CXX)source='crypto/muhash.cpp' object='crypto/crypto_libbitcoin_crypto_base_la-muhash.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_base_la_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_base_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitcoin_crypto_base_la-muhash.lo `test -f 'crypto/muhash.cpp' || echo '$(srcdir)/'`crypto/muhash.cpp

crypto/crypto_libbitcoin_crypto_base_la-ripemd160.lo: crypto/ripemd160.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_base_la_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_base_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitcoin_crypto_base_la-ripemd160.lo -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-ripemd160.Tpo -c -o crypto/crypto_libbitcoin_crypto_base_la-ripemd160.lo `test -f 'crypto/ripemd160.cpp' || echo '$(srcdir)/'`crypto/ripemd160.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-ripemd160.Tpo crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-ripemd160.Plo
#	$(AM_V_CXX)source='crypto/ripemd160.cpp' object='crypto/crypto_libbitcoin_crypto_base_la-ripemd160.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_base_la_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_base_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitcoin_crypto_base_la-ripemd160.lo `test -f 'crypto/ripemd160.cpp' || echo '$(srcdir)/'`crypto/ripemd160.cpp

crypto/crypto_libbitcoin_crypto_base_la-sha1.lo: crypto/sha1.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_base_la_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_base_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitcoin_crypto_base_la-sha1.lo -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-sha1.Tpo -c -o crypto/crypto_libbitcoin_crypto_base_la-sha1.lo `test -f 'crypto/sha1.cpp' || echo '$(srcdir)/'`crypto/sha1.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-sha1.Tpo crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-sha1.Plo
#	$(AM_V_CXX)source='crypto/sha1.cpp' object='crypto/crypto_libbitcoin_crypto_base_la-sha1.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_base_la_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_base_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitcoin_crypto_base_la-sha1.lo `test -f 'crypto/sha1.cpp' || echo '$(srcdir)/'`crypto/sha1.cpp

crypto/crypto_libbitcoin_crypto_base_la-sha256.lo: crypto/sha256.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_base_la_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_base_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitcoin_crypto_base_la-sha256.lo -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-sha256.Tpo -c -o crypto/crypto_libbitcoin_crypto_base_la-sha256.lo `test -f 'crypto/sha256.cpp' || echo '$(srcdir)/'`crypto/sha256.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-sha256.Tpo crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-sha256.Plo
#	$(AM_V_CXX)source='crypto/sha256.cpp' object='crypto/crypto_libbitcoin_crypto_base_la-sha256.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_base_la_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_base_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitcoin_crypto_base_la-sha256.lo `test -f 'crypto/sha256.cpp' || echo '$(srcdir)/'`crypto/sha256.cpp

crypto/crypto_libbitcoin_crypto_base_la-sha3.lo: crypto/sha3.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_base_la_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_base_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitcoin_crypto_base_la-sha3.lo -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-sha3.Tpo -c -o crypto/crypto_libbitcoin_crypto_base_la-sha3.lo `test -f 'crypto/sha3.cpp' || echo '$(srcdir)/'`crypto/sha3.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-sha3.Tpo crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-sha3.Plo
#	$(AM_V_CXX)source='crypto/sha3.cpp' object='crypto/crypto_libbitcoin_crypto_base_la-sha3.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_base_la_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_base_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitcoin_crypto_base_la-sha3.lo `test -f 'crypto/sha3.cpp' || echo '$(srcdir)/'`crypto/sha3.cpp

crypto/crypto_libbitcoin_crypto_base_la-sha512.lo: crypto/sha512.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_base_la_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_base_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitcoin_crypto_base_la-sha512.lo -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-sha512.Tpo -c -o crypto/crypto_libbitcoin_crypto_base_la-sha512.lo `test -f 'crypto/sha512.cpp' || echo '$(srcdir)/'`crypto/sha512.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-sha512.Tpo crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-sha512.Plo
#	$(AM_V_CXX)source='crypto/sha512.cpp' object='crypto/crypto_libbitcoin_crypto_base_la-sha512.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_base_la_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_base_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitcoin_crypto_base_la-sha512.lo `test -f 'crypto/sha512.cpp' || echo '$(srcdir)/'`crypto/sha512.cpp

crypto/crypto_libbitcoin_crypto_base_la-siphash.lo: crypto/siphash.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_base_la_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_base_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitcoin_crypto_base_la-siphash.lo -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-siphash.Tpo -c -o crypto/crypto_libbitcoin_crypto_base_la-siphash.lo `test -f 'crypto/siphash.cpp' || echo '$(srcdir)/'`crypto/siphash.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-siphash.Tpo crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-siphash.Plo
#	$(AM_V_CXX)source='crypto/siphash.cpp' object='crypto/crypto_libbitcoin_crypto_base_la-siphash.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_base_la_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_base_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitcoin_crypto_base_la-siphash.lo `test -f 'crypto/siphash.cpp' || echo '$(srcdir)/'`crypto/siphash.cpp

crypto/crypto_libbitcoin_crypto_base_la-sha256_sse4.lo: crypto/sha256_sse4.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_base_la_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_base_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitcoin_crypto_base_la-sha256_sse4.lo -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-sha256_sse4.Tpo -c -o crypto/crypto_libbitcoin_crypto_base_la-sha256_sse4.lo `test -f 'crypto/sha256_sse4.cpp' || echo '$(srcdir)/'`crypto/sha256_sse4.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-sha256_sse4.Tpo crypto/$(DEPDIR)/crypto_libbitcoin_crypto_base_la-sha256_sse4.Plo
#	$(AM_V_CXX)source='crypto/sha256_sse4.cpp' object='crypto/crypto_libbitcoin_crypto_base_la-sha256_sse4.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_base_la_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_base_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitcoin_crypto_base_la-sha256_sse4.lo `test -f 'crypto/sha256_sse4.cpp' || echo '$(srcdir)/'`crypto/sha256_sse4.cpp

crypto/crypto_libbitcoin_crypto_sse41_la-sha256_sse41.lo: crypto/sha256_sse41.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_sse41_la_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_sse41_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitcoin_crypto_sse41_la-sha256_sse41.lo -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitcoin_crypto_sse41_la-sha256_sse41.Tpo -c -o crypto/crypto_libbitcoin_crypto_sse41_la-sha256_sse41.lo `test -f 'crypto/sha256_sse41.cpp' || echo '$(srcdir)/'`crypto/sha256_sse41.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitcoin_crypto_sse41_la-sha256_sse41.Tpo crypto/$(DEPDIR)/crypto_libbitcoin_crypto_sse41_la-sha256_sse41.Plo
#	$(AM_V_CXX)source='crypto/sha256_sse41.cpp' object='crypto/crypto_libbitcoin_crypto_sse41_la-sha256_sse41.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_sse41_la_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_sse41_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitcoin_crypto_sse41_la-sha256_sse41.lo `test -f 'crypto/sha256_sse41.cpp' || echo '$(srcdir)/'`crypto/sha256_sse41.cpp

crypto/crypto_libbitcoin_crypto_x86_shani_la-sha256_x86_shani.lo: crypto/sha256_x86_shani.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_x86_shani_la_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_x86_shani_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libbitcoin_crypto_x86_shani_la-sha256_x86_shani.lo -MD -MP -MF crypto/$(DEPDIR)/crypto_libbitcoin_crypto_x86_shani_la-sha256_x86_shani.Tpo -c -o crypto/crypto_libbitcoin_crypto_x86_shani_la-sha256_x86_shani.lo `test -f 'crypto/sha256_x86_shani.cpp' || echo '$(srcdir)/'`crypto/sha256_x86_shani.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libbitcoin_crypto_x86_shani_la-sha256_x86_shani.Tpo crypto/$(DEPDIR)/crypto_libbitcoin_crypto_x86_shani_la-sha256_x86_shani.Plo
#	$(AM_V_CXX)source='crypto/sha256_x86_shani.cpp' object='crypto/crypto_libbitcoin_crypto_x86_shani_la-sha256_x86_shani.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_x86_shani_la_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_x86_shani_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libbitcoin_crypto_x86_shani_la-sha256_x86_shani.lo `test -f 'crypto/sha256_x86_shani.cpp' || echo '$(srcdir)/'`crypto/sha256_x86_shani.cpp

leveldb/db/leveldb_libleveldb_la-builder.lo: leveldb/db/builder.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_la-builder.lo -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-builder.Tpo -c -o leveldb/db/leveldb_libleveldb_la-builder.lo `test -f 'leveldb/db/builder.cc' || echo '$(srcdir)/'`leveldb/db/builder.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-builder.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-builder.Plo
#	$(AM_V_CXX)source='leveldb/db/builder.cc' object='leveldb/db/leveldb_libleveldb_la-builder.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_la-builder.lo `test -f 'leveldb/db/builder.cc' || echo '$(srcdir)/'`leveldb/db/builder.cc

leveldb/db/leveldb_libleveldb_la-c.lo: leveldb/db/c.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_la-c.lo -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-c.Tpo -c -o leveldb/db/leveldb_libleveldb_la-c.lo `test -f 'leveldb/db/c.cc' || echo '$(srcdir)/'`leveldb/db/c.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-c.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-c.Plo
#	$(AM_V_CXX)source='leveldb/db/c.cc' object='leveldb/db/leveldb_libleveldb_la-c.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_la-c.lo `test -f 'leveldb/db/c.cc' || echo '$(srcdir)/'`leveldb/db/c.cc

leveldb/db/leveldb_libleveldb_la-dbformat.lo: leveldb/db/dbformat.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_la-dbformat.lo -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-dbformat.Tpo -c -o leveldb/db/leveldb_libleveldb_la-dbformat.lo `test -f 'leveldb/db/dbformat.cc' || echo '$(srcdir)/'`leveldb/db/dbformat.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-dbformat.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-dbformat.Plo
#	$(AM_V_CXX)source='leveldb/db/dbformat.cc' object='leveldb/db/leveldb_libleveldb_la-dbformat.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_la-dbformat.lo `test -f 'leveldb/db/dbformat.cc' || echo '$(srcdir)/'`leveldb/db/dbformat.cc

leveldb/db/leveldb_libleveldb_la-db_impl.lo: leveldb/db/db_impl.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_la-db_impl.lo -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-db_impl.Tpo -c -o leveldb/db/leveldb_libleveldb_la-db_impl.lo `test -f 'leveldb/db/db_impl.cc' || echo '$(srcdir)/'`leveldb/db/db_impl.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-db_impl.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-db_impl.Plo
#	$(AM_V_CXX)source='leveldb/db/db_impl.cc' object='leveldb/db/leveldb_libleveldb_la-db_impl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_la-db_impl.lo `test -f 'leveldb/db/db_impl.cc' || echo '$(srcdir)/'`leveldb/db/db_impl.cc

leveldb/db/leveldb_libleveldb_la-db_iter.lo: leveldb/db/db_iter.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_la-db_iter.lo -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-db_iter.Tpo -c -o leveldb/db/leveldb_libleveldb_la-db_iter.lo `test -f 'leveldb/db/db_iter.cc' || echo '$(srcdir)/'`leveldb/db/db_iter.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-db_iter.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-db_iter.Plo
#	$(AM_V_CXX)source='leveldb/db/db_iter.cc' object='leveldb/db/leveldb_libleveldb_la-db_iter.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_la-db_iter.lo `test -f 'leveldb/db/db_iter.cc' || echo '$(srcdir)/'`leveldb/db/db_iter.cc

leveldb/db/leveldb_libleveldb_la-dumpfile.lo: leveldb/db/dumpfile.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_la-dumpfile.lo -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-dumpfile.Tpo -c -o leveldb/db/leveldb_libleveldb_la-dumpfile.lo `test -f 'leveldb/db/dumpfile.cc' || echo '$(srcdir)/'`leveldb/db/dumpfile.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-dumpfile.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-dumpfile.Plo
#	$(AM_V_CXX)source='leveldb/db/dumpfile.cc' object='leveldb/db/leveldb_libleveldb_la-dumpfile.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_la-dumpfile.lo `test -f 'leveldb/db/dumpfile.cc' || echo '$(srcdir)/'`leveldb/db/dumpfile.cc

leveldb/db/leveldb_libleveldb_la-filename.lo: leveldb/db/filename.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_la-filename.lo -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-filename.Tpo -c -o leveldb/db/leveldb_libleveldb_la-filename.lo `test -f 'leveldb/db/filename.cc' || echo '$(srcdir)/'`leveldb/db/filename.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-filename.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-filename.Plo
#	$(AM_V_CXX)source='leveldb/db/filename.cc' object='leveldb/db/leveldb_libleveldb_la-filename.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_la-filename.lo `test -f 'leveldb/db/filename.cc' || echo '$(srcdir)/'`leveldb/db/filename.cc

leveldb/db/leveldb_libleveldb_la-log_reader.lo: leveldb/db/log_reader.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_la-log_reader.lo -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-log_reader.Tpo -c -o leveldb/db/leveldb_libleveldb_la-log_reader.lo `test -f 'leveldb/db/log_reader.cc' || echo '$(srcdir)/'`leveldb/db/log_reader.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-log_reader.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-log_reader.Plo
#	$(AM_V_CXX)source='leveldb/db/log_reader.cc' object='leveldb/db/leveldb_libleveldb_la-log_reader.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_la-log_reader.lo `test -f 'leveldb/db/log_reader.cc' || echo '$(srcdir)/'`leveldb/db/log_reader.cc

leveldb/db/leveldb_libleveldb_la-log_writer.lo: leveldb/db/log_writer.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_la-log_writer.lo -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-log_writer.Tpo -c -o leveldb/db/leveldb_libleveldb_la-log_writer.lo `test -f 'leveldb/db/log_writer.cc' || echo '$(srcdir)/'`leveldb/db/log_writer.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-log_writer.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-log_writer.Plo
#	$(AM_V_CXX)source='leveldb/db/log_writer.cc' object='leveldb/db/leveldb_libleveldb_la-log_writer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_la-log_writer.lo `test -f 'leveldb/db/log_writer.cc' || echo '$(srcdir)/'`leveldb/db/log_writer.cc

leveldb/db/leveldb_libleveldb_la-memtable.lo: leveldb/db/memtable.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_la-memtable.lo -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-memtable.Tpo -c -o leveldb/db/leveldb_libleveldb_la-memtable.lo `test -f 'leveldb/db/memtable.cc' || echo '$(srcdir)/'`leveldb/db/memtable.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-memtable.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-memtable.Plo
#	$(AM_V_CXX)source='leveldb/db/memtable.cc' object='leveldb/db/leveldb_libleveldb_la-memtable.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_la-memtable.lo `test -f 'leveldb/db/memtable.cc' || echo '$(srcdir)/'`leveldb/db/memtable.cc

leveldb/db/leveldb_libleveldb_la-repair.lo: leveldb/db/repair.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_la-repair.lo -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-repair.Tpo -c -o leveldb/db/leveldb_libleveldb_la-repair.lo `test -f 'leveldb/db/repair.cc' || echo '$(srcdir)/'`leveldb/db/repair.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-repair.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-repair.Plo
#	$(AM_V_CXX)source='leveldb/db/repair.cc' object='leveldb/db/leveldb_libleveldb_la-repair.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_la-repair.lo `test -f 'leveldb/db/repair.cc' || echo '$(srcdir)/'`leveldb/db/repair.cc

leveldb/db/leveldb_libleveldb_la-table_cache.lo: leveldb/db/table_cache.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_la-table_cache.lo -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-table_cache.Tpo -c -o leveldb/db/leveldb_libleveldb_la-table_cache.lo `test -f 'leveldb/db/table_cache.cc' || echo '$(srcdir)/'`leveldb/db/table_cache.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-table_cache.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-table_cache.Plo
#	$(AM_V_CXX)source='leveldb/db/table_cache.cc' object='leveldb/db/leveldb_libleveldb_la-table_cache.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_la-table_cache.lo `test -f 'leveldb/db/table_cache.cc' || echo '$(srcdir)/'`leveldb/db/table_cache.cc

leveldb/db/leveldb_libleveldb_la-version_edit.lo: leveldb/db/version_edit.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_la-version_edit.lo -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-version_edit.Tpo -c -o leveldb/db/leveldb_libleveldb_la-version_edit.lo `test -f 'leveldb/db/version_edit.cc' || echo '$(srcdir)/'`leveldb/db/version_edit.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-version_edit.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-version_edit.Plo
#	$(AM_V_CXX)source='leveldb/db/version_edit.cc' object='leveldb/db/leveldb_libleveldb_la-version_edit.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_la-version_edit.lo `test -f 'leveldb/db/version_edit.cc' || echo '$(srcdir)/'`leveldb/db/version_edit.cc

leveldb/db/leveldb_libleveldb_la-version_set.lo: leveldb/db/version_set.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_la-version_set.lo -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-version_set.Tpo -c -o leveldb/db/leveldb_libleveldb_la-version_set.lo `test -f 'leveldb/db/version_set.cc' || echo '$(srcdir)/'`leveldb/db/version_set.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-version_set.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-version_set.Plo
#	$(AM_V_CXX)source='leveldb/db/version_set.cc' object='leveldb/db/leveldb_libleveldb_la-version_set.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_la-version_set.lo `test -f 'leveldb/db/version_set.cc' || echo '$(srcdir)/'`leveldb/db/version_set.cc

leveldb/db/leveldb_libleveldb_la-write_batch.lo: leveldb/db/write_batch.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_la-write_batch.lo -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-write_batch.Tpo -c -o leveldb/db/leveldb_libleveldb_la-write_batch.lo `test -f 'leveldb/db/write_batch.cc' || echo '$(srcdir)/'`leveldb/db/write_batch.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-write_batch.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_la-write_batch.Plo
#	$(AM_V_CXX)source='leveldb/db/write_batch.cc' object='leveldb/db/leveldb_libleveldb_la-write_batch.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_la-write_batch.lo `test -f 'leveldb/db/write_batch.cc' || echo '$(srcdir)/'`leveldb/db/write_batch.cc

leveldb/table/leveldb_libleveldb_la-block_builder.lo: leveldb/table/block_builder.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_la-block_builder.lo -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_la-block_builder.Tpo -c -o leveldb/table/leveldb_libleveldb_la-block_builder.lo `test -f 'leveldb/table/block_builder.cc' || echo '$(srcdir)/'`leveldb/table/block_builder.cc
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_la-block_builder.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_la-block_builder.Plo
#	$(AM_V_CXX)source='leveldb/table/block_builder.cc' object='leveldb/table/leveldb_libleveldb_la-block_builder.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_la-block_builder.lo `test -f 'leveldb/table/block_builder.cc' || echo '$(srcdir)/'`leveldb/table/block_builder.cc

leveldb/table/leveldb_libleveldb_la-block.lo: leveldb/table/block.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_la-block.lo -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_la-block.Tpo -c -o leveldb/table/leveldb_libleveldb_la-block.lo `test -f 'leveldb/table/block.cc' || echo '$(srcdir)/'`leveldb/table/block.cc
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_la-block.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_la-block.Plo
#	$(AM_V_CXX)source='leveldb/table/block.cc' object='leveldb/table/leveldb_libleveldb_la-block.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_la-block.lo `test -f 'leveldb/table/block.cc' || echo '$(srcdir)/'`leveldb/table/block.cc

leveldb/table/leveldb_libleveldb_la-filter_block.lo: leveldb/table/filter_block.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_la-filter_block.lo -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_la-filter_block.Tpo -c -o leveldb/table/leveldb_libleveldb_la-filter_block.lo `test -f 'leveldb/table/filter_block.cc' || echo '$(srcdir)/'`leveldb/table/filter_block.cc
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_la-filter_block.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_la-filter_block.Plo
#	$(AM_V_CXX)source='leveldb/table/filter_block.cc' object='leveldb/table/leveldb_libleveldb_la-filter_block.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_la-filter_block.lo `test -f 'leveldb/table/filter_block.cc' || echo '$(srcdir)/'`leveldb/table/filter_block.cc

leveldb/table/leveldb_libleveldb_la-format.lo: leveldb/table/format.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_la-format.lo -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_la-format.Tpo -c -o leveldb/table/leveldb_libleveldb_la-format.lo `test -f 'leveldb/table/format.cc' || echo '$(srcdir)/'`leveldb/table/format.cc
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_la-format.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_la-format.Plo
#	$(AM_V_CXX)source='leveldb/table/format.cc' object='leveldb/table/leveldb_libleveldb_la-format.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_la-format.lo `test -f 'leveldb/table/format.cc' || echo '$(srcdir)/'`leveldb/table/format.cc

leveldb/table/leveldb_libleveldb_la-iterator.lo: leveldb/table/iterator.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_la-iterator.lo -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_la-iterator.Tpo -c -o leveldb/table/leveldb_libleveldb_la-iterator.lo `test -f 'leveldb/table/iterator.cc' || echo '$(srcdir)/'`leveldb/table/iterator.cc
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_la-iterator.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_la-iterator.Plo
#	$(AM_V_CXX)source='leveldb/table/iterator.cc' object='leveldb/table/leveldb_libleveldb_la-iterator.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_la-iterator.lo `test -f 'leveldb/table/iterator.cc' || echo '$(srcdir)/'`leveldb/table/iterator.cc

leveldb/table/leveldb_libleveldb_la-merger.lo: leveldb/table/merger.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_la-merger.lo -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_la-merger.Tpo -c -o leveldb/table/leveldb_libleveldb_la-merger.lo `test -f 'leveldb/table/merger.cc' || echo '$(srcdir)/'`leveldb/table/merger.cc
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_la-merger.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_la-merger.Plo
#	$(AM_V_CXX)source='leveldb/table/merger.cc' object='leveldb/table/leveldb_libleveldb_la-merger.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_la-merger.lo `test -f 'leveldb/table/merger.cc' || echo '$(srcdir)/'`leveldb/table/merger.cc

leveldb/table/leveldb_libleveldb_la-table_builder.lo: leveldb/table/table_builder.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_la-table_builder.lo -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_la-table_builder.Tpo -c -o leveldb/table/leveldb_libleveldb_la-table_builder.lo `test -f 'leveldb/table/table_builder.cc' || echo '$(srcdir)/'`leveldb/table/table_builder.cc
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_la-table_builder.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_la-table_builder.Plo
#	$(AM_V_CXX)source='leveldb/table/table_builder.cc' object='leveldb/table/leveldb_libleveldb_la-table_builder.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_la-table_builder.lo `test -f 'leveldb/table/table_builder.cc' || echo '$(srcdir)/'`leveldb/table/table_builder.cc

leveldb/table/leveldb_libleveldb_la-table.lo: leveldb/table/table.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_la-table.lo -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_la-table.Tpo -c -o leveldb/table/leveldb_libleveldb_la-table.lo `test -f 'leveldb/table/table.cc' || echo '$(srcdir)/'`leveldb/table/table.cc
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_la-table.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_la-table.Plo
#	$(AM_V_CXX)source='leveldb/table/table.cc' object='leveldb/table/leveldb_libleveldb_la-table.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_la-table.lo `test -f 'leveldb/table/table.cc' || echo '$(srcdir)/'`leveldb/table/table.cc

leveldb/table/leveldb_libleveldb_la-two_level_iterator.lo: leveldb/table/two_level_iterator.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_la-two_level_iterator.lo -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_la-two_level_iterator.Tpo -c -o leveldb/table/leveldb_libleveldb_la-two_level_iterator.lo `test -f 'leveldb/table/two_level_iterator.cc' || echo '$(srcdir)/'`leveldb/table/two_level_iterator.cc
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_la-two_level_iterator.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_la-two_level_iterator.Plo
#	$(AM_V_CXX)source='leveldb/table/two_level_iterator.cc' object='leveldb/table/leveldb_libleveldb_la-two_level_iterator.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_la-two_level_iterator.lo `test -f 'leveldb/table/two_level_iterator.cc' || echo '$(srcdir)/'`leveldb/table/two_level_iterator.cc

leveldb/util/leveldb_libleveldb_la-arena.lo: leveldb/util/arena.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_la-arena.lo -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-arena.Tpo -c -o leveldb/util/leveldb_libleveldb_la-arena.lo `test -f 'leveldb/util/arena.cc' || echo '$(srcdir)/'`leveldb/util/arena.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-arena.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-arena.Plo
#	$(AM_V_CXX)source='leveldb/util/arena.cc' object='leveldb/util/leveldb_libleveldb_la-arena.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_la-arena.lo `test -f 'leveldb/util/arena.cc' || echo '$(srcdir)/'`leveldb/util/arena.cc

leveldb/util/leveldb_libleveldb_la-bloom.lo: leveldb/util/bloom.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_la-bloom.lo -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-bloom.Tpo -c -o leveldb/util/leveldb_libleveldb_la-bloom.lo `test -f 'leveldb/util/bloom.cc' || echo '$(srcdir)/'`leveldb/util/bloom.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-bloom.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-bloom.Plo
#	$(AM_V_CXX)source='leveldb/util/bloom.cc' object='leveldb/util/leveldb_libleveldb_la-bloom.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_la-bloom.lo `test -f 'leveldb/util/bloom.cc' || echo '$(srcdir)/'`leveldb/util/bloom.cc

leveldb/util/leveldb_libleveldb_la-cache.lo: leveldb/util/cache.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_la-cache.lo -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-cache.Tpo -c -o leveldb/util/leveldb_libleveldb_la-cache.lo `test -f 'leveldb/util/cache.cc' || echo '$(srcdir)/'`leveldb/util/cache.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-cache.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-cache.Plo
#	$(AM_V_CXX)source='leveldb/util/cache.cc' object='leveldb/util/leveldb_libleveldb_la-cache.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_la-cache.lo `test -f 'leveldb/util/cache.cc' || echo '$(srcdir)/'`leveldb/util/cache.cc

leveldb/util/leveldb_libleveldb_la-coding.lo: leveldb/util/coding.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_la-coding.lo -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-coding.Tpo -c -o leveldb/util/leveldb_libleveldb_la-coding.lo `test -f 'leveldb/util/coding.cc' || echo '$(srcdir)/'`leveldb/util/coding.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-coding.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-coding.Plo
#	$(AM_V_CXX)source='leveldb/util/coding.cc' object='leveldb/util/leveldb_libleveldb_la-coding.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_la-coding.lo `test -f 'leveldb/util/coding.cc' || echo '$(srcdir)/'`leveldb/util/coding.cc

leveldb/util/leveldb_libleveldb_la-comparator.lo: leveldb/util/comparator.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_la-comparator.lo -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-comparator.Tpo -c -o leveldb/util/leveldb_libleveldb_la-comparator.lo `test -f 'leveldb/util/comparator.cc' || echo '$(srcdir)/'`leveldb/util/comparator.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-comparator.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-comparator.Plo
#	$(AM_V_CXX)source='leveldb/util/comparator.cc' object='leveldb/util/leveldb_libleveldb_la-comparator.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_la-comparator.lo `test -f 'leveldb/util/comparator.cc' || echo '$(srcdir)/'`leveldb/util/comparator.cc

leveldb/util/leveldb_libleveldb_la-crc32c.lo: leveldb/util/crc32c.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_la-crc32c.lo -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-crc32c.Tpo -c -o leveldb/util/leveldb_libleveldb_la-crc32c.lo `test -f 'leveldb/util/crc32c.cc' || echo '$(srcdir)/'`leveldb/util/crc32c.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-crc32c.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-crc32c.Plo
#	$(AM_V_CXX)source='leveldb/util/crc32c.cc' object='leveldb/util/leveldb_libleveldb_la-crc32c.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_la-crc32c.lo `test -f 'leveldb/util/crc32c.cc' || echo '$(srcdir)/'`leveldb/util/crc32c.cc

leveldb/util/leveldb_libleveldb_la-env.lo: leveldb/util/env.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_la-env.lo -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-env.Tpo -c -o leveldb/util/leveldb_libleveldb_la-env.lo `test -f 'leveldb/util/env.cc' || echo '$(srcdir)/'`leveldb/util/env.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-env.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-env.Plo
#	$(AM_V_CXX)source='leveldb/util/env.cc' object='leveldb/util/leveldb_libleveldb_la-env.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_la-env.lo `test -f 'leveldb/util/env.cc' || echo '$(srcdir)/'`leveldb/util/env.cc

leveldb/util/leveldb_libleveldb_la-filter_policy.lo: leveldb/util/filter_policy.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_la-filter_policy.lo -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-filter_policy.Tpo -c -o leveldb/util/leveldb_libleveldb_la-filter_policy.lo `test -f 'leveldb/util/filter_policy.cc' || echo '$(srcdir)/'`leveldb/util/filter_policy.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-filter_policy.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-filter_policy.Plo
#	$(AM_V_CXX)source='leveldb/util/filter_policy.cc' object='leveldb/util/leveldb_libleveldb_la-filter_policy.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_la-filter_policy.lo `test -f 'leveldb/util/filter_policy.cc' || echo '$(srcdir)/'`leveldb/util/filter_policy.cc

leveldb/util/leveldb_libleveldb_la-hash.lo: leveldb/util/hash.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_la-hash.lo -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-hash.Tpo -c -o leveldb/util/leveldb_libleveldb_la-hash.lo `test -f 'leveldb/util/hash.cc' || echo '$(srcdir)/'`leveldb/util/hash.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-hash.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-hash.Plo
#	$(AM_V_CXX)source='leveldb/util/hash.cc' object='leveldb/util/leveldb_libleveldb_la-hash.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_la-hash.lo `test -f 'leveldb/util/hash.cc' || echo '$(srcdir)/'`leveldb/util/hash.cc

leveldb/util/leveldb_libleveldb_la-histogram.lo: leveldb/util/histogram.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_la-histogram.lo -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-histogram.Tpo -c -o leveldb/util/leveldb_libleveldb_la-histogram.lo `test -f 'leveldb/util/histogram.cc' || echo '$(srcdir)/'`leveldb/util/histogram.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-histogram.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-histogram.Plo
#	$(AM_V_CXX)source='leveldb/util/histogram.cc' object='leveldb/util/leveldb_libleveldb_la-histogram.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_la-histogram.lo `test -f 'leveldb/util/histogram.cc' || echo '$(srcdir)/'`leveldb/util/histogram.cc

leveldb/util/leveldb_libleveldb_la-logging.lo: leveldb/util/logging.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_la-logging.lo -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-logging.Tpo -c -o leveldb/util/leveldb_libleveldb_la-logging.lo `test -f 'leveldb/util/logging.cc' || echo '$(srcdir)/'`leveldb/util/logging.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-logging.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-logging.Plo
#	$(AM_V_CXX)source='leveldb/util/logging.cc' object='leveldb/util/leveldb_libleveldb_la-logging.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_la-logging.lo `test -f 'leveldb/util/logging.cc' || echo '$(srcdir)/'`leveldb/util/logging.cc

leveldb/util/leveldb_libleveldb_la-options.lo: leveldb/util/options.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_la-options.lo -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-options.Tpo -c -o leveldb/util/leveldb_libleveldb_la-options.lo `test -f 'leveldb/util/options.cc' || echo '$(srcdir)/'`leveldb/util/options.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-options.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-options.Plo
#	$(AM_V_CXX)source='leveldb/util/options.cc' object='leveldb/util/leveldb_libleveldb_la-options.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_la-options.lo `test -f 'leveldb/util/options.cc' || echo '$(srcdir)/'`leveldb/util/options.cc

leveldb/util/leveldb_libleveldb_la-status.lo: leveldb/util/status.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_la-status.lo -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-status.Tpo -c -o leveldb/util/leveldb_libleveldb_la-status.lo `test -f 'leveldb/util/status.cc' || echo '$(srcdir)/'`leveldb/util/status.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-status.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-status.Plo
#	$(AM_V_CXX)source='leveldb/util/status.cc' object='leveldb/util/leveldb_libleveldb_la-status.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_la-status.lo `test -f 'leveldb/util/status.cc' || echo '$(srcdir)/'`leveldb/util/status.cc

leveldb/util/leveldb_libleveldb_la-env_windows.lo: leveldb/util/env_windows.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_la-env_windows.lo -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-env_windows.Tpo -c -o leveldb/util/leveldb_libleveldb_la-env_windows.lo `test -f 'leveldb/util/env_windows.cc' || echo '$(srcdir)/'`leveldb/util/env_windows.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-env_windows.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-env_windows.Plo
#	$(AM_V_CXX)source='leveldb/util/env_windows.cc' object='leveldb/util/leveldb_libleveldb_la-env_windows.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_la-env_windows.lo `test -f 'leveldb/util/env_windows.cc' || echo '$(srcdir)/'`leveldb/util/env_windows.cc

leveldb/util/leveldb_libleveldb_la-env_posix.lo: leveldb/util/env_posix.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_la-env_posix.lo -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-env_posix.Tpo -c -o leveldb/util/leveldb_libleveldb_la-env_posix.lo `test -f 'leveldb/util/env_posix.cc' || echo '$(srcdir)/'`leveldb/util/env_posix.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-env_posix.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_la-env_posix.Plo
#	$(AM_V_CXX)source='leveldb/util/env_posix.cc' object='leveldb/util/leveldb_libleveldb_la-env_posix.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_la_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_la-env_posix.lo `test -f 'leveldb/util/env_posix.cc' || echo '$(srcdir)/'`leveldb/util/env_posix.cc

leveldb/helpers/memenv/leveldb_libmemenv_la-memenv.lo: leveldb/helpers/memenv/memenv.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libmemenv_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libmemenv_la_CXXFLAGS) $(CXXFLAGS) -MT leveldb/helpers/memenv/leveldb_libmemenv_la-memenv.lo -MD -MP -MF leveldb/helpers/memenv/$(DEPDIR)/leveldb_libmemenv_la-memenv.Tpo -c -o leveldb/helpers/memenv/leveldb_libmemenv_la-memenv.lo `test -f 'leveldb/helpers/memenv/memenv.cc' || echo '$(srcdir)/'`leveldb/helpers/memenv/memenv.cc
	$(AM_V_at)$(am__mv) leveldb/helpers/memenv/$(DEPDIR)/leveldb_libmemenv_la-memenv.Tpo leveldb/helpers/memenv/$(DEPDIR)/leveldb_libmemenv_la-memenv.Plo
#	$(AM_V_CXX)source='leveldb/helpers/memenv/memenv.cc' object='leveldb/helpers/memenv/leveldb_libmemenv_la-memenv.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libmemenv_la_CPPFLAGS) $(CPPFLAGS) $(leveldb_libmemenv_la_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/helpers/memenv/leveldb_libmemenv_la-memenv.lo `test -f 'leveldb/helpers/memenv/memenv.cc' || echo '$(srcdir)/'`leveldb/helpers/memenv/memenv.cc

support/libbitcoinconsensus_la-cleanse.lo: support/cleanse.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT support/libbitcoinconsensus_la-cleanse.lo -MD -MP -MF support/$(DEPDIR)/libbitcoinconsensus_la-cleanse.Tpo -c -o support/libbitcoinconsensus_la-cleanse.lo `test -f 'support/cleanse.cpp' || echo '$(srcdir)/'`support/cleanse.cpp
	$(AM_V_at)$(am__mv) support/$(DEPDIR)/libbitcoinconsensus_la-cleanse.Tpo support/$(DEPDIR)/libbitcoinconsensus_la-cleanse.Plo
#	$(AM_V_CXX)source='support/cleanse.cpp' object='support/libbitcoinconsensus_la-cleanse.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o support/libbitcoinconsensus_la-cleanse.lo `test -f 'support/cleanse.cpp' || echo '$(srcdir)/'`support/cleanse.cpp

crypto/libbitcoinconsensus_la-aes.lo: crypto/aes.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitcoinconsensus_la-aes.lo -MD -MP -MF crypto/$(DEPDIR)/libbitcoinconsensus_la-aes.Tpo -c -o crypto/libbitcoinconsensus_la-aes.lo `test -f 'crypto/aes.cpp' || echo '$(srcdir)/'`crypto/aes.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitcoinconsensus_la-aes.Tpo crypto/$(DEPDIR)/libbitcoinconsensus_la-aes.Plo
#	$(AM_V_CXX)source='crypto/aes.cpp' object='crypto/libbitcoinconsensus_la-aes.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitcoinconsensus_la-aes.lo `test -f 'crypto/aes.cpp' || echo '$(srcdir)/'`crypto/aes.cpp

crypto/libbitcoinconsensus_la-chacha_poly_aead.lo: crypto/chacha_poly_aead.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitcoinconsensus_la-chacha_poly_aead.lo -MD -MP -MF crypto/$(DEPDIR)/libbitcoinconsensus_la-chacha_poly_aead.Tpo -c -o crypto/libbitcoinconsensus_la-chacha_poly_aead.lo `test -f 'crypto/chacha_poly_aead.cpp' || echo '$(srcdir)/'`crypto/chacha_poly_aead.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitcoinconsensus_la-chacha_poly_aead.Tpo crypto/$(DEPDIR)/libbitcoinconsensus_la-chacha_poly_aead.Plo
#	$(AM_V_CXX)source='crypto/chacha_poly_aead.cpp' object='crypto/libbitcoinconsensus_la-chacha_poly_aead.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitcoinconsensus_la-chacha_poly_aead.lo `test -f 'crypto/chacha_poly_aead.cpp' || echo '$(srcdir)/'`crypto/chacha_poly_aead.cpp

crypto/libbitcoinconsensus_la-chacha20.lo: crypto/chacha20.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitcoinconsensus_la-chacha20.lo -MD -MP -MF crypto/$(DEPDIR)/libbitcoinconsensus_la-chacha20.Tpo -c -o crypto/libbitcoinconsensus_la-chacha20.lo `test -f 'crypto/chacha20.cpp' || echo '$(srcdir)/'`crypto/chacha20.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitcoinconsensus_la-chacha20.Tpo crypto/$(DEPDIR)/libbitcoinconsensus_la-chacha20.Plo
#	$(AM_V_CXX)source='crypto/chacha20.cpp' object='crypto/libbitcoinconsensus_la-chacha20.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitcoinconsensus_la-chacha20.lo `test -f 'crypto/chacha20.cpp' || echo '$(srcdir)/'`crypto/chacha20.cpp

crypto/libbitcoinconsensus_la-hkdf_sha256_32.lo: crypto/hkdf_sha256_32.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitcoinconsensus_la-hkdf_sha256_32.lo -MD -MP -MF crypto/$(DEPDIR)/libbitcoinconsensus_la-hkdf_sha256_32.Tpo -c -o crypto/libbitcoinconsensus_la-hkdf_sha256_32.lo `test -f 'crypto/hkdf_sha256_32.cpp' || echo '$(srcdir)/'`crypto/hkdf_sha256_32.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitcoinconsensus_la-hkdf_sha256_32.Tpo crypto/$(DEPDIR)/libbitcoinconsensus_la-hkdf_sha256_32.Plo
#	$(AM_V_CXX)source='crypto/hkdf_sha256_32.cpp' object='crypto/libbitcoinconsensus_la-hkdf_sha256_32.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitcoinconsensus_la-hkdf_sha256_32.lo `test -f 'crypto/hkdf_sha256_32.cpp' || echo '$(srcdir)/'`crypto/hkdf_sha256_32.cpp

crypto/libbitcoinconsensus_la-hmac_sha256.lo: crypto/hmac_sha256.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitcoinconsensus_la-hmac_sha256.lo -MD -MP -MF crypto/$(DEPDIR)/libbitcoinconsensus_la-hmac_sha256.Tpo -c -o crypto/libbitcoinconsensus_la-hmac_sha256.lo `test -f 'crypto/hmac_sha256.cpp' || echo '$(srcdir)/'`crypto/hmac_sha256.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitcoinconsensus_la-hmac_sha256.Tpo crypto/$(DEPDIR)/libbitcoinconsensus_la-hmac_sha256.Plo
#	$(AM_V_CXX)source='crypto/hmac_sha256.cpp' object='crypto/libbitcoinconsensus_la-hmac_sha256.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitcoinconsensus_la-hmac_sha256.lo `test -f 'crypto/hmac_sha256.cpp' || echo '$(srcdir)/'`crypto/hmac_sha256.cpp

crypto/libbitcoinconsensus_la-hmac_sha512.lo: crypto/hmac_sha512.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitcoinconsensus_la-hmac_sha512.lo -MD -MP -MF crypto/$(DEPDIR)/libbitcoinconsensus_la-hmac_sha512.Tpo -c -o crypto/libbitcoinconsensus_la-hmac_sha512.lo `test -f 'crypto/hmac_sha512.cpp' || echo '$(srcdir)/'`crypto/hmac_sha512.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitcoinconsensus_la-hmac_sha512.Tpo crypto/$(DEPDIR)/libbitcoinconsensus_la-hmac_sha512.Plo
#	$(AM_V_CXX)source='crypto/hmac_sha512.cpp' object='crypto/libbitcoinconsensus_la-hmac_sha512.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitcoinconsensus_la-hmac_sha512.lo `test -f 'crypto/hmac_sha512.cpp' || echo '$(srcdir)/'`crypto/hmac_sha512.cpp

crypto/libbitcoinconsensus_la-poly1305.lo: crypto/poly1305.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitcoinconsensus_la-poly1305.lo -MD -MP -MF crypto/$(DEPDIR)/libbitcoinconsensus_la-poly1305.Tpo -c -o crypto/libbitcoinconsensus_la-poly1305.lo `test -f 'crypto/poly1305.cpp' || echo '$(srcdir)/'`crypto/poly1305.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitcoinconsensus_la-poly1305.Tpo crypto/$(DEPDIR)/libbitcoinconsensus_la-poly1305.Plo
#	$(AM_V_CXX)source='crypto/poly1305.cpp' object='crypto/libbitcoinconsensus_la-poly1305.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitcoinconsensus_la-poly1305.lo `test -f 'crypto/poly1305.cpp' || echo '$(srcdir)/'`crypto/poly1305.cpp

crypto/libbitcoinconsensus_la-muhash.lo: crypto/muhash.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitcoinconsensus_la-muhash.lo -MD -MP -MF crypto/$(DEPDIR)/libbitcoinconsensus_la-muhash.Tpo -c -o crypto/libbitcoinconsensus_la-muhash.lo `test -f 'crypto/muhash.cpp' || echo '$(srcdir)/'`crypto/muhash.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitcoinconsensus_la-muhash.Tpo crypto/$(DEPDIR)/libbitcoinconsensus_la-muhash.Plo
#	$(AM_V_CXX)source='crypto/muhash.cpp' object='crypto/libbitcoinconsensus_la-muhash.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitcoinconsensus_la-muhash.lo `test -f 'crypto/muhash.cpp' || echo '$(srcdir)/'`crypto/muhash.cpp

crypto/libbitcoinconsensus_la-ripemd160.lo: crypto/ripemd160.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitcoinconsensus_la-ripemd160.lo -MD -MP -MF crypto/$(DEPDIR)/libbitcoinconsensus_la-ripemd160.Tpo -c -o crypto/libbitcoinconsensus_la-ripemd160.lo `test -f 'crypto/ripemd160.cpp' || echo '$(srcdir)/'`crypto/ripemd160.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitcoinconsensus_la-ripemd160.Tpo crypto/$(DEPDIR)/libbitcoinconsensus_la-ripemd160.Plo
#	$(AM_V_CXX)source='crypto/ripemd160.cpp' object='crypto/libbitcoinconsensus_la-ripemd160.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitcoinconsensus_la-ripemd160.lo `test -f 'crypto/ripemd160.cpp' || echo '$(srcdir)/'`crypto/ripemd160.cpp

crypto/libbitcoinconsensus_la-sha1.lo: crypto/sha1.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitcoinconsensus_la-sha1.lo -MD -MP -MF crypto/$(DEPDIR)/libbitcoinconsensus_la-sha1.Tpo -c -o crypto/libbitcoinconsensus_la-sha1.lo `test -f 'crypto/sha1.cpp' || echo '$(srcdir)/'`crypto/sha1.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitcoinconsensus_la-sha1.Tpo crypto/$(DEPDIR)/libbitcoinconsensus_la-sha1.Plo
#	$(AM_V_CXX)source='crypto/sha1.cpp' object='crypto/libbitcoinconsensus_la-sha1.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitcoinconsensus_la-sha1.lo `test -f 'crypto/sha1.cpp' || echo '$(srcdir)/'`crypto/sha1.cpp

crypto/libbitcoinconsensus_la-sha256.lo: crypto/sha256.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitcoinconsensus_la-sha256.lo -MD -MP -MF crypto/$(DEPDIR)/libbitcoinconsensus_la-sha256.Tpo -c -o crypto/libbitcoinconsensus_la-sha256.lo `test -f 'crypto/sha256.cpp' || echo '$(srcdir)/'`crypto/sha256.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitcoinconsensus_la-sha256.Tpo crypto/$(DEPDIR)/libbitcoinconsensus_la-sha256.Plo
#	$(AM_V_CXX)source='crypto/sha256.cpp' object='crypto/libbitcoinconsensus_la-sha256.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitcoinconsensus_la-sha256.lo `test -f 'crypto/sha256.cpp' || echo '$(srcdir)/'`crypto/sha256.cpp

crypto/libbitcoinconsensus_la-sha3.lo: crypto/sha3.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitcoinconsensus_la-sha3.lo -MD -MP -MF crypto/$(DEPDIR)/libbitcoinconsensus_la-sha3.Tpo -c -o crypto/libbitcoinconsensus_la-sha3.lo `test -f 'crypto/sha3.cpp' || echo '$(srcdir)/'`crypto/sha3.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitcoinconsensus_la-sha3.Tpo crypto/$(DEPDIR)/libbitcoinconsensus_la-sha3.Plo
#	$(AM_V_CXX)source='crypto/sha3.cpp' object='crypto/libbitcoinconsensus_la-sha3.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitcoinconsensus_la-sha3.lo `test -f 'crypto/sha3.cpp' || echo '$(srcdir)/'`crypto/sha3.cpp

crypto/libbitcoinconsensus_la-sha512.lo: crypto/sha512.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitcoinconsensus_la-sha512.lo -MD -MP -MF crypto/$(DEPDIR)/libbitcoinconsensus_la-sha512.Tpo -c -o crypto/libbitcoinconsensus_la-sha512.lo `test -f 'crypto/sha512.cpp' || echo '$(srcdir)/'`crypto/sha512.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitcoinconsensus_la-sha512.Tpo crypto/$(DEPDIR)/libbitcoinconsensus_la-sha512.Plo
#	$(AM_V_CXX)source='crypto/sha512.cpp' object='crypto/libbitcoinconsensus_la-sha512.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitcoinconsensus_la-sha512.lo `test -f 'crypto/sha512.cpp' || echo '$(srcdir)/'`crypto/sha512.cpp

crypto/libbitcoinconsensus_la-siphash.lo: crypto/siphash.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitcoinconsensus_la-siphash.lo -MD -MP -MF crypto/$(DEPDIR)/libbitcoinconsensus_la-siphash.Tpo -c -o crypto/libbitcoinconsensus_la-siphash.lo `test -f 'crypto/siphash.cpp' || echo '$(srcdir)/'`crypto/siphash.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitcoinconsensus_la-siphash.Tpo crypto/$(DEPDIR)/libbitcoinconsensus_la-siphash.Plo
#	$(AM_V_CXX)source='crypto/siphash.cpp' object='crypto/libbitcoinconsensus_la-siphash.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitcoinconsensus_la-siphash.lo `test -f 'crypto/siphash.cpp' || echo '$(srcdir)/'`crypto/siphash.cpp

crypto/libbitcoinconsensus_la-sha256_sse4.lo: crypto/sha256_sse4.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitcoinconsensus_la-sha256_sse4.lo -MD -MP -MF crypto/$(DEPDIR)/libbitcoinconsensus_la-sha256_sse4.Tpo -c -o crypto/libbitcoinconsensus_la-sha256_sse4.lo `test -f 'crypto/sha256_sse4.cpp' || echo '$(srcdir)/'`crypto/sha256_sse4.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitcoinconsensus_la-sha256_sse4.Tpo crypto/$(DEPDIR)/libbitcoinconsensus_la-sha256_sse4.Plo
#	$(AM_V_CXX)source='crypto/sha256_sse4.cpp' object='crypto/libbitcoinconsensus_la-sha256_sse4.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitcoinconsensus_la-sha256_sse4.lo `test -f 'crypto/sha256_sse4.cpp' || echo '$(srcdir)/'`crypto/sha256_sse4.cpp

libbitcoinconsensus_la-arith_uint256.lo: arith_uint256.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinconsensus_la-arith_uint256.lo -MD -MP -MF $(DEPDIR)/libbitcoinconsensus_la-arith_uint256.Tpo -c -o libbitcoinconsensus_la-arith_uint256.lo `test -f 'arith_uint256.cpp' || echo '$(srcdir)/'`arith_uint256.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinconsensus_la-arith_uint256.Tpo $(DEPDIR)/libbitcoinconsensus_la-arith_uint256.Plo
#	$(AM_V_CXX)source='arith_uint256.cpp' object='libbitcoinconsensus_la-arith_uint256.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinconsensus_la-arith_uint256.lo `test -f 'arith_uint256.cpp' || echo '$(srcdir)/'`arith_uint256.cpp

consensus/libbitcoinconsensus_la-merkle.lo: consensus/merkle.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT consensus/libbitcoinconsensus_la-merkle.lo -MD -MP -MF consensus/$(DEPDIR)/libbitcoinconsensus_la-merkle.Tpo -c -o consensus/libbitcoinconsensus_la-merkle.lo `test -f 'consensus/merkle.cpp' || echo '$(srcdir)/'`consensus/merkle.cpp
	$(AM_V_at)$(am__mv) consensus/$(DEPDIR)/libbitcoinconsensus_la-merkle.Tpo consensus/$(DEPDIR)/libbitcoinconsensus_la-merkle.Plo
#	$(AM_V_CXX)source='consensus/merkle.cpp' object='consensus/libbitcoinconsensus_la-merkle.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o consensus/libbitcoinconsensus_la-merkle.lo `test -f 'consensus/merkle.cpp' || echo '$(srcdir)/'`consensus/merkle.cpp

consensus/libbitcoinconsensus_la-tx_check.lo: consensus/tx_check.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT consensus/libbitcoinconsensus_la-tx_check.lo -MD -MP -MF consensus/$(DEPDIR)/libbitcoinconsensus_la-tx_check.Tpo -c -o consensus/libbitcoinconsensus_la-tx_check.lo `test -f 'consensus/tx_check.cpp' || echo '$(srcdir)/'`consensus/tx_check.cpp
	$(AM_V_at)$(am__mv) consensus/$(DEPDIR)/libbitcoinconsensus_la-tx_check.Tpo consensus/$(DEPDIR)/libbitcoinconsensus_la-tx_check.Plo
#	$(AM_V_CXX)source='consensus/tx_check.cpp' object='consensus/libbitcoinconsensus_la-tx_check.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o consensus/libbitcoinconsensus_la-tx_check.lo `test -f 'consensus/tx_check.cpp' || echo '$(srcdir)/'`consensus/tx_check.cpp

libbitcoinconsensus_la-hash.lo: hash.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinconsensus_la-hash.lo -MD -MP -MF $(DEPDIR)/libbitcoinconsensus_la-hash.Tpo -c -o libbitcoinconsensus_la-hash.lo `test -f 'hash.cpp' || echo '$(srcdir)/'`hash.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinconsensus_la-hash.Tpo $(DEPDIR)/libbitcoinconsensus_la-hash.Plo
#	$(AM_V_CXX)source='hash.cpp' object='libbitcoinconsensus_la-hash.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinconsensus_la-hash.lo `test -f 'hash.cpp' || echo '$(srcdir)/'`hash.cpp

primitives/libbitcoinconsensus_la-block.lo: primitives/block.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT primitives/libbitcoinconsensus_la-block.lo -MD -MP -MF primitives/$(DEPDIR)/libbitcoinconsensus_la-block.Tpo -c -o primitives/libbitcoinconsensus_la-block.lo `test -f 'primitives/block.cpp' || echo '$(srcdir)/'`primitives/block.cpp
	$(AM_V_at)$(am__mv) primitives/$(DEPDIR)/libbitcoinconsensus_la-block.Tpo primitives/$(DEPDIR)/libbitcoinconsensus_la-block.Plo
#	$(AM_V_CXX)source='primitives/block.cpp' object='primitives/libbitcoinconsensus_la-block.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o primitives/libbitcoinconsensus_la-block.lo `test -f 'primitives/block.cpp' || echo '$(srcdir)/'`primitives/block.cpp

primitives/libbitcoinconsensus_la-transaction.lo: primitives/transaction.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT primitives/libbitcoinconsensus_la-transaction.lo -MD -MP -MF primitives/$(DEPDIR)/libbitcoinconsensus_la-transaction.Tpo -c -o primitives/libbitcoinconsensus_la-transaction.lo `test -f 'primitives/transaction.cpp' || echo '$(srcdir)/'`primitives/transaction.cpp
	$(AM_V_at)$(am__mv) primitives/$(DEPDIR)/libbitcoinconsensus_la-transaction.Tpo primitives/$(DEPDIR)/libbitcoinconsensus_la-transaction.Plo
#	$(AM_V_CXX)source='primitives/transaction.cpp' object='primitives/libbitcoinconsensus_la-transaction.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o primitives/libbitcoinconsensus_la-transaction.lo `test -f 'primitives/transaction.cpp' || echo '$(srcdir)/'`primitives/transaction.cpp

libbitcoinconsensus_la-pubkey.lo: pubkey.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinconsensus_la-pubkey.lo -MD -MP -MF $(DEPDIR)/libbitcoinconsensus_la-pubkey.Tpo -c -o libbitcoinconsensus_la-pubkey.lo `test -f 'pubkey.cpp' || echo '$(srcdir)/'`pubkey.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinconsensus_la-pubkey.Tpo $(DEPDIR)/libbitcoinconsensus_la-pubkey.Plo
#	$(AM_V_CXX)source='pubkey.cpp' object='libbitcoinconsensus_la-pubkey.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinconsensus_la-pubkey.lo `test -f 'pubkey.cpp' || echo '$(srcdir)/'`pubkey.cpp

script/libbitcoinconsensus_la-bitcoinconsensus.lo: script/bitcoinconsensus.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoinconsensus_la-bitcoinconsensus.lo -MD -MP -MF script/$(DEPDIR)/libbitcoinconsensus_la-bitcoinconsensus.Tpo -c -o script/libbitcoinconsensus_la-bitcoinconsensus.lo `test -f 'script/bitcoinconsensus.cpp' || echo '$(srcdir)/'`script/bitcoinconsensus.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoinconsensus_la-bitcoinconsensus.Tpo script/$(DEPDIR)/libbitcoinconsensus_la-bitcoinconsensus.Plo
#	$(AM_V_CXX)source='script/bitcoinconsensus.cpp' object='script/libbitcoinconsensus_la-bitcoinconsensus.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoinconsensus_la-bitcoinconsensus.lo `test -f 'script/bitcoinconsensus.cpp' || echo '$(srcdir)/'`script/bitcoinconsensus.cpp

script/libbitcoinconsensus_la-interpreter.lo: script/interpreter.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoinconsensus_la-interpreter.lo -MD -MP -MF script/$(DEPDIR)/libbitcoinconsensus_la-interpreter.Tpo -c -o script/libbitcoinconsensus_la-interpreter.lo `test -f 'script/interpreter.cpp' || echo '$(srcdir)/'`script/interpreter.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoinconsensus_la-interpreter.Tpo script/$(DEPDIR)/libbitcoinconsensus_la-interpreter.Plo
#	$(AM_V_CXX)source='script/interpreter.cpp' object='script/libbitcoinconsensus_la-interpreter.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoinconsensus_la-interpreter.lo `test -f 'script/interpreter.cpp' || echo '$(srcdir)/'`script/interpreter.cpp

script/libbitcoinconsensus_la-script.lo: script/script.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoinconsensus_la-script.lo -MD -MP -MF script/$(DEPDIR)/libbitcoinconsensus_la-script.Tpo -c -o script/libbitcoinconsensus_la-script.lo `test -f 'script/script.cpp' || echo '$(srcdir)/'`script/script.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoinconsensus_la-script.Tpo script/$(DEPDIR)/libbitcoinconsensus_la-script.Plo
#	$(AM_V_CXX)source='script/script.cpp' object='script/libbitcoinconsensus_la-script.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoinconsensus_la-script.lo `test -f 'script/script.cpp' || echo '$(srcdir)/'`script/script.cpp

script/libbitcoinconsensus_la-script_error.lo: script/script_error.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoinconsensus_la-script_error.lo -MD -MP -MF script/$(DEPDIR)/libbitcoinconsensus_la-script_error.Tpo -c -o script/libbitcoinconsensus_la-script_error.lo `test -f 'script/script_error.cpp' || echo '$(srcdir)/'`script/script_error.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoinconsensus_la-script_error.Tpo script/$(DEPDIR)/libbitcoinconsensus_la-script_error.Plo
#	$(AM_V_CXX)source='script/script_error.cpp' object='script/libbitcoinconsensus_la-script_error.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoinconsensus_la-script_error.lo `test -f 'script/script_error.cpp' || echo '$(srcdir)/'`script/script_error.cpp

libbitcoinconsensus_la-uint256.lo: uint256.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinconsensus_la-uint256.lo -MD -MP -MF $(DEPDIR)/libbitcoinconsensus_la-uint256.Tpo -c -o libbitcoinconsensus_la-uint256.lo `test -f 'uint256.cpp' || echo '$(srcdir)/'`uint256.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinconsensus_la-uint256.Tpo $(DEPDIR)/libbitcoinconsensus_la-uint256.Plo
#	$(AM_V_CXX)source='uint256.cpp' object='libbitcoinconsensus_la-uint256.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinconsensus_la-uint256.lo `test -f 'uint256.cpp' || echo '$(srcdir)/'`uint256.cpp

util/libbitcoinconsensus_la-strencodings.lo: util/strencodings.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoinconsensus_la-strencodings.lo -MD -MP -MF util/$(DEPDIR)/libbitcoinconsensus_la-strencodings.Tpo -c -o util/libbitcoinconsensus_la-strencodings.lo `test -f 'util/strencodings.cpp' || echo '$(srcdir)/'`util/strencodings.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoinconsensus_la-strencodings.Tpo util/$(DEPDIR)/libbitcoinconsensus_la-strencodings.Plo
#	$(AM_V_CXX)source='util/strencodings.cpp' object='util/libbitcoinconsensus_la-strencodings.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoinconsensus_la-strencodings.lo `test -f 'util/strencodings.cpp' || echo '$(srcdir)/'`util/strencodings.cpp

kernel/libbitcoinkernel_la-bitcoinkernel.lo: kernel/bitcoinkernel.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT kernel/libbitcoinkernel_la-bitcoinkernel.lo -MD -MP -MF kernel/$(DEPDIR)/libbitcoinkernel_la-bitcoinkernel.Tpo -c -o kernel/libbitcoinkernel_la-bitcoinkernel.lo `test -f 'kernel/bitcoinkernel.cpp' || echo '$(srcdir)/'`kernel/bitcoinkernel.cpp
	$(AM_V_at)$(am__mv) kernel/$(DEPDIR)/libbitcoinkernel_la-bitcoinkernel.Tpo kernel/$(DEPDIR)/libbitcoinkernel_la-bitcoinkernel.Plo
#	$(AM_V_CXX)source='kernel/bitcoinkernel.cpp' object='kernel/libbitcoinkernel_la-bitcoinkernel.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o kernel/libbitcoinkernel_la-bitcoinkernel.lo `test -f 'kernel/bitcoinkernel.cpp' || echo '$(srcdir)/'`kernel/bitcoinkernel.cpp

libbitcoinkernel_la-arith_uint256.lo: arith_uint256.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinkernel_la-arith_uint256.lo -MD -MP -MF $(DEPDIR)/libbitcoinkernel_la-arith_uint256.Tpo -c -o libbitcoinkernel_la-arith_uint256.lo `test -f 'arith_uint256.cpp' || echo '$(srcdir)/'`arith_uint256.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinkernel_la-arith_uint256.Tpo $(DEPDIR)/libbitcoinkernel_la-arith_uint256.Plo
#	$(AM_V_CXX)source='arith_uint256.cpp' object='libbitcoinkernel_la-arith_uint256.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinkernel_la-arith_uint256.lo `test -f 'arith_uint256.cpp' || echo '$(srcdir)/'`arith_uint256.cpp

libbitcoinkernel_la-chain.lo: chain.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinkernel_la-chain.lo -MD -MP -MF $(DEPDIR)/libbitcoinkernel_la-chain.Tpo -c -o libbitcoinkernel_la-chain.lo `test -f 'chain.cpp' || echo '$(srcdir)/'`chain.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinkernel_la-chain.Tpo $(DEPDIR)/libbitcoinkernel_la-chain.Plo
#	$(AM_V_CXX)source='chain.cpp' object='libbitcoinkernel_la-chain.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinkernel_la-chain.lo `test -f 'chain.cpp' || echo '$(srcdir)/'`chain.cpp

libbitcoinkernel_la-chainparamsbase.lo: chainparamsbase.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinkernel_la-chainparamsbase.lo -MD -MP -MF $(DEPDIR)/libbitcoinkernel_la-chainparamsbase.Tpo -c -o libbitcoinkernel_la-chainparamsbase.lo `test -f 'chainparamsbase.cpp' || echo '$(srcdir)/'`chainparamsbase.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinkernel_la-chainparamsbase.Tpo $(DEPDIR)/libbitcoinkernel_la-chainparamsbase.Plo
#	$(AM_V_CXX)source='chainparamsbase.cpp' object='libbitcoinkernel_la-chainparamsbase.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinkernel_la-chainparamsbase.lo `test -f 'chainparamsbase.cpp' || echo '$(srcdir)/'`chainparamsbase.cpp

libbitcoinkernel_la-chainparams.lo: chainparams.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinkernel_la-chainparams.lo -MD -MP -MF $(DEPDIR)/libbitcoinkernel_la-chainparams.Tpo -c -o libbitcoinkernel_la-chainparams.lo `test -f 'chainparams.cpp' || echo '$(srcdir)/'`chainparams.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinkernel_la-chainparams.Tpo $(DEPDIR)/libbitcoinkernel_la-chainparams.Plo
#	$(AM_V_CXX)source='chainparams.cpp' object='libbitcoinkernel_la-chainparams.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinkernel_la-chainparams.lo `test -f 'chainparams.cpp' || echo '$(srcdir)/'`chainparams.cpp

libbitcoinkernel_la-clientversion.lo: clientversion.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinkernel_la-clientversion.lo -MD -MP -MF $(DEPDIR)/libbitcoinkernel_la-clientversion.Tpo -c -o libbitcoinkernel_la-clientversion.lo `test -f 'clientversion.cpp' || echo '$(srcdir)/'`clientversion.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinkernel_la-clientversion.Tpo $(DEPDIR)/libbitcoinkernel_la-clientversion.Plo
#	$(AM_V_CXX)source='clientversion.cpp' object='libbitcoinkernel_la-clientversion.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinkernel_la-clientversion.lo `test -f 'clientversion.cpp' || echo '$(srcdir)/'`clientversion.cpp

libbitcoinkernel_la-coins.lo: coins.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinkernel_la-coins.lo -MD -MP -MF $(DEPDIR)/libbitcoinkernel_la-coins.Tpo -c -o libbitcoinkernel_la-coins.lo `test -f 'coins.cpp' || echo '$(srcdir)/'`coins.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinkernel_la-coins.Tpo $(DEPDIR)/libbitcoinkernel_la-coins.Plo
#	$(AM_V_CXX)source='coins.cpp' object='libbitcoinkernel_la-coins.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinkernel_la-coins.lo `test -f 'coins.cpp' || echo '$(srcdir)/'`coins.cpp

libbitcoinkernel_la-compressor.lo: compressor.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinkernel_la-compressor.lo -MD -MP -MF $(DEPDIR)/libbitcoinkernel_la-compressor.Tpo -c -o libbitcoinkernel_la-compressor.lo `test -f 'compressor.cpp' || echo '$(srcdir)/'`compressor.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinkernel_la-compressor.Tpo $(DEPDIR)/libbitcoinkernel_la-compressor.Plo
#	$(AM_V_CXX)source='compressor.cpp' object='libbitcoinkernel_la-compressor.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinkernel_la-compressor.lo `test -f 'compressor.cpp' || echo '$(srcdir)/'`compressor.cpp

consensus/libbitcoinkernel_la-merkle.lo: consensus/merkle.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT consensus/libbitcoinkernel_la-merkle.lo -MD -MP -MF consensus/$(DEPDIR)/libbitcoinkernel_la-merkle.Tpo -c -o consensus/libbitcoinkernel_la-merkle.lo `test -f 'consensus/merkle.cpp' || echo '$(srcdir)/'`consensus/merkle.cpp
	$(AM_V_at)$(am__mv) consensus/$(DEPDIR)/libbitcoinkernel_la-merkle.Tpo consensus/$(DEPDIR)/libbitcoinkernel_la-merkle.Plo
#	$(AM_V_CXX)source='consensus/merkle.cpp' object='consensus/libbitcoinkernel_la-merkle.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o consensus/libbitcoinkernel_la-merkle.lo `test -f 'consensus/merkle.cpp' || echo '$(srcdir)/'`consensus/merkle.cpp

consensus/libbitcoinkernel_la-tx_check.lo: consensus/tx_check.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT consensus/libbitcoinkernel_la-tx_check.lo -MD -MP -MF consensus/$(DEPDIR)/libbitcoinkernel_la-tx_check.Tpo -c -o consensus/libbitcoinkernel_la-tx_check.lo `test -f 'consensus/tx_check.cpp' || echo '$(srcdir)/'`consensus/tx_check.cpp
	$(AM_V_at)$(am__mv) consensus/$(DEPDIR)/libbitcoinkernel_la-tx_check.Tpo consensus/$(DEPDIR)/libbitcoinkernel_la-tx_check.Plo
#	$(AM_V_CXX)source='consensus/tx_check.cpp' object='consensus/libbitcoinkernel_la-tx_check.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o consensus/libbitcoinkernel_la-tx_check.lo `test -f 'consensus/tx_check.cpp' || echo '$(srcdir)/'`consensus/tx_check.cpp

consensus/libbitcoinkernel_la-tx_verify.lo: consensus/tx_verify.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT consensus/libbitcoinkernel_la-tx_verify.lo -MD -MP -MF consensus/$(DEPDIR)/libbitcoinkernel_la-tx_verify.Tpo -c -o consensus/libbitcoinkernel_la-tx_verify.lo `test -f 'consensus/tx_verify.cpp' || echo '$(srcdir)/'`consensus/tx_verify.cpp
	$(AM_V_at)$(am__mv) consensus/$(DEPDIR)/libbitcoinkernel_la-tx_verify.Tpo consensus/$(DEPDIR)/libbitcoinkernel_la-tx_verify.Plo
#	$(AM_V_CXX)source='consensus/tx_verify.cpp' object='consensus/libbitcoinkernel_la-tx_verify.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o consensus/libbitcoinkernel_la-tx_verify.lo `test -f 'consensus/tx_verify.cpp' || echo '$(srcdir)/'`consensus/tx_verify.cpp

libbitcoinkernel_la-core_read.lo: core_read.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinkernel_la-core_read.lo -MD -MP -MF $(DEPDIR)/libbitcoinkernel_la-core_read.Tpo -c -o libbitcoinkernel_la-core_read.lo `test -f 'core_read.cpp' || echo '$(srcdir)/'`core_read.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinkernel_la-core_read.Tpo $(DEPDIR)/libbitcoinkernel_la-core_read.Plo
#	$(AM_V_CXX)source='core_read.cpp' object='libbitcoinkernel_la-core_read.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinkernel_la-core_read.lo `test -f 'core_read.cpp' || echo '$(srcdir)/'`core_read.cpp

libbitcoinkernel_la-dbwrapper.lo: dbwrapper.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinkernel_la-dbwrapper.lo -MD -MP -MF $(DEPDIR)/libbitcoinkernel_la-dbwrapper.Tpo -c -o libbitcoinkernel_la-dbwrapper.lo `test -f 'dbwrapper.cpp' || echo '$(srcdir)/'`dbwrapper.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinkernel_la-dbwrapper.Tpo $(DEPDIR)/libbitcoinkernel_la-dbwrapper.Plo
#	$(AM_V_CXX)source='dbwrapper.cpp' object='libbitcoinkernel_la-dbwrapper.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinkernel_la-dbwrapper.lo `test -f 'dbwrapper.cpp' || echo '$(srcdir)/'`dbwrapper.cpp

libbitcoinkernel_la-deploymentinfo.lo: deploymentinfo.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinkernel_la-deploymentinfo.lo -MD -MP -MF $(DEPDIR)/libbitcoinkernel_la-deploymentinfo.Tpo -c -o libbitcoinkernel_la-deploymentinfo.lo `test -f 'deploymentinfo.cpp' || echo '$(srcdir)/'`deploymentinfo.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinkernel_la-deploymentinfo.Tpo $(DEPDIR)/libbitcoinkernel_la-deploymentinfo.Plo
#	$(AM_V_CXX)source='deploymentinfo.cpp' object='libbitcoinkernel_la-deploymentinfo.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinkernel_la-deploymentinfo.lo `test -f 'deploymentinfo.cpp' || echo '$(srcdir)/'`deploymentinfo.cpp

libbitcoinkernel_la-deploymentstatus.lo: deploymentstatus.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinkernel_la-deploymentstatus.lo -MD -MP -MF $(DEPDIR)/libbitcoinkernel_la-deploymentstatus.Tpo -c -o libbitcoinkernel_la-deploymentstatus.lo `test -f 'deploymentstatus.cpp' || echo '$(srcdir)/'`deploymentstatus.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinkernel_la-deploymentstatus.Tpo $(DEPDIR)/libbitcoinkernel_la-deploymentstatus.Plo
#	$(AM_V_CXX)source='deploymentstatus.cpp' object='libbitcoinkernel_la-deploymentstatus.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinkernel_la-deploymentstatus.lo `test -f 'deploymentstatus.cpp' || echo '$(srcdir)/'`deploymentstatus.cpp

libbitcoinkernel_la-flatfile.lo: flatfile.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinkernel_la-flatfile.lo -MD -MP -MF $(DEPDIR)/libbitcoinkernel_la-flatfile.Tpo -c -o libbitcoinkernel_la-flatfile.lo `test -f 'flatfile.cpp' || echo '$(srcdir)/'`flatfile.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinkernel_la-flatfile.Tpo $(DEPDIR)/libbitcoinkernel_la-flatfile.Plo
#	$(AM_V_CXX)source='flatfile.cpp' object='libbitcoinkernel_la-flatfile.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinkernel_la-flatfile.lo `test -f 'flatfile.cpp' || echo '$(srcdir)/'`flatfile.cpp

libbitcoinkernel_la-fs.lo: fs.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinkernel_la-fs.lo -MD -MP -MF $(DEPDIR)/libbitcoinkernel_la-fs.Tpo -c -o libbitcoinkernel_la-fs.lo `test -f 'fs.cpp' || echo '$(srcdir)/'`fs.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinkernel_la-fs.Tpo $(DEPDIR)/libbitcoinkernel_la-fs.Plo
#	$(AM_V_CXX)source='fs.cpp' object='libbitcoinkernel_la-fs.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinkernel_la-fs.lo `test -f 'fs.cpp' || echo '$(srcdir)/'`fs.cpp

libbitcoinkernel_la-hash.lo: hash.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinkernel_la-hash.lo -MD -MP -MF $(DEPDIR)/libbitcoinkernel_la-hash.Tpo -c -o libbitcoinkernel_la-hash.lo `test -f 'hash.cpp' || echo '$(srcdir)/'`hash.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinkernel_la-hash.Tpo $(DEPDIR)/libbitcoinkernel_la-hash.Plo
#	$(AM_V_CXX)source='hash.cpp' object='libbitcoinkernel_la-hash.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinkernel_la-hash.lo `test -f 'hash.cpp' || echo '$(srcdir)/'`hash.cpp

kernel/libbitcoinkernel_la-checks.lo: kernel/checks.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT kernel/libbitcoinkernel_la-checks.lo -MD -MP -MF kernel/$(DEPDIR)/libbitcoinkernel_la-checks.Tpo -c -o kernel/libbitcoinkernel_la-checks.lo `test -f 'kernel/checks.cpp' || echo '$(srcdir)/'`kernel/checks.cpp
	$(AM_V_at)$(am__mv) kernel/$(DEPDIR)/libbitcoinkernel_la-checks.Tpo kernel/$(DEPDIR)/libbitcoinkernel_la-checks.Plo
#	$(AM_V_CXX)source='kernel/checks.cpp' object='kernel/libbitcoinkernel_la-checks.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o kernel/libbitcoinkernel_la-checks.lo `test -f 'kernel/checks.cpp' || echo '$(srcdir)/'`kernel/checks.cpp

kernel/libbitcoinkernel_la-coinstats.lo: kernel/coinstats.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT kernel/libbitcoinkernel_la-coinstats.lo -MD -MP -MF kernel/$(DEPDIR)/libbitcoinkernel_la-coinstats.Tpo -c -o kernel/libbitcoinkernel_la-coinstats.lo `test -f 'kernel/coinstats.cpp' || echo '$(srcdir)/'`kernel/coinstats.cpp
	$(AM_V_at)$(am__mv) kernel/$(DEPDIR)/libbitcoinkernel_la-coinstats.Tpo kernel/$(DEPDIR)/libbitcoinkernel_la-coinstats.Plo
#	$(AM_V_CXX)source='kernel/coinstats.cpp' object='kernel/libbitcoinkernel_la-coinstats.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o kernel/libbitcoinkernel_la-coinstats.lo `test -f 'kernel/coinstats.cpp' || echo '$(srcdir)/'`kernel/coinstats.cpp

kernel/libbitcoinkernel_la-context.lo: kernel/context.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT kernel/libbitcoinkernel_la-context.lo -MD -MP -MF kernel/$(DEPDIR)/libbitcoinkernel_la-context.Tpo -c -o kernel/libbitcoinkernel_la-context.lo `test -f 'kernel/context.cpp' || echo '$(srcdir)/'`kernel/context.cpp
	$(AM_V_at)$(am__mv) kernel/$(DEPDIR)/libbitcoinkernel_la-context.Tpo kernel/$(DEPDIR)/libbitcoinkernel_la-context.Plo
#	$(AM_V_CXX)source='kernel/context.cpp' object='kernel/libbitcoinkernel_la-context.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o kernel/libbitcoinkernel_la-context.lo `test -f 'kernel/context.cpp' || echo '$(srcdir)/'`kernel/context.cpp

libbitcoinkernel_la-key.lo: key.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinkernel_la-key.lo -MD -MP -MF $(DEPDIR)/libbitcoinkernel_la-key.Tpo -c -o libbitcoinkernel_la-key.lo `test -f 'key.cpp' || echo '$(srcdir)/'`key.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinkernel_la-key.Tpo $(DEPDIR)/libbitcoinkernel_la-key.Plo
#	$(AM_V_CXX)source='key.cpp' object='libbitcoinkernel_la-key.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinkernel_la-key.lo `test -f 'key.cpp' || echo '$(srcdir)/'`key.cpp

libbitcoinkernel_la-logging.lo: logging.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinkernel_la-logging.lo -MD -MP -MF $(DEPDIR)/libbitcoinkernel_la-logging.Tpo -c -o libbitcoinkernel_la-logging.lo `test -f 'logging.cpp' || echo '$(srcdir)/'`logging.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinkernel_la-logging.Tpo $(DEPDIR)/libbitcoinkernel_la-logging.Plo
#	$(AM_V_CXX)source='logging.cpp' object='libbitcoinkernel_la-logging.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinkernel_la-logging.lo `test -f 'logging.cpp' || echo '$(srcdir)/'`logging.cpp

node/libbitcoinkernel_la-blockstorage.lo: node/blockstorage.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT node/libbitcoinkernel_la-blockstorage.lo -MD -MP -MF node/$(DEPDIR)/libbitcoinkernel_la-blockstorage.Tpo -c -o node/libbitcoinkernel_la-blockstorage.lo `test -f 'node/blockstorage.cpp' || echo '$(srcdir)/'`node/blockstorage.cpp
	$(AM_V_at)$(am__mv) node/$(DEPDIR)/libbitcoinkernel_la-blockstorage.Tpo node/$(DEPDIR)/libbitcoinkernel_la-blockstorage.Plo
#	$(AM_V_CXX)source='node/blockstorage.cpp' object='node/libbitcoinkernel_la-blockstorage.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o node/libbitcoinkernel_la-blockstorage.lo `test -f 'node/blockstorage.cpp' || echo '$(srcdir)/'`node/blockstorage.cpp

node/libbitcoinkernel_la-chainstate.lo: node/chainstate.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT node/libbitcoinkernel_la-chainstate.lo -MD -MP -MF node/$(DEPDIR)/libbitcoinkernel_la-chainstate.Tpo -c -o node/libbitcoinkernel_la-chainstate.lo `test -f 'node/chainstate.cpp' || echo '$(srcdir)/'`node/chainstate.cpp
	$(AM_V_at)$(am__mv) node/$(DEPDIR)/libbitcoinkernel_la-chainstate.Tpo node/$(DEPDIR)/libbitcoinkernel_la-chainstate.Plo
#	$(AM_V_CXX)source='node/chainstate.cpp' object='node/libbitcoinkernel_la-chainstate.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o node/libbitcoinkernel_la-chainstate.lo `test -f 'node/chainstate.cpp' || echo '$(srcdir)/'`node/chainstate.cpp

node/libbitcoinkernel_la-ui_interface.lo: node/ui_interface.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT node/libbitcoinkernel_la-ui_interface.lo -MD -MP -MF node/$(DEPDIR)/libbitcoinkernel_la-ui_interface.Tpo -c -o node/libbitcoinkernel_la-ui_interface.lo `test -f 'node/ui_interface.cpp' || echo '$(srcdir)/'`node/ui_interface.cpp
	$(AM_V_at)$(am__mv) node/$(DEPDIR)/libbitcoinkernel_la-ui_interface.Tpo node/$(DEPDIR)/libbitcoinkernel_la-ui_interface.Plo
#	$(AM_V_CXX)source='node/ui_interface.cpp' object='node/libbitcoinkernel_la-ui_interface.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o node/libbitcoinkernel_la-ui_interface.lo `test -f 'node/ui_interface.cpp' || echo '$(srcdir)/'`node/ui_interface.cpp

policy/libbitcoinkernel_la-feerate.lo: policy/feerate.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT policy/libbitcoinkernel_la-feerate.lo -MD -MP -MF policy/$(DEPDIR)/libbitcoinkernel_la-feerate.Tpo -c -o policy/libbitcoinkernel_la-feerate.lo `test -f 'policy/feerate.cpp' || echo '$(srcdir)/'`policy/feerate.cpp
	$(AM_V_at)$(am__mv) policy/$(DEPDIR)/libbitcoinkernel_la-feerate.Tpo policy/$(DEPDIR)/libbitcoinkernel_la-feerate.Plo
#	$(AM_V_CXX)source='policy/feerate.cpp' object='policy/libbitcoinkernel_la-feerate.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o policy/libbitcoinkernel_la-feerate.lo `test -f 'policy/feerate.cpp' || echo '$(srcdir)/'`policy/feerate.cpp

policy/libbitcoinkernel_la-fees.lo: policy/fees.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT policy/libbitcoinkernel_la-fees.lo -MD -MP -MF policy/$(DEPDIR)/libbitcoinkernel_la-fees.Tpo -c -o policy/libbitcoinkernel_la-fees.lo `test -f 'policy/fees.cpp' || echo '$(srcdir)/'`policy/fees.cpp
	$(AM_V_at)$(am__mv) policy/$(DEPDIR)/libbitcoinkernel_la-fees.Tpo policy/$(DEPDIR)/libbitcoinkernel_la-fees.Plo
#	$(AM_V_CXX)source='policy/fees.cpp' object='policy/libbitcoinkernel_la-fees.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o policy/libbitcoinkernel_la-fees.lo `test -f 'policy/fees.cpp' || echo '$(srcdir)/'`policy/fees.cpp

policy/libbitcoinkernel_la-packages.lo: policy/packages.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT policy/libbitcoinkernel_la-packages.lo -MD -MP -MF policy/$(DEPDIR)/libbitcoinkernel_la-packages.Tpo -c -o policy/libbitcoinkernel_la-packages.lo `test -f 'policy/packages.cpp' || echo '$(srcdir)/'`policy/packages.cpp
	$(AM_V_at)$(am__mv) policy/$(DEPDIR)/libbitcoinkernel_la-packages.Tpo policy/$(DEPDIR)/libbitcoinkernel_la-packages.Plo
#	$(AM_V_CXX)source='policy/packages.cpp' object='policy/libbitcoinkernel_la-packages.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o policy/libbitcoinkernel_la-packages.lo `test -f 'policy/packages.cpp' || echo '$(srcdir)/'`policy/packages.cpp

policy/libbitcoinkernel_la-policy.lo: policy/policy.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT policy/libbitcoinkernel_la-policy.lo -MD -MP -MF policy/$(DEPDIR)/libbitcoinkernel_la-policy.Tpo -c -o policy/libbitcoinkernel_la-policy.lo `test -f 'policy/policy.cpp' || echo '$(srcdir)/'`policy/policy.cpp
	$(AM_V_at)$(am__mv) policy/$(DEPDIR)/libbitcoinkernel_la-policy.Tpo policy/$(DEPDIR)/libbitcoinkernel_la-policy.Plo
#	$(AM_V_CXX)source='policy/policy.cpp' object='policy/libbitcoinkernel_la-policy.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o policy/libbitcoinkernel_la-policy.lo `test -f 'policy/policy.cpp' || echo '$(srcdir)/'`policy/policy.cpp

policy/libbitcoinkernel_la-rbf.lo: policy/rbf.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT policy/libbitcoinkernel_la-rbf.lo -MD -MP -MF policy/$(DEPDIR)/libbitcoinkernel_la-rbf.Tpo -c -o policy/libbitcoinkernel_la-rbf.lo `test -f 'policy/rbf.cpp' || echo '$(srcdir)/'`policy/rbf.cpp
	$(AM_V_at)$(am__mv) policy/$(DEPDIR)/libbitcoinkernel_la-rbf.Tpo policy/$(DEPDIR)/libbitcoinkernel_la-rbf.Plo
#	$(AM_V_CXX)source='policy/rbf.cpp' object='policy/libbitcoinkernel_la-rbf.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o policy/libbitcoinkernel_la-rbf.lo `test -f 'policy/rbf.cpp' || echo '$(srcdir)/'`policy/rbf.cpp

policy/libbitcoinkernel_la-settings.lo: policy/settings.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT policy/libbitcoinkernel_la-settings.lo -MD -MP -MF policy/$(DEPDIR)/libbitcoinkernel_la-settings.Tpo -c -o policy/libbitcoinkernel_la-settings.lo `test -f 'policy/settings.cpp' || echo '$(srcdir)/'`policy/settings.cpp
	$(AM_V_at)$(am__mv) policy/$(DEPDIR)/libbitcoinkernel_la-settings.Tpo policy/$(DEPDIR)/libbitcoinkernel_la-settings.Plo
#	$(AM_V_CXX)source='policy/settings.cpp' object='policy/libbitcoinkernel_la-settings.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o policy/libbitcoinkernel_la-settings.lo `test -f 'policy/settings.cpp' || echo '$(srcdir)/'`policy/settings.cpp

libbitcoinkernel_la-pow.lo: pow.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinkernel_la-pow.lo -MD -MP -MF $(DEPDIR)/libbitcoinkernel_la-pow.Tpo -c -o libbitcoinkernel_la-pow.lo `test -f 'pow.cpp' || echo '$(srcdir)/'`pow.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinkernel_la-pow.Tpo $(DEPDIR)/libbitcoinkernel_la-pow.Plo
#	$(AM_V_CXX)source='pow.cpp' object='libbitcoinkernel_la-pow.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinkernel_la-pow.lo `test -f 'pow.cpp' || echo '$(srcdir)/'`pow.cpp

primitives/libbitcoinkernel_la-block.lo: primitives/block.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT primitives/libbitcoinkernel_la-block.lo -MD -MP -MF primitives/$(DEPDIR)/libbitcoinkernel_la-block.Tpo -c -o primitives/libbitcoinkernel_la-block.lo `test -f 'primitives/block.cpp' || echo '$(srcdir)/'`primitives/block.cpp
	$(AM_V_at)$(am__mv) primitives/$(DEPDIR)/libbitcoinkernel_la-block.Tpo primitives/$(DEPDIR)/libbitcoinkernel_la-block.Plo
#	$(AM_V_CXX)source='primitives/block.cpp' object='primitives/libbitcoinkernel_la-block.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o primitives/libbitcoinkernel_la-block.lo `test -f 'primitives/block.cpp' || echo '$(srcdir)/'`primitives/block.cpp

primitives/libbitcoinkernel_la-transaction.lo: primitives/transaction.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT primitives/libbitcoinkernel_la-transaction.lo -MD -MP -MF primitives/$(DEPDIR)/libbitcoinkernel_la-transaction.Tpo -c -o primitives/libbitcoinkernel_la-transaction.lo `test -f 'primitives/transaction.cpp' || echo '$(srcdir)/'`primitives/transaction.cpp
	$(AM_V_at)$(am__mv) primitives/$(DEPDIR)/libbitcoinkernel_la-transaction.Tpo primitives/$(DEPDIR)/libbitcoinkernel_la-transaction.Plo
#	$(AM_V_CXX)source='primitives/transaction.cpp' object='primitives/libbitcoinkernel_la-transaction.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o primitives/libbitcoinkernel_la-transaction.lo `test -f 'primitives/transaction.cpp' || echo '$(srcdir)/'`primitives/transaction.cpp

libbitcoinkernel_la-pubkey.lo: pubkey.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinkernel_la-pubkey.lo -MD -MP -MF $(DEPDIR)/libbitcoinkernel_la-pubkey.Tpo -c -o libbitcoinkernel_la-pubkey.lo `test -f 'pubkey.cpp' || echo '$(srcdir)/'`pubkey.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinkernel_la-pubkey.Tpo $(DEPDIR)/libbitcoinkernel_la-pubkey.Plo
#	$(AM_V_CXX)source='pubkey.cpp' object='libbitcoinkernel_la-pubkey.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinkernel_la-pubkey.lo `test -f 'pubkey.cpp' || echo '$(srcdir)/'`pubkey.cpp

libbitcoinkernel_la-random.lo: random.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinkernel_la-random.lo -MD -MP -MF $(DEPDIR)/libbitcoinkernel_la-random.Tpo -c -o libbitcoinkernel_la-random.lo `test -f 'random.cpp' || echo '$(srcdir)/'`random.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinkernel_la-random.Tpo $(DEPDIR)/libbitcoinkernel_la-random.Plo
#	$(AM_V_CXX)source='random.cpp' object='libbitcoinkernel_la-random.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinkernel_la-random.lo `test -f 'random.cpp' || echo '$(srcdir)/'`random.cpp

libbitcoinkernel_la-randomenv.lo: randomenv.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinkernel_la-randomenv.lo -MD -MP -MF $(DEPDIR)/libbitcoinkernel_la-randomenv.Tpo -c -o libbitcoinkernel_la-randomenv.lo `test -f 'randomenv.cpp' || echo '$(srcdir)/'`randomenv.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinkernel_la-randomenv.Tpo $(DEPDIR)/libbitcoinkernel_la-randomenv.Plo
#	$(AM_V_CXX)source='randomenv.cpp' object='libbitcoinkernel_la-randomenv.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinkernel_la-randomenv.lo `test -f 'randomenv.cpp' || echo '$(srcdir)/'`randomenv.cpp

libbitcoinkernel_la-scheduler.lo: scheduler.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinkernel_la-scheduler.lo -MD -MP -MF $(DEPDIR)/libbitcoinkernel_la-scheduler.Tpo -c -o libbitcoinkernel_la-scheduler.lo `test -f 'scheduler.cpp' || echo '$(srcdir)/'`scheduler.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinkernel_la-scheduler.Tpo $(DEPDIR)/libbitcoinkernel_la-scheduler.Plo
#	$(AM_V_CXX)source='scheduler.cpp' object='libbitcoinkernel_la-scheduler.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinkernel_la-scheduler.lo `test -f 'scheduler.cpp' || echo '$(srcdir)/'`scheduler.cpp

script/libbitcoinkernel_la-interpreter.lo: script/interpreter.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoinkernel_la-interpreter.lo -MD -MP -MF script/$(DEPDIR)/libbitcoinkernel_la-interpreter.Tpo -c -o script/libbitcoinkernel_la-interpreter.lo `test -f 'script/interpreter.cpp' || echo '$(srcdir)/'`script/interpreter.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoinkernel_la-interpreter.Tpo script/$(DEPDIR)/libbitcoinkernel_la-interpreter.Plo
#	$(AM_V_CXX)source='script/interpreter.cpp' object='script/libbitcoinkernel_la-interpreter.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoinkernel_la-interpreter.lo `test -f 'script/interpreter.cpp' || echo '$(srcdir)/'`script/interpreter.cpp

script/libbitcoinkernel_la-script.lo: script/script.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoinkernel_la-script.lo -MD -MP -MF script/$(DEPDIR)/libbitcoinkernel_la-script.Tpo -c -o script/libbitcoinkernel_la-script.lo `test -f 'script/script.cpp' || echo '$(srcdir)/'`script/script.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoinkernel_la-script.Tpo script/$(DEPDIR)/libbitcoinkernel_la-script.Plo
#	$(AM_V_CXX)source='script/script.cpp' object='script/libbitcoinkernel_la-script.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoinkernel_la-script.lo `test -f 'script/script.cpp' || echo '$(srcdir)/'`script/script.cpp

script/libbitcoinkernel_la-script_error.lo: script/script_error.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoinkernel_la-script_error.lo -MD -MP -MF script/$(DEPDIR)/libbitcoinkernel_la-script_error.Tpo -c -o script/libbitcoinkernel_la-script_error.lo `test -f 'script/script_error.cpp' || echo '$(srcdir)/'`script/script_error.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoinkernel_la-script_error.Tpo script/$(DEPDIR)/libbitcoinkernel_la-script_error.Plo
#	$(AM_V_CXX)source='script/script_error.cpp' object='script/libbitcoinkernel_la-script_error.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoinkernel_la-script_error.lo `test -f 'script/script_error.cpp' || echo '$(srcdir)/'`script/script_error.cpp

script/libbitcoinkernel_la-sigcache.lo: script/sigcache.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoinkernel_la-sigcache.lo -MD -MP -MF script/$(DEPDIR)/libbitcoinkernel_la-sigcache.Tpo -c -o script/libbitcoinkernel_la-sigcache.lo `test -f 'script/sigcache.cpp' || echo '$(srcdir)/'`script/sigcache.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoinkernel_la-sigcache.Tpo script/$(DEPDIR)/libbitcoinkernel_la-sigcache.Plo
#	$(AM_V_CXX)source='script/sigcache.cpp' object='script/libbitcoinkernel_la-sigcache.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoinkernel_la-sigcache.lo `test -f 'script/sigcache.cpp' || echo '$(srcdir)/'`script/sigcache.cpp

script/libbitcoinkernel_la-standard.lo: script/standard.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoinkernel_la-standard.lo -MD -MP -MF script/$(DEPDIR)/libbitcoinkernel_la-standard.Tpo -c -o script/libbitcoinkernel_la-standard.lo `test -f 'script/standard.cpp' || echo '$(srcdir)/'`script/standard.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoinkernel_la-standard.Tpo script/$(DEPDIR)/libbitcoinkernel_la-standard.Plo
#	$(AM_V_CXX)source='script/standard.cpp' object='script/libbitcoinkernel_la-standard.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoinkernel_la-standard.lo `test -f 'script/standard.cpp' || echo '$(srcdir)/'`script/standard.cpp

libbitcoinkernel_la-shutdown.lo: shutdown.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinkernel_la-shutdown.lo -MD -MP -MF $(DEPDIR)/libbitcoinkernel_la-shutdown.Tpo -c -o libbitcoinkernel_la-shutdown.lo `test -f 'shutdown.cpp' || echo '$(srcdir)/'`shutdown.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinkernel_la-shutdown.Tpo $(DEPDIR)/libbitcoinkernel_la-shutdown.Plo
#	$(AM_V_CXX)source='shutdown.cpp' object='libbitcoinkernel_la-shutdown.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinkernel_la-shutdown.lo `test -f 'shutdown.cpp' || echo '$(srcdir)/'`shutdown.cpp

libbitcoinkernel_la-signet.lo: signet.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinkernel_la-signet.lo -MD -MP -MF $(DEPDIR)/libbitcoinkernel_la-signet.Tpo -c -o libbitcoinkernel_la-signet.lo `test -f 'signet.cpp' || echo '$(srcdir)/'`signet.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinkernel_la-signet.Tpo $(DEPDIR)/libbitcoinkernel_la-signet.Plo
#	$(AM_V_CXX)source='signet.cpp' object='libbitcoinkernel_la-signet.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinkernel_la-signet.lo `test -f 'signet.cpp' || echo '$(srcdir)/'`signet.cpp

support/libbitcoinkernel_la-cleanse.lo: support/cleanse.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT support/libbitcoinkernel_la-cleanse.lo -MD -MP -MF support/$(DEPDIR)/libbitcoinkernel_la-cleanse.Tpo -c -o support/libbitcoinkernel_la-cleanse.lo `test -f 'support/cleanse.cpp' || echo '$(srcdir)/'`support/cleanse.cpp
	$(AM_V_at)$(am__mv) support/$(DEPDIR)/libbitcoinkernel_la-cleanse.Tpo support/$(DEPDIR)/libbitcoinkernel_la-cleanse.Plo
#	$(AM_V_CXX)source='support/cleanse.cpp' object='support/libbitcoinkernel_la-cleanse.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o support/libbitcoinkernel_la-cleanse.lo `test -f 'support/cleanse.cpp' || echo '$(srcdir)/'`support/cleanse.cpp

support/libbitcoinkernel_la-lockedpool.lo: support/lockedpool.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT support/libbitcoinkernel_la-lockedpool.lo -MD -MP -MF support/$(DEPDIR)/libbitcoinkernel_la-lockedpool.Tpo -c -o support/libbitcoinkernel_la-lockedpool.lo `test -f 'support/lockedpool.cpp' || echo '$(srcdir)/'`support/lockedpool.cpp
	$(AM_V_at)$(am__mv) support/$(DEPDIR)/libbitcoinkernel_la-lockedpool.Tpo support/$(DEPDIR)/libbitcoinkernel_la-lockedpool.Plo
#	$(AM_V_CXX)source='support/lockedpool.cpp' object='support/libbitcoinkernel_la-lockedpool.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o support/libbitcoinkernel_la-lockedpool.lo `test -f 'support/lockedpool.cpp' || echo '$(srcdir)/'`support/lockedpool.cpp

libbitcoinkernel_la-sync.lo: sync.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinkernel_la-sync.lo -MD -MP -MF $(DEPDIR)/libbitcoinkernel_la-sync.Tpo -c -o libbitcoinkernel_la-sync.lo `test -f 'sync.cpp' || echo '$(srcdir)/'`sync.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinkernel_la-sync.Tpo $(DEPDIR)/libbitcoinkernel_la-sync.Plo
#	$(AM_V_CXX)source='sync.cpp' object='libbitcoinkernel_la-sync.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinkernel_la-sync.lo `test -f 'sync.cpp' || echo '$(srcdir)/'`sync.cpp

libbitcoinkernel_la-threadinterrupt.lo: threadinterrupt.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinkernel_la-threadinterrupt.lo -MD -MP -MF $(DEPDIR)/libbitcoinkernel_la-threadinterrupt.Tpo -c -o libbitcoinkernel_la-threadinterrupt.lo `test -f 'threadinterrupt.cpp' || echo '$(srcdir)/'`threadinterrupt.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinkernel_la-threadinterrupt.Tpo $(DEPDIR)/libbitcoinkernel_la-threadinterrupt.Plo
#	$(AM_V_CXX)source='threadinterrupt.cpp' object='libbitcoinkernel_la-threadinterrupt.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinkernel_la-threadinterrupt.lo `test -f 'threadinterrupt.cpp' || echo '$(srcdir)/'`threadinterrupt.cpp

libbitcoinkernel_la-txdb.lo: txdb.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinkernel_la-txdb.lo -MD -MP -MF $(DEPDIR)/libbitcoinkernel_la-txdb.Tpo -c -o libbitcoinkernel_la-txdb.lo `test -f 'txdb.cpp' || echo '$(srcdir)/'`txdb.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinkernel_la-txdb.Tpo $(DEPDIR)/libbitcoinkernel_la-txdb.Plo
#	$(AM_V_CXX)source='txdb.cpp' object='libbitcoinkernel_la-txdb.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinkernel_la-txdb.lo `test -f 'txdb.cpp' || echo '$(srcdir)/'`txdb.cpp

libbitcoinkernel_la-txmempool.lo: txmempool.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinkernel_la-txmempool.lo -MD -MP -MF $(DEPDIR)/libbitcoinkernel_la-txmempool.Tpo -c -o libbitcoinkernel_la-txmempool.lo `test -f 'txmempool.cpp' || echo '$(srcdir)/'`txmempool.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinkernel_la-txmempool.Tpo $(DEPDIR)/libbitcoinkernel_la-txmempool.Plo
#	$(AM_V_CXX)source='txmempool.cpp' object='libbitcoinkernel_la-txmempool.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinkernel_la-txmempool.lo `test -f 'txmempool.cpp' || echo '$(srcdir)/'`txmempool.cpp

libbitcoinkernel_la-uint256.lo: uint256.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinkernel_la-uint256.lo -MD -MP -MF $(DEPDIR)/libbitcoinkernel_la-uint256.Tpo -c -o libbitcoinkernel_la-uint256.lo `test -f 'uint256.cpp' || echo '$(srcdir)/'`uint256.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinkernel_la-uint256.Tpo $(DEPDIR)/libbitcoinkernel_la-uint256.Plo
#	$(AM_V_CXX)source='uint256.cpp' object='libbitcoinkernel_la-uint256.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinkernel_la-uint256.lo `test -f 'uint256.cpp' || echo '$(srcdir)/'`uint256.cpp

util/libbitcoinkernel_la-bytevectorhash.lo: util/bytevectorhash.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoinkernel_la-bytevectorhash.lo -MD -MP -MF util/$(DEPDIR)/libbitcoinkernel_la-bytevectorhash.Tpo -c -o util/libbitcoinkernel_la-bytevectorhash.lo `test -f 'util/bytevectorhash.cpp' || echo '$(srcdir)/'`util/bytevectorhash.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoinkernel_la-bytevectorhash.Tpo util/$(DEPDIR)/libbitcoinkernel_la-bytevectorhash.Plo
#	$(AM_V_CXX)source='util/bytevectorhash.cpp' object='util/libbitcoinkernel_la-bytevectorhash.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoinkernel_la-bytevectorhash.lo `test -f 'util/bytevectorhash.cpp' || echo '$(srcdir)/'`util/bytevectorhash.cpp

util/libbitcoinkernel_la-check.lo: util/check.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoinkernel_la-check.lo -MD -MP -MF util/$(DEPDIR)/libbitcoinkernel_la-check.Tpo -c -o util/libbitcoinkernel_la-check.lo `test -f 'util/check.cpp' || echo '$(srcdir)/'`util/check.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoinkernel_la-check.Tpo util/$(DEPDIR)/libbitcoinkernel_la-check.Plo
#	$(AM_V_CXX)source='util/check.cpp' object='util/libbitcoinkernel_la-check.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoinkernel_la-check.lo `test -f 'util/check.cpp' || echo '$(srcdir)/'`util/check.cpp

util/libbitcoinkernel_la-getuniquepath.lo: util/getuniquepath.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoinkernel_la-getuniquepath.lo -MD -MP -MF util/$(DEPDIR)/libbitcoinkernel_la-getuniquepath.Tpo -c -o util/libbitcoinkernel_la-getuniquepath.lo `test -f 'util/getuniquepath.cpp' || echo '$(srcdir)/'`util/getuniquepath.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoinkernel_la-getuniquepath.Tpo util/$(DEPDIR)/libbitcoinkernel_la-getuniquepath.Plo
#	$(AM_V_CXX)source='util/getuniquepath.cpp' object='util/libbitcoinkernel_la-getuniquepath.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoinkernel_la-getuniquepath.lo `test -f 'util/getuniquepath.cpp' || echo '$(srcdir)/'`util/getuniquepath.cpp

util/libbitcoinkernel_la-hasher.lo: util/hasher.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoinkernel_la-hasher.lo -MD -MP -MF util/$(DEPDIR)/libbitcoinkernel_la-hasher.Tpo -c -o util/libbitcoinkernel_la-hasher.lo `test -f 'util/hasher.cpp' || echo '$(srcdir)/'`util/hasher.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoinkernel_la-hasher.Tpo util/$(DEPDIR)/libbitcoinkernel_la-hasher.Plo
#	$(AM_V_CXX)source='util/hasher.cpp' object='util/libbitcoinkernel_la-hasher.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoinkernel_la-hasher.lo `test -f 'util/hasher.cpp' || echo '$(srcdir)/'`util/hasher.cpp

util/libbitcoinkernel_la-moneystr.lo: util/moneystr.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoinkernel_la-moneystr.lo -MD -MP -MF util/$(DEPDIR)/libbitcoinkernel_la-moneystr.Tpo -c -o util/libbitcoinkernel_la-moneystr.lo `test -f 'util/moneystr.cpp' || echo '$(srcdir)/'`util/moneystr.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoinkernel_la-moneystr.Tpo util/$(DEPDIR)/libbitcoinkernel_la-moneystr.Plo
#	$(AM_V_CXX)source='util/moneystr.cpp' object='util/libbitcoinkernel_la-moneystr.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoinkernel_la-moneystr.lo `test -f 'util/moneystr.cpp' || echo '$(srcdir)/'`util/moneystr.cpp

util/libbitcoinkernel_la-rbf.lo: util/rbf.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoinkernel_la-rbf.lo -MD -MP -MF util/$(DEPDIR)/libbitcoinkernel_la-rbf.Tpo -c -o util/libbitcoinkernel_la-rbf.lo `test -f 'util/rbf.cpp' || echo '$(srcdir)/'`util/rbf.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoinkernel_la-rbf.Tpo util/$(DEPDIR)/libbitcoinkernel_la-rbf.Plo
#	$(AM_V_CXX)source='util/rbf.cpp' object='util/libbitcoinkernel_la-rbf.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoinkernel_la-rbf.lo `test -f 'util/rbf.cpp' || echo '$(srcdir)/'`util/rbf.cpp

util/libbitcoinkernel_la-serfloat.lo: util/serfloat.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoinkernel_la-serfloat.lo -MD -MP -MF util/$(DEPDIR)/libbitcoinkernel_la-serfloat.Tpo -c -o util/libbitcoinkernel_la-serfloat.lo `test -f 'util/serfloat.cpp' || echo '$(srcdir)/'`util/serfloat.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoinkernel_la-serfloat.Tpo util/$(DEPDIR)/libbitcoinkernel_la-serfloat.Plo
#	$(AM_V_CXX)source='util/serfloat.cpp' object='util/libbitcoinkernel_la-serfloat.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoinkernel_la-serfloat.lo `test -f 'util/serfloat.cpp' || echo '$(srcdir)/'`util/serfloat.cpp

util/libbitcoinkernel_la-settings.lo: util/settings.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoinkernel_la-settings.lo -MD -MP -MF util/$(DEPDIR)/libbitcoinkernel_la-settings.Tpo -c -o util/libbitcoinkernel_la-settings.lo `test -f 'util/settings.cpp' || echo '$(srcdir)/'`util/settings.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoinkernel_la-settings.Tpo util/$(DEPDIR)/libbitcoinkernel_la-settings.Plo
#	$(AM_V_CXX)source='util/settings.cpp' object='util/libbitcoinkernel_la-settings.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoinkernel_la-settings.lo `test -f 'util/settings.cpp' || echo '$(srcdir)/'`util/settings.cpp

util/libbitcoinkernel_la-strencodings.lo: util/strencodings.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoinkernel_la-strencodings.lo -MD -MP -MF util/$(DEPDIR)/libbitcoinkernel_la-strencodings.Tpo -c -o util/libbitcoinkernel_la-strencodings.lo `test -f 'util/strencodings.cpp' || echo '$(srcdir)/'`util/strencodings.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoinkernel_la-strencodings.Tpo util/$(DEPDIR)/libbitcoinkernel_la-strencodings.Plo
#	$(AM_V_CXX)source='util/strencodings.cpp' object='util/libbitcoinkernel_la-strencodings.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoinkernel_la-strencodings.lo `test -f 'util/strencodings.cpp' || echo '$(srcdir)/'`util/strencodings.cpp

util/libbitcoinkernel_la-string.lo: util/string.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoinkernel_la-string.lo -MD -MP -MF util/$(DEPDIR)/libbitcoinkernel_la-string.Tpo -c -o util/libbitcoinkernel_la-string.lo `test -f 'util/string.cpp' || echo '$(srcdir)/'`util/string.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoinkernel_la-string.Tpo util/$(DEPDIR)/libbitcoinkernel_la-string.Plo
#	$(AM_V_CXX)source='util/string.cpp' object='util/libbitcoinkernel_la-string.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoinkernel_la-string.lo `test -f 'util/string.cpp' || echo '$(srcdir)/'`util/string.cpp

util/libbitcoinkernel_la-syscall_sandbox.lo: util/syscall_sandbox.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoinkernel_la-syscall_sandbox.lo -MD -MP -MF util/$(DEPDIR)/libbitcoinkernel_la-syscall_sandbox.Tpo -c -o util/libbitcoinkernel_la-syscall_sandbox.lo `test -f 'util/syscall_sandbox.cpp' || echo '$(srcdir)/'`util/syscall_sandbox.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoinkernel_la-syscall_sandbox.Tpo util/$(DEPDIR)/libbitcoinkernel_la-syscall_sandbox.Plo
#	$(AM_V_CXX)source='util/syscall_sandbox.cpp' object='util/libbitcoinkernel_la-syscall_sandbox.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoinkernel_la-syscall_sandbox.lo `test -f 'util/syscall_sandbox.cpp' || echo '$(srcdir)/'`util/syscall_sandbox.cpp

util/libbitcoinkernel_la-syserror.lo: util/syserror.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoinkernel_la-syserror.lo -MD -MP -MF util/$(DEPDIR)/libbitcoinkernel_la-syserror.Tpo -c -o util/libbitcoinkernel_la-syserror.lo `test -f 'util/syserror.cpp' || echo '$(srcdir)/'`util/syserror.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoinkernel_la-syserror.Tpo util/$(DEPDIR)/libbitcoinkernel_la-syserror.Plo
#	$(AM_V_CXX)source='util/syserror.cpp' object='util/libbitcoinkernel_la-syserror.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoinkernel_la-syserror.lo `test -f 'util/syserror.cpp' || echo '$(srcdir)/'`util/syserror.cpp

util/libbitcoinkernel_la-system.lo: util/system.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoinkernel_la-system.lo -MD -MP -MF util/$(DEPDIR)/libbitcoinkernel_la-system.Tpo -c -o util/libbitcoinkernel_la-system.lo `test -f 'util/system.cpp' || echo '$(srcdir)/'`util/system.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoinkernel_la-system.Tpo util/$(DEPDIR)/libbitcoinkernel_la-system.Plo
#	$(AM_V_CXX)source='util/system.cpp' object='util/libbitcoinkernel_la-system.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoinkernel_la-system.lo `test -f 'util/system.cpp' || echo '$(srcdir)/'`util/system.cpp

util/libbitcoinkernel_la-thread.lo: util/thread.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoinkernel_la-thread.lo -MD -MP -MF util/$(DEPDIR)/libbitcoinkernel_la-thread.Tpo -c -o util/libbitcoinkernel_la-thread.lo `test -f 'util/thread.cpp' || echo '$(srcdir)/'`util/thread.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoinkernel_la-thread.Tpo util/$(DEPDIR)/libbitcoinkernel_la-thread.Plo
#	$(AM_V_CXX)source='util/thread.cpp' object='util/libbitcoinkernel_la-thread.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoinkernel_la-thread.lo `test -f 'util/thread.cpp' || echo '$(srcdir)/'`util/thread.cpp

util/libbitcoinkernel_la-threadnames.lo: util/threadnames.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoinkernel_la-threadnames.lo -MD -MP -MF util/$(DEPDIR)/libbitcoinkernel_la-threadnames.Tpo -c -o util/libbitcoinkernel_la-threadnames.lo `test -f 'util/threadnames.cpp' || echo '$(srcdir)/'`util/threadnames.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoinkernel_la-threadnames.Tpo util/$(DEPDIR)/libbitcoinkernel_la-threadnames.Plo
#	$(AM_V_CXX)source='util/threadnames.cpp' object='util/libbitcoinkernel_la-threadnames.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoinkernel_la-threadnames.lo `test -f 'util/threadnames.cpp' || echo '$(srcdir)/'`util/threadnames.cpp

util/libbitcoinkernel_la-time.lo: util/time.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoinkernel_la-time.lo -MD -MP -MF util/$(DEPDIR)/libbitcoinkernel_la-time.Tpo -c -o util/libbitcoinkernel_la-time.lo `test -f 'util/time.cpp' || echo '$(srcdir)/'`util/time.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoinkernel_la-time.Tpo util/$(DEPDIR)/libbitcoinkernel_la-time.Plo
#	$(AM_V_CXX)source='util/time.cpp' object='util/libbitcoinkernel_la-time.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoinkernel_la-time.lo `test -f 'util/time.cpp' || echo '$(srcdir)/'`util/time.cpp

util/libbitcoinkernel_la-tokenpipe.lo: util/tokenpipe.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT util/libbitcoinkernel_la-tokenpipe.lo -MD -MP -MF util/$(DEPDIR)/libbitcoinkernel_la-tokenpipe.Tpo -c -o util/libbitcoinkernel_la-tokenpipe.lo `test -f 'util/tokenpipe.cpp' || echo '$(srcdir)/'`util/tokenpipe.cpp
	$(AM_V_at)$(am__mv) util/$(DEPDIR)/libbitcoinkernel_la-tokenpipe.Tpo util/$(DEPDIR)/libbitcoinkernel_la-tokenpipe.Plo
#	$(AM_V_CXX)source='util/tokenpipe.cpp' object='util/libbitcoinkernel_la-tokenpipe.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o util/libbitcoinkernel_la-tokenpipe.lo `test -f 'util/tokenpipe.cpp' || echo '$(srcdir)/'`util/tokenpipe.cpp

libbitcoinkernel_la-validation.lo: validation.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinkernel_la-validation.lo -MD -MP -MF $(DEPDIR)/libbitcoinkernel_la-validation.Tpo -c -o libbitcoinkernel_la-validation.lo `test -f 'validation.cpp' || echo '$(srcdir)/'`validation.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinkernel_la-validation.Tpo $(DEPDIR)/libbitcoinkernel_la-validation.Plo
#	$(AM_V_CXX)source='validation.cpp' object='libbitcoinkernel_la-validation.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinkernel_la-validation.lo `test -f 'validation.cpp' || echo '$(srcdir)/'`validation.cpp

libbitcoinkernel_la-validationinterface.lo: validationinterface.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinkernel_la-validationinterface.lo -MD -MP -MF $(DEPDIR)/libbitcoinkernel_la-validationinterface.Tpo -c -o libbitcoinkernel_la-validationinterface.lo `test -f 'validationinterface.cpp' || echo '$(srcdir)/'`validationinterface.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinkernel_la-validationinterface.Tpo $(DEPDIR)/libbitcoinkernel_la-validationinterface.Plo
#	$(AM_V_CXX)source='validationinterface.cpp' object='libbitcoinkernel_la-validationinterface.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinkernel_la-validationinterface.lo `test -f 'validationinterface.cpp' || echo '$(srcdir)/'`validationinterface.cpp

libbitcoinkernel_la-versionbits.lo: versionbits.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinkernel_la-versionbits.lo -MD -MP -MF $(DEPDIR)/libbitcoinkernel_la-versionbits.Tpo -c -o libbitcoinkernel_la-versionbits.lo `test -f 'versionbits.cpp' || echo '$(srcdir)/'`versionbits.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinkernel_la-versionbits.Tpo $(DEPDIR)/libbitcoinkernel_la-versionbits.Plo
#	$(AM_V_CXX)source='versionbits.cpp' object='libbitcoinkernel_la-versionbits.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinkernel_la-versionbits.lo `test -f 'versionbits.cpp' || echo '$(srcdir)/'`versionbits.cpp

libbitcoinkernel_la-warnings.lo: warnings.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinkernel_la-warnings.lo -MD -MP -MF $(DEPDIR)/libbitcoinkernel_la-warnings.Tpo -c -o libbitcoinkernel_la-warnings.lo `test -f 'warnings.cpp' || echo '$(srcdir)/'`warnings.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinkernel_la-warnings.Tpo $(DEPDIR)/libbitcoinkernel_la-warnings.Plo
#	$(AM_V_CXX)source='warnings.cpp' object='libbitcoinkernel_la-warnings.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinkernel_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinkernel_la_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinkernel_la-warnings.lo `test -f 'warnings.cpp' || echo '$(srcdir)/'`warnings.cpp

univalue/lib/libunivalue_la-univalue.lo: univalue/lib/univalue.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libunivalue_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT univalue/lib/libunivalue_la-univalue.lo -MD -MP -MF univalue/lib/$(DEPDIR)/libunivalue_la-univalue.Tpo -c -o univalue/lib/libunivalue_la-univalue.lo `test -f 'univalue/lib/univalue.cpp' || echo '$(srcdir)/'`univalue/lib/univalue.cpp
	$(AM_V_at)$(am__mv) univalue/lib/$(DEPDIR)/libunivalue_la-univalue.Tpo univalue/lib/$(DEPDIR)/libunivalue_la-univalue.Plo
#	$(AM_V_CXX)source='univalue/lib/univalue.cpp' object='univalue/lib/libunivalue_la-univalue.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libunivalue_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o univalue/lib/libunivalue_la-univalue.lo `test -f 'univalue/lib/univalue.cpp' || echo '$(srcdir)/'`univalue/lib/univalue.cpp

univalue/lib/libunivalue_la-univalue_get.lo: univalue/lib/univalue_get.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libunivalue_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT univalue/lib/libunivalue_la-univalue_get.lo -MD -MP -MF univalue/lib/$(DEPDIR)/libunivalue_la-univalue_get.Tpo -c -o univalue/lib/libunivalue_la-univalue_get.lo `test -f 'univalue/lib/univalue_get.cpp' || echo '$(srcdir)/'`univalue/lib/univalue_get.cpp
	$(AM_V_at)$(am__mv) univalue/lib/$(DEPDIR)/libunivalue_la-univalue_get.Tpo univalue/lib/$(DEPDIR)/libunivalue_la-univalue_get.Plo
#	$(AM_V_CXX)source='univalue/lib/univalue_get.cpp' object='univalue/lib/libunivalue_la-univalue_get.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libunivalue_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o univalue/lib/libunivalue_la-univalue_get.lo `test -f 'univalue/lib/univalue_get.cpp' || echo '$(srcdir)/'`univalue/lib/univalue_get.cpp

univalue/lib/libunivalue_la-univalue_read.lo: univalue/lib/univalue_read.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libunivalue_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT univalue/lib/libunivalue_la-univalue_read.lo -MD -MP -MF univalue/lib/$(DEPDIR)/libunivalue_la-univalue_read.Tpo -c -o univalue/lib/libunivalue_la-univalue_read.lo `test -f 'univalue/lib/univalue_read.cpp' || echo '$(srcdir)/'`univalue/lib/univalue_read.cpp
	$(AM_V_at)$(am__mv) univalue/lib/$(DEPDIR)/libunivalue_la-univalue_read.Tpo univalue/lib/$(DEPDIR)/libunivalue_la-univalue_read.Plo
#	$(AM_V_CXX)source='univalue/lib/univalue_read.cpp' object='univalue/lib/libunivalue_la-univalue_read.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libunivalue_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o univalue/lib/libunivalue_la-univalue_read.lo `test -f 'univalue/lib/univalue_read.cpp' || echo '$(srcdir)/'`univalue/lib/univalue_read.cpp

univalue/lib/libunivalue_la-univalue_write.lo: univalue/lib/univalue_write.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libunivalue_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT univalue/lib/libunivalue_la-univalue_write.lo -MD -MP -MF univalue/lib/$(DEPDIR)/libunivalue_la-univalue_write.Tpo -c -o univalue/lib/libunivalue_la-univalue_write.lo `test -f 'univalue/lib/univalue_write.cpp' || echo '$(srcdir)/'`univalue/lib/univalue_write.cpp
	$(AM_V_at)$(am__mv) univalue/lib/$(DEPDIR)/libunivalue_la-univalue_write.Tpo univalue/lib/$(DEPDIR)/libunivalue_la-univalue_write.Plo
#	$(AM_V_CXX)source='univalue/lib/univalue_write.cpp' object='univalue/lib/libunivalue_la-univalue_write.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libunivalue_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o univalue/lib/libunivalue_la-univalue_write.lo `test -f 'univalue/lib/univalue_write.cpp' || echo '$(srcdir)/'`univalue/lib/univalue_write.cpp

bench/bench_bench_bitcoin-addrman.o: bench/addrman.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-addrman.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-addrman.Tpo -c -o bench/bench_bench_bitcoin-addrman.o `test -f 'bench/addrman.cpp' || echo '$(srcdir)/'`bench/addrman.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-addrman.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-addrman.Po
#	$(AM_V_CXX)source='bench/addrman.cpp' object='bench/bench_bench_bitcoin-addrman.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-addrman.o `test -f 'bench/addrman.cpp' || echo '$(srcdir)/'`bench/addrman.cpp

bench/bench_bench_bitcoin-addrman.obj: bench/addrman.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-addrman.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-addrman.Tpo -c -o bench/bench_bench_bitcoin-addrman.obj `if test -f 'bench/addrman.cpp'; then $(CYGPATH_W) 'bench/addrman.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/addrman.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-addrman.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-addrman.Po
#	$(AM_V_CXX)source='bench/addrman.cpp' object='bench/bench_bench_bitcoin-addrman.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-addrman.obj `if test -f 'bench/addrman.cpp'; then $(CYGPATH_W) 'bench/addrman.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/addrman.cpp'; fi`

bench/bench_bench_bitcoin-base58.o: bench/base58.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-base58.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-base58.Tpo -c -o bench/bench_bench_bitcoin-base58.o `test -f 'bench/base58.cpp' || echo '$(srcdir)/'`bench/base58.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-base58.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-base58.Po
#	$(AM_V_CXX)source='bench/base58.cpp' object='bench/bench_bench_bitcoin-base58.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-base58.o `test -f 'bench/base58.cpp' || echo '$(srcdir)/'`bench/base58.cpp

bench/bench_bench_bitcoin-base58.obj: bench/base58.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-base58.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-base58.Tpo -c -o bench/bench_bench_bitcoin-base58.obj `if test -f 'bench/base58.cpp'; then $(CYGPATH_W) 'bench/base58.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/base58.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-base58.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-base58.Po
#	$(AM_V_CXX)source='bench/base58.cpp' object='bench/bench_bench_bitcoin-base58.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-base58.obj `if test -f 'bench/base58.cpp'; then $(CYGPATH_W) 'bench/base58.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/base58.cpp'; fi`

bench/bench_bench_bitcoin-bech32.o: bench/bech32.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-bech32.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-bech32.Tpo -c -o bench/bench_bench_bitcoin-bech32.o `test -f 'bench/bech32.cpp' || echo '$(srcdir)/'`bench/bech32.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-bech32.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-bech32.Po
#	$(AM_V_CXX)source='bench/bech32.cpp' object='bench/bench_bench_bitcoin-bech32.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-bech32.o `test -f 'bench/bech32.cpp' || echo '$(srcdir)/'`bench/bech32.cpp

bench/bench_bench_bitcoin-bech32.obj: bench/bech32.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-bech32.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-bech32.Tpo -c -o bench/bench_bench_bitcoin-bech32.obj `if test -f 'bench/bech32.cpp'; then $(CYGPATH_W) 'bench/bech32.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/bech32.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-bech32.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-bech32.Po
#	$(AM_V_CXX)source='bench/bech32.cpp' object='bench/bench_bench_bitcoin-bech32.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-bech32.obj `if test -f 'bench/bech32.cpp'; then $(CYGPATH_W) 'bench/bech32.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/bech32.cpp'; fi`

bench/bench_bench_bitcoin-bench.o: bench/bench.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-bench.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-bench.Tpo -c -o bench/bench_bench_bitcoin-bench.o `test -f 'bench/bench.cpp' || echo '$(srcdir)/'`bench/bench.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-bench.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-bench.Po
#	$(AM_V_CXX)source='bench/bench.cpp' object='bench/bench_bench_bitcoin-bench.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-bench.o `test -f 'bench/bench.cpp' || echo '$(srcdir)/'`bench/bench.cpp

bench/bench_bench_bitcoin-bench.obj: bench/bench.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-bench.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-bench.Tpo -c -o bench/bench_bench_bitcoin-bench.obj `if test -f 'bench/bench.cpp'; then $(CYGPATH_W) 'bench/bench.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/bench.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-bench.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-bench.Po
#	$(AM_V_CXX)source='bench/bench.cpp' object='bench/bench_bench_bitcoin-bench.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-bench.obj `if test -f 'bench/bench.cpp'; then $(CYGPATH_W) 'bench/bench.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/bench.cpp'; fi`

bench/bench_bench_bitcoin-bench_bitcoin.o: bench/bench_bitcoin.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-bench_bitcoin.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-bench_bitcoin.Tpo -c -o bench/bench_bench_bitcoin-bench_bitcoin.o `test -f 'bench/bench_bitcoin.cpp' || echo '$(srcdir)/'`bench/bench_bitcoin.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-bench_bitcoin.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-bench_bitcoin.Po
#	$(AM_V_CXX)source='bench/bench_bitcoin.cpp' object='bench/bench_bench_bitcoin-bench_bitcoin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-bench_bitcoin.o `test -f 'bench/bench_bitcoin.cpp' || echo '$(srcdir)/'`bench/bench_bitcoin.cpp

bench/bench_bench_bitcoin-bench_bitcoin.obj: bench/bench_bitcoin.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-bench_bitcoin.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-bench_bitcoin.Tpo -c -o bench/bench_bench_bitcoin-bench_bitcoin.obj `if test -f 'bench/bench_bitcoin.cpp'; then $(CYGPATH_W) 'bench/bench_bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/bench_bitcoin.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-bench_bitcoin.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-bench_bitcoin.Po
#	$(AM_V_CXX)source='bench/bench_bitcoin.cpp' object='bench/bench_bench_bitcoin-bench_bitcoin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-bench_bitcoin.obj `if test -f 'bench/bench_bitcoin.cpp'; then $(CYGPATH_W) 'bench/bench_bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/bench_bitcoin.cpp'; fi`

bench/bench_bench_bitcoin-block_assemble.o: bench/block_assemble.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-block_assemble.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-block_assemble.Tpo -c -o bench/bench_bench_bitcoin-block_assemble.o `test -f 'bench/block_assemble.cpp' || echo '$(srcdir)/'`bench/block_assemble.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-block_assemble.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-block_assemble.Po
#	$(AM_V_CXX)source='bench/block_assemble.cpp' object='bench/bench_bench_bitcoin-block_assemble.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-block_assemble.o `test -f 'bench/block_assemble.cpp' || echo '$(srcdir)/'`bench/block_assemble.cpp

bench/bench_bench_bitcoin-block_assemble.obj: bench/block_assemble.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-block_assemble.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-block_assemble.Tpo -c -o bench/bench_bench_bitcoin-block_assemble.obj `if test -f 'bench/block_assemble.cpp'; then $(CYGPATH_W) 'bench/block_assemble.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/block_assemble.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-block_assemble.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-block_assemble.Po
#	$(AM_V_CXX)source='bench/block_assemble.cpp' object='bench/bench_bench_bitcoin-block_assemble.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-block_assemble.obj `if test -f 'bench/block_assemble.cpp'; then $(CYGPATH_W) 'bench/block_assemble.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/block_assemble.cpp'; fi`

bench/bench_bench_bitcoin-ccoins_caching.o: bench/ccoins_caching.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-ccoins_caching.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-ccoins_caching.Tpo -c -o bench/bench_bench_bitcoin-ccoins_caching.o `test -f 'bench/ccoins_caching.cpp' || echo '$(srcdir)/'`bench/ccoins_caching.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-ccoins_caching.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-ccoins_caching.Po
#	$(AM_V_CXX)source='bench/ccoins_caching.cpp' object='bench/bench_bench_bitcoin-ccoins_caching.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-ccoins_caching.o `test -f 'bench/ccoins_caching.cpp' || echo '$(srcdir)/'`bench/ccoins_caching.cpp

bench/bench_bench_bitcoin-ccoins_caching.obj: bench/ccoins_caching.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-ccoins_caching.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-ccoins_caching.Tpo -c -o bench/bench_bench_bitcoin-ccoins_caching.obj `if test -f 'bench/ccoins_caching.cpp'; then $(CYGPATH_W) 'bench/ccoins_caching.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/ccoins_caching.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-ccoins_caching.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-ccoins_caching.Po
#	$(AM_V_CXX)source='bench/ccoins_caching.cpp' object='bench/bench_bench_bitcoin-ccoins_caching.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-ccoins_caching.obj `if test -f 'bench/ccoins_caching.cpp'; then $(CYGPATH_W) 'bench/ccoins_caching.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/ccoins_caching.cpp'; fi`

bench/bench_bench_bitcoin-chacha20.o: bench/chacha20.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-chacha20.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-chacha20.Tpo -c -o bench/bench_bench_bitcoin-chacha20.o `test -f 'bench/chacha20.cpp' || echo '$(srcdir)/'`bench/chacha20.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-chacha20.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-chacha20.Po
#	$(AM_V_CXX)source='bench/chacha20.cpp' object='bench/bench_bench_bitcoin-chacha20.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-chacha20.o `test -f 'bench/chacha20.cpp' || echo '$(srcdir)/'`bench/chacha20.cpp

bench/bench_bench_bitcoin-chacha20.obj: bench/chacha20.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-chacha20.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-chacha20.Tpo -c -o bench/bench_bench_bitcoin-chacha20.obj `if test -f 'bench/chacha20.cpp'; then $(CYGPATH_W) 'bench/chacha20.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/chacha20.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-chacha20.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-chacha20.Po
#	$(AM_V_CXX)source='bench/chacha20.cpp' object='bench/bench_bench_bitcoin-chacha20.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-chacha20.obj `if test -f 'bench/chacha20.cpp'; then $(CYGPATH_W) 'bench/chacha20.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/chacha20.cpp'; fi`

bench/bench_bench_bitcoin-chacha_poly_aead.o: bench/chacha_poly_aead.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-chacha_poly_aead.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-chacha_poly_aead.Tpo -c -o bench/bench_bench_bitcoin-chacha_poly_aead.o `test -f 'bench/chacha_poly_aead.cpp' || echo '$(srcdir)/'`bench/chacha_poly_aead.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-chacha_poly_aead.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-chacha_poly_aead.Po
#	$(AM_V_CXX)source='bench/chacha_poly_aead.cpp' object='bench/bench_bench_bitcoin-chacha_poly_aead.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-chacha_poly_aead.o `test -f 'bench/chacha_poly_aead.cpp' || echo '$(srcdir)/'`bench/chacha_poly_aead.cpp

bench/bench_bench_bitcoin-chacha_poly_aead.obj: bench/chacha_poly_aead.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-chacha_poly_aead.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-chacha_poly_aead.Tpo -c -o bench/bench_bench_bitcoin-chacha_poly_aead.obj `if test -f 'bench/chacha_poly_aead.cpp'; then $(CYGPATH_W) 'bench/chacha_poly_aead.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/chacha_poly_aead.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-chacha_poly_aead.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-chacha_poly_aead.Po
#	$(AM_V_CXX)source='bench/chacha_poly_aead.cpp' object='bench/bench_bench_bitcoin-chacha_poly_aead.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-chacha_poly_aead.obj `if test -f 'bench/chacha_poly_aead.cpp'; then $(CYGPATH_W) 'bench/chacha_poly_aead.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/chacha_poly_aead.cpp'; fi`

bench/bench_bench_bitcoin-checkblock.o: bench/checkblock.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-checkblock.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-checkblock.Tpo -c -o bench/bench_bench_bitcoin-checkblock.o `test -f 'bench/checkblock.cpp' || echo '$(srcdir)/'`bench/checkblock.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-checkblock.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-checkblock.Po
#	$(AM_V_CXX)source='bench/checkblock.cpp' object='bench/bench_bench_bitcoin-checkblock.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-checkblock.o `test -f 'bench/checkblock.cpp' || echo '$(srcdir)/'`bench/checkblock.cpp

bench/bench_bench_bitcoin-checkblock.obj: bench/checkblock.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-checkblock.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-checkblock.Tpo -c -o bench/bench_bench_bitcoin-checkblock.obj `if test -f 'bench/checkblock.cpp'; then $(CYGPATH_W) 'bench/checkblock.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/checkblock.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-checkblock.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-checkblock.Po
#	$(AM_V_CXX)source='bench/checkblock.cpp' object='bench/bench_bench_bitcoin-checkblock.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-checkblock.obj `if test -f 'bench/checkblock.cpp'; then $(CYGPATH_W) 'bench/checkblock.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/checkblock.cpp'; fi`

bench/bench_bench_bitcoin-checkqueue.o: bench/checkqueue.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-checkqueue.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-checkqueue.Tpo -c -o bench/bench_bench_bitcoin-checkqueue.o `test -f 'bench/checkqueue.cpp' || echo '$(srcdir)/'`bench/checkqueue.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-checkqueue.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-checkqueue.Po
#	$(AM_V_CXX)source='bench/checkqueue.cpp' object='bench/bench_bench_bitcoin-checkqueue.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-checkqueue.o `test -f 'bench/checkqueue.cpp' || echo '$(srcdir)/'`bench/checkqueue.cpp

bench/bench_bench_bitcoin-checkqueue.obj: bench/checkqueue.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-checkqueue.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-checkqueue.Tpo -c -o bench/bench_bench_bitcoin-checkqueue.obj `if test -f 'bench/checkqueue.cpp'; then $(CYGPATH_W) 'bench/checkqueue.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/checkqueue.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-checkqueue.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-checkqueue.Po
#	$(AM_V_CXX)source='bench/checkqueue.cpp' object='bench/bench_bench_bitcoin-checkqueue.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-checkqueue.obj `if test -f 'bench/checkqueue.cpp'; then $(CYGPATH_W) 'bench/checkqueue.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/checkqueue.cpp'; fi`

bench/bench_bench_bitcoin-crypto_hash.o: bench/crypto_hash.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-crypto_hash.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-crypto_hash.Tpo -c -o bench/bench_bench_bitcoin-crypto_hash.o `test -f 'bench/crypto_hash.cpp' || echo '$(srcdir)/'`bench/crypto_hash.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-crypto_hash.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-crypto_hash.Po
#	$(AM_V_CXX)source='bench/crypto_hash.cpp' object='bench/bench_bench_bitcoin-crypto_hash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-crypto_hash.o `test -f 'bench/crypto_hash.cpp' || echo '$(srcdir)/'`bench/crypto_hash.cpp

bench/bench_bench_bitcoin-crypto_hash.obj: bench/crypto_hash.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-crypto_hash.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-crypto_hash.Tpo -c -o bench/bench_bench_bitcoin-crypto_hash.obj `if test -f 'bench/crypto_hash.cpp'; then $(CYGPATH_W) 'bench/crypto_hash.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/crypto_hash.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-crypto_hash.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-crypto_hash.Po
#	$(AM_V_CXX)source='bench/crypto_hash.cpp' object='bench/bench_bench_bitcoin-crypto_hash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-crypto_hash.obj `if test -f 'bench/crypto_hash.cpp'; then $(CYGPATH_W) 'bench/crypto_hash.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/crypto_hash.cpp'; fi`

bench/bench_bench_bitcoin-data.o: bench/data.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-data.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-data.Tpo -c -o bench/bench_bench_bitcoin-data.o `test -f 'bench/data.cpp' || echo '$(srcdir)/'`bench/data.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-data.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-data.Po
#	$(AM_V_CXX)source='bench/data.cpp' object='bench/bench_bench_bitcoin-data.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-data.o `test -f 'bench/data.cpp' || echo '$(srcdir)/'`bench/data.cpp

bench/bench_bench_bitcoin-data.obj: bench/data.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-data.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-data.Tpo -c -o bench/bench_bench_bitcoin-data.obj `if test -f 'bench/data.cpp'; then $(CYGPATH_W) 'bench/data.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/data.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-data.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-data.Po
#	$(AM_V_CXX)source='bench/data.cpp' object='bench/bench_bench_bitcoin-data.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-data.obj `if test -f 'bench/data.cpp'; then $(CYGPATH_W) 'bench/data.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/data.cpp'; fi`

bench/bench_bench_bitcoin-duplicate_inputs.o: bench/duplicate_inputs.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-duplicate_inputs.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-duplicate_inputs.Tpo -c -o bench/bench_bench_bitcoin-duplicate_inputs.o `test -f 'bench/duplicate_inputs.cpp' || echo '$(srcdir)/'`bench/duplicate_inputs.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-duplicate_inputs.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-duplicate_inputs.Po
#	$(AM_V_CXX)source='bench/duplicate_inputs.cpp' object='bench/bench_bench_bitcoin-duplicate_inputs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-duplicate_inputs.o `test -f 'bench/duplicate_inputs.cpp' || echo '$(srcdir)/'`bench/duplicate_inputs.cpp

bench/bench_bench_bitcoin-duplicate_inputs.obj: bench/duplicate_inputs.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-duplicate_inputs.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-duplicate_inputs.Tpo -c -o bench/bench_bench_bitcoin-duplicate_inputs.obj `if test -f 'bench/duplicate_inputs.cpp'; then $(CYGPATH_W) 'bench/duplicate_inputs.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/duplicate_inputs.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-duplicate_inputs.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-duplicate_inputs.Po
#	$(AM_V_CXX)source='bench/duplicate_inputs.cpp' object='bench/bench_bench_bitcoin-duplicate_inputs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-duplicate_inputs.obj `if test -f 'bench/duplicate_inputs.cpp'; then $(CYGPATH_W) 'bench/duplicate_inputs.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/duplicate_inputs.cpp'; fi`

bench/bench_bench_bitcoin-examples.o: bench/examples.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-examples.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-examples.Tpo -c -o bench/bench_bench_bitcoin-examples.o `test -f 'bench/examples.cpp' || echo '$(srcdir)/'`bench/examples.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-examples.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-examples.Po
#	$(AM_V_CXX)source='bench/examples.cpp' object='bench/bench_bench_bitcoin-examples.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-examples.o `test -f 'bench/examples.cpp' || echo '$(srcdir)/'`bench/examples.cpp

bench/bench_bench_bitcoin-examples.obj: bench/examples.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-examples.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-examples.Tpo -c -o bench/bench_bench_bitcoin-examples.obj `if test -f 'bench/examples.cpp'; then $(CYGPATH_W) 'bench/examples.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/examples.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-examples.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-examples.Po
#	$(AM_V_CXX)source='bench/examples.cpp' object='bench/bench_bench_bitcoin-examples.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-examples.obj `if test -f 'bench/examples.cpp'; then $(CYGPATH_W) 'bench/examples.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/examples.cpp'; fi`

bench/bench_bench_bitcoin-gcs_filter.o: bench/gcs_filter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-gcs_filter.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-gcs_filter.Tpo -c -o bench/bench_bench_bitcoin-gcs_filter.o `test -f 'bench/gcs_filter.cpp' || echo '$(srcdir)/'`bench/gcs_filter.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-gcs_filter.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-gcs_filter.Po
#	$(AM_V_CXX)source='bench/gcs_filter.cpp' object='bench/bench_bench_bitcoin-gcs_filter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-gcs_filter.o `test -f 'bench/gcs_filter.cpp' || echo '$(srcdir)/'`bench/gcs_filter.cpp

bench/bench_bench_bitcoin-gcs_filter.obj: bench/gcs_filter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-gcs_filter.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-gcs_filter.Tpo -c -o bench/bench_bench_bitcoin-gcs_filter.obj `if test -f 'bench/gcs_filter.cpp'; then $(CYGPATH_W) 'bench/gcs_filter.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/gcs_filter.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-gcs_filter.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-gcs_filter.Po
#	$(AM_V_CXX)source='bench/gcs_filter.cpp' object='bench/bench_bench_bitcoin-gcs_filter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-gcs_filter.obj `if test -f 'bench/gcs_filter.cpp'; then $(CYGPATH_W) 'bench/gcs_filter.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/gcs_filter.cpp'; fi`

bench/bench_bench_bitcoin-hashpadding.o: bench/hashpadding.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-hashpadding.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-hashpadding.Tpo -c -o bench/bench_bench_bitcoin-hashpadding.o `test -f 'bench/hashpadding.cpp' || echo '$(srcdir)/'`bench/hashpadding.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-hashpadding.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-hashpadding.Po
#	$(AM_V_CXX)source='bench/hashpadding.cpp' object='bench/bench_bench_bitcoin-hashpadding.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-hashpadding.o `test -f 'bench/hashpadding.cpp' || echo '$(srcdir)/'`bench/hashpadding.cpp

bench/bench_bench_bitcoin-hashpadding.obj: bench/hashpadding.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-hashpadding.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-hashpadding.Tpo -c -o bench/bench_bench_bitcoin-hashpadding.obj `if test -f 'bench/hashpadding.cpp'; then $(CYGPATH_W) 'bench/hashpadding.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/hashpadding.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-hashpadding.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-hashpadding.Po
#	$(AM_V_CXX)source='bench/hashpadding.cpp' object='bench/bench_bench_bitcoin-hashpadding.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-hashpadding.obj `if test -f 'bench/hashpadding.cpp'; then $(CYGPATH_W) 'bench/hashpadding.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/hashpadding.cpp'; fi`

bench/bench_bench_bitcoin-lockedpool.o: bench/lockedpool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-lockedpool.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-lockedpool.Tpo -c -o bench/bench_bench_bitcoin-lockedpool.o `test -f 'bench/lockedpool.cpp' || echo '$(srcdir)/'`bench/lockedpool.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-lockedpool.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-lockedpool.Po
#	$(AM_V_CXX)source='bench/lockedpool.cpp' object='bench/bench_bench_bitcoin-lockedpool.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-lockedpool.o `test -f 'bench/lockedpool.cpp' || echo '$(srcdir)/'`bench/lockedpool.cpp

bench/bench_bench_bitcoin-lockedpool.obj: bench/lockedpool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-lockedpool.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-lockedpool.Tpo -c -o bench/bench_bench_bitcoin-lockedpool.obj `if test -f 'bench/lockedpool.cpp'; then $(CYGPATH_W) 'bench/lockedpool.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/lockedpool.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-lockedpool.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-lockedpool.Po
#	$(AM_V_CXX)source='bench/lockedpool.cpp' object='bench/bench_bench_bitcoin-lockedpool.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-lockedpool.obj `if test -f 'bench/lockedpool.cpp'; then $(CYGPATH_W) 'bench/lockedpool.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/lockedpool.cpp'; fi`

bench/bench_bench_bitcoin-logging.o: bench/logging.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-logging.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-logging.Tpo -c -o bench/bench_bench_bitcoin-logging.o `test -f 'bench/logging.cpp' || echo '$(srcdir)/'`bench/logging.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-logging.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-logging.Po
#	$(AM_V_CXX)source='bench/logging.cpp' object='bench/bench_bench_bitcoin-logging.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-logging.o `test -f 'bench/logging.cpp' || echo '$(srcdir)/'`bench/logging.cpp

bench/bench_bench_bitcoin-logging.obj: bench/logging.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-logging.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-logging.Tpo -c -o bench/bench_bench_bitcoin-logging.obj `if test -f 'bench/logging.cpp'; then $(CYGPATH_W) 'bench/logging.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/logging.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-logging.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-logging.Po
#	$(AM_V_CXX)source='bench/logging.cpp' object='bench/bench_bench_bitcoin-logging.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-logging.obj `if test -f 'bench/logging.cpp'; then $(CYGPATH_W) 'bench/logging.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/logging.cpp'; fi`

bench/bench_bench_bitcoin-mempool_eviction.o: bench/mempool_eviction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-mempool_eviction.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-mempool_eviction.Tpo -c -o bench/bench_bench_bitcoin-mempool_eviction.o `test -f 'bench/mempool_eviction.cpp' || echo '$(srcdir)/'`bench/mempool_eviction.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-mempool_eviction.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-mempool_eviction.Po
#	$(AM_V_CXX)source='bench/mempool_eviction.cpp' object='bench/bench_bench_bitcoin-mempool_eviction.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-mempool_eviction.o `test -f 'bench/mempool_eviction.cpp' || echo '$(srcdir)/'`bench/mempool_eviction.cpp

bench/bench_bench_bitcoin-mempool_eviction.obj: bench/mempool_eviction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-mempool_eviction.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-mempool_eviction.Tpo -c -o bench/bench_bench_bitcoin-mempool_eviction.obj `if test -f 'bench/mempool_eviction.cpp'; then $(CYGPATH_W) 'bench/mempool_eviction.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/mempool_eviction.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-mempool_eviction.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-mempool_eviction.Po
#	$(AM_V_CXX)source='bench/mempool_eviction.cpp' object='bench/bench_bench_bitcoin-mempool_eviction.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-mempool_eviction.obj `if test -f 'bench/mempool_eviction.cpp'; then $(CYGPATH_W) 'bench/mempool_eviction.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/mempool_eviction.cpp'; fi`

bench/bench_bench_bitcoin-mempool_stress.o: bench/mempool_stress.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-mempool_stress.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-mempool_stress.Tpo -c -o bench/bench_bench_bitcoin-mempool_stress.o `test -f 'bench/mempool_stress.cpp' || echo '$(srcdir)/'`bench/mempool_stress.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-mempool_stress.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-mempool_stress.Po
#	$(AM_V_CXX)source='bench/mempool_stress.cpp' object='bench/bench_bench_bitcoin-mempool_stress.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-mempool_stress.o `test -f 'bench/mempool_stress.cpp' || echo '$(srcdir)/'`bench/mempool_stress.cpp

bench/bench_bench_bitcoin-mempool_stress.obj: bench/mempool_stress.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-mempool_stress.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-mempool_stress.Tpo -c -o bench/bench_bench_bitcoin-mempool_stress.obj `if test -f 'bench/mempool_stress.cpp'; then $(CYGPATH_W) 'bench/mempool_stress.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/mempool_stress.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-mempool_stress.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-mempool_stress.Po
#	$(AM_V_CXX)source='bench/mempool_stress.cpp' object='bench/bench_bench_bitcoin-mempool_stress.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-mempool_stress.obj `if test -f 'bench/mempool_stress.cpp'; then $(CYGPATH_W) 'bench/mempool_stress.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/mempool_stress.cpp'; fi`

bench/bench_bench_bitcoin-merkle_root.o: bench/merkle_root.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-merkle_root.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-merkle_root.Tpo -c -o bench/bench_bench_bitcoin-merkle_root.o `test -f 'bench/merkle_root.cpp' || echo '$(srcdir)/'`bench/merkle_root.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-merkle_root.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-merkle_root.Po
#	$(AM_V_CXX)source='bench/merkle_root.cpp' object='bench/bench_bench_bitcoin-merkle_root.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-merkle_root.o `test -f 'bench/merkle_root.cpp' || echo '$(srcdir)/'`bench/merkle_root.cpp

bench/bench_bench_bitcoin-merkle_root.obj: bench/merkle_root.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-merkle_root.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-merkle_root.Tpo -c -o bench/bench_bench_bitcoin-merkle_root.obj `if test -f 'bench/merkle_root.cpp'; then $(CYGPATH_W) 'bench/merkle_root.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/merkle_root.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-merkle_root.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-merkle_root.Po
#	$(AM_V_CXX)source='bench/merkle_root.cpp' object='bench/bench_bench_bitcoin-merkle_root.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-merkle_root.obj `if test -f 'bench/merkle_root.cpp'; then $(CYGPATH_W) 'bench/merkle_root.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/merkle_root.cpp'; fi`

bench/bench_bench_bitcoin-nanobench.o: bench/nanobench.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-nanobench.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-nanobench.Tpo -c -o bench/bench_bench_bitcoin-nanobench.o `test -f 'bench/nanobench.cpp' || echo '$(srcdir)/'`bench/nanobench.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-nanobench.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-nanobench.Po
#	$(AM_V_CXX)source='bench/nanobench.cpp' object='bench/bench_bench_bitcoin-nanobench.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-nanobench.o `test -f 'bench/nanobench.cpp' || echo '$(srcdir)/'`bench/nanobench.cpp

bench/bench_bench_bitcoin-nanobench.obj: bench/nanobench.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-nanobench.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-nanobench.Tpo -c -o bench/bench_bench_bitcoin-nanobench.obj `if test -f 'bench/nanobench.cpp'; then $(CYGPATH_W) 'bench/nanobench.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/nanobench.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-nanobench.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-nanobench.Po
#	$(AM_V_CXX)source='bench/nanobench.cpp' object='bench/bench_bench_bitcoin-nanobench.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-nanobench.obj `if test -f 'bench/nanobench.cpp'; then $(CYGPATH_W) 'bench/nanobench.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/nanobench.cpp'; fi`

bench/bench_bench_bitcoin-peer_eviction.o: bench/peer_eviction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-peer_eviction.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-peer_eviction.Tpo -c -o bench/bench_bench_bitcoin-peer_eviction.o `test -f 'bench/peer_eviction.cpp' || echo '$(srcdir)/'`bench/peer_eviction.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-peer_eviction.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-peer_eviction.Po
#	$(AM_V_CXX)source='bench/peer_eviction.cpp' object='bench/bench_bench_bitcoin-peer_eviction.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-peer_eviction.o `test -f 'bench/peer_eviction.cpp' || echo '$(srcdir)/'`bench/peer_eviction.cpp

bench/bench_bench_bitcoin-peer_eviction.obj: bench/peer_eviction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-peer_eviction.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-peer_eviction.Tpo -c -o bench/bench_bench_bitcoin-peer_eviction.obj `if test -f 'bench/peer_eviction.cpp'; then $(CYGPATH_W) 'bench/peer_eviction.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/peer_eviction.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-peer_eviction.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-peer_eviction.Po
#	$(AM_V_CXX)source='bench/peer_eviction.cpp' object='bench/bench_bench_bitcoin-peer_eviction.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-peer_eviction.obj `if test -f 'bench/peer_eviction.cpp'; then $(CYGPATH_W) 'bench/peer_eviction.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/peer_eviction.cpp'; fi`

bench/bench_bench_bitcoin-poly1305.o: bench/poly1305.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-poly1305.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-poly1305.Tpo -c -o bench/bench_bench_bitcoin-poly1305.o `test -f 'bench/poly1305.cpp' || echo '$(srcdir)/'`bench/poly1305.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-poly1305.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-poly1305.Po
#	$(AM_V_CXX)source='bench/poly1305.cpp' object='bench/bench_bench_bitcoin-poly1305.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-poly1305.o `test -f 'bench/poly1305.cpp' || echo '$(srcdir)/'`bench/poly1305.cpp

bench/bench_bench_bitcoin-poly1305.obj: bench/poly1305.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-poly1305.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-poly1305.Tpo -c -o bench/bench_bench_bitcoin-poly1305.obj `if test -f 'bench/poly1305.cpp'; then $(CYGPATH_W) 'bench/poly1305.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/poly1305.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-poly1305.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-poly1305.Po
#	$(AM_V_CXX)source='bench/poly1305.cpp' object='bench/bench_bench_bitcoin-poly1305.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-poly1305.obj `if test -f 'bench/poly1305.cpp'; then $(CYGPATH_W) 'bench/poly1305.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/poly1305.cpp'; fi`

bench/bench_bench_bitcoin-prevector.o: bench/prevector.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-prevector.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-prevector.Tpo -c -o bench/bench_bench_bitcoin-prevector.o `test -f 'bench/prevector.cpp' || echo '$(srcdir)/'`bench/prevector.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-prevector.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-prevector.Po
#	$(AM_V_CXX)source='bench/prevector.cpp' object='bench/bench_bench_bitcoin-prevector.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-prevector.o `test -f 'bench/prevector.cpp' || echo '$(srcdir)/'`bench/prevector.cpp

bench/bench_bench_bitcoin-prevector.obj: bench/prevector.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-prevector.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-prevector.Tpo -c -o bench/bench_bench_bitcoin-prevector.obj `if test -f 'bench/prevector.cpp'; then $(CYGPATH_W) 'bench/prevector.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/prevector.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-prevector.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-prevector.Po
#	$(AM_V_CXX)source='bench/prevector.cpp' object='bench/bench_bench_bitcoin-prevector.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-prevector.obj `if test -f 'bench/prevector.cpp'; then $(CYGPATH_W) 'bench/prevector.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/prevector.cpp'; fi`

bench/bench_bench_bitcoin-rollingbloom.o: bench/rollingbloom.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-rollingbloom.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-rollingbloom.Tpo -c -o bench/bench_bench_bitcoin-rollingbloom.o `test -f 'bench/rollingbloom.cpp' || echo '$(srcdir)/'`bench/rollingbloom.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-rollingbloom.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-rollingbloom.Po
#	$(AM_V_CXX)source='bench/rollingbloom.cpp' object='bench/bench_bench_bitcoin-rollingbloom.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-rollingbloom.o `test -f 'bench/rollingbloom.cpp' || echo '$(srcdir)/'`bench/rollingbloom.cpp

bench/bench_bench_bitcoin-rollingbloom.obj: bench/rollingbloom.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-rollingbloom.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-rollingbloom.Tpo -c -o bench/bench_bench_bitcoin-rollingbloom.obj `if test -f 'bench/rollingbloom.cpp'; then $(CYGPATH_W) 'bench/rollingbloom.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/rollingbloom.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-rollingbloom.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-rollingbloom.Po
#	$(AM_V_CXX)source='bench/rollingbloom.cpp' object='bench/bench_bench_bitcoin-rollingbloom.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-rollingbloom.obj `if test -f 'bench/rollingbloom.cpp'; then $(CYGPATH_W) 'bench/rollingbloom.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/rollingbloom.cpp'; fi`

bench/bench_bench_bitcoin-rpc_blockchain.o: bench/rpc_blockchain.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-rpc_blockchain.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-rpc_blockchain.Tpo -c -o bench/bench_bench_bitcoin-rpc_blockchain.o `test -f 'bench/rpc_blockchain.cpp' || echo '$(srcdir)/'`bench/rpc_blockchain.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-rpc_blockchain.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-rpc_blockchain.Po
#	$(AM_V_CXX)source='bench/rpc_blockchain.cpp' object='bench/bench_bench_bitcoin-rpc_blockchain.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-rpc_blockchain.o `test -f 'bench/rpc_blockchain.cpp' || echo '$(srcdir)/'`bench/rpc_blockchain.cpp

bench/bench_bench_bitcoin-rpc_blockchain.obj: bench/rpc_blockchain.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-rpc_blockchain.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-rpc_blockchain.Tpo -c -o bench/bench_bench_bitcoin-rpc_blockchain.obj `if test -f 'bench/rpc_blockchain.cpp'; then $(CYGPATH_W) 'bench/rpc_blockchain.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/rpc_blockchain.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-rpc_blockchain.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-rpc_blockchain.Po
#	$(AM_V_CXX)source='bench/rpc_blockchain.cpp' object='bench/bench_bench_bitcoin-rpc_blockchain.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-rpc_blockchain.obj `if test -f 'bench/rpc_blockchain.cpp'; then $(CYGPATH_W) 'bench/rpc_blockchain.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/rpc_blockchain.cpp'; fi`

bench/bench_bench_bitcoin-rpc_mempool.o: bench/rpc_mempool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-rpc_mempool.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-rpc_mempool.Tpo -c -o bench/bench_bench_bitcoin-rpc_mempool.o `test -f 'bench/rpc_mempool.cpp' || echo '$(srcdir)/'`bench/rpc_mempool.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-rpc_mempool.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-rpc_mempool.Po
#	$(AM_V_CXX)source='bench/rpc_mempool.cpp' object='bench/bench_bench_bitcoin-rpc_mempool.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-rpc_mempool.o `test -f 'bench/rpc_mempool.cpp' || echo '$(srcdir)/'`bench/rpc_mempool.cpp

bench/bench_bench_bitcoin-rpc_mempool.obj: bench/rpc_mempool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-rpc_mempool.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-rpc_mempool.Tpo -c -o bench/bench_bench_bitcoin-rpc_mempool.obj `if test -f 'bench/rpc_mempool.cpp'; then $(CYGPATH_W) 'bench/rpc_mempool.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/rpc_mempool.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-rpc_mempool.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-rpc_mempool.Po
#	$(AM_V_CXX)source='bench/rpc_mempool.cpp' object='bench/bench_bench_bitcoin-rpc_mempool.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-rpc_mempool.obj `if test -f 'bench/rpc_mempool.cpp'; then $(CYGPATH_W) 'bench/rpc_mempool.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/rpc_mempool.cpp'; fi`

bench/bench_bench_bitcoin-strencodings.o: bench/strencodings.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-strencodings.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-strencodings.Tpo -c -o bench/bench_bench_bitcoin-strencodings.o `test -f 'bench/strencodings.cpp' || echo '$(srcdir)/'`bench/strencodings.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-strencodings.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-strencodings.Po
#	$(AM_V_CXX)source='bench/strencodings.cpp' object='bench/bench_bench_bitcoin-strencodings.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-strencodings.o `test -f 'bench/strencodings.cpp' || echo '$(srcdir)/'`bench/strencodings.cpp

bench/bench_bench_bitcoin-strencodings.obj: bench/strencodings.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-strencodings.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-strencodings.Tpo -c -o bench/bench_bench_bitcoin-strencodings.obj `if test -f 'bench/strencodings.cpp'; then $(CYGPATH_W) 'bench/strencodings.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/strencodings.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-strencodings.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-strencodings.Po
#	$(AM_V_CXX)source='bench/strencodings.cpp' object='bench/bench_bench_bitcoin-strencodings.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-strencodings.obj `if test -f 'bench/strencodings.cpp'; then $(CYGPATH_W) 'bench/strencodings.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/strencodings.cpp'; fi`

bench/bench_bench_bitcoin-util_time.o: bench/util_time.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-util_time.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-util_time.Tpo -c -o bench/bench_bench_bitcoin-util_time.o `test -f 'bench/util_time.cpp' || echo '$(srcdir)/'`bench/util_time.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-util_time.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-util_time.Po
#	$(AM_V_CXX)source='bench/util_time.cpp' object='bench/bench_bench_bitcoin-util_time.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-util_time.o `test -f 'bench/util_time.cpp' || echo '$(srcdir)/'`bench/util_time.cpp

bench/bench_bench_bitcoin-util_time.obj: bench/util_time.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-util_time.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-util_time.Tpo -c -o bench/bench_bench_bitcoin-util_time.obj `if test -f 'bench/util_time.cpp'; then $(CYGPATH_W) 'bench/util_time.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/util_time.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-util_time.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-util_time.Po
#	$(AM_V_CXX)source='bench/util_time.cpp' object='bench/bench_bench_bitcoin-util_time.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-util_time.obj `if test -f 'bench/util_time.cpp'; then $(CYGPATH_W) 'bench/util_time.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/util_time.cpp'; fi`

bench/bench_bench_bitcoin-verify_script.o: bench/verify_script.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-verify_script.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-verify_script.Tpo -c -o bench/bench_bench_bitcoin-verify_script.o `test -f 'bench/verify_script.cpp' || echo '$(srcdir)/'`bench/verify_script.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-verify_script.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-verify_script.Po
#	$(AM_V_CXX)source='bench/verify_script.cpp' object='bench/bench_bench_bitcoin-verify_script.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-verify_script.o `test -f 'bench/verify_script.cpp' || echo '$(srcdir)/'`bench/verify_script.cpp

bench/bench_bench_bitcoin-verify_script.obj: bench/verify_script.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-verify_script.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-verify_script.Tpo -c -o bench/bench_bench_bitcoin-verify_script.obj `if test -f 'bench/verify_script.cpp'; then $(CYGPATH_W) 'bench/verify_script.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/verify_script.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-verify_script.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-verify_script.Po
#	$(AM_V_CXX)source='bench/verify_script.cpp' object='bench/bench_bench_bitcoin-verify_script.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-verify_script.obj `if test -f 'bench/verify_script.cpp'; then $(CYGPATH_W) 'bench/verify_script.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/verify_script.cpp'; fi`

bench/bench_bench_bitcoin-coin_selection.o: bench/coin_selection.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-coin_selection.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-coin_selection.Tpo -c -o bench/bench_bench_bitcoin-coin_selection.o `test -f 'bench/coin_selection.cpp' || echo '$(srcdir)/'`bench/coin_selection.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-coin_selection.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-coin_selection.Po
#	$(AM_V_CXX)source='bench/coin_selection.cpp' object='bench/bench_bench_bitcoin-coin_selection.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-coin_selection.o `test -f 'bench/coin_selection.cpp' || echo '$(srcdir)/'`bench/coin_selection.cpp

bench/bench_bench_bitcoin-coin_selection.obj: bench/coin_selection.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-coin_selection.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-coin_selection.Tpo -c -o bench/bench_bench_bitcoin-coin_selection.obj `if test -f 'bench/coin_selection.cpp'; then $(CYGPATH_W) 'bench/coin_selection.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/coin_selection.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-coin_selection.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-coin_selection.Po
#	$(AM_V_CXX)source='bench/coin_selection.cpp' object='bench/bench_bench_bitcoin-coin_selection.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-coin_selection.obj `if test -f 'bench/coin_selection.cpp'; then $(CYGPATH_W) 'bench/coin_selection.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/coin_selection.cpp'; fi`

bench/bench_bench_bitcoin-wallet_balance.o: bench/wallet_balance.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-wallet_balance.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-wallet_balance.Tpo -c -o bench/bench_bench_bitcoin-wallet_balance.o `test -f 'bench/wallet_balance.cpp' || echo '$(srcdir)/'`bench/wallet_balance.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-wallet_balance.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-wallet_balance.Po
#	$(AM_V_CXX)source='bench/wallet_balance.cpp' object='bench/bench_bench_bitcoin-wallet_balance.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-wallet_balance.o `test -f 'bench/wallet_balance.cpp' || echo '$(srcdir)/'`bench/wallet_balance.cpp

bench/bench_bench_bitcoin-wallet_balance.obj: bench/wallet_balance.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-wallet_balance.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-wallet_balance.Tpo -c -o bench/bench_bench_bitcoin-wallet_balance.obj `if test -f 'bench/wallet_balance.cpp'; then $(CYGPATH_W) 'bench/wallet_balance.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/wallet_balance.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-wallet_balance.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-wallet_balance.Po
#	$(AM_V_CXX)source='bench/wallet_balance.cpp' object='bench/bench_bench_bitcoin-wallet_balance.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-wallet_balance.obj `if test -f 'bench/wallet_balance.cpp'; then $(CYGPATH_W) 'bench/wallet_balance.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/wallet_balance.cpp'; fi`

bench/bench_bench_bitcoin-wallet_loading.o: bench/wallet_loading.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-wallet_loading.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-wallet_loading.Tpo -c -o bench/bench_bench_bitcoin-wallet_loading.o `test -f 'bench/wallet_loading.cpp' || echo '$(srcdir)/'`bench/wallet_loading.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-wallet_loading.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-wallet_loading.Po
#	$(AM_V_CXX)source='bench/wallet_loading.cpp' object='bench/bench_bench_bitcoin-wallet_loading.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-wallet_loading.o `test -f 'bench/wallet_loading.cpp' || echo '$(srcdir)/'`bench/wallet_loading.cpp

bench/bench_bench_bitcoin-wallet_loading.obj: bench/wallet_loading.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-wallet_loading.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-wallet_loading.Tpo -c -o bench/bench_bench_bitcoin-wallet_loading.obj `if test -f 'bench/wallet_loading.cpp'; then $(CYGPATH_W) 'bench/wallet_loading.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/wallet_loading.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-wallet_loading.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-wallet_loading.Po
#	$(AM_V_CXX)source='bench/wallet_loading.cpp' object='bench/bench_bench_bitcoin-wallet_loading.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-wallet_loading.obj `if test -f 'bench/wallet_loading.cpp'; then $(CYGPATH_W) 'bench/wallet_loading.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/wallet_loading.cpp'; fi`

bitcoin_chainstate-bitcoin-chainstate.o: bitcoin-chainstate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_chainstate_CPPFLAGS) $(CPPFLAGS) $(bitcoin_chainstate_CXXFLAGS) $(CXXFLAGS) -MT bitcoin_chainstate-bitcoin-chainstate.o -MD -MP -MF $(DEPDIR)/bitcoin_chainstate-bitcoin-chainstate.Tpo -c -o bitcoin_chainstate-bitcoin-chainstate.o `test -f 'bitcoin-chainstate.cpp' || echo '$(srcdir)/'`bitcoin-chainstate.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/bitcoin_chainstate-bitcoin-chainstate.Tpo $(DEPDIR)/bitcoin_chainstate-bitcoin-chainstate.Po
#	$(AM_V_CXX)source='bitcoin-chainstate.cpp' object='bitcoin_chainstate-bitcoin-chainstate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_chainstate_CPPFLAGS) $(CPPFLAGS) $(bitcoin_chainstate_CXXFLAGS) $(CXXFLAGS) -c -o bitcoin_chainstate-bitcoin-chainstate.o `test -f 'bitcoin-chainstate.cpp' || echo '$(srcdir)/'`bitcoin-chainstate.cpp

bitcoin_chainstate-bitcoin-chainstate.obj: bitcoin-chainstate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_chainstate_CPPFLAGS) $(CPPFLAGS) $(bitcoin_chainstate_CXXFLAGS) $(CXXFLAGS) -MT bitcoin_chainstate-bitcoin-chainstate.obj -MD -MP -MF $(DEPDIR)/bitcoin_chainstate-bitcoin-chainstate.Tpo -c -o bitcoin_chainstate-bitcoin-chainstate.obj `if test -f 'bitcoin-chainstate.cpp'; then $(CYGPATH_W) 'bitcoin-chainstate.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoin-chainstate.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bitcoin_chainstate-bitcoin-chainstate.Tpo $(DEPDIR)/bitcoin_chainstate-bitcoin-chainstate.Po
#	$(AM_V_CXX)source='bitcoin-chainstate.cpp' object='bitcoin_chainstate-bitcoin-chainstate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_chainstate_CPPFLAGS) $(CPPFLAGS) $(bitcoin_chainstate_CXXFLAGS) $(CXXFLAGS) -c -o bitcoin_chainstate-bitcoin-chainstate.obj `if test -f 'bitcoin-chainstate.cpp'; then $(CYGPATH_W) 'bitcoin-chainstate.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoin-chainstate.cpp'; fi`

bitcoin_cli-bitcoin-cli.o: bitcoin-cli.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_cli_CPPFLAGS) $(CPPFLAGS) $(bitcoin_cli_CXXFLAGS) $(CXXFLAGS) -MT bitcoin_cli-bitcoin-cli.o -MD -MP -MF $(DEPDIR)/bitcoin_cli-bitcoin-cli.Tpo -c -o bitcoin_cli-bitcoin-cli.o `test -f 'bitcoin-cli.cpp' || echo '$(srcdir)/'`bitcoin-cli.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/bitcoin_cli-bitcoin-cli.Tpo $(DEPDIR)/bitcoin_cli-bitcoin-cli.Po
#	$(AM_V_CXX)source='bitcoin-cli.cpp' object='bitcoin_cli-bitcoin-cli.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_cli_CPPFLAGS) $(CPPFLAGS) $(bitcoin_cli_CXXFLAGS) $(CXXFLAGS) -c -o bitcoin_cli-bitcoin-cli.o `test -f 'bitcoin-cli.cpp' || echo '$(srcdir)/'`bitcoin-cli.cpp

bitcoin_cli-bitcoin-cli.obj: bitcoin-cli.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_cli_CPPFLAGS) $(CPPFLAGS) $(bitcoin_cli_CXXFLAGS) $(CXXFLAGS) -MT bitcoin_cli-bitcoin-cli.obj -MD -MP -MF $(DEPDIR)/bitcoin_cli-bitcoin-cli.Tpo -c -o bitcoin_cli-bitcoin-cli.obj `if test -f 'bitcoin-cli.cpp'; then $(CYGPATH_W) 'bitcoin-cli.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoin-cli.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bitcoin_cli-bitcoin-cli.Tpo $(DEPDIR)/bitcoin_cli-bitcoin-cli.Po
#	$(AM_V_CXX)source='bitcoin-cli.cpp' object='bitcoin_cli-bitcoin-cli.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_cli_CPPFLAGS) $(CPPFLAGS) $(bitcoin_cli_CXXFLAGS) $(CXXFLAGS) -c -o bitcoin_cli-bitcoin-cli.obj `if test -f 'bitcoin-cli.cpp'; then $(CYGPATH_W) 'bitcoin-cli.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoin-cli.cpp'; fi`

qt/bitcoin_gui-main.o: qt/main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_gui_CPPFLAGS) $(CPPFLAGS) $(bitcoin_gui_CXXFLAGS) $(CXXFLAGS) -MT qt/bitcoin_gui-main.o -MD -MP -MF qt/$(DEPDIR)/bitcoin_gui-main.Tpo -c -o qt/bitcoin_gui-main.o `test -f 'qt/main.cpp' || echo '$(srcdir)/'`qt/main.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/bitcoin_gui-main.Tpo qt/$(DEPDIR)/bitcoin_gui-main.Po
#	$(AM_V_CXX)source='qt/main.cpp' object='qt/bitcoin_gui-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_gui_CPPFLAGS) $(CPPFLAGS) $(bitcoin_gui_CXXFLAGS) $(CXXFLAGS) -c -o qt/bitcoin_gui-main.o `test -f 'qt/main.cpp' || echo '$(srcdir)/'`qt/main.cpp

qt/bitcoin_gui-main.obj: qt/main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_gui_CPPFLAGS) $(CPPFLAGS) $(bitcoin_gui_CXXFLAGS) $(CXXFLAGS) -MT qt/bitcoin_gui-main.obj -MD -MP -MF qt/$(DEPDIR)/bitcoin_gui-main.Tpo -c -o qt/bitcoin_gui-main.obj `if test -f 'qt/main.cpp'; then $(CYGPATH_W) 'qt/main.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/main.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/bitcoin_gui-main.Tpo qt/$(DEPDIR)/bitcoin_gui-main.Po
#	$(AM_V_CXX)source='qt/main.cpp' object='qt/bitcoin_gui-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_gui_CPPFLAGS) $(CPPFLAGS) $(bitcoin_gui_CXXFLAGS) $(CXXFLAGS) -c -o qt/bitcoin_gui-main.obj `if test -f 'qt/main.cpp'; then $(CYGPATH_W) 'qt/main.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/main.cpp'; fi`

init/bitcoin_gui-bitcoin-gui.o: init/bitcoin-gui.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_gui_CPPFLAGS) $(CPPFLAGS) $(bitcoin_gui_CXXFLAGS) $(CXXFLAGS) -MT init/bitcoin_gui-bitcoin-gui.o -MD -MP -MF init/$(DEPDIR)/bitcoin_gui-bitcoin-gui.Tpo -c -o init/bitcoin_gui-bitcoin-gui.o `test -f 'init/bitcoin-gui.cpp' || echo '$(srcdir)/'`init/bitcoin-gui.cpp
	$(AM_V_at)$(am__mv) init/$(DEPDIR)/bitcoin_gui-bitcoin-gui.Tpo init/$(DEPDIR)/bitcoin_gui-bitcoin-gui.Po
#	$(AM_V_CXX)source='init/bitcoin-gui.cpp' object='init/bitcoin_gui-bitcoin-gui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_gui_CPPFLAGS) $(CPPFLAGS) $(bitcoin_gui_CXXFLAGS) $(CXXFLAGS) -c -o init/bitcoin_gui-bitcoin-gui.o `test -f 'init/bitcoin-gui.cpp' || echo '$(srcdir)/'`init/bitcoin-gui.cpp

init/bitcoin_gui-bitcoin-gui.obj: init/bitcoin-gui.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_gui_CPPFLAGS) $(CPPFLAGS) $(bitcoin_gui_CXXFLAGS) $(CXXFLAGS) -MT init/bitcoin_gui-bitcoin-gui.obj -MD -MP -MF init/$(DEPDIR)/bitcoin_gui-bitcoin-gui.Tpo -c -o init/bitcoin_gui-bitcoin-gui.obj `if test -f 'init/bitcoin-gui.cpp'; then $(CYGPATH_W) 'init/bitcoin-gui.cpp'; else $(CYGPATH_W) '$(srcdir)/init/bitcoin-gui.cpp'; fi`
	$(AM_V_at)$(am__mv) init/$(DEPDIR)/bitcoin_gui-bitcoin-gui.Tpo init/$(DEPDIR)/bitcoin_gui-bitcoin-gui.Po
#	$(AM_V_CXX)source='init/bitcoin-gui.cpp' object='init/bitcoin_gui-bitcoin-gui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_gui_CPPFLAGS) $(CPPFLAGS) $(bitcoin_gui_CXXFLAGS) $(CXXFLAGS) -c -o init/bitcoin_gui-bitcoin-gui.obj `if test -f 'init/bitcoin-gui.cpp'; then $(CYGPATH_W) 'init/bitcoin-gui.cpp'; else $(CYGPATH_W) '$(srcdir)/init/bitcoin-gui.cpp'; fi`

bitcoin_node-bitcoind.o: bitcoind.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_node_CPPFLAGS) $(CPPFLAGS) $(bitcoin_node_CXXFLAGS) $(CXXFLAGS) -MT bitcoin_node-bitcoind.o -MD -MP -MF $(DEPDIR)/bitcoin_node-bitcoind.Tpo -c -o bitcoin_node-bitcoind.o `test -f 'bitcoind.cpp' || echo '$(srcdir)/'`bitcoind.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/bitcoin_node-bitcoind.Tpo $(DEPDIR)/bitcoin_node-bitcoind.Po
#	$(AM_V_CXX)source='bitcoind.cpp' object='bitcoin_node-bitcoind.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_node_CPPFLAGS) $(CPPFLAGS) $(bitcoin_node_CXXFLAGS) $(CXXFLAGS) -c -o bitcoin_node-bitcoind.o `test -f 'bitcoind.cpp' || echo '$(srcdir)/'`bitcoind.cpp

bitcoin_node-bitcoind.obj: bitcoind.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_node_CPPFLAGS) $(CPPFLAGS) $(bitcoin_node_CXXFLAGS) $(CXXFLAGS) -MT bitcoin_node-bitcoind.obj -MD -MP -MF $(DEPDIR)/bitcoin_node-bitcoind.Tpo -c -o bitcoin_node-bitcoind.obj `if test -f 'bitcoind.cpp'; then $(CYGPATH_W) 'bitcoind.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoind.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bitcoin_node-bitcoind.Tpo $(DEPDIR)/bitcoin_node-bitcoind.Po
#	$(AM_V_CXX)source='bitcoind.cpp' object='bitcoin_node-bitcoind.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_node_CPPFLAGS) $(CPPFLAGS) $(bitcoin_node_CXXFLAGS) $(CXXFLAGS) -c -o bitcoin_node-bitcoind.obj `if test -f 'bitcoind.cpp'; then $(CYGPATH_W) 'bitcoind.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoind.cpp'; fi`

init/bitcoin_node-bitcoin-node.o: init/bitcoin-node.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_node_CPPFLAGS) $(CPPFLAGS) $(bitcoin_node_CXXFLAGS) $(CXXFLAGS) -MT init/bitcoin_node-bitcoin-node.o -MD -MP -MF init/$(DEPDIR)/bitcoin_node-bitcoin-node.Tpo -c -o init/bitcoin_node-bitcoin-node.o `test -f 'init/bitcoin-node.cpp' || echo '$(srcdir)/'`init/bitcoin-node.cpp
	$(AM_V_at)$(am__mv) init/$(DEPDIR)/bitcoin_node-bitcoin-node.Tpo init/$(DEPDIR)/bitcoin_node-bitcoin-node.Po
#	$(AM_V_CXX)source='init/bitcoin-node.cpp' object='init/bitcoin_node-bitcoin-node.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_node_CPPFLAGS) $(CPPFLAGS) $(bitcoin_node_CXXFLAGS) $(CXXFLAGS) -c -o init/bitcoin_node-bitcoin-node.o `test -f 'init/bitcoin-node.cpp' || echo '$(srcdir)/'`init/bitcoin-node.cpp

init/bitcoin_node-bitcoin-node.obj: init/bitcoin-node.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_node_CPPFLAGS) $(CPPFLAGS) $(bitcoin_node_CXXFLAGS) $(CXXFLAGS) -MT init/bitcoin_node-bitcoin-node.obj -MD -MP -MF init/$(DEPDIR)/bitcoin_node-bitcoin-node.Tpo -c -o init/bitcoin_node-bitcoin-node.obj `if test -f 'init/bitcoin-node.cpp'; then $(CYGPATH_W) 'init/bitcoin-node.cpp'; else $(CYGPATH_W) '$(srcdir)/init/bitcoin-node.cpp'; fi`
	$(AM_V_at)$(am__mv) init/$(DEPDIR)/bitcoin_node-bitcoin-node.Tpo init/$(DEPDIR)/bitcoin_node-bitcoin-node.Po
#	$(AM_V_CXX)source='init/bitcoin-node.cpp' object='init/bitcoin_node-bitcoin-node.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_node_CPPFLAGS) $(CPPFLAGS) $(bitcoin_node_CXXFLAGS) $(CXXFLAGS) -c -o init/bitcoin_node-bitcoin-node.obj `if test -f 'init/bitcoin-node.cpp'; then $(CYGPATH_W) 'init/bitcoin-node.cpp'; else $(CYGPATH_W) '$(srcdir)/init/bitcoin-node.cpp'; fi`

bitcoin_tx-bitcoin-tx.o: bitcoin-tx.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_tx_CPPFLAGS) $(CPPFLAGS) $(bitcoin_tx_CXXFLAGS) $(CXXFLAGS) -MT bitcoin_tx-bitcoin-tx.o -MD -MP -MF $(DEPDIR)/bitcoin_tx-bitcoin-tx.Tpo -c -o bitcoin_tx-bitcoin-tx.o `test -f 'bitcoin-tx.cpp' || echo '$(srcdir)/'`bitcoin-tx.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/bitcoin_tx-bitcoin-tx.Tpo $(DEPDIR)/bitcoin_tx-bitcoin-tx.Po
#	$(AM_V_CXX)source='bitcoin-tx.cpp' object='bitcoin_tx-bitcoin-tx.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_tx_CPPFLAGS) $(CPPFLAGS) $(bitcoin_tx_CXXFLAGS) $(CXXFLAGS) -c -o bitcoin_tx-bitcoin-tx.o `test -f 'bitcoin-tx.cpp' || echo '$(srcdir)/'`bitcoin-tx.cpp

bitcoin_tx-bitcoin-tx.obj: bitcoin-tx.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_tx_CPPFLAGS) $(CPPFLAGS) $(bitcoin_tx_CXXFLAGS) $(CXXFLAGS) -MT bitcoin_tx-bitcoin-tx.obj -MD -MP -MF $(DEPDIR)/bitcoin_tx-bitcoin-tx.Tpo -c -o bitcoin_tx-bitcoin-tx.obj `if test -f 'bitcoin-tx.cpp'; then $(CYGPATH_W) 'bitcoin-tx.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoin-tx.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bitcoin_tx-bitcoin-tx.Tpo $(DEPDIR)/bitcoin_tx-bitcoin-tx.Po
#	$(AM_V_CXX)source='bitcoin-tx.cpp' object='bitcoin_tx-bitcoin-tx.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_tx_CPPFLAGS) $(CPPFLAGS) $(bitcoin_tx_CXXFLAGS) $(CXXFLAGS) -c -o bitcoin_tx-bitcoin-tx.obj `if test -f 'bitcoin-tx.cpp'; then $(CYGPATH_W) 'bitcoin-tx.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoin-tx.cpp'; fi`

bitcoin_util-bitcoin-util.o: bitcoin-util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_util_CPPFLAGS) $(CPPFLAGS) $(bitcoin_util_CXXFLAGS) $(CXXFLAGS) -MT bitcoin_util-bitcoin-util.o -MD -MP -MF $(DEPDIR)/bitcoin_util-bitcoin-util.Tpo -c -o bitcoin_util-bitcoin-util.o `test -f 'bitcoin-util.cpp' || echo '$(srcdir)/'`bitcoin-util.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/bitcoin_util-bitcoin-util.Tpo $(DEPDIR)/bitcoin_util-bitcoin-util.Po
#	$(AM_V_CXX)source='bitcoin-util.cpp' object='bitcoin_util-bitcoin-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_util_CPPFLAGS) $(CPPFLAGS) $(bitcoin_util_CXXFLAGS) $(CXXFLAGS) -c -o bitcoin_util-bitcoin-util.o `test -f 'bitcoin-util.cpp' || echo '$(srcdir)/'`bitcoin-util.cpp

bitcoin_util-bitcoin-util.obj: bitcoin-util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_util_CPPFLAGS) $(CPPFLAGS) $(bitcoin_util_CXXFLAGS) $(CXXFLAGS) -MT bitcoin_util-bitcoin-util.obj -MD -MP -MF $(DEPDIR)/bitcoin_util-bitcoin-util.Tpo -c -o bitcoin_util-bitcoin-util.obj `if test -f 'bitcoin-util.cpp'; then $(CYGPATH_W) 'bitcoin-util.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoin-util.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bitcoin_util-bitcoin-util.Tpo $(DEPDIR)/bitcoin_util-bitcoin-util.Po
#	$(AM_V_CXX)source='bitcoin-util.cpp' object='bitcoin_util-bitcoin-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_util_CPPFLAGS) $(CPPFLAGS) $(bitcoin_util_CXXFLAGS) $(CXXFLAGS) -c -o bitcoin_util-bitcoin-util.obj `if test -f 'bitcoin-util.cpp'; then $(CYGPATH_W) 'bitcoin-util.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoin-util.cpp'; fi`

bitcoin_wallet-bitcoin-wallet.o: bitcoin-wallet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_wallet_CPPFLAGS) $(CPPFLAGS) $(bitcoin_wallet_CXXFLAGS) $(CXXFLAGS) -MT bitcoin_wallet-bitcoin-wallet.o -MD -MP -MF $(DEPDIR)/bitcoin_wallet-bitcoin-wallet.Tpo -c -o bitcoin_wallet-bitcoin-wallet.o `test -f 'bitcoin-wallet.cpp' || echo '$(srcdir)/'`bitcoin-wallet.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/bitcoin_wallet-bitcoin-wallet.Tpo $(DEPDIR)/bitcoin_wallet-bitcoin-wallet.Po
#	$(AM_V_CXX)source='bitcoin-wallet.cpp' object='bitcoin_wallet-bitcoin-wallet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_wallet_CPPFLAGS) $(CPPFLAGS) $(bitcoin_wallet_CXXFLAGS) $(CXXFLAGS) -c -o bitcoin_wallet-bitcoin-wallet.o `test -f 'bitcoin-wallet.cpp' || echo '$(srcdir)/'`bitcoin-wallet.cpp

bitcoin_wallet-bitcoin-wallet.obj: bitcoin-wallet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_wallet_CPPFLAGS) $(CPPFLAGS) $(bitcoin_wallet_CXXFLAGS) $(CXXFLAGS) -MT bitcoin_wallet-bitcoin-wallet.obj -MD -MP -MF $(DEPDIR)/bitcoin_wallet-bitcoin-wallet.Tpo -c -o bitcoin_wallet-bitcoin-wallet.obj `if test -f 'bitcoin-wallet.cpp'; then $(CYGPATH_W) 'bitcoin-wallet.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoin-wallet.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bitcoin_wallet-bitcoin-wallet.Tpo $(DEPDIR)/bitcoin_wallet-bitcoin-wallet.Po
#	$(AM_V_CXX)source='bitcoin-wallet.cpp' object='bitcoin_wallet-bitcoin-wallet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_wallet_CPPFLAGS) $(CPPFLAGS) $(bitcoin_wallet_CXXFLAGS) $(CXXFLAGS) -c -o bitcoin_wallet-bitcoin-wallet.obj `if test -f 'bitcoin-wallet.cpp'; then $(CYGPATH_W) 'bitcoin-wallet.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoin-wallet.cpp'; fi`

init/bitcoin_wallet-bitcoin-wallet.o: init/bitcoin-wallet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_wallet_CPPFLAGS) $(CPPFLAGS) $(bitcoin_wallet_CXXFLAGS) $(CXXFLAGS) -MT init/bitcoin_wallet-bitcoin-wallet.o -MD -MP -MF init/$(DEPDIR)/bitcoin_wallet-bitcoin-wallet.Tpo -c -o init/bitcoin_wallet-bitcoin-wallet.o `test -f 'init/bitcoin-wallet.cpp' || echo '$(srcdir)/'`init/bitcoin-wallet.cpp
	$(AM_V_at)$(am__mv) init/$(DEPDIR)/bitcoin_wallet-bitcoin-wallet.Tpo init/$(DEPDIR)/bitcoin_wallet-bitcoin-wallet.Po
#	$(AM_V_CXX)source='init/bitcoin-wallet.cpp' object='init/bitcoin_wallet-bitcoin-wallet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_wallet_CPPFLAGS) $(CPPFLAGS) $(bitcoin_wallet_CXXFLAGS) $(CXXFLAGS) -c -o init/bitcoin_wallet-bitcoin-wallet.o `test -f 'init/bitcoin-wallet.cpp' || echo '$(srcdir)/'`init/bitcoin-wallet.cpp

init/bitcoin_wallet-bitcoin-wallet.obj: init/bitcoin-wallet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_wallet_CPPFLAGS) $(CPPFLAGS) $(bitcoin_wallet_CXXFLAGS) $(CXXFLAGS) -MT init/bitcoin_wallet-bitcoin-wallet.obj -MD -MP -MF init/$(DEPDIR)/bitcoin_wallet-bitcoin-wallet.Tpo -c -o init/bitcoin_wallet-bitcoin-wallet.obj `if test -f 'init/bitcoin-wallet.cpp'; then $(CYGPATH_W) 'init/bitcoin-wallet.cpp'; else $(CYGPATH_W) '$(srcdir)/init/bitcoin-wallet.cpp'; fi`
	$(AM_V_at)$(am__mv) init/$(DEPDIR)/bitcoin_wallet-bitcoin-wallet.Tpo init/$(DEPDIR)/bitcoin_wallet-bitcoin-wallet.Po
#	$(AM_V_CXX)source='init/bitcoin-wallet.cpp' object='init/bitcoin_wallet-bitcoin-wallet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_wallet_CPPFLAGS) $(CPPFLAGS) $(bitcoin_wallet_CXXFLAGS) $(CXXFLAGS) -c -o init/bitcoin_wallet-bitcoin-wallet.obj `if test -f 'init/bitcoin-wallet.cpp'; then $(CYGPATH_W) 'init/bitcoin-wallet.cpp'; else $(CYGPATH_W) '$(srcdir)/init/bitcoin-wallet.cpp'; fi`

bitcoind-bitcoind.o: bitcoind.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoind_CPPFLAGS) $(CPPFLAGS) $(bitcoind_CXXFLAGS) $(CXXFLAGS) -MT bitcoind-bitcoind.o -MD -MP -MF $(DEPDIR)/bitcoind-bitcoind.Tpo -c -o bitcoind-bitcoind.o `test -f 'bitcoind.cpp' || echo '$(srcdir)/'`bitcoind.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/bitcoind-bitcoind.Tpo $(DEPDIR)/bitcoind-bitcoind.Po
#	$(AM_V_CXX)source='bitcoind.cpp' object='bitcoind-bitcoind.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoind_CPPFLAGS) $(CPPFLAGS) $(bitcoind_CXXFLAGS) $(CXXFLAGS) -c -o bitcoind-bitcoind.o `test -f 'bitcoind.cpp' || echo '$(srcdir)/'`bitcoind.cpp

bitcoind-bitcoind.obj: bitcoind.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoind_CPPFLAGS) $(CPPFLAGS) $(bitcoind_CXXFLAGS) $(CXXFLAGS) -MT bitcoind-bitcoind.obj -MD -MP -MF $(DEPDIR)/bitcoind-bitcoind.Tpo -c -o bitcoind-bitcoind.obj `if test -f 'bitcoind.cpp'; then $(CYGPATH_W) 'bitcoind.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoind.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bitcoind-bitcoind.Tpo $(DEPDIR)/bitcoind-bitcoind.Po
#	$(AM_V_CXX)source='bitcoind.cpp' object='bitcoind-bitcoind.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoind_CPPFLAGS) $(CPPFLAGS) $(bitcoind_CXXFLAGS) $(CXXFLAGS) -c -o bitcoind-bitcoind.obj `if test -f 'bitcoind.cpp'; then $(CYGPATH_W) 'bitcoind.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoind.cpp'; fi`

init/bitcoind-bitcoind.o: init/bitcoind.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoind_CPPFLAGS) $(CPPFLAGS) $(bitcoind_CXXFLAGS) $(CXXFLAGS) -MT init/bitcoind-bitcoind.o -MD -MP -MF init/$(DEPDIR)/bitcoind-bitcoind.Tpo -c -o init/bitcoind-bitcoind.o `test -f 'init/bitcoind.cpp' || echo '$(srcdir)/'`init/bitcoind.cpp
	$(AM_V_at)$(am__mv) init/$(DEPDIR)/bitcoind-bitcoind.Tpo init/$(DEPDIR)/bitcoind-bitcoind.Po
#	$(AM_V_CXX)source='init/bitcoind.cpp' object='init/bitcoind-bitcoind.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoind_CPPFLAGS) $(CPPFLAGS) $(bitcoind_CXXFLAGS) $(CXXFLAGS) -c -o init/bitcoind-bitcoind.o `test -f 'init/bitcoind.cpp' || echo '$(srcdir)/'`init/bitcoind.cpp

init/bitcoind-bitcoind.obj: init/bitcoind.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoind_CPPFLAGS) $(CPPFLAGS) $(bitcoind_CXXFLAGS) $(CXXFLAGS) -MT init/bitcoind-bitcoind.obj -MD -MP -MF init/$(DEPDIR)/bitcoind-bitcoind.Tpo -c -o init/bitcoind-bitcoind.obj `if test -f 'init/bitcoind.cpp'; then $(CYGPATH_W) 'init/bitcoind.cpp'; else $(CYGPATH_W) '$(srcdir)/init/bitcoind.cpp'; fi`
	$(AM_V_at)$(am__mv) init/$(DEPDIR)/bitcoind-bitcoind.Tpo init/$(DEPDIR)/bitcoind-bitcoind.Po
#	$(AM_V_CXX)source='init/bitcoind.cpp' object='init/bitcoind-bitcoind.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoind_CPPFLAGS) $(CPPFLAGS) $(bitcoind_CXXFLAGS) $(CXXFLAGS) -c -o init/bitcoind-bitcoind.obj `if test -f 'init/bitcoind.cpp'; then $(CYGPATH_W) 'init/bitcoind.cpp'; else $(CYGPATH_W) '$(srcdir)/init/bitcoind.cpp'; fi`

minisketch/src/minisketch_test-test.o: minisketch/src/test.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_test_CPPFLAGS) $(CPPFLAGS) $(minisketch_test_CXXFLAGS) $(CXXFLAGS) -MT minisketch/src/minisketch_test-test.o -MD -MP -MF minisketch/src/$(DEPDIR)/minisketch_test-test.Tpo -c -o minisketch/src/minisketch_test-test.o `test -f 'minisketch/src/test.cpp' || echo '$(srcdir)/'`minisketch/src/test.cpp
	$(AM_V_at)$(am__mv) minisketch/src/$(DEPDIR)/minisketch_test-test.Tpo minisketch/src/$(DEPDIR)/minisketch_test-test.Po
#	$(AM_V_CXX)source='minisketch/src/test.cpp' object='minisketch/src/minisketch_test-test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_test_CPPFLAGS) $(CPPFLAGS) $(minisketch_test_CXXFLAGS) $(CXXFLAGS) -c -o minisketch/src/minisketch_test-test.o `test -f 'minisketch/src/test.cpp' || echo '$(srcdir)/'`minisketch/src/test.cpp

minisketch/src/minisketch_test-test.obj: minisketch/src/test.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_test_CPPFLAGS) $(CPPFLAGS) $(minisketch_test_CXXFLAGS) $(CXXFLAGS) -MT minisketch/src/minisketch_test-test.obj -MD -MP -MF minisketch/src/$(DEPDIR)/minisketch_test-test.Tpo -c -o minisketch/src/minisketch_test-test.obj `if test -f 'minisketch/src/test.cpp'; then $(CYGPATH_W) 'minisketch/src/test.cpp'; else $(CYGPATH_W) '$(srcdir)/minisketch/src/test.cpp'; fi`
	$(AM_V_at)$(am__mv) minisketch/src/$(DEPDIR)/minisketch_test-test.Tpo minisketch/src/$(DEPDIR)/minisketch_test-test.Po
#	$(AM_V_CXX)source='minisketch/src/test.cpp' object='minisketch/src/minisketch_test-test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minisketch_test_CPPFLAGS) $(CPPFLAGS) $(minisketch_test_CXXFLAGS) $(CXXFLAGS) -c -o minisketch/src/minisketch_test-test.obj `if test -f 'minisketch/src/test.cpp'; then $(CYGPATH_W) 'minisketch/src/test.cpp'; else $(CYGPATH_W) '$(srcdir)/minisketch/src/test.cpp'; fi`

qt/qt_bitcoin_qt-main.o: qt/main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_bitcoin_qt-main.o -MD -MP -MF qt/$(DEPDIR)/qt_bitcoin_qt-main.Tpo -c -o qt/qt_bitcoin_qt-main.o `test -f 'qt/main.cpp' || echo '$(srcdir)/'`qt/main.cpp
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_bitcoin_qt-main.Tpo qt/$(DEPDIR)/qt_bitcoin_qt-main.Po
#	$(AM_V_CXX)source='qt/main.cpp' object='qt/qt_bitcoin_qt-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_bitcoin_qt-main.o `test -f 'qt/main.cpp' || echo '$(srcdir)/'`qt/main.cpp

qt/qt_bitcoin_qt-main.obj: qt/main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/qt_bitcoin_qt-main.obj -MD -MP -MF qt/$(DEPDIR)/qt_bitcoin_qt-main.Tpo -c -o qt/qt_bitcoin_qt-main.obj `if test -f 'qt/main.cpp'; then $(CYGPATH_W) 'qt/main.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/main.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_bitcoin_qt-main.Tpo qt/$(DEPDIR)/qt_bitcoin_qt-main.Po
#	$(AM_V_CXX)source='qt/main.cpp' object='qt/qt_bitcoin_qt-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/qt_bitcoin_qt-main.obj `if test -f 'qt/main.cpp'; then $(CYGPATH_W) 'qt/main.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/main.cpp'; fi`

init/qt_bitcoin_qt-bitcoin-qt.o: init/bitcoin-qt.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -MT init/qt_bitcoin_qt-bitcoin-qt.o -MD -MP -MF init/$(DEPDIR)/qt_bitcoin_qt-bitcoin-qt.Tpo -c -o init/qt_bitcoin_qt-bitcoin-qt.o `test -f 'init/bitcoin-qt.cpp' || echo '$(srcdir)/'`init/bitcoin-qt.cpp
	$(AM_V_at)$(am__mv) init/$(DEPDIR)/qt_bitcoin_qt-bitcoin-qt.Tpo init/$(DEPDIR)/qt_bitcoin_qt-bitcoin-qt.Po
#	$(AM_V_CXX)source='init/bitcoin-qt.cpp' object='init/qt_bitcoin_qt-bitcoin-qt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o init/qt_bitcoin_qt-bitcoin-qt.o `test -f 'init/bitcoin-qt.cpp' || echo '$(srcdir)/'`init/bitcoin-qt.cpp

init/qt_bitcoin_qt-bitcoin-qt.obj: init/bitcoin-qt.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -MT init/qt_bitcoin_qt-bitcoin-qt.obj -MD -MP -MF init/$(DEPDIR)/qt_bitcoin_qt-bitcoin-qt.Tpo -c -o init/qt_bitcoin_qt-bitcoin-qt.obj `if test -f 'init/bitcoin-qt.cpp'; then $(CYGPATH_W) 'init/bitcoin-qt.cpp'; else $(CYGPATH_W) '$(srcdir)/init/bitcoin-qt.cpp'; fi`
	$(AM_V_at)$(am__mv) init/$(DEPDIR)/qt_bitcoin_qt-bitcoin-qt.Tpo init/$(DEPDIR)/qt_bitcoin_qt-bitcoin-qt.Po
#	$(AM_V_CXX)source='init/bitcoin-qt.cpp' object='init/qt_bitcoin_qt-bitcoin-qt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o init/qt_bitcoin_qt-bitcoin-qt.obj `if test -f 'init/bitcoin-qt.cpp'; then $(CYGPATH_W) 'init/bitcoin-qt.cpp'; else $(CYGPATH_W) '$(srcdir)/init/bitcoin-qt.cpp'; fi`

init/qt_test_test_bitcoin_qt-bitcoin-qt.o: init/bitcoin-qt.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -MT init/qt_test_test_bitcoin_qt-bitcoin-qt.o -MD -MP -MF init/$(DEPDIR)/qt_test_test_bitcoin_qt-bitcoin-qt.Tpo -c -o init/qt_test_test_bitcoin_qt-bitcoin-qt.o `test -f 'init/bitcoin-qt.cpp' || echo '$(srcdir)/'`init/bitcoin-qt.cpp
	$(AM_V_at)$(am__mv) init/$(DEPDIR)/qt_test_test_bitcoin_qt-bitcoin-qt.Tpo init/$(DEPDIR)/qt_test_test_bitcoin_qt-bitcoin-qt.Po
#	$(AM_V_CXX)source='init/bitcoin-qt.cpp' object='init/qt_test_test_bitcoin_qt-bitcoin-qt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o init/qt_test_test_bitcoin_qt-bitcoin-qt.o `test -f 'init/bitcoin-qt.cpp' || echo '$(srcdir)/'`init/bitcoin-qt.cpp

init/qt_test_test_bitcoin_qt-bitcoin-qt.obj: init/bitcoin-qt.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -MT init/qt_test_test_bitcoin_qt-bitcoin-qt.obj -MD -MP -MF init/$(DEPDIR)/qt_test_test_bitcoin_qt-bitcoin-qt.Tpo -c -o init/qt_test_test_bitcoin_qt-bitcoin-qt.obj `if test -f 'init/bitcoin-qt.cpp'; then $(CYGPATH_W) 'init/bitcoin-qt.cpp'; else $(CYGPATH_W) '$(srcdir)/init/bitcoin-qt.cpp'; fi`
	$(AM_V_at)$(am__mv) init/$(DEPDIR)/qt_test_test_bitcoin_qt-bitcoin-qt.Tpo init/$(DEPDIR)/qt_test_test_bitcoin_qt-bitcoin-qt.Po
#	$(AM_V_CXX)source='init/bitcoin-qt.cpp' object='init/qt_test_test_bitcoin_qt-bitcoin-qt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o init/qt_test_test_bitcoin_qt-bitcoin-qt.obj `if test -f 'init/bitcoin-qt.cpp'; then $(CYGPATH_W) 'init/bitcoin-qt.cpp'; else $(CYGPATH_W) '$(srcdir)/init/bitcoin-qt.cpp'; fi`

qt/test/qt_test_test_bitcoin_qt-apptests.o: qt/test/apptests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitcoin_qt-apptests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-apptests.Tpo -c -o qt/test/qt_test_test_bitcoin_qt-apptests.o `test -f 'qt/test/apptests.cpp' || echo '$(srcdir)/'`qt/test/apptests.cpp
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-apptests.Tpo qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-apptests.Po
#	$(AM_V_CXX)source='qt/test/apptests.cpp' object='qt/test/qt_test_test_bitcoin_qt-apptests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitcoin_qt-apptests.o `test -f 'qt/test/apptests.cpp' || echo '$(srcdir)/'`qt/test/apptests.cpp

qt/test/qt_test_test_bitcoin_qt-apptests.obj: qt/test/apptests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitcoin_qt-apptests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-apptests.Tpo -c -o qt/test/qt_test_test_bitcoin_qt-apptests.obj `if test -f 'qt/test/apptests.cpp'; then $(CYGPATH_W) 'qt/test/apptests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/apptests.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-apptests.Tpo qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-apptests.Po
#	$(AM_V_CXX)source='qt/test/apptests.cpp' object='qt/test/qt_test_test_bitcoin_qt-apptests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitcoin_qt-apptests.obj `if test -f 'qt/test/apptests.cpp'; then $(CYGPATH_W) 'qt/test/apptests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/apptests.cpp'; fi`

qt/test/qt_test_test_bitcoin_qt-optiontests.o: qt/test/optiontests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitcoin_qt-optiontests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-optiontests.Tpo -c -o qt/test/qt_test_test_bitcoin_qt-optiontests.o `test -f 'qt/test/optiontests.cpp' || echo '$(srcdir)/'`qt/test/optiontests.cpp
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-optiontests.Tpo qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-optiontests.Po
#	$(AM_V_CXX)source='qt/test/optiontests.cpp' object='qt/test/qt_test_test_bitcoin_qt-optiontests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitcoin_qt-optiontests.o `test -f 'qt/test/optiontests.cpp' || echo '$(srcdir)/'`qt/test/optiontests.cpp

qt/test/qt_test_test_bitcoin_qt-optiontests.obj: qt/test/optiontests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitcoin_qt-optiontests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-optiontests.Tpo -c -o qt/test/qt_test_test_bitcoin_qt-optiontests.obj `if test -f 'qt/test/optiontests.cpp'; then $(CYGPATH_W) 'qt/test/optiontests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/optiontests.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-optiontests.Tpo qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-optiontests.Po
#	$(AM_V_CXX)source='qt/test/optiontests.cpp' object='qt/test/qt_test_test_bitcoin_qt-optiontests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitcoin_qt-optiontests.obj `if test -f 'qt/test/optiontests.cpp'; then $(CYGPATH_W) 'qt/test/optiontests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/optiontests.cpp'; fi`

qt/test/qt_test_test_bitcoin_qt-rpcnestedtests.o: qt/test/rpcnestedtests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitcoin_qt-rpcnestedtests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-rpcnestedtests.Tpo -c -o qt/test/qt_test_test_bitcoin_qt-rpcnestedtests.o `test -f 'qt/test/rpcnestedtests.cpp' || echo '$(srcdir)/'`qt/test/rpcnestedtests.cpp
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-rpcnestedtests.Tpo qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-rpcnestedtests.Po
#	$(AM_V_CXX)source='qt/test/rpcnestedtests.cpp' object='qt/test/qt_test_test_bitcoin_qt-rpcnestedtests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitcoin_qt-rpcnestedtests.o `test -f 'qt/test/rpcnestedtests.cpp' || echo '$(srcdir)/'`qt/test/rpcnestedtests.cpp

qt/test/qt_test_test_bitcoin_qt-rpcnestedtests.obj: qt/test/rpcnestedtests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitcoin_qt-rpcnestedtests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-rpcnestedtests.Tpo -c -o qt/test/qt_test_test_bitcoin_qt-rpcnestedtests.obj `if test -f 'qt/test/rpcnestedtests.cpp'; then $(CYGPATH_W) 'qt/test/rpcnestedtests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/rpcnestedtests.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-rpcnestedtests.Tpo qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-rpcnestedtests.Po
#	$(AM_V_CXX)source='qt/test/rpcnestedtests.cpp' object='qt/test/qt_test_test_bitcoin_qt-rpcnestedtests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitcoin_qt-rpcnestedtests.obj `if test -f 'qt/test/rpcnestedtests.cpp'; then $(CYGPATH_W) 'qt/test/rpcnestedtests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/rpcnestedtests.cpp'; fi`

qt/test/qt_test_test_bitcoin_qt-test_main.o: qt/test/test_main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitcoin_qt-test_main.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-test_main.Tpo -c -o qt/test/qt_test_test_bitcoin_qt-test_main.o `test -f 'qt/test/test_main.cpp' || echo '$(srcdir)/'`qt/test/test_main.cpp
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-test_main.Tpo qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-test_main.Po
#	$(AM_V_CXX)source='qt/test/test_main.cpp' object='qt/test/qt_test_test_bitcoin_qt-test_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitcoin_qt-test_main.o `test -f 'qt/test/test_main.cpp' || echo '$(srcdir)/'`qt/test/test_main.cpp

qt/test/qt_test_test_bitcoin_qt-test_main.obj: qt/test/test_main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitcoin_qt-test_main.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-test_main.Tpo -c -o qt/test/qt_test_test_bitcoin_qt-test_main.obj `if test -f 'qt/test/test_main.cpp'; then $(CYGPATH_W) 'qt/test/test_main.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/test_main.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-test_main.Tpo qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-test_main.Po
#	$(AM_V_CXX)source='qt/test/test_main.cpp' object='qt/test/qt_test_test_bitcoin_qt-test_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitcoin_qt-test_main.obj `if test -f 'qt/test/test_main.cpp'; then $(CYGPATH_W) 'qt/test/test_main.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/test_main.cpp'; fi`

qt/test/qt_test_test_bitcoin_qt-uritests.o: qt/test/uritests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitcoin_qt-uritests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-uritests.Tpo -c -o qt/test/qt_test_test_bitcoin_qt-uritests.o `test -f 'qt/test/uritests.cpp' || echo '$(srcdir)/'`qt/test/uritests.cpp
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-uritests.Tpo qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-uritests.Po
#	$(AM_V_CXX)source='qt/test/uritests.cpp' object='qt/test/qt_test_test_bitcoin_qt-uritests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitcoin_qt-uritests.o `test -f 'qt/test/uritests.cpp' || echo '$(srcdir)/'`qt/test/uritests.cpp

qt/test/qt_test_test_bitcoin_qt-uritests.obj: qt/test/uritests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitcoin_qt-uritests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-uritests.Tpo -c -o qt/test/qt_test_test_bitcoin_qt-uritests.obj `if test -f 'qt/test/uritests.cpp'; then $(CYGPATH_W) 'qt/test/uritests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/uritests.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-uritests.Tpo qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-uritests.Po
#	$(AM_V_CXX)source='qt/test/uritests.cpp' object='qt/test/qt_test_test_bitcoin_qt-uritests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitcoin_qt-uritests.obj `if test -f 'qt/test/uritests.cpp'; then $(CYGPATH_W) 'qt/test/uritests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/uritests.cpp'; fi`

qt/test/qt_test_test_bitcoin_qt-util.o: qt/test/util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitcoin_qt-util.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-util.Tpo -c -o qt/test/qt_test_test_bitcoin_qt-util.o `test -f 'qt/test/util.cpp' || echo '$(srcdir)/'`qt/test/util.cpp
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-util.Tpo qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-util.Po
#	$(AM_V_CXX)source='qt/test/util.cpp' object='qt/test/qt_test_test_bitcoin_qt-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitcoin_qt-util.o `test -f 'qt/test/util.cpp' || echo '$(srcdir)/'`qt/test/util.cpp

qt/test/qt_test_test_bitcoin_qt-util.obj: qt/test/util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitcoin_qt-util.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-util.Tpo -c -o qt/test/qt_test_test_bitcoin_qt-util.obj `if test -f 'qt/test/util.cpp'; then $(CYGPATH_W) 'qt/test/util.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/util.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-util.Tpo qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-util.Po
#	$(AM_V_CXX)source='qt/test/util.cpp' object='qt/test/qt_test_test_bitcoin_qt-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitcoin_qt-util.obj `if test -f 'qt/test/util.cpp'; then $(CYGPATH_W) 'qt/test/util.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/util.cpp'; fi`

qt/test/qt_test_test_bitcoin_qt-addressbooktests.o: qt/test/addressbooktests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitcoin_qt-addressbooktests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-addressbooktests.Tpo -c -o qt/test/qt_test_test_bitcoin_qt-addressbooktests.o `test -f 'qt/test/addressbooktests.cpp' || echo '$(srcdir)/'`qt/test/addressbooktests.cpp
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-addressbooktests.Tpo qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-addressbooktests.Po
#	$(AM_V_CXX)source='qt/test/addressbooktests.cpp' object='qt/test/qt_test_test_bitcoin_qt-addressbooktests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitcoin_qt-addressbooktests.o `test -f 'qt/test/addressbooktests.cpp' || echo '$(srcdir)/'`qt/test/addressbooktests.cpp

qt/test/qt_test_test_bitcoin_qt-addressbooktests.obj: qt/test/addressbooktests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitcoin_qt-addressbooktests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-addressbooktests.Tpo -c -o qt/test/qt_test_test_bitcoin_qt-addressbooktests.obj `if test -f 'qt/test/addressbooktests.cpp'; then $(CYGPATH_W) 'qt/test/addressbooktests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/addressbooktests.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-addressbooktests.Tpo qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-addressbooktests.Po
#	$(AM_V_CXX)source='qt/test/addressbooktests.cpp' object='qt/test/qt_test_test_bitcoin_qt-addressbooktests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitcoin_qt-addressbooktests.obj `if test -f 'qt/test/addressbooktests.cpp'; then $(CYGPATH_W) 'qt/test/addressbooktests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/addressbooktests.cpp'; fi`

qt/test/qt_test_test_bitcoin_qt-wallettests.o: qt/test/wallettests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitcoin_qt-wallettests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-wallettests.Tpo -c -o qt/test/qt_test_test_bitcoin_qt-wallettests.o `test -f 'qt/test/wallettests.cpp' || echo '$(srcdir)/'`qt/test/wallettests.cpp
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-wallettests.Tpo qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-wallettests.Po
#	$(AM_V_CXX)source='qt/test/wallettests.cpp' object='qt/test/qt_test_test_bitcoin_qt-wallettests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitcoin_qt-wallettests.o `test -f 'qt/test/wallettests.cpp' || echo '$(srcdir)/'`qt/test/wallettests.cpp

qt/test/qt_test_test_bitcoin_qt-wallettests.obj: qt/test/wallettests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitcoin_qt-wallettests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-wallettests.Tpo -c -o qt/test/qt_test_test_bitcoin_qt-wallettests.obj `if test -f 'qt/test/wallettests.cpp'; then $(CYGPATH_W) 'qt/test/wallettests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/wallettests.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-wallettests.Tpo qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-wallettests.Po
#	$(AM_V_CXX)source='qt/test/wallettests.cpp' object='qt/test/qt_test_test_bitcoin_qt-wallettests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitcoin_qt-wallettests.obj `if test -f 'qt/test/wallettests.cpp'; then $(CYGPATH_W) 'qt/test/wallettests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/wallettests.cpp'; fi`

wallet/test/qt_test_test_bitcoin_qt-wallet_test_fixture.o: wallet/test/wallet_test_fixture.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/qt_test_test_bitcoin_qt-wallet_test_fixture.o -MD -MP -MF wallet/test/$(DEPDIR)/qt_test_test_bitcoin_qt-wallet_test_fixture.Tpo -c -o wallet/test/qt_test_test_bitcoin_qt-wallet_test_fixture.o `test -f 'wallet/test/wallet_test_fixture.cpp' || echo '$(srcdir)/'`wallet/test/wallet_test_fixture.cpp
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/qt_test_test_bitcoin_qt-wallet_test_fixture.Tpo wallet/test/$(DEPDIR)/qt_test_test_bitcoin_qt-wallet_test_fixture.Po
#	$(AM_V_CXX)source='wallet/test/wallet_test_fixture.cpp' object='wallet/test/qt_test_test_bitcoin_qt-wallet_test_fixture.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/qt_test_test_bitcoin_qt-wallet_test_fixture.o `test -f 'wallet/test/wallet_test_fixture.cpp' || echo '$(srcdir)/'`wallet/test/wallet_test_fixture.cpp

wallet/test/qt_test_test_bitcoin_qt-wallet_test_fixture.obj: wallet/test/wallet_test_fixture.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/qt_test_test_bitcoin_qt-wallet_test_fixture.obj -MD -MP -MF wallet/test/$(DEPDIR)/qt_test_test_bitcoin_qt-wallet_test_fixture.Tpo -c -o wallet/test/qt_test_test_bitcoin_qt-wallet_test_fixture.obj `if test -f 'wallet/test/wallet_test_fixture.cpp'; then $(CYGPATH_W) 'wallet/test/wallet_test_fixture.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/wallet_test_fixture.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/qt_test_test_bitcoin_qt-wallet_test_fixture.Tpo wallet/test/$(DEPDIR)/qt_test_test_bitcoin_qt-wallet_test_fixture.Po
#	$(AM_V_CXX)source='wallet/test/wallet_test_fixture.cpp' object='wallet/test/qt_test_test_bitcoin_qt-wallet_test_fixture.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/qt_test_test_bitcoin_qt-wallet_test_fixture.obj `if test -f 'wallet/test/wallet_test_fixture.cpp'; then $(CYGPATH_W) 'wallet/test/wallet_test_fixture.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/wallet_test_fixture.cpp'; fi`

qt/test/qt_test_test_bitcoin_qt-moc_apptests.o: qt/test/moc_apptests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitcoin_qt-moc_apptests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-moc_apptests.Tpo -c -o qt/test/qt_test_test_bitcoin_qt-moc_apptests.o `test -f 'qt/test/moc_apptests.cpp' || echo '$(srcdir)/'`qt/test/moc_apptests.cpp
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-moc_apptests.Tpo qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-moc_apptests.Po
#	$(AM_V_CXX)source='qt/test/moc_apptests.cpp' object='qt/test/qt_test_test_bitcoin_qt-moc_apptests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitcoin_qt-moc_apptests.o `test -f 'qt/test/moc_apptests.cpp' || echo '$(srcdir)/'`qt/test/moc_apptests.cpp

qt/test/qt_test_test_bitcoin_qt-moc_apptests.obj: qt/test/moc_apptests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitcoin_qt-moc_apptests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-moc_apptests.Tpo -c -o qt/test/qt_test_test_bitcoin_qt-moc_apptests.obj `if test -f 'qt/test/moc_apptests.cpp'; then $(CYGPATH_W) 'qt/test/moc_apptests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_apptests.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-moc_apptests.Tpo qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-moc_apptests.Po
#	$(AM_V_CXX)source='qt/test/moc_apptests.cpp' object='qt/test/qt_test_test_bitcoin_qt-moc_apptests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitcoin_qt-moc_apptests.obj `if test -f 'qt/test/moc_apptests.cpp'; then $(CYGPATH_W) 'qt/test/moc_apptests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_apptests.cpp'; fi`

qt/test/qt_test_test_bitcoin_qt-moc_optiontests.o: qt/test/moc_optiontests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitcoin_qt-moc_optiontests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-moc_optiontests.Tpo -c -o qt/test/qt_test_test_bitcoin_qt-moc_optiontests.o `test -f 'qt/test/moc_optiontests.cpp' || echo '$(srcdir)/'`qt/test/moc_optiontests.cpp
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-moc_optiontests.Tpo qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-moc_optiontests.Po
#	$(AM_V_CXX)source='qt/test/moc_optiontests.cpp' object='qt/test/qt_test_test_bitcoin_qt-moc_optiontests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitcoin_qt-moc_optiontests.o `test -f 'qt/test/moc_optiontests.cpp' || echo '$(srcdir)/'`qt/test/moc_optiontests.cpp

qt/test/qt_test_test_bitcoin_qt-moc_optiontests.obj: qt/test/moc_optiontests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitcoin_qt-moc_optiontests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-moc_optiontests.Tpo -c -o qt/test/qt_test_test_bitcoin_qt-moc_optiontests.obj `if test -f 'qt/test/moc_optiontests.cpp'; then $(CYGPATH_W) 'qt/test/moc_optiontests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_optiontests.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-moc_optiontests.Tpo qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-moc_optiontests.Po
#	$(AM_V_CXX)source='qt/test/moc_optiontests.cpp' object='qt/test/qt_test_test_bitcoin_qt-moc_optiontests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitcoin_qt-moc_optiontests.obj `if test -f 'qt/test/moc_optiontests.cpp'; then $(CYGPATH_W) 'qt/test/moc_optiontests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_optiontests.cpp'; fi`

qt/test/qt_test_test_bitcoin_qt-moc_rpcnestedtests.o: qt/test/moc_rpcnestedtests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitcoin_qt-moc_rpcnestedtests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-moc_rpcnestedtests.Tpo -c -o qt/test/qt_test_test_bitcoin_qt-moc_rpcnestedtests.o `test -f 'qt/test/moc_rpcnestedtests.cpp' || echo '$(srcdir)/'`qt/test/moc_rpcnestedtests.cpp
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-moc_rpcnestedtests.Tpo qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-moc_rpcnestedtests.Po
#	$(AM_V_CXX)source='qt/test/moc_rpcnestedtests.cpp' object='qt/test/qt_test_test_bitcoin_qt-moc_rpcnestedtests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitcoin_qt-moc_rpcnestedtests.o `test -f 'qt/test/moc_rpcnestedtests.cpp' || echo '$(srcdir)/'`qt/test/moc_rpcnestedtests.cpp

qt/test/qt_test_test_bitcoin_qt-moc_rpcnestedtests.obj: qt/test/moc_rpcnestedtests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitcoin_qt-moc_rpcnestedtests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-moc_rpcnestedtests.Tpo -c -o qt/test/qt_test_test_bitcoin_qt-moc_rpcnestedtests.obj `if test -f 'qt/test/moc_rpcnestedtests.cpp'; then $(CYGPATH_W) 'qt/test/moc_rpcnestedtests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_rpcnestedtests.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-moc_rpcnestedtests.Tpo qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-moc_rpcnestedtests.Po
#	$(AM_V_CXX)source='qt/test/moc_rpcnestedtests.cpp' object='qt/test/qt_test_test_bitcoin_qt-moc_rpcnestedtests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitcoin_qt-moc_rpcnestedtests.obj `if test -f 'qt/test/moc_rpcnestedtests.cpp'; then $(CYGPATH_W) 'qt/test/moc_rpcnestedtests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_rpcnestedtests.cpp'; fi`

qt/test/qt_test_test_bitcoin_qt-moc_uritests.o: qt/test/moc_uritests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitcoin_qt-moc_uritests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-moc_uritests.Tpo -c -o qt/test/qt_test_test_bitcoin_qt-moc_uritests.o `test -f 'qt/test/moc_uritests.cpp' || echo '$(srcdir)/'`qt/test/moc_uritests.cpp
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-moc_uritests.Tpo qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-moc_uritests.Po
#	$(AM_V_CXX)source='qt/test/moc_uritests.cpp' object='qt/test/qt_test_test_bitcoin_qt-moc_uritests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitcoin_qt-moc_uritests.o `test -f 'qt/test/moc_uritests.cpp' || echo '$(srcdir)/'`qt/test/moc_uritests.cpp

qt/test/qt_test_test_bitcoin_qt-moc_uritests.obj: qt/test/moc_uritests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitcoin_qt-moc_uritests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-moc_uritests.Tpo -c -o qt/test/qt_test_test_bitcoin_qt-moc_uritests.obj `if test -f 'qt/test/moc_uritests.cpp'; then $(CYGPATH_W) 'qt/test/moc_uritests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_uritests.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-moc_uritests.Tpo qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-moc_uritests.Po
#	$(AM_V_CXX)source='qt/test/moc_uritests.cpp' object='qt/test/qt_test_test_bitcoin_qt-moc_uritests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitcoin_qt-moc_uritests.obj `if test -f 'qt/test/moc_uritests.cpp'; then $(CYGPATH_W) 'qt/test/moc_uritests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_uritests.cpp'; fi`

qt/test/qt_test_test_bitcoin_qt-moc_addressbooktests.o: qt/test/moc_addressbooktests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitcoin_qt-moc_addressbooktests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-moc_addressbooktests.Tpo -c -o qt/test/qt_test_test_bitcoin_qt-moc_addressbooktests.o `test -f 'qt/test/moc_addressbooktests.cpp' || echo '$(srcdir)/'`qt/test/moc_addressbooktests.cpp
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-moc_addressbooktests.Tpo qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-moc_addressbooktests.Po
#	$(AM_V_CXX)source='qt/test/moc_addressbooktests.cpp' object='qt/test/qt_test_test_bitcoin_qt-moc_addressbooktests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitcoin_qt-moc_addressbooktests.o `test -f 'qt/test/moc_addressbooktests.cpp' || echo '$(srcdir)/'`qt/test/moc_addressbooktests.cpp

qt/test/qt_test_test_bitcoin_qt-moc_addressbooktests.obj: qt/test/moc_addressbooktests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitcoin_qt-moc_addressbooktests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-moc_addressbooktests.Tpo -c -o qt/test/qt_test_test_bitcoin_qt-moc_addressbooktests.obj `if test -f 'qt/test/moc_addressbooktests.cpp'; then $(CYGPATH_W) 'qt/test/moc_addressbooktests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_addressbooktests.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-moc_addressbooktests.Tpo qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-moc_addressbooktests.Po
#	$(AM_V_CXX)source='qt/test/moc_addressbooktests.cpp' object='qt/test/qt_test_test_bitcoin_qt-moc_addressbooktests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitcoin_qt-moc_addressbooktests.obj `if test -f 'qt/test/moc_addressbooktests.cpp'; then $(CYGPATH_W) 'qt/test/moc_addressbooktests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_addressbooktests.cpp'; fi`

qt/test/qt_test_test_bitcoin_qt-moc_wallettests.o: qt/test/moc_wallettests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitcoin_qt-moc_wallettests.o -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-moc_wallettests.Tpo -c -o qt/test/qt_test_test_bitcoin_qt-moc_wallettests.o `test -f 'qt/test/moc_wallettests.cpp' || echo '$(srcdir)/'`qt/test/moc_wallettests.cpp
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-moc_wallettests.Tpo qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-moc_wallettests.Po
#	$(AM_V_CXX)source='qt/test/moc_wallettests.cpp' object='qt/test/qt_test_test_bitcoin_qt-moc_wallettests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitcoin_qt-moc_wallettests.o `test -f 'qt/test/moc_wallettests.cpp' || echo '$(srcdir)/'`qt/test/moc_wallettests.cpp

qt/test/qt_test_test_bitcoin_qt-moc_wallettests.obj: qt/test/moc_wallettests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -MT qt/test/qt_test_test_bitcoin_qt-moc_wallettests.obj -MD -MP -MF qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-moc_wallettests.Tpo -c -o qt/test/qt_test_test_bitcoin_qt-moc_wallettests.obj `if test -f 'qt/test/moc_wallettests.cpp'; then $(CYGPATH_W) 'qt/test/moc_wallettests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_wallettests.cpp'; fi`
	$(AM_V_at)$(am__mv) qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-moc_wallettests.Tpo qt/test/$(DEPDIR)/qt_test_test_bitcoin_qt-moc_wallettests.Po
#	$(AM_V_CXX)source='qt/test/moc_wallettests.cpp' object='qt/test/qt_test_test_bitcoin_qt-moc_wallettests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_test_test_bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(qt_test_test_bitcoin_qt_CXXFLAGS) $(CXXFLAGS) -c -o qt/test/qt_test_test_bitcoin_qt-moc_wallettests.obj `if test -f 'qt/test/moc_wallettests.cpp'; then $(CYGPATH_W) 'qt/test/moc_wallettests.cpp'; else $(CYGPATH_W) '$(srcdir)/qt/test/moc_wallettests.cpp'; fi`

wallet/test/fuzz/test_fuzz_fuzz-coinselection.o: wallet/test/fuzz/coinselection.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/fuzz/test_fuzz_fuzz-coinselection.o -MD -MP -MF wallet/test/fuzz/$(DEPDIR)/test_fuzz_fuzz-coinselection.Tpo -c -o wallet/test/fuzz/test_fuzz_fuzz-coinselection.o `test -f 'wallet/test/fuzz/coinselection.cpp' || echo '$(srcdir)/'`wallet/test/fuzz/coinselection.cpp
	$(AM_V_at)$(am__mv) wallet/test/fuzz/$(DEPDIR)/test_fuzz_fuzz-coinselection.Tpo wallet/test/fuzz/$(DEPDIR)/test_fuzz_fuzz-coinselection.Po
#	$(AM_V_CXX)source='wallet/test/fuzz/coinselection.cpp' object='wallet/test/fuzz/test_fuzz_fuzz-coinselection.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/fuzz/test_fuzz_fuzz-coinselection.o `test -f 'wallet/test/fuzz/coinselection.cpp' || echo '$(srcdir)/'`wallet/test/fuzz/coinselection.cpp

wallet/test/fuzz/test_fuzz_fuzz-coinselection.obj: wallet/test/fuzz/coinselection.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/fuzz/test_fuzz_fuzz-coinselection.obj -MD -MP -MF wallet/test/fuzz/$(DEPDIR)/test_fuzz_fuzz-coinselection.Tpo -c -o wallet/test/fuzz/test_fuzz_fuzz-coinselection.obj `if test -f 'wallet/test/fuzz/coinselection.cpp'; then $(CYGPATH_W) 'wallet/test/fuzz/coinselection.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/fuzz/coinselection.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/test/fuzz/$(DEPDIR)/test_fuzz_fuzz-coinselection.Tpo wallet/test/fuzz/$(DEPDIR)/test_fuzz_fuzz-coinselection.Po
#	$(AM_V_CXX)source='wallet/test/fuzz/coinselection.cpp' object='wallet/test/fuzz/test_fuzz_fuzz-coinselection.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/fuzz/test_fuzz_fuzz-coinselection.obj `if test -f 'wallet/test/fuzz/coinselection.cpp'; then $(CYGPATH_W) 'wallet/test/fuzz/coinselection.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/fuzz/coinselection.cpp'; fi`

wallet/test/fuzz/test_fuzz_fuzz-notifications.o: wallet/test/fuzz/notifications.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/fuzz/test_fuzz_fuzz-notifications.o -MD -MP -MF wallet/test/fuzz/$(DEPDIR)/test_fuzz_fuzz-notifications.Tpo -c -o wallet/test/fuzz/test_fuzz_fuzz-notifications.o `test -f 'wallet/test/fuzz/notifications.cpp' || echo '$(srcdir)/'`wallet/test/fuzz/notifications.cpp
	$(AM_V_at)$(am__mv) wallet/test/fuzz/$(DEPDIR)/test_fuzz_fuzz-notifications.Tpo wallet/test/fuzz/$(DEPDIR)/test_fuzz_fuzz-notifications.Po
#	$(AM_V_CXX)source='wallet/test/fuzz/notifications.cpp' object='wallet/test/fuzz/test_fuzz_fuzz-notifications.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/fuzz/test_fuzz_fuzz-notifications.o `test -f 'wallet/test/fuzz/notifications.cpp' || echo '$(srcdir)/'`wallet/test/fuzz/notifications.cpp

wallet/test/fuzz/test_fuzz_fuzz-notifications.obj: wallet/test/fuzz/notifications.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/fuzz/test_fuzz_fuzz-notifications.obj -MD -MP -MF wallet/test/fuzz/$(DEPDIR)/test_fuzz_fuzz-notifications.Tpo -c -o wallet/test/fuzz/test_fuzz_fuzz-notifications.obj `if test -f 'wallet/test/fuzz/notifications.cpp'; then $(CYGPATH_W) 'wallet/test/fuzz/notifications.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/fuzz/notifications.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/test/fuzz/$(DEPDIR)/test_fuzz_fuzz-notifications.Tpo wallet/test/fuzz/$(DEPDIR)/test_fuzz_fuzz-notifications.Po
#	$(AM_V_CXX)source='wallet/test/fuzz/notifications.cpp' object='wallet/test/fuzz/test_fuzz_fuzz-notifications.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/fuzz/test_fuzz_fuzz-notifications.obj `if test -f 'wallet/test/fuzz/notifications.cpp'; then $(CYGPATH_W) 'wallet/test/fuzz/notifications.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/fuzz/notifications.cpp'; fi`

test/fuzz/test_fuzz_fuzz-addition_overflow.o: test/fuzz/addition_overflow.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-addition_overflow.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-addition_overflow.Tpo -c -o test/fuzz/test_fuzz_fuzz-addition_overflow.o `test -f 'test/fuzz/addition_overflow.cpp' || echo '$(srcdir)/'`test/fuzz/addition_overflow.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-addition_overflow.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-addition_overflow.Po
#	$(AM_V_CXX)source='test/fuzz/addition_overflow.cpp' object='test/fuzz/test_fuzz_fuzz-addition_overflow.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-addition_overflow.o `test -f 'test/fuzz/addition_overflow.cpp' || echo '$(srcdir)/'`test/fuzz/addition_overflow.cpp

test/fuzz/test_fuzz_fuzz-addition_overflow.obj: test/fuzz/addition_overflow.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-addition_overflow.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-addition_overflow.Tpo -c -o test/fuzz/test_fuzz_fuzz-addition_overflow.obj `if test -f 'test/fuzz/addition_overflow.cpp'; then $(CYGPATH_W) 'test/fuzz/addition_overflow.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/addition_overflow.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-addition_overflow.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-addition_overflow.Po
#	$(AM_V_CXX)source='test/fuzz/addition_overflow.cpp' object='test/fuzz/test_fuzz_fuzz-addition_overflow.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-addition_overflow.obj `if test -f 'test/fuzz/addition_overflow.cpp'; then $(CYGPATH_W) 'test/fuzz/addition_overflow.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/addition_overflow.cpp'; fi`

test/fuzz/test_fuzz_fuzz-addrman.o: test/fuzz/addrman.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-addrman.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-addrman.Tpo -c -o test/fuzz/test_fuzz_fuzz-addrman.o `test -f 'test/fuzz/addrman.cpp' || echo '$(srcdir)/'`test/fuzz/addrman.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-addrman.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-addrman.Po
#	$(AM_V_CXX)source='test/fuzz/addrman.cpp' object='test/fuzz/test_fuzz_fuzz-addrman.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-addrman.o `test -f 'test/fuzz/addrman.cpp' || echo '$(srcdir)/'`test/fuzz/addrman.cpp

test/fuzz/test_fuzz_fuzz-addrman.obj: test/fuzz/addrman.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-addrman.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-addrman.Tpo -c -o test/fuzz/test_fuzz_fuzz-addrman.obj `if test -f 'test/fuzz/addrman.cpp'; then $(CYGPATH_W) 'test/fuzz/addrman.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/addrman.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-addrman.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-addrman.Po
#	$(AM_V_CXX)source='test/fuzz/addrman.cpp' object='test/fuzz/test_fuzz_fuzz-addrman.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-addrman.obj `if test -f 'test/fuzz/addrman.cpp'; then $(CYGPATH_W) 'test/fuzz/addrman.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/addrman.cpp'; fi`

test/fuzz/test_fuzz_fuzz-asmap.o: test/fuzz/asmap.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-asmap.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-asmap.Tpo -c -o test/fuzz/test_fuzz_fuzz-asmap.o `test -f 'test/fuzz/asmap.cpp' || echo '$(srcdir)/'`test/fuzz/asmap.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-asmap.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-asmap.Po
#	$(AM_V_CXX)source='test/fuzz/asmap.cpp' object='test/fuzz/test_fuzz_fuzz-asmap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-asmap.o `test -f 'test/fuzz/asmap.cpp' || echo '$(srcdir)/'`test/fuzz/asmap.cpp

test/fuzz/test_fuzz_fuzz-asmap.obj: test/fuzz/asmap.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-asmap.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-asmap.Tpo -c -o test/fuzz/test_fuzz_fuzz-asmap.obj `if test -f 'test/fuzz/asmap.cpp'; then $(CYGPATH_W) 'test/fuzz/asmap.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/asmap.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-asmap.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-asmap.Po
#	$(AM_V_CXX)source='test/fuzz/asmap.cpp' object='test/fuzz/test_fuzz_fuzz-asmap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-asmap.obj `if test -f 'test/fuzz/asmap.cpp'; then $(CYGPATH_W) 'test/fuzz/asmap.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/asmap.cpp'; fi`

test/fuzz/test_fuzz_fuzz-asmap_direct.o: test/fuzz/asmap_direct.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-asmap_direct.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-asmap_direct.Tpo -c -o test/fuzz/test_fuzz_fuzz-asmap_direct.o `test -f 'test/fuzz/asmap_direct.cpp' || echo '$(srcdir)/'`test/fuzz/asmap_direct.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-asmap_direct.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-asmap_direct.Po
#	$(AM_V_CXX)source='test/fuzz/asmap_direct.cpp' object='test/fuzz/test_fuzz_fuzz-asmap_direct.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-asmap_direct.o `test -f 'test/fuzz/asmap_direct.cpp' || echo '$(srcdir)/'`test/fuzz/asmap_direct.cpp

test/fuzz/test_fuzz_fuzz-asmap_direct.obj: test/fuzz/asmap_direct.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-asmap_direct.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-asmap_direct.Tpo -c -o test/fuzz/test_fuzz_fuzz-asmap_direct.obj `if test -f 'test/fuzz/asmap_direct.cpp'; then $(CYGPATH_W) 'test/fuzz/asmap_direct.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/asmap_direct.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-asmap_direct.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-asmap_direct.Po
#	$(AM_V_CXX)source='test/fuzz/asmap_direct.cpp' object='test/fuzz/test_fuzz_fuzz-asmap_direct.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-asmap_direct.obj `if test -f 'test/fuzz/asmap_direct.cpp'; then $(CYGPATH_W) 'test/fuzz/asmap_direct.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/asmap_direct.cpp'; fi`

test/fuzz/test_fuzz_fuzz-autofile.o: test/fuzz/autofile.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-autofile.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-autofile.Tpo -c -o test/fuzz/test_fuzz_fuzz-autofile.o `test -f 'test/fuzz/autofile.cpp' || echo '$(srcdir)/'`test/fuzz/autofile.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-autofile.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-autofile.Po
#	$(AM_V_CXX)source='test/fuzz/autofile.cpp' object='test/fuzz/test_fuzz_fuzz-autofile.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-autofile.o `test -f 'test/fuzz/autofile.cpp' || echo '$(srcdir)/'`test/fuzz/autofile.cpp

test/fuzz/test_fuzz_fuzz-autofile.obj: test/fuzz/autofile.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-autofile.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-autofile.Tpo -c -o test/fuzz/test_fuzz_fuzz-autofile.obj `if test -f 'test/fuzz/autofile.cpp'; then $(CYGPATH_W) 'test/fuzz/autofile.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/autofile.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-autofile.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-autofile.Po
#	$(AM_V_CXX)source='test/fuzz/autofile.cpp' object='test/fuzz/test_fuzz_fuzz-autofile.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-autofile.obj `if test -f 'test/fuzz/autofile.cpp'; then $(CYGPATH_W) 'test/fuzz/autofile.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/autofile.cpp'; fi`

test/fuzz/test_fuzz_fuzz-banman.o: test/fuzz/banman.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-banman.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-banman.Tpo -c -o test/fuzz/test_fuzz_fuzz-banman.o `test -f 'test/fuzz/banman.cpp' || echo '$(srcdir)/'`test/fuzz/banman.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-banman.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-banman.Po
#	$(AM_V_CXX)source='test/fuzz/banman.cpp' object='test/fuzz/test_fuzz_fuzz-banman.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-banman.o `test -f 'test/fuzz/banman.cpp' || echo '$(srcdir)/'`test/fuzz/banman.cpp

test/fuzz/test_fuzz_fuzz-banman.obj: test/fuzz/banman.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-banman.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-banman.Tpo -c -o test/fuzz/test_fuzz_fuzz-banman.obj `if test -f 'test/fuzz/banman.cpp'; then $(CYGPATH_W) 'test/fuzz/banman.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/banman.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-banman.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-banman.Po
#	$(AM_V_CXX)source='test/fuzz/banman.cpp' object='test/fuzz/test_fuzz_fuzz-banman.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-banman.obj `if test -f 'test/fuzz/banman.cpp'; then $(CYGPATH_W) 'test/fuzz/banman.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/banman.cpp'; fi`

test/fuzz/test_fuzz_fuzz-base_encode_decode.o: test/fuzz/base_encode_decode.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-base_encode_decode.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-base_encode_decode.Tpo -c -o test/fuzz/test_fuzz_fuzz-base_encode_decode.o `test -f 'test/fuzz/base_encode_decode.cpp' || echo '$(srcdir)/'`test/fuzz/base_encode_decode.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-base_encode_decode.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-base_encode_decode.Po
#	$(AM_V_CXX)source='test/fuzz/base_encode_decode.cpp' object='test/fuzz/test_fuzz_fuzz-base_encode_decode.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-base_encode_decode.o `test -f 'test/fuzz/base_encode_decode.cpp' || echo '$(srcdir)/'`test/fuzz/base_encode_decode.cpp

test/fuzz/test_fuzz_fuzz-base_encode_decode.obj: test/fuzz/base_encode_decode.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-base_encode_decode.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-base_encode_decode.Tpo -c -o test/fuzz/test_fuzz_fuzz-base_encode_decode.obj `if test -f 'test/fuzz/base_encode_decode.cpp'; then $(CYGPATH_W) 'test/fuzz/base_encode_decode.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/base_encode_decode.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-base_encode_decode.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-base_encode_decode.Po
#	$(AM_V_CXX)source='test/fuzz/base_encode_decode.cpp' object='test/fuzz/test_fuzz_fuzz-base_encode_decode.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-base_encode_decode.obj `if test -f 'test/fuzz/base_encode_decode.cpp'; then $(CYGPATH_W) 'test/fuzz/base_encode_decode.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/base_encode_decode.cpp'; fi`

test/fuzz/test_fuzz_fuzz-bech32.o: test/fuzz/bech32.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-bech32.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-bech32.Tpo -c -o test/fuzz/test_fuzz_fuzz-bech32.o `test -f 'test/fuzz/bech32.cpp' || echo '$(srcdir)/'`test/fuzz/bech32.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-bech32.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-bech32.Po
#	$(AM_V_CXX)source='test/fuzz/bech32.cpp' object='test/fuzz/test_fuzz_fuzz-bech32.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-bech32.o `test -f 'test/fuzz/bech32.cpp' || echo '$(srcdir)/'`test/fuzz/bech32.cpp

test/fuzz/test_fuzz_fuzz-bech32.obj: test/fuzz/bech32.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-bech32.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-bech32.Tpo -c -o test/fuzz/test_fuzz_fuzz-bech32.obj `if test -f 'test/fuzz/bech32.cpp'; then $(CYGPATH_W) 'test/fuzz/bech32.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/bech32.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-bech32.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-bech32.Po
#	$(AM_V_CXX)source='test/fuzz/bech32.cpp' object='test/fuzz/test_fuzz_fuzz-bech32.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-bech32.obj `if test -f 'test/fuzz/bech32.cpp'; then $(CYGPATH_W) 'test/fuzz/bech32.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/bech32.cpp'; fi`

test/fuzz/test_fuzz_fuzz-block.o: test/fuzz/block.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-block.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-block.Tpo -c -o test/fuzz/test_fuzz_fuzz-block.o `test -f 'test/fuzz/block.cpp' || echo '$(srcdir)/'`test/fuzz/block.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-block.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-block.Po
#	$(AM_V_CXX)source='test/fuzz/block.cpp' object='test/fuzz/test_fuzz_fuzz-block.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-block.o `test -f 'test/fuzz/block.cpp' || echo '$(srcdir)/'`test/fuzz/block.cpp

test/fuzz/test_fuzz_fuzz-block.obj: test/fuzz/block.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-block.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-block.Tpo -c -o test/fuzz/test_fuzz_fuzz-block.obj `if test -f 'test/fuzz/block.cpp'; then $(CYGPATH_W) 'test/fuzz/block.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/block.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-block.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-block.Po
#	$(AM_V_CXX)source='test/fuzz/block.cpp' object='test/fuzz/test_fuzz_fuzz-block.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-block.obj `if test -f 'test/fuzz/block.cpp'; then $(CYGPATH_W) 'test/fuzz/block.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/block.cpp'; fi`

test/fuzz/test_fuzz_fuzz-block_header.o: test/fuzz/block_header.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-block_header.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-block_header.Tpo -c -o test/fuzz/test_fuzz_fuzz-block_header.o `test -f 'test/fuzz/block_header.cpp' || echo '$(srcdir)/'`test/fuzz/block_header.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-block_header.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-block_header.Po
#	$(AM_V_CXX)source='test/fuzz/block_header.cpp' object='test/fuzz/test_fuzz_fuzz-block_header.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-block_header.o `test -f 'test/fuzz/block_header.cpp' || echo '$(srcdir)/'`test/fuzz/block_header.cpp

test/fuzz/test_fuzz_fuzz-block_header.obj: test/fuzz/block_header.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-block_header.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-block_header.Tpo -c -o test/fuzz/test_fuzz_fuzz-block_header.obj `if test -f 'test/fuzz/block_header.cpp'; then $(CYGPATH_W) 'test/fuzz/block_header.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/block_header.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-block_header.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-block_header.Po
#	$(AM_V_CXX)source='test/fuzz/block_header.cpp' object='test/fuzz/test_fuzz_fuzz-block_header.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-block_header.obj `if test -f 'test/fuzz/block_header.cpp'; then $(CYGPATH_W) 'test/fuzz/block_header.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/block_header.cpp'; fi`

test/fuzz/test_fuzz_fuzz-blockfilter.o: test/fuzz/blockfilter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-blockfilter.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-blockfilter.Tpo -c -o test/fuzz/test_fuzz_fuzz-blockfilter.o `test -f 'test/fuzz/blockfilter.cpp' || echo '$(srcdir)/'`test/fuzz/blockfilter.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-blockfilter.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-blockfilter.Po
#	$(AM_V_CXX)source='test/fuzz/blockfilter.cpp' object='test/fuzz/test_fuzz_fuzz-blockfilter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-blockfilter.o `test -f 'test/fuzz/blockfilter.cpp' || echo '$(srcdir)/'`test/fuzz/blockfilter.cpp

test/fuzz/test_fuzz_fuzz-blockfilter.obj: test/fuzz/blockfilter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-blockfilter.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-blockfilter.Tpo -c -o test/fuzz/test_fuzz_fuzz-blockfilter.obj `if test -f 'test/fuzz/blockfilter.cpp'; then $(CYGPATH_W) 'test/fuzz/blockfilter.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/blockfilter.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-blockfilter.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-blockfilter.Po
#	$(AM_V_CXX)source='test/fuzz/blockfilter.cpp' object='test/fuzz/test_fuzz_fuzz-blockfilter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-blockfilter.obj `if test -f 'test/fuzz/blockfilter.cpp'; then $(CYGPATH_W) 'test/fuzz/blockfilter.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/blockfilter.cpp'; fi`

test/fuzz/test_fuzz_fuzz-bloom_filter.o: test/fuzz/bloom_filter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-bloom_filter.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-bloom_filter.Tpo -c -o test/fuzz/test_fuzz_fuzz-bloom_filter.o `test -f 'test/fuzz/bloom_filter.cpp' || echo '$(srcdir)/'`test/fuzz/bloom_filter.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-bloom_filter.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-bloom_filter.Po
#	$(AM_V_CXX)source='test/fuzz/bloom_filter.cpp' object='test/fuzz/test_fuzz_fuzz-bloom_filter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-bloom_filter.o `test -f 'test/fuzz/bloom_filter.cpp' || echo '$(srcdir)/'`test/fuzz/bloom_filter.cpp

test/fuzz/test_fuzz_fuzz-bloom_filter.obj: test/fuzz/bloom_filter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-bloom_filter.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-bloom_filter.Tpo -c -o test/fuzz/test_fuzz_fuzz-bloom_filter.obj `if test -f 'test/fuzz/bloom_filter.cpp'; then $(CYGPATH_W) 'test/fuzz/bloom_filter.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/bloom_filter.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-bloom_filter.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-bloom_filter.Po
#	$(AM_V_CXX)source='test/fuzz/bloom_filter.cpp' object='test/fuzz/test_fuzz_fuzz-bloom_filter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-bloom_filter.obj `if test -f 'test/fuzz/bloom_filter.cpp'; then $(CYGPATH_W) 'test/fuzz/bloom_filter.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/bloom_filter.cpp'; fi`

test/fuzz/test_fuzz_fuzz-buffered_file.o: test/fuzz/buffered_file.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-buffered_file.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-buffered_file.Tpo -c -o test/fuzz/test_fuzz_fuzz-buffered_file.o `test -f 'test/fuzz/buffered_file.cpp' || echo '$(srcdir)/'`test/fuzz/buffered_file.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-buffered_file.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-buffered_file.Po
#	$(AM_V_CXX)source='test/fuzz/buffered_file.cpp' object='test/fuzz/test_fuzz_fuzz-buffered_file.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-buffered_file.o `test -f 'test/fuzz/buffered_file.cpp' || echo '$(srcdir)/'`test/fuzz/buffered_file.cpp

test/fuzz/test_fuzz_fuzz-buffered_file.obj: test/fuzz/buffered_file.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-buffered_file.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-buffered_file.Tpo -c -o test/fuzz/test_fuzz_fuzz-buffered_file.obj `if test -f 'test/fuzz/buffered_file.cpp'; then $(CYGPATH_W) 'test/fuzz/buffered_file.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/buffered_file.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-buffered_file.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-buffered_file.Po
#	$(AM_V_CXX)source='test/fuzz/buffered_file.cpp' object='test/fuzz/test_fuzz_fuzz-buffered_file.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-buffered_file.obj `if test -f 'test/fuzz/buffered_file.cpp'; then $(CYGPATH_W) 'test/fuzz/buffered_file.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/buffered_file.cpp'; fi`

test/fuzz/test_fuzz_fuzz-chain.o: test/fuzz/chain.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-chain.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-chain.Tpo -c -o test/fuzz/test_fuzz_fuzz-chain.o `test -f 'test/fuzz/chain.cpp' || echo '$(srcdir)/'`test/fuzz/chain.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-chain.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-chain.Po
#	$(AM_V_CXX)source='test/fuzz/chain.cpp' object='test/fuzz/test_fuzz_fuzz-chain.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-chain.o `test -f 'test/fuzz/chain.cpp' || echo '$(srcdir)/'`test/fuzz/chain.cpp

test/fuzz/test_fuzz_fuzz-chain.obj: test/fuzz/chain.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-chain.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-chain.Tpo -c -o test/fuzz/test_fuzz_fuzz-chain.obj `if test -f 'test/fuzz/chain.cpp'; then $(CYGPATH_W) 'test/fuzz/chain.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/chain.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-chain.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-chain.Po
#	$(AM_V_CXX)source='test/fuzz/chain.cpp' object='test/fuzz/test_fuzz_fuzz-chain.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-chain.obj `if test -f 'test/fuzz/chain.cpp'; then $(CYGPATH_W) 'test/fuzz/chain.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/chain.cpp'; fi`

test/fuzz/test_fuzz_fuzz-checkqueue.o: test/fuzz/checkqueue.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-checkqueue.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-checkqueue.Tpo -c -o test/fuzz/test_fuzz_fuzz-checkqueue.o `test -f 'test/fuzz/checkqueue.cpp' || echo '$(srcdir)/'`test/fuzz/checkqueue.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-checkqueue.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-checkqueue.Po
#	$(AM_V_CXX)source='test/fuzz/checkqueue.cpp' object='test/fuzz/test_fuzz_fuzz-checkqueue.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-checkqueue.o `test -f 'test/fuzz/checkqueue.cpp' || echo '$(srcdir)/'`test/fuzz/checkqueue.cpp

test/fuzz/test_fuzz_fuzz-checkqueue.obj: test/fuzz/checkqueue.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-checkqueue.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-checkqueue.Tpo -c -o test/fuzz/test_fuzz_fuzz-checkqueue.obj `if test -f 'test/fuzz/checkqueue.cpp'; then $(CYGPATH_W) 'test/fuzz/checkqueue.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/checkqueue.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-checkqueue.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-checkqueue.Po
#	$(AM_V_CXX)source='test/fuzz/checkqueue.cpp' object='test/fuzz/test_fuzz_fuzz-checkqueue.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-checkqueue.obj `if test -f 'test/fuzz/checkqueue.cpp'; then $(CYGPATH_W) 'test/fuzz/checkqueue.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/checkqueue.cpp'; fi`

test/fuzz/test_fuzz_fuzz-coins_view.o: test/fuzz/coins_view.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-coins_view.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-coins_view.Tpo -c -o test/fuzz/test_fuzz_fuzz-coins_view.o `test -f 'test/fuzz/coins_view.cpp' || echo '$(srcdir)/'`test/fuzz/coins_view.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-coins_view.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-coins_view.Po
#	$(AM_V_CXX)source='test/fuzz/coins_view.cpp' object='test/fuzz/test_fuzz_fuzz-coins_view.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-coins_view.o `test -f 'test/fuzz/coins_view.cpp' || echo '$(srcdir)/'`test/fuzz/coins_view.cpp

test/fuzz/test_fuzz_fuzz-coins_view.obj: test/fuzz/coins_view.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-coins_view.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-coins_view.Tpo -c -o test/fuzz/test_fuzz_fuzz-coins_view.obj `if test -f 'test/fuzz/coins_view.cpp'; then $(CYGPATH_W) 'test/fuzz/coins_view.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/coins_view.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-coins_view.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-coins_view.Po
#	$(AM_V_CXX)source='test/fuzz/coins_view.cpp' object='test/fuzz/test_fuzz_fuzz-coins_view.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-coins_view.obj `if test -f 'test/fuzz/coins_view.cpp'; then $(CYGPATH_W) 'test/fuzz/coins_view.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/coins_view.cpp'; fi`

test/fuzz/test_fuzz_fuzz-connman.o: test/fuzz/connman.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-connman.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-connman.Tpo -c -o test/fuzz/test_fuzz_fuzz-connman.o `test -f 'test/fuzz/connman.cpp' || echo '$(srcdir)/'`test/fuzz/connman.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-connman.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-connman.Po
#	$(AM_V_CXX)source='test/fuzz/connman.cpp' object='test/fuzz/test_fuzz_fuzz-connman.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-connman.o `test -f 'test/fuzz/connman.cpp' || echo '$(srcdir)/'`test/fuzz/connman.cpp

test/fuzz/test_fuzz_fuzz-connman.obj: test/fuzz/connman.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-connman.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-connman.Tpo -c -o test/fuzz/test_fuzz_fuzz-connman.obj `if test -f 'test/fuzz/connman.cpp'; then $(CYGPATH_W) 'test/fuzz/connman.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/connman.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-connman.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-connman.Po
#	$(AM_V_CXX)source='test/fuzz/connman.cpp' object='test/fuzz/test_fuzz_fuzz-connman.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-connman.obj `if test -f 'test/fuzz/connman.cpp'; then $(CYGPATH_W) 'test/fuzz/connman.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/connman.cpp'; fi`

test/fuzz/test_fuzz_fuzz-crypto.o: test/fuzz/crypto.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-crypto.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto.Tpo -c -o test/fuzz/test_fuzz_fuzz-crypto.o `test -f 'test/fuzz/crypto.cpp' || echo '$(srcdir)/'`test/fuzz/crypto.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto.Po
#	$(AM_V_CXX)source='test/fuzz/crypto.cpp' object='test/fuzz/test_fuzz_fuzz-crypto.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-crypto.o `test -f 'test/fuzz/crypto.cpp' || echo '$(srcdir)/'`test/fuzz/crypto.cpp

test/fuzz/test_fuzz_fuzz-crypto.obj: test/fuzz/crypto.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-crypto.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto.Tpo -c -o test/fuzz/test_fuzz_fuzz-crypto.obj `if test -f 'test/fuzz/crypto.cpp'; then $(CYGPATH_W) 'test/fuzz/crypto.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/crypto.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto.Po
#	$(AM_V_CXX)source='test/fuzz/crypto.cpp' object='test/fuzz/test_fuzz_fuzz-crypto.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-crypto.obj `if test -f 'test/fuzz/crypto.cpp'; then $(CYGPATH_W) 'test/fuzz/crypto.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/crypto.cpp'; fi`

test/fuzz/test_fuzz_fuzz-crypto_aes256.o: test/fuzz/crypto_aes256.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-crypto_aes256.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto_aes256.Tpo -c -o test/fuzz/test_fuzz_fuzz-crypto_aes256.o `test -f 'test/fuzz/crypto_aes256.cpp' || echo '$(srcdir)/'`test/fuzz/crypto_aes256.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto_aes256.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto_aes256.Po
#	$(AM_V_CXX)source='test/fuzz/crypto_aes256.cpp' object='test/fuzz/test_fuzz_fuzz-crypto_aes256.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-crypto_aes256.o `test -f 'test/fuzz/crypto_aes256.cpp' || echo '$(srcdir)/'`test/fuzz/crypto_aes256.cpp

test/fuzz/test_fuzz_fuzz-crypto_aes256.obj: test/fuzz/crypto_aes256.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-crypto_aes256.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto_aes256.Tpo -c -o test/fuzz/test_fuzz_fuzz-crypto_aes256.obj `if test -f 'test/fuzz/crypto_aes256.cpp'; then $(CYGPATH_W) 'test/fuzz/crypto_aes256.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/crypto_aes256.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto_aes256.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto_aes256.Po
#	$(AM_V_CXX)source='test/fuzz/crypto_aes256.cpp' object='test/fuzz/test_fuzz_fuzz-crypto_aes256.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-crypto_aes256.obj `if test -f 'test/fuzz/crypto_aes256.cpp'; then $(CYGPATH_W) 'test/fuzz/crypto_aes256.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/crypto_aes256.cpp'; fi`

test/fuzz/test_fuzz_fuzz-crypto_aes256cbc.o: test/fuzz/crypto_aes256cbc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-crypto_aes256cbc.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto_aes256cbc.Tpo -c -o test/fuzz/test_fuzz_fuzz-crypto_aes256cbc.o `test -f 'test/fuzz/crypto_aes256cbc.cpp' || echo '$(srcdir)/'`test/fuzz/crypto_aes256cbc.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto_aes256cbc.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto_aes256cbc.Po
#	$(AM_V_CXX)source='test/fuzz/crypto_aes256cbc.cpp' object='test/fuzz/test_fuzz_fuzz-crypto_aes256cbc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-crypto_aes256cbc.o `test -f 'test/fuzz/crypto_aes256cbc.cpp' || echo '$(srcdir)/'`test/fuzz/crypto_aes256cbc.cpp

test/fuzz/test_fuzz_fuzz-crypto_aes256cbc.obj: test/fuzz/crypto_aes256cbc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-crypto_aes256cbc.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto_aes256cbc.Tpo -c -o test/fuzz/test_fuzz_fuzz-crypto_aes256cbc.obj `if test -f 'test/fuzz/crypto_aes256cbc.cpp'; then $(CYGPATH_W) 'test/fuzz/crypto_aes256cbc.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/crypto_aes256cbc.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto_aes256cbc.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto_aes256cbc.Po
#	$(AM_V_CXX)source='test/fuzz/crypto_aes256cbc.cpp' object='test/fuzz/test_fuzz_fuzz-crypto_aes256cbc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-crypto_aes256cbc.obj `if test -f 'test/fuzz/crypto_aes256cbc.cpp'; then $(CYGPATH_W) 'test/fuzz/crypto_aes256cbc.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/crypto_aes256cbc.cpp'; fi`

test/fuzz/test_fuzz_fuzz-crypto_chacha20.o: test/fuzz/crypto_chacha20.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-crypto_chacha20.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto_chacha20.Tpo -c -o test/fuzz/test_fuzz_fuzz-crypto_chacha20.o `test -f 'test/fuzz/crypto_chacha20.cpp' || echo '$(srcdir)/'`test/fuzz/crypto_chacha20.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto_chacha20.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto_chacha20.Po
#	$(AM_V_CXX)source='test/fuzz/crypto_chacha20.cpp' object='test/fuzz/test_fuzz_fuzz-crypto_chacha20.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-crypto_chacha20.o `test -f 'test/fuzz/crypto_chacha20.cpp' || echo '$(srcdir)/'`test/fuzz/crypto_chacha20.cpp

test/fuzz/test_fuzz_fuzz-crypto_chacha20.obj: test/fuzz/crypto_chacha20.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-crypto_chacha20.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto_chacha20.Tpo -c -o test/fuzz/test_fuzz_fuzz-crypto_chacha20.obj `if test -f 'test/fuzz/crypto_chacha20.cpp'; then $(CYGPATH_W) 'test/fuzz/crypto_chacha20.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/crypto_chacha20.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto_chacha20.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto_chacha20.Po
#	$(AM_V_CXX)source='test/fuzz/crypto_chacha20.cpp' object='test/fuzz/test_fuzz_fuzz-crypto_chacha20.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-crypto_chacha20.obj `if test -f 'test/fuzz/crypto_chacha20.cpp'; then $(CYGPATH_W) 'test/fuzz/crypto_chacha20.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/crypto_chacha20.cpp'; fi`

test/fuzz/test_fuzz_fuzz-crypto_chacha20_poly1305_aead.o: test/fuzz/crypto_chacha20_poly1305_aead.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-crypto_chacha20_poly1305_aead.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto_chacha20_poly1305_aead.Tpo -c -o test/fuzz/test_fuzz_fuzz-crypto_chacha20_poly1305_aead.o `test -f 'test/fuzz/crypto_chacha20_poly1305_aead.cpp' || echo '$(srcdir)/'`test/fuzz/crypto_chacha20_poly1305_aead.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto_chacha20_poly1305_aead.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto_chacha20_poly1305_aead.Po
#	$(AM_V_CXX)source='test/fuzz/crypto_chacha20_poly1305_aead.cpp' object='test/fuzz/test_fuzz_fuzz-crypto_chacha20_poly1305_aead.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-crypto_chacha20_poly1305_aead.o `test -f 'test/fuzz/crypto_chacha20_poly1305_aead.cpp' || echo '$(srcdir)/'`test/fuzz/crypto_chacha20_poly1305_aead.cpp

test/fuzz/test_fuzz_fuzz-crypto_chacha20_poly1305_aead.obj: test/fuzz/crypto_chacha20_poly1305_aead.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-crypto_chacha20_poly1305_aead.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto_chacha20_poly1305_aead.Tpo -c -o test/fuzz/test_fuzz_fuzz-crypto_chacha20_poly1305_aead.obj `if test -f 'test/fuzz/crypto_chacha20_poly1305_aead.cpp'; then $(CYGPATH_W) 'test/fuzz/crypto_chacha20_poly1305_aead.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/crypto_chacha20_poly1305_aead.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto_chacha20_poly1305_aead.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto_chacha20_poly1305_aead.Po
#	$(AM_V_CXX)source='test/fuzz/crypto_chacha20_poly1305_aead.cpp' object='test/fuzz/test_fuzz_fuzz-crypto_chacha20_poly1305_aead.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-crypto_chacha20_poly1305_aead.obj `if test -f 'test/fuzz/crypto_chacha20_poly1305_aead.cpp'; then $(CYGPATH_W) 'test/fuzz/crypto_chacha20_poly1305_aead.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/crypto_chacha20_poly1305_aead.cpp'; fi`

test/fuzz/test_fuzz_fuzz-crypto_common.o: test/fuzz/crypto_common.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-crypto_common.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto_common.Tpo -c -o test/fuzz/test_fuzz_fuzz-crypto_common.o `test -f 'test/fuzz/crypto_common.cpp' || echo '$(srcdir)/'`test/fuzz/crypto_common.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto_common.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto_common.Po
#	$(AM_V_CXX)source='test/fuzz/crypto_common.cpp' object='test/fuzz/test_fuzz_fuzz-crypto_common.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-crypto_common.o `test -f 'test/fuzz/crypto_common.cpp' || echo '$(srcdir)/'`test/fuzz/crypto_common.cpp

test/fuzz/test_fuzz_fuzz-crypto_common.obj: test/fuzz/crypto_common.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-crypto_common.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto_common.Tpo -c -o test/fuzz/test_fuzz_fuzz-crypto_common.obj `if test -f 'test/fuzz/crypto_common.cpp'; then $(CYGPATH_W) 'test/fuzz/crypto_common.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/crypto_common.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto_common.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto_common.Po
#	$(AM_V_CXX)source='test/fuzz/crypto_common.cpp' object='test/fuzz/test_fuzz_fuzz-crypto_common.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-crypto_common.obj `if test -f 'test/fuzz/crypto_common.cpp'; then $(CYGPATH_W) 'test/fuzz/crypto_common.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/crypto_common.cpp'; fi`

test/fuzz/test_fuzz_fuzz-crypto_diff_fuzz_chacha20.o: test/fuzz/crypto_diff_fuzz_chacha20.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-crypto_diff_fuzz_chacha20.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto_diff_fuzz_chacha20.Tpo -c -o test/fuzz/test_fuzz_fuzz-crypto_diff_fuzz_chacha20.o `test -f 'test/fuzz/crypto_diff_fuzz_chacha20.cpp' || echo '$(srcdir)/'`test/fuzz/crypto_diff_fuzz_chacha20.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto_diff_fuzz_chacha20.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto_diff_fuzz_chacha20.Po
#	$(AM_V_CXX)source='test/fuzz/crypto_diff_fuzz_chacha20.cpp' object='test/fuzz/test_fuzz_fuzz-crypto_diff_fuzz_chacha20.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-crypto_diff_fuzz_chacha20.o `test -f 'test/fuzz/crypto_diff_fuzz_chacha20.cpp' || echo '$(srcdir)/'`test/fuzz/crypto_diff_fuzz_chacha20.cpp

test/fuzz/test_fuzz_fuzz-crypto_diff_fuzz_chacha20.obj: test/fuzz/crypto_diff_fuzz_chacha20.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-crypto_diff_fuzz_chacha20.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto_diff_fuzz_chacha20.Tpo -c -o test/fuzz/test_fuzz_fuzz-crypto_diff_fuzz_chacha20.obj `if test -f 'test/fuzz/crypto_diff_fuzz_chacha20.cpp'; then $(CYGPATH_W) 'test/fuzz/crypto_diff_fuzz_chacha20.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/crypto_diff_fuzz_chacha20.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto_diff_fuzz_chacha20.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto_diff_fuzz_chacha20.Po
#	$(AM_V_CXX)source='test/fuzz/crypto_diff_fuzz_chacha20.cpp' object='test/fuzz/test_fuzz_fuzz-crypto_diff_fuzz_chacha20.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-crypto_diff_fuzz_chacha20.obj `if test -f 'test/fuzz/crypto_diff_fuzz_chacha20.cpp'; then $(CYGPATH_W) 'test/fuzz/crypto_diff_fuzz_chacha20.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/crypto_diff_fuzz_chacha20.cpp'; fi`

test/fuzz/test_fuzz_fuzz-crypto_hkdf_hmac_sha256_l32.o: test/fuzz/crypto_hkdf_hmac_sha256_l32.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-crypto_hkdf_hmac_sha256_l32.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto_hkdf_hmac_sha256_l32.Tpo -c -o test/fuzz/test_fuzz_fuzz-crypto_hkdf_hmac_sha256_l32.o `test -f 'test/fuzz/crypto_hkdf_hmac_sha256_l32.cpp' || echo '$(srcdir)/'`test/fuzz/crypto_hkdf_hmac_sha256_l32.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto_hkdf_hmac_sha256_l32.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto_hkdf_hmac_sha256_l32.Po
#	$(AM_V_CXX)source='test/fuzz/crypto_hkdf_hmac_sha256_l32.cpp' object='test/fuzz/test_fuzz_fuzz-crypto_hkdf_hmac_sha256_l32.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-crypto_hkdf_hmac_sha256_l32.o `test -f 'test/fuzz/crypto_hkdf_hmac_sha256_l32.cpp' || echo '$(srcdir)/'`test/fuzz/crypto_hkdf_hmac_sha256_l32.cpp

test/fuzz/test_fuzz_fuzz-crypto_hkdf_hmac_sha256_l32.obj: test/fuzz/crypto_hkdf_hmac_sha256_l32.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-crypto_hkdf_hmac_sha256_l32.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto_hkdf_hmac_sha256_l32.Tpo -c -o test/fuzz/test_fuzz_fuzz-crypto_hkdf_hmac_sha256_l32.obj `if test -f 'test/fuzz/crypto_hkdf_hmac_sha256_l32.cpp'; then $(CYGPATH_W) 'test/fuzz/crypto_hkdf_hmac_sha256_l32.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/crypto_hkdf_hmac_sha256_l32.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto_hkdf_hmac_sha256_l32.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto_hkdf_hmac_sha256_l32.Po
#	$(AM_V_CXX)source='test/fuzz/crypto_hkdf_hmac_sha256_l32.cpp' object='test/fuzz/test_fuzz_fuzz-crypto_hkdf_hmac_sha256_l32.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-crypto_hkdf_hmac_sha256_l32.obj `if test -f 'test/fuzz/crypto_hkdf_hmac_sha256_l32.cpp'; then $(CYGPATH_W) 'test/fuzz/crypto_hkdf_hmac_sha256_l32.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/crypto_hkdf_hmac_sha256_l32.cpp'; fi`

test/fuzz/test_fuzz_fuzz-crypto_poly1305.o: test/fuzz/crypto_poly1305.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-crypto_poly1305.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto_poly1305.Tpo -c -o test/fuzz/test_fuzz_fuzz-crypto_poly1305.o `test -f 'test/fuzz/crypto_poly1305.cpp' || echo '$(srcdir)/'`test/fuzz/crypto_poly1305.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto_poly1305.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto_poly1305.Po
#	$(AM_V_CXX)source='test/fuzz/crypto_poly1305.cpp' object='test/fuzz/test_fuzz_fuzz-crypto_poly1305.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-crypto_poly1305.o `test -f 'test/fuzz/crypto_poly1305.cpp' || echo '$(srcdir)/'`test/fuzz/crypto_poly1305.cpp

test/fuzz/test_fuzz_fuzz-crypto_poly1305.obj: test/fuzz/crypto_poly1305.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-crypto_poly1305.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto_poly1305.Tpo -c -o test/fuzz/test_fuzz_fuzz-crypto_poly1305.obj `if test -f 'test/fuzz/crypto_poly1305.cpp'; then $(CYGPATH_W) 'test/fuzz/crypto_poly1305.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/crypto_poly1305.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto_poly1305.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-crypto_poly1305.Po
#	$(AM_V_CXX)source='test/fuzz/crypto_poly1305.cpp' object='test/fuzz/test_fuzz_fuzz-crypto_poly1305.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-crypto_poly1305.obj `if test -f 'test/fuzz/crypto_poly1305.cpp'; then $(CYGPATH_W) 'test/fuzz/crypto_poly1305.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/crypto_poly1305.cpp'; fi`

test/fuzz/test_fuzz_fuzz-cuckoocache.o: test/fuzz/cuckoocache.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-cuckoocache.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-cuckoocache.Tpo -c -o test/fuzz/test_fuzz_fuzz-cuckoocache.o `test -f 'test/fuzz/cuckoocache.cpp' || echo '$(srcdir)/'`test/fuzz/cuckoocache.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-cuckoocache.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-cuckoocache.Po
#	$(AM_V_CXX)source='test/fuzz/cuckoocache.cpp' object='test/fuzz/test_fuzz_fuzz-cuckoocache.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-cuckoocache.o `test -f 'test/fuzz/cuckoocache.cpp' || echo '$(srcdir)/'`test/fuzz/cuckoocache.cpp

test/fuzz/test_fuzz_fuzz-cuckoocache.obj: test/fuzz/cuckoocache.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-cuckoocache.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-cuckoocache.Tpo -c -o test/fuzz/test_fuzz_fuzz-cuckoocache.obj `if test -f 'test/fuzz/cuckoocache.cpp'; then $(CYGPATH_W) 'test/fuzz/cuckoocache.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/cuckoocache.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-cuckoocache.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-cuckoocache.Po
#	$(AM_V_CXX)source='test/fuzz/cuckoocache.cpp' object='test/fuzz/test_fuzz_fuzz-cuckoocache.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-cuckoocache.obj `if test -f 'test/fuzz/cuckoocache.cpp'; then $(CYGPATH_W) 'test/fuzz/cuckoocache.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/cuckoocache.cpp'; fi`

test/fuzz/test_fuzz_fuzz-decode_tx.o: test/fuzz/decode_tx.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-decode_tx.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-decode_tx.Tpo -c -o test/fuzz/test_fuzz_fuzz-decode_tx.o `test -f 'test/fuzz/decode_tx.cpp' || echo '$(srcdir)/'`test/fuzz/decode_tx.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-decode_tx.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-decode_tx.Po
#	$(AM_V_CXX)source='test/fuzz/decode_tx.cpp' object='test/fuzz/test_fuzz_fuzz-decode_tx.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-decode_tx.o `test -f 'test/fuzz/decode_tx.cpp' || echo '$(srcdir)/'`test/fuzz/decode_tx.cpp

test/fuzz/test_fuzz_fuzz-decode_tx.obj: test/fuzz/decode_tx.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-decode_tx.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-decode_tx.Tpo -c -o test/fuzz/test_fuzz_fuzz-decode_tx.obj `if test -f 'test/fuzz/decode_tx.cpp'; then $(CYGPATH_W) 'test/fuzz/decode_tx.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/decode_tx.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-decode_tx.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-decode_tx.Po
#	$(AM_V_CXX)source='test/fuzz/decode_tx.cpp' object='test/fuzz/test_fuzz_fuzz-decode_tx.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-decode_tx.obj `if test -f 'test/fuzz/decode_tx.cpp'; then $(CYGPATH_W) 'test/fuzz/decode_tx.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/decode_tx.cpp'; fi`

test/fuzz/test_fuzz_fuzz-descriptor_parse.o: test/fuzz/descriptor_parse.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-descriptor_parse.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-descriptor_parse.Tpo -c -o test/fuzz/test_fuzz_fuzz-descriptor_parse.o `test -f 'test/fuzz/descriptor_parse.cpp' || echo '$(srcdir)/'`test/fuzz/descriptor_parse.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-descriptor_parse.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-descriptor_parse.Po
#	$(AM_V_CXX)source='test/fuzz/descriptor_parse.cpp' object='test/fuzz/test_fuzz_fuzz-descriptor_parse.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-descriptor_parse.o `test -f 'test/fuzz/descriptor_parse.cpp' || echo '$(srcdir)/'`test/fuzz/descriptor_parse.cpp

test/fuzz/test_fuzz_fuzz-descriptor_parse.obj: test/fuzz/descriptor_parse.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-descriptor_parse.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-descriptor_parse.Tpo -c -o test/fuzz/test_fuzz_fuzz-descriptor_parse.obj `if test -f 'test/fuzz/descriptor_parse.cpp'; then $(CYGPATH_W) 'test/fuzz/descriptor_parse.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/descriptor_parse.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-descriptor_parse.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-descriptor_parse.Po
#	$(AM_V_CXX)source='test/fuzz/descriptor_parse.cpp' object='test/fuzz/test_fuzz_fuzz-descriptor_parse.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-descriptor_parse.obj `if test -f 'test/fuzz/descriptor_parse.cpp'; then $(CYGPATH_W) 'test/fuzz/descriptor_parse.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/descriptor_parse.cpp'; fi`

test/fuzz/test_fuzz_fuzz-deserialize.o: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-deserialize.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-deserialize.Tpo -c -o test/fuzz/test_fuzz_fuzz-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_fuzz-deserialize.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-deserialize.o `test -f 'test/fuzz/deserialize.cpp' || echo '$(srcdir)/'`test/fuzz/deserialize.cpp

test/fuzz/test_fuzz_fuzz-deserialize.obj: test/fuzz/deserialize.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-deserialize.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-deserialize.Tpo -c -o test/fuzz/test_fuzz_fuzz-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-deserialize.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-deserialize.Po
#	$(AM_V_CXX)source='test/fuzz/deserialize.cpp' object='test/fuzz/test_fuzz_fuzz-deserialize.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-deserialize.obj `if test -f 'test/fuzz/deserialize.cpp'; then $(CYGPATH_W) 'test/fuzz/deserialize.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/deserialize.cpp'; fi`

test/fuzz/test_fuzz_fuzz-eval_script.o: test/fuzz/eval_script.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-eval_script.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-eval_script.Tpo -c -o test/fuzz/test_fuzz_fuzz-eval_script.o `test -f 'test/fuzz/eval_script.cpp' || echo '$(srcdir)/'`test/fuzz/eval_script.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-eval_script.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-eval_script.Po
#	$(AM_V_CXX)source='test/fuzz/eval_script.cpp' object='test/fuzz/test_fuzz_fuzz-eval_script.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-eval_script.o `test -f 'test/fuzz/eval_script.cpp' || echo '$(srcdir)/'`test/fuzz/eval_script.cpp

test/fuzz/test_fuzz_fuzz-eval_script.obj: test/fuzz/eval_script.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-eval_script.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-eval_script.Tpo -c -o test/fuzz/test_fuzz_fuzz-eval_script.obj `if test -f 'test/fuzz/eval_script.cpp'; then $(CYGPATH_W) 'test/fuzz/eval_script.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/eval_script.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-eval_script.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-eval_script.Po
#	$(AM_V_CXX)source='test/fuzz/eval_script.cpp' object='test/fuzz/test_fuzz_fuzz-eval_script.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-eval_script.obj `if test -f 'test/fuzz/eval_script.cpp'; then $(CYGPATH_W) 'test/fuzz/eval_script.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/eval_script.cpp'; fi`

test/fuzz/test_fuzz_fuzz-fee_rate.o: test/fuzz/fee_rate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-fee_rate.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-fee_rate.Tpo -c -o test/fuzz/test_fuzz_fuzz-fee_rate.o `test -f 'test/fuzz/fee_rate.cpp' || echo '$(srcdir)/'`test/fuzz/fee_rate.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-fee_rate.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-fee_rate.Po
#	$(AM_V_CXX)source='test/fuzz/fee_rate.cpp' object='test/fuzz/test_fuzz_fuzz-fee_rate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-fee_rate.o `test -f 'test/fuzz/fee_rate.cpp' || echo '$(srcdir)/'`test/fuzz/fee_rate.cpp

test/fuzz/test_fuzz_fuzz-fee_rate.obj: test/fuzz/fee_rate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-fee_rate.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-fee_rate.Tpo -c -o test/fuzz/test_fuzz_fuzz-fee_rate.obj `if test -f 'test/fuzz/fee_rate.cpp'; then $(CYGPATH_W) 'test/fuzz/fee_rate.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fee_rate.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-fee_rate.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-fee_rate.Po
#	$(AM_V_CXX)source='test/fuzz/fee_rate.cpp' object='test/fuzz/test_fuzz_fuzz-fee_rate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-fee_rate.obj `if test -f 'test/fuzz/fee_rate.cpp'; then $(CYGPATH_W) 'test/fuzz/fee_rate.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fee_rate.cpp'; fi`

test/fuzz/test_fuzz_fuzz-fees.o: test/fuzz/fees.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-fees.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-fees.Tpo -c -o test/fuzz/test_fuzz_fuzz-fees.o `test -f 'test/fuzz/fees.cpp' || echo '$(srcdir)/'`test/fuzz/fees.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-fees.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-fees.Po
#	$(AM_V_CXX)source='test/fuzz/fees.cpp' object='test/fuzz/test_fuzz_fuzz-fees.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-fees.o `test -f 'test/fuzz/fees.cpp' || echo '$(srcdir)/'`test/fuzz/fees.cpp

test/fuzz/test_fuzz_fuzz-fees.obj: test/fuzz/fees.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-fees.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-fees.Tpo -c -o test/fuzz/test_fuzz_fuzz-fees.obj `if test -f 'test/fuzz/fees.cpp'; then $(CYGPATH_W) 'test/fuzz/fees.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fees.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-fees.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-fees.Po
#	$(AM_V_CXX)source='test/fuzz/fees.cpp' object='test/fuzz/test_fuzz_fuzz-fees.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-fees.obj `if test -f 'test/fuzz/fees.cpp'; then $(CYGPATH_W) 'test/fuzz/fees.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/fees.cpp'; fi`

test/fuzz/test_fuzz_fuzz-flatfile.o: test/fuzz/flatfile.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-flatfile.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-flatfile.Tpo -c -o test/fuzz/test_fuzz_fuzz-flatfile.o `test -f 'test/fuzz/flatfile.cpp' || echo '$(srcdir)/'`test/fuzz/flatfile.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-flatfile.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-flatfile.Po
#	$(AM_V_CXX)source='test/fuzz/flatfile.cpp' object='test/fuzz/test_fuzz_fuzz-flatfile.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-flatfile.o `test -f 'test/fuzz/flatfile.cpp' || echo '$(srcdir)/'`test/fuzz/flatfile.cpp

test/fuzz/test_fuzz_fuzz-flatfile.obj: test/fuzz/flatfile.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-flatfile.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-flatfile.Tpo -c -o test/fuzz/test_fuzz_fuzz-flatfile.obj `if test -f 'test/fuzz/flatfile.cpp'; then $(CYGPATH_W) 'test/fuzz/flatfile.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/flatfile.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-flatfile.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-flatfile.Po
#	$(AM_V_CXX)source='test/fuzz/flatfile.cpp' object='test/fuzz/test_fuzz_fuzz-flatfile.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-flatfile.obj `if test -f 'test/fuzz/flatfile.cpp'; then $(CYGPATH_W) 'test/fuzz/flatfile.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/flatfile.cpp'; fi`

test/fuzz/test_fuzz_fuzz-float.o: test/fuzz/float.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-float.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-float.Tpo -c -o test/fuzz/test_fuzz_fuzz-float.o `test -f 'test/fuzz/float.cpp' || echo '$(srcdir)/'`test/fuzz/float.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-float.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-float.Po
#	$(AM_V_CXX)source='test/fuzz/float.cpp' object='test/fuzz/test_fuzz_fuzz-float.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-float.o `test -f 'test/fuzz/float.cpp' || echo '$(srcdir)/'`test/fuzz/float.cpp

test/fuzz/test_fuzz_fuzz-float.obj: test/fuzz/float.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-float.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-float.Tpo -c -o test/fuzz/test_fuzz_fuzz-float.obj `if test -f 'test/fuzz/float.cpp'; then $(CYGPATH_W) 'test/fuzz/float.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/float.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-float.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-float.Po
#	$(AM_V_CXX)source='test/fuzz/float.cpp' object='test/fuzz/test_fuzz_fuzz-float.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-float.obj `if test -f 'test/fuzz/float.cpp'; then $(CYGPATH_W) 'test/fuzz/float.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/float.cpp'; fi`

test/fuzz/test_fuzz_fuzz-golomb_rice.o: test/fuzz/golomb_rice.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-golomb_rice.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-golomb_rice.Tpo -c -o test/fuzz/test_fuzz_fuzz-golomb_rice.o `test -f 'test/fuzz/golomb_rice.cpp' || echo '$(srcdir)/'`test/fuzz/golomb_rice.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-golomb_rice.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-golomb_rice.Po
#	$(AM_V_CXX)source='test/fuzz/golomb_rice.cpp' object='test/fuzz/test_fuzz_fuzz-golomb_rice.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-golomb_rice.o `test -f 'test/fuzz/golomb_rice.cpp' || echo '$(srcdir)/'`test/fuzz/golomb_rice.cpp

test/fuzz/test_fuzz_fuzz-golomb_rice.obj: test/fuzz/golomb_rice.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-golomb_rice.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-golomb_rice.Tpo -c -o test/fuzz/test_fuzz_fuzz-golomb_rice.obj `if test -f 'test/fuzz/golomb_rice.cpp'; then $(CYGPATH_W) 'test/fuzz/golomb_rice.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/golomb_rice.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-golomb_rice.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-golomb_rice.Po
#	$(AM_V_CXX)source='test/fuzz/golomb_rice.cpp' object='test/fuzz/test_fuzz_fuzz-golomb_rice.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-golomb_rice.obj `if test -f 'test/fuzz/golomb_rice.cpp'; then $(CYGPATH_W) 'test/fuzz/golomb_rice.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/golomb_rice.cpp'; fi`

test/fuzz/test_fuzz_fuzz-hex.o: test/fuzz/hex.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-hex.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-hex.Tpo -c -o test/fuzz/test_fuzz_fuzz-hex.o `test -f 'test/fuzz/hex.cpp' || echo '$(srcdir)/'`test/fuzz/hex.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-hex.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-hex.Po
#	$(AM_V_CXX)source='test/fuzz/hex.cpp' object='test/fuzz/test_fuzz_fuzz-hex.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-hex.o `test -f 'test/fuzz/hex.cpp' || echo '$(srcdir)/'`test/fuzz/hex.cpp

test/fuzz/test_fuzz_fuzz-hex.obj: test/fuzz/hex.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-hex.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-hex.Tpo -c -o test/fuzz/test_fuzz_fuzz-hex.obj `if test -f 'test/fuzz/hex.cpp'; then $(CYGPATH_W) 'test/fuzz/hex.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/hex.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-hex.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-hex.Po
#	$(AM_V_CXX)source='test/fuzz/hex.cpp' object='test/fuzz/test_fuzz_fuzz-hex.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-hex.obj `if test -f 'test/fuzz/hex.cpp'; then $(CYGPATH_W) 'test/fuzz/hex.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/hex.cpp'; fi`

test/fuzz/test_fuzz_fuzz-http_request.o: test/fuzz/http_request.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-http_request.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-http_request.Tpo -c -o test/fuzz/test_fuzz_fuzz-http_request.o `test -f 'test/fuzz/http_request.cpp' || echo '$(srcdir)/'`test/fuzz/http_request.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-http_request.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-http_request.Po
#	$(AM_V_CXX)source='test/fuzz/http_request.cpp' object='test/fuzz/test_fuzz_fuzz-http_request.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-http_request.o `test -f 'test/fuzz/http_request.cpp' || echo '$(srcdir)/'`test/fuzz/http_request.cpp

test/fuzz/test_fuzz_fuzz-http_request.obj: test/fuzz/http_request.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-http_request.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-http_request.Tpo -c -o test/fuzz/test_fuzz_fuzz-http_request.obj `if test -f 'test/fuzz/http_request.cpp'; then $(CYGPATH_W) 'test/fuzz/http_request.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/http_request.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-http_request.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-http_request.Po
#	$(AM_V_CXX)source='test/fuzz/http_request.cpp' object='test/fuzz/test_fuzz_fuzz-http_request.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-http_request.obj `if test -f 'test/fuzz/http_request.cpp'; then $(CYGPATH_W) 'test/fuzz/http_request.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/http_request.cpp'; fi`

test/fuzz/test_fuzz_fuzz-i2p.o: test/fuzz/i2p.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-i2p.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-i2p.Tpo -c -o test/fuzz/test_fuzz_fuzz-i2p.o `test -f 'test/fuzz/i2p.cpp' || echo '$(srcdir)/'`test/fuzz/i2p.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-i2p.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-i2p.Po
#	$(AM_V_CXX)source='test/fuzz/i2p.cpp' object='test/fuzz/test_fuzz_fuzz-i2p.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-i2p.o `test -f 'test/fuzz/i2p.cpp' || echo '$(srcdir)/'`test/fuzz/i2p.cpp

test/fuzz/test_fuzz_fuzz-i2p.obj: test/fuzz/i2p.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-i2p.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-i2p.Tpo -c -o test/fuzz/test_fuzz_fuzz-i2p.obj `if test -f 'test/fuzz/i2p.cpp'; then $(CYGPATH_W) 'test/fuzz/i2p.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/i2p.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-i2p.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-i2p.Po
#	$(AM_V_CXX)source='test/fuzz/i2p.cpp' object='test/fuzz/test_fuzz_fuzz-i2p.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-i2p.obj `if test -f 'test/fuzz/i2p.cpp'; then $(CYGPATH_W) 'test/fuzz/i2p.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/i2p.cpp'; fi`

test/fuzz/test_fuzz_fuzz-integer.o: test/fuzz/integer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-integer.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-integer.Tpo -c -o test/fuzz/test_fuzz_fuzz-integer.o `test -f 'test/fuzz/integer.cpp' || echo '$(srcdir)/'`test/fuzz/integer.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-integer.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-integer.Po
#	$(AM_V_CXX)source='test/fuzz/integer.cpp' object='test/fuzz/test_fuzz_fuzz-integer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-integer.o `test -f 'test/fuzz/integer.cpp' || echo '$(srcdir)/'`test/fuzz/integer.cpp

test/fuzz/test_fuzz_fuzz-integer.obj: test/fuzz/integer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-integer.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-integer.Tpo -c -o test/fuzz/test_fuzz_fuzz-integer.obj `if test -f 'test/fuzz/integer.cpp'; then $(CYGPATH_W) 'test/fuzz/integer.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/integer.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-integer.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-integer.Po
#	$(AM_V_CXX)source='test/fuzz/integer.cpp' object='test/fuzz/test_fuzz_fuzz-integer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-integer.obj `if test -f 'test/fuzz/integer.cpp'; then $(CYGPATH_W) 'test/fuzz/integer.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/integer.cpp'; fi`

test/fuzz/test_fuzz_fuzz-key.o: test/fuzz/key.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-key.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-key.Tpo -c -o test/fuzz/test_fuzz_fuzz-key.o `test -f 'test/fuzz/key.cpp' || echo '$(srcdir)/'`test/fuzz/key.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-key.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-key.Po
#	$(AM_V_CXX)source='test/fuzz/key.cpp' object='test/fuzz/test_fuzz_fuzz-key.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-key.o `test -f 'test/fuzz/key.cpp' || echo '$(srcdir)/'`test/fuzz/key.cpp

test/fuzz/test_fuzz_fuzz-key.obj: test/fuzz/key.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-key.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-key.Tpo -c -o test/fuzz/test_fuzz_fuzz-key.obj `if test -f 'test/fuzz/key.cpp'; then $(CYGPATH_W) 'test/fuzz/key.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/key.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-key.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-key.Po
#	$(AM_V_CXX)source='test/fuzz/key.cpp' object='test/fuzz/test_fuzz_fuzz-key.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-key.obj `if test -f 'test/fuzz/key.cpp'; then $(CYGPATH_W) 'test/fuzz/key.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/key.cpp'; fi`

test/fuzz/test_fuzz_fuzz-key_io.o: test/fuzz/key_io.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-key_io.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-key_io.Tpo -c -o test/fuzz/test_fuzz_fuzz-key_io.o `test -f 'test/fuzz/key_io.cpp' || echo '$(srcdir)/'`test/fuzz/key_io.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-key_io.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-key_io.Po
#	$(AM_V_CXX)source='test/fuzz/key_io.cpp' object='test/fuzz/test_fuzz_fuzz-key_io.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-key_io.o `test -f 'test/fuzz/key_io.cpp' || echo '$(srcdir)/'`test/fuzz/key_io.cpp

test/fuzz/test_fuzz_fuzz-key_io.obj: test/fuzz/key_io.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-key_io.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-key_io.Tpo -c -o test/fuzz/test_fuzz_fuzz-key_io.obj `if test -f 'test/fuzz/key_io.cpp'; then $(CYGPATH_W) 'test/fuzz/key_io.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/key_io.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-key_io.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-key_io.Po
#	$(AM_V_CXX)source='test/fuzz/key_io.cpp' object='test/fuzz/test_fuzz_fuzz-key_io.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-key_io.obj `if test -f 'test/fuzz/key_io.cpp'; then $(CYGPATH_W) 'test/fuzz/key_io.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/key_io.cpp'; fi`

test/fuzz/test_fuzz_fuzz-kitchen_sink.o: test/fuzz/kitchen_sink.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-kitchen_sink.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-kitchen_sink.Tpo -c -o test/fuzz/test_fuzz_fuzz-kitchen_sink.o `test -f 'test/fuzz/kitchen_sink.cpp' || echo '$(srcdir)/'`test/fuzz/kitchen_sink.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-kitchen_sink.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-kitchen_sink.Po
#	$(AM_V_CXX)source='test/fuzz/kitchen_sink.cpp' object='test/fuzz/test_fuzz_fuzz-kitchen_sink.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-kitchen_sink.o `test -f 'test/fuzz/kitchen_sink.cpp' || echo '$(srcdir)/'`test/fuzz/kitchen_sink.cpp

test/fuzz/test_fuzz_fuzz-kitchen_sink.obj: test/fuzz/kitchen_sink.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-kitchen_sink.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-kitchen_sink.Tpo -c -o test/fuzz/test_fuzz_fuzz-kitchen_sink.obj `if test -f 'test/fuzz/kitchen_sink.cpp'; then $(CYGPATH_W) 'test/fuzz/kitchen_sink.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/kitchen_sink.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-kitchen_sink.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-kitchen_sink.Po
#	$(AM_V_CXX)source='test/fuzz/kitchen_sink.cpp' object='test/fuzz/test_fuzz_fuzz-kitchen_sink.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-kitchen_sink.obj `if test -f 'test/fuzz/kitchen_sink.cpp'; then $(CYGPATH_W) 'test/fuzz/kitchen_sink.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/kitchen_sink.cpp'; fi`

test/fuzz/test_fuzz_fuzz-load_external_block_file.o: test/fuzz/load_external_block_file.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-load_external_block_file.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-load_external_block_file.Tpo -c -o test/fuzz/test_fuzz_fuzz-load_external_block_file.o `test -f 'test/fuzz/load_external_block_file.cpp' || echo '$(srcdir)/'`test/fuzz/load_external_block_file.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-load_external_block_file.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-load_external_block_file.Po
#	$(AM_V_CXX)source='test/fuzz/load_external_block_file.cpp' object='test/fuzz/test_fuzz_fuzz-load_external_block_file.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-load_external_block_file.o `test -f 'test/fuzz/load_external_block_file.cpp' || echo '$(srcdir)/'`test/fuzz/load_external_block_file.cpp

test/fuzz/test_fuzz_fuzz-load_external_block_file.obj: test/fuzz/load_external_block_file.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-load_external_block_file.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-load_external_block_file.Tpo -c -o test/fuzz/test_fuzz_fuzz-load_external_block_file.obj `if test -f 'test/fuzz/load_external_block_file.cpp'; then $(CYGPATH_W) 'test/fuzz/load_external_block_file.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/load_external_block_file.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-load_external_block_file.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-load_external_block_file.Po
#	$(AM_V_CXX)source='test/fuzz/load_external_block_file.cpp' object='test/fuzz/test_fuzz_fuzz-load_external_block_file.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-load_external_block_file.obj `if test -f 'test/fuzz/load_external_block_file.cpp'; then $(CYGPATH_W) 'test/fuzz/load_external_block_file.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/load_external_block_file.cpp'; fi`

test/fuzz/test_fuzz_fuzz-locale.o: test/fuzz/locale.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-locale.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-locale.Tpo -c -o test/fuzz/test_fuzz_fuzz-locale.o `test -f 'test/fuzz/locale.cpp' || echo '$(srcdir)/'`test/fuzz/locale.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-locale.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-locale.Po
#	$(AM_V_CXX)source='test/fuzz/locale.cpp' object='test/fuzz/test_fuzz_fuzz-locale.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-locale.o `test -f 'test/fuzz/locale.cpp' || echo '$(srcdir)/'`test/fuzz/locale.cpp

test/fuzz/test_fuzz_fuzz-locale.obj: test/fuzz/locale.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-locale.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-locale.Tpo -c -o test/fuzz/test_fuzz_fuzz-locale.obj `if test -f 'test/fuzz/locale.cpp'; then $(CYGPATH_W) 'test/fuzz/locale.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/locale.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-locale.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-locale.Po
#	$(AM_V_CXX)source='test/fuzz/locale.cpp' object='test/fuzz/test_fuzz_fuzz-locale.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-locale.obj `if test -f 'test/fuzz/locale.cpp'; then $(CYGPATH_W) 'test/fuzz/locale.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/locale.cpp'; fi`

test/fuzz/test_fuzz_fuzz-merkleblock.o: test/fuzz/merkleblock.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-merkleblock.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-merkleblock.Tpo -c -o test/fuzz/test_fuzz_fuzz-merkleblock.o `test -f 'test/fuzz/merkleblock.cpp' || echo '$(srcdir)/'`test/fuzz/merkleblock.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-merkleblock.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-merkleblock.Po
#	$(AM_V_CXX)source='test/fuzz/merkleblock.cpp' object='test/fuzz/test_fuzz_fuzz-merkleblock.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-merkleblock.o `test -f 'test/fuzz/merkleblock.cpp' || echo '$(srcdir)/'`test/fuzz/merkleblock.cpp

test/fuzz/test_fuzz_fuzz-merkleblock.obj: test/fuzz/merkleblock.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-merkleblock.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-merkleblock.Tpo -c -o test/fuzz/test_fuzz_fuzz-merkleblock.obj `if test -f 'test/fuzz/merkleblock.cpp'; then $(CYGPATH_W) 'test/fuzz/merkleblock.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/merkleblock.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-merkleblock.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-merkleblock.Po
#	$(AM_V_CXX)source='test/fuzz/merkleblock.cpp' object='test/fuzz/test_fuzz_fuzz-merkleblock.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-merkleblock.obj `if test -f 'test/fuzz/merkleblock.cpp'; then $(CYGPATH_W) 'test/fuzz/merkleblock.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/merkleblock.cpp'; fi`

test/fuzz/test_fuzz_fuzz-message.o: test/fuzz/message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-message.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-message.Tpo -c -o test/fuzz/test_fuzz_fuzz-message.o `test -f 'test/fuzz/message.cpp' || echo '$(srcdir)/'`test/fuzz/message.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-message.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-message.Po
#	$(AM_V_CXX)source='test/fuzz/message.cpp' object='test/fuzz/test_fuzz_fuzz-message.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-message.o `test -f 'test/fuzz/message.cpp' || echo '$(srcdir)/'`test/fuzz/message.cpp

test/fuzz/test_fuzz_fuzz-message.obj: test/fuzz/message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-message.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-message.Tpo -c -o test/fuzz/test_fuzz_fuzz-message.obj `if test -f 'test/fuzz/message.cpp'; then $(CYGPATH_W) 'test/fuzz/message.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/message.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-message.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-message.Po
#	$(AM_V_CXX)source='test/fuzz/message.cpp' object='test/fuzz/test_fuzz_fuzz-message.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-message.obj `if test -f 'test/fuzz/message.cpp'; then $(CYGPATH_W) 'test/fuzz/message.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/message.cpp'; fi`

test/fuzz/test_fuzz_fuzz-miniscript.o: test/fuzz/miniscript.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-miniscript.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-miniscript.Tpo -c -o test/fuzz/test_fuzz_fuzz-miniscript.o `test -f 'test/fuzz/miniscript.cpp' || echo '$(srcdir)/'`test/fuzz/miniscript.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-miniscript.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-miniscript.Po
#	$(AM_V_CXX)source='test/fuzz/miniscript.cpp' object='test/fuzz/test_fuzz_fuzz-miniscript.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-miniscript.o `test -f 'test/fuzz/miniscript.cpp' || echo '$(srcdir)/'`test/fuzz/miniscript.cpp

test/fuzz/test_fuzz_fuzz-miniscript.obj: test/fuzz/miniscript.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-miniscript.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-miniscript.Tpo -c -o test/fuzz/test_fuzz_fuzz-miniscript.obj `if test -f 'test/fuzz/miniscript.cpp'; then $(CYGPATH_W) 'test/fuzz/miniscript.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/miniscript.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-miniscript.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-miniscript.Po
#	$(AM_V_CXX)source='test/fuzz/miniscript.cpp' object='test/fuzz/test_fuzz_fuzz-miniscript.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-miniscript.obj `if test -f 'test/fuzz/miniscript.cpp'; then $(CYGPATH_W) 'test/fuzz/miniscript.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/miniscript.cpp'; fi`

test/fuzz/test_fuzz_fuzz-minisketch.o: test/fuzz/minisketch.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-minisketch.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-minisketch.Tpo -c -o test/fuzz/test_fuzz_fuzz-minisketch.o `test -f 'test/fuzz/minisketch.cpp' || echo '$(srcdir)/'`test/fuzz/minisketch.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-minisketch.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-minisketch.Po
#	$(AM_V_CXX)source='test/fuzz/minisketch.cpp' object='test/fuzz/test_fuzz_fuzz-minisketch.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-minisketch.o `test -f 'test/fuzz/minisketch.cpp' || echo '$(srcdir)/'`test/fuzz/minisketch.cpp

test/fuzz/test_fuzz_fuzz-minisketch.obj: test/fuzz/minisketch.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-minisketch.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-minisketch.Tpo -c -o test/fuzz/test_fuzz_fuzz-minisketch.obj `if test -f 'test/fuzz/minisketch.cpp'; then $(CYGPATH_W) 'test/fuzz/minisketch.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/minisketch.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-minisketch.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-minisketch.Po
#	$(AM_V_CXX)source='test/fuzz/minisketch.cpp' object='test/fuzz/test_fuzz_fuzz-minisketch.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-minisketch.obj `if test -f 'test/fuzz/minisketch.cpp'; then $(CYGPATH_W) 'test/fuzz/minisketch.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/minisketch.cpp'; fi`

test/fuzz/test_fuzz_fuzz-muhash.o: test/fuzz/muhash.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-muhash.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-muhash.Tpo -c -o test/fuzz/test_fuzz_fuzz-muhash.o `test -f 'test/fuzz/muhash.cpp' || echo '$(srcdir)/'`test/fuzz/muhash.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-muhash.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-muhash.Po
#	$(AM_V_CXX)source='test/fuzz/muhash.cpp' object='test/fuzz/test_fuzz_fuzz-muhash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-muhash.o `test -f 'test/fuzz/muhash.cpp' || echo '$(srcdir)/'`test/fuzz/muhash.cpp

test/fuzz/test_fuzz_fuzz-muhash.obj: test/fuzz/muhash.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-muhash.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-muhash.Tpo -c -o test/fuzz/test_fuzz_fuzz-muhash.obj `if test -f 'test/fuzz/muhash.cpp'; then $(CYGPATH_W) 'test/fuzz/muhash.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/muhash.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-muhash.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-muhash.Po
#	$(AM_V_CXX)source='test/fuzz/muhash.cpp' object='test/fuzz/test_fuzz_fuzz-muhash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-muhash.obj `if test -f 'test/fuzz/muhash.cpp'; then $(CYGPATH_W) 'test/fuzz/muhash.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/muhash.cpp'; fi`

test/fuzz/test_fuzz_fuzz-multiplication_overflow.o: test/fuzz/multiplication_overflow.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-multiplication_overflow.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-multiplication_overflow.Tpo -c -o test/fuzz/test_fuzz_fuzz-multiplication_overflow.o `test -f 'test/fuzz/multiplication_overflow.cpp' || echo '$(srcdir)/'`test/fuzz/multiplication_overflow.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-multiplication_overflow.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-multiplication_overflow.Po
#	$(AM_V_CXX)source='test/fuzz/multiplication_overflow.cpp' object='test/fuzz/test_fuzz_fuzz-multiplication_overflow.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-multiplication_overflow.o `test -f 'test/fuzz/multiplication_overflow.cpp' || echo '$(srcdir)/'`test/fuzz/multiplication_overflow.cpp

test/fuzz/test_fuzz_fuzz-multiplication_overflow.obj: test/fuzz/multiplication_overflow.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-multiplication_overflow.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-multiplication_overflow.Tpo -c -o test/fuzz/test_fuzz_fuzz-multiplication_overflow.obj `if test -f 'test/fuzz/multiplication_overflow.cpp'; then $(CYGPATH_W) 'test/fuzz/multiplication_overflow.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/multiplication_overflow.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-multiplication_overflow.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-multiplication_overflow.Po
#	$(AM_V_CXX)source='test/fuzz/multiplication_overflow.cpp' object='test/fuzz/test_fuzz_fuzz-multiplication_overflow.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-multiplication_overflow.obj `if test -f 'test/fuzz/multiplication_overflow.cpp'; then $(CYGPATH_W) 'test/fuzz/multiplication_overflow.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/multiplication_overflow.cpp'; fi`

test/fuzz/test_fuzz_fuzz-net.o: test/fuzz/net.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-net.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-net.Tpo -c -o test/fuzz/test_fuzz_fuzz-net.o `test -f 'test/fuzz/net.cpp' || echo '$(srcdir)/'`test/fuzz/net.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-net.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-net.Po
#	$(AM_V_CXX)source='test/fuzz/net.cpp' object='test/fuzz/test_fuzz_fuzz-net.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-net.o `test -f 'test/fuzz/net.cpp' || echo '$(srcdir)/'`test/fuzz/net.cpp

test/fuzz/test_fuzz_fuzz-net.obj: test/fuzz/net.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-net.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-net.Tpo -c -o test/fuzz/test_fuzz_fuzz-net.obj `if test -f 'test/fuzz/net.cpp'; then $(CYGPATH_W) 'test/fuzz/net.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/net.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-net.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-net.Po
#	$(AM_V_CXX)source='test/fuzz/net.cpp' object='test/fuzz/test_fuzz_fuzz-net.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-net.obj `if test -f 'test/fuzz/net.cpp'; then $(CYGPATH_W) 'test/fuzz/net.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/net.cpp'; fi`

test/fuzz/test_fuzz_fuzz-net_permissions.o: test/fuzz/net_permissions.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-net_permissions.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-net_permissions.Tpo -c -o test/fuzz/test_fuzz_fuzz-net_permissions.o `test -f 'test/fuzz/net_permissions.cpp' || echo '$(srcdir)/'`test/fuzz/net_permissions.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-net_permissions.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-net_permissions.Po
#	$(AM_V_CXX)source='test/fuzz/net_permissions.cpp' object='test/fuzz/test_fuzz_fuzz-net_permissions.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-net_permissions.o `test -f 'test/fuzz/net_permissions.cpp' || echo '$(srcdir)/'`test/fuzz/net_permissions.cpp

test/fuzz/test_fuzz_fuzz-net_permissions.obj: test/fuzz/net_permissions.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-net_permissions.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-net_permissions.Tpo -c -o test/fuzz/test_fuzz_fuzz-net_permissions.obj `if test -f 'test/fuzz/net_permissions.cpp'; then $(CYGPATH_W) 'test/fuzz/net_permissions.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/net_permissions.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-net_permissions.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-net_permissions.Po
#	$(AM_V_CXX)source='test/fuzz/net_permissions.cpp' object='test/fuzz/test_fuzz_fuzz-net_permissions.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-net_permissions.obj `if test -f 'test/fuzz/net_permissions.cpp'; then $(CYGPATH_W) 'test/fuzz/net_permissions.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/net_permissions.cpp'; fi`

test/fuzz/test_fuzz_fuzz-netaddress.o: test/fuzz/netaddress.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-netaddress.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-netaddress.Tpo -c -o test/fuzz/test_fuzz_fuzz-netaddress.o `test -f 'test/fuzz/netaddress.cpp' || echo '$(srcdir)/'`test/fuzz/netaddress.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-netaddress.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-netaddress.Po
#	$(AM_V_CXX)source='test/fuzz/netaddress.cpp' object='test/fuzz/test_fuzz_fuzz-netaddress.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-netaddress.o `test -f 'test/fuzz/netaddress.cpp' || echo '$(srcdir)/'`test/fuzz/netaddress.cpp

test/fuzz/test_fuzz_fuzz-netaddress.obj: test/fuzz/netaddress.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-netaddress.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-netaddress.Tpo -c -o test/fuzz/test_fuzz_fuzz-netaddress.obj `if test -f 'test/fuzz/netaddress.cpp'; then $(CYGPATH_W) 'test/fuzz/netaddress.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/netaddress.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-netaddress.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-netaddress.Po
#	$(AM_V_CXX)source='test/fuzz/netaddress.cpp' object='test/fuzz/test_fuzz_fuzz-netaddress.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-netaddress.obj `if test -f 'test/fuzz/netaddress.cpp'; then $(CYGPATH_W) 'test/fuzz/netaddress.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/netaddress.cpp'; fi`

test/fuzz/test_fuzz_fuzz-netbase_dns_lookup.o: test/fuzz/netbase_dns_lookup.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-netbase_dns_lookup.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-netbase_dns_lookup.Tpo -c -o test/fuzz/test_fuzz_fuzz-netbase_dns_lookup.o `test -f 'test/fuzz/netbase_dns_lookup.cpp' || echo '$(srcdir)/'`test/fuzz/netbase_dns_lookup.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-netbase_dns_lookup.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-netbase_dns_lookup.Po
#	$(AM_V_CXX)source='test/fuzz/netbase_dns_lookup.cpp' object='test/fuzz/test_fuzz_fuzz-netbase_dns_lookup.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-netbase_dns_lookup.o `test -f 'test/fuzz/netbase_dns_lookup.cpp' || echo '$(srcdir)/'`test/fuzz/netbase_dns_lookup.cpp

test/fuzz/test_fuzz_fuzz-netbase_dns_lookup.obj: test/fuzz/netbase_dns_lookup.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-netbase_dns_lookup.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-netbase_dns_lookup.Tpo -c -o test/fuzz/test_fuzz_fuzz-netbase_dns_lookup.obj `if test -f 'test/fuzz/netbase_dns_lookup.cpp'; then $(CYGPATH_W) 'test/fuzz/netbase_dns_lookup.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/netbase_dns_lookup.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-netbase_dns_lookup.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-netbase_dns_lookup.Po
#	$(AM_V_CXX)source='test/fuzz/netbase_dns_lookup.cpp' object='test/fuzz/test_fuzz_fuzz-netbase_dns_lookup.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-netbase_dns_lookup.obj `if test -f 'test/fuzz/netbase_dns_lookup.cpp'; then $(CYGPATH_W) 'test/fuzz/netbase_dns_lookup.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/netbase_dns_lookup.cpp'; fi`

test/fuzz/test_fuzz_fuzz-node_eviction.o: test/fuzz/node_eviction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-node_eviction.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-node_eviction.Tpo -c -o test/fuzz/test_fuzz_fuzz-node_eviction.o `test -f 'test/fuzz/node_eviction.cpp' || echo '$(srcdir)/'`test/fuzz/node_eviction.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-node_eviction.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-node_eviction.Po
#	$(AM_V_CXX)source='test/fuzz/node_eviction.cpp' object='test/fuzz/test_fuzz_fuzz-node_eviction.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-node_eviction.o `test -f 'test/fuzz/node_eviction.cpp' || echo '$(srcdir)/'`test/fuzz/node_eviction.cpp

test/fuzz/test_fuzz_fuzz-node_eviction.obj: test/fuzz/node_eviction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-node_eviction.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-node_eviction.Tpo -c -o test/fuzz/test_fuzz_fuzz-node_eviction.obj `if test -f 'test/fuzz/node_eviction.cpp'; then $(CYGPATH_W) 'test/fuzz/node_eviction.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/node_eviction.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-node_eviction.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-node_eviction.Po
#	$(AM_V_CXX)source='test/fuzz/node_eviction.cpp' object='test/fuzz/test_fuzz_fuzz-node_eviction.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-node_eviction.obj `if test -f 'test/fuzz/node_eviction.cpp'; then $(CYGPATH_W) 'test/fuzz/node_eviction.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/node_eviction.cpp'; fi`

test/fuzz/test_fuzz_fuzz-p2p_transport_serialization.o: test/fuzz/p2p_transport_serialization.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-p2p_transport_serialization.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-p2p_transport_serialization.Tpo -c -o test/fuzz/test_fuzz_fuzz-p2p_transport_serialization.o `test -f 'test/fuzz/p2p_transport_serialization.cpp' || echo '$(srcdir)/'`test/fuzz/p2p_transport_serialization.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-p2p_transport_serialization.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-p2p_transport_serialization.Po
#	$(AM_V_CXX)source='test/fuzz/p2p_transport_serialization.cpp' object='test/fuzz/test_fuzz_fuzz-p2p_transport_serialization.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-p2p_transport_serialization.o `test -f 'test/fuzz/p2p_transport_serialization.cpp' || echo '$(srcdir)/'`test/fuzz/p2p_transport_serialization.cpp

test/fuzz/test_fuzz_fuzz-p2p_transport_serialization.obj: test/fuzz/p2p_transport_serialization.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-p2p_transport_serialization.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-p2p_transport_serialization.Tpo -c -o test/fuzz/test_fuzz_fuzz-p2p_transport_serialization.obj `if test -f 'test/fuzz/p2p_transport_serialization.cpp'; then $(CYGPATH_W) 'test/fuzz/p2p_transport_serialization.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/p2p_transport_serialization.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-p2p_transport_serialization.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-p2p_transport_serialization.Po
#	$(AM_V_CXX)source='test/fuzz/p2p_transport_serialization.cpp' object='test/fuzz/test_fuzz_fuzz-p2p_transport_serialization.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-p2p_transport_serialization.obj `if test -f 'test/fuzz/p2p_transport_serialization.cpp'; then $(CYGPATH_W) 'test/fuzz/p2p_transport_serialization.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/p2p_transport_serialization.cpp'; fi`

test/fuzz/test_fuzz_fuzz-parse_hd_keypath.o: test/fuzz/parse_hd_keypath.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-parse_hd_keypath.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-parse_hd_keypath.Tpo -c -o test/fuzz/test_fuzz_fuzz-parse_hd_keypath.o `test -f 'test/fuzz/parse_hd_keypath.cpp' || echo '$(srcdir)/'`test/fuzz/parse_hd_keypath.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-parse_hd_keypath.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-parse_hd_keypath.Po
#	$(AM_V_CXX)source='test/fuzz/parse_hd_keypath.cpp' object='test/fuzz/test_fuzz_fuzz-parse_hd_keypath.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-parse_hd_keypath.o `test -f 'test/fuzz/parse_hd_keypath.cpp' || echo '$(srcdir)/'`test/fuzz/parse_hd_keypath.cpp

test/fuzz/test_fuzz_fuzz-parse_hd_keypath.obj: test/fuzz/parse_hd_keypath.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-parse_hd_keypath.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-parse_hd_keypath.Tpo -c -o test/fuzz/test_fuzz_fuzz-parse_hd_keypath.obj `if test -f 'test/fuzz/parse_hd_keypath.cpp'; then $(CYGPATH_W) 'test/fuzz/parse_hd_keypath.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/parse_hd_keypath.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-parse_hd_keypath.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-parse_hd_keypath.Po
#	$(AM_V_CXX)source='test/fuzz/parse_hd_keypath.cpp' object='test/fuzz/test_fuzz_fuzz-parse_hd_keypath.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-parse_hd_keypath.obj `if test -f 'test/fuzz/parse_hd_keypath.cpp'; then $(CYGPATH_W) 'test/fuzz/parse_hd_keypath.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/parse_hd_keypath.cpp'; fi`

test/fuzz/test_fuzz_fuzz-parse_iso8601.o: test/fuzz/parse_iso8601.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-parse_iso8601.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-parse_iso8601.Tpo -c -o test/fuzz/test_fuzz_fuzz-parse_iso8601.o `test -f 'test/fuzz/parse_iso8601.cpp' || echo '$(srcdir)/'`test/fuzz/parse_iso8601.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-parse_iso8601.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-parse_iso8601.Po
#	$(AM_V_CXX)source='test/fuzz/parse_iso8601.cpp' object='test/fuzz/test_fuzz_fuzz-parse_iso8601.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-parse_iso8601.o `test -f 'test/fuzz/parse_iso8601.cpp' || echo '$(srcdir)/'`test/fuzz/parse_iso8601.cpp

test/fuzz/test_fuzz_fuzz-parse_iso8601.obj: test/fuzz/parse_iso8601.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-parse_iso8601.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-parse_iso8601.Tpo -c -o test/fuzz/test_fuzz_fuzz-parse_iso8601.obj `if test -f 'test/fuzz/parse_iso8601.cpp'; then $(CYGPATH_W) 'test/fuzz/parse_iso8601.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/parse_iso8601.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-parse_iso8601.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-parse_iso8601.Po
#	$(AM_V_CXX)source='test/fuzz/parse_iso8601.cpp' object='test/fuzz/test_fuzz_fuzz-parse_iso8601.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-parse_iso8601.obj `if test -f 'test/fuzz/parse_iso8601.cpp'; then $(CYGPATH_W) 'test/fuzz/parse_iso8601.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/parse_iso8601.cpp'; fi`

test/fuzz/test_fuzz_fuzz-parse_numbers.o: test/fuzz/parse_numbers.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-parse_numbers.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-parse_numbers.Tpo -c -o test/fuzz/test_fuzz_fuzz-parse_numbers.o `test -f 'test/fuzz/parse_numbers.cpp' || echo '$(srcdir)/'`test/fuzz/parse_numbers.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-parse_numbers.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-parse_numbers.Po
#	$(AM_V_CXX)source='test/fuzz/parse_numbers.cpp' object='test/fuzz/test_fuzz_fuzz-parse_numbers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-parse_numbers.o `test -f 'test/fuzz/parse_numbers.cpp' || echo '$(srcdir)/'`test/fuzz/parse_numbers.cpp

test/fuzz/test_fuzz_fuzz-parse_numbers.obj: test/fuzz/parse_numbers.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-parse_numbers.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-parse_numbers.Tpo -c -o test/fuzz/test_fuzz_fuzz-parse_numbers.obj `if test -f 'test/fuzz/parse_numbers.cpp'; then $(CYGPATH_W) 'test/fuzz/parse_numbers.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/parse_numbers.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-parse_numbers.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-parse_numbers.Po
#	$(AM_V_CXX)source='test/fuzz/parse_numbers.cpp' object='test/fuzz/test_fuzz_fuzz-parse_numbers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-parse_numbers.obj `if test -f 'test/fuzz/parse_numbers.cpp'; then $(CYGPATH_W) 'test/fuzz/parse_numbers.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/parse_numbers.cpp'; fi`

test/fuzz/test_fuzz_fuzz-parse_script.o: test/fuzz/parse_script.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-parse_script.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-parse_script.Tpo -c -o test/fuzz/test_fuzz_fuzz-parse_script.o `test -f 'test/fuzz/parse_script.cpp' || echo '$(srcdir)/'`test/fuzz/parse_script.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-parse_script.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-parse_script.Po
#	$(AM_V_CXX)source='test/fuzz/parse_script.cpp' object='test/fuzz/test_fuzz_fuzz-parse_script.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-parse_script.o `test -f 'test/fuzz/parse_script.cpp' || echo '$(srcdir)/'`test/fuzz/parse_script.cpp

test/fuzz/test_fuzz_fuzz-parse_script.obj: test/fuzz/parse_script.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-parse_script.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-parse_script.Tpo -c -o test/fuzz/test_fuzz_fuzz-parse_script.obj `if test -f 'test/fuzz/parse_script.cpp'; then $(CYGPATH_W) 'test/fuzz/parse_script.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/parse_script.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-parse_script.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-parse_script.Po
#	$(AM_V_CXX)source='test/fuzz/parse_script.cpp' object='test/fuzz/test_fuzz_fuzz-parse_script.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-parse_script.obj `if test -f 'test/fuzz/parse_script.cpp'; then $(CYGPATH_W) 'test/fuzz/parse_script.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/parse_script.cpp'; fi`

test/fuzz/test_fuzz_fuzz-parse_univalue.o: test/fuzz/parse_univalue.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-parse_univalue.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-parse_univalue.Tpo -c -o test/fuzz/test_fuzz_fuzz-parse_univalue.o `test -f 'test/fuzz/parse_univalue.cpp' || echo '$(srcdir)/'`test/fuzz/parse_univalue.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-parse_univalue.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-parse_univalue.Po
#	$(AM_V_CXX)source='test/fuzz/parse_univalue.cpp' object='test/fuzz/test_fuzz_fuzz-parse_univalue.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-parse_univalue.o `test -f 'test/fuzz/parse_univalue.cpp' || echo '$(srcdir)/'`test/fuzz/parse_univalue.cpp

test/fuzz/test_fuzz_fuzz-parse_univalue.obj: test/fuzz/parse_univalue.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-parse_univalue.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-parse_univalue.Tpo -c -o test/fuzz/test_fuzz_fuzz-parse_univalue.obj `if test -f 'test/fuzz/parse_univalue.cpp'; then $(CYGPATH_W) 'test/fuzz/parse_univalue.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/parse_univalue.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-parse_univalue.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-parse_univalue.Po
#	$(AM_V_CXX)source='test/fuzz/parse_univalue.cpp' object='test/fuzz/test_fuzz_fuzz-parse_univalue.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-parse_univalue.obj `if test -f 'test/fuzz/parse_univalue.cpp'; then $(CYGPATH_W) 'test/fuzz/parse_univalue.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/parse_univalue.cpp'; fi`

test/fuzz/test_fuzz_fuzz-policy_estimator.o: test/fuzz/policy_estimator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-policy_estimator.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-policy_estimator.Tpo -c -o test/fuzz/test_fuzz_fuzz-policy_estimator.o `test -f 'test/fuzz/policy_estimator.cpp' || echo '$(srcdir)/'`test/fuzz/policy_estimator.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-policy_estimator.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-policy_estimator.Po
#	$(AM_V_CXX)source='test/fuzz/policy_estimator.cpp' object='test/fuzz/test_fuzz_fuzz-policy_estimator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-policy_estimator.o `test -f 'test/fuzz/policy_estimator.cpp' || echo '$(srcdir)/'`test/fuzz/policy_estimator.cpp

test/fuzz/test_fuzz_fuzz-policy_estimator.obj: test/fuzz/policy_estimator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-policy_estimator.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-policy_estimator.Tpo -c -o test/fuzz/test_fuzz_fuzz-policy_estimator.obj `if test -f 'test/fuzz/policy_estimator.cpp'; then $(CYGPATH_W) 'test/fuzz/policy_estimator.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/policy_estimator.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-policy_estimator.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-policy_estimator.Po
#	$(AM_V_CXX)source='test/fuzz/policy_estimator.cpp' object='test/fuzz/test_fuzz_fuzz-policy_estimator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-policy_estimator.obj `if test -f 'test/fuzz/policy_estimator.cpp'; then $(CYGPATH_W) 'test/fuzz/policy_estimator.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/policy_estimator.cpp'; fi`

test/fuzz/test_fuzz_fuzz-policy_estimator_io.o: test/fuzz/policy_estimator_io.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-policy_estimator_io.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-policy_estimator_io.Tpo -c -o test/fuzz/test_fuzz_fuzz-policy_estimator_io.o `test -f 'test/fuzz/policy_estimator_io.cpp' || echo '$(srcdir)/'`test/fuzz/policy_estimator_io.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-policy_estimator_io.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-policy_estimator_io.Po
#	$(AM_V_CXX)source='test/fuzz/policy_estimator_io.cpp' object='test/fuzz/test_fuzz_fuzz-policy_estimator_io.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-policy_estimator_io.o `test -f 'test/fuzz/policy_estimator_io.cpp' || echo '$(srcdir)/'`test/fuzz/policy_estimator_io.cpp

test/fuzz/test_fuzz_fuzz-policy_estimator_io.obj: test/fuzz/policy_estimator_io.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-policy_estimator_io.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-policy_estimator_io.Tpo -c -o test/fuzz/test_fuzz_fuzz-policy_estimator_io.obj `if test -f 'test/fuzz/policy_estimator_io.cpp'; then $(CYGPATH_W) 'test/fuzz/policy_estimator_io.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/policy_estimator_io.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-policy_estimator_io.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-policy_estimator_io.Po
#	$(AM_V_CXX)source='test/fuzz/policy_estimator_io.cpp' object='test/fuzz/test_fuzz_fuzz-policy_estimator_io.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-policy_estimator_io.obj `if test -f 'test/fuzz/policy_estimator_io.cpp'; then $(CYGPATH_W) 'test/fuzz/policy_estimator_io.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/policy_estimator_io.cpp'; fi`

test/fuzz/test_fuzz_fuzz-pow.o: test/fuzz/pow.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-pow.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-pow.Tpo -c -o test/fuzz/test_fuzz_fuzz-pow.o `test -f 'test/fuzz/pow.cpp' || echo '$(srcdir)/'`test/fuzz/pow.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-pow.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-pow.Po
#	$(AM_V_CXX)source='test/fuzz/pow.cpp' object='test/fuzz/test_fuzz_fuzz-pow.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-pow.o `test -f 'test/fuzz/pow.cpp' || echo '$(srcdir)/'`test/fuzz/pow.cpp

test/fuzz/test_fuzz_fuzz-pow.obj: test/fuzz/pow.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-pow.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-pow.Tpo -c -o test/fuzz/test_fuzz_fuzz-pow.obj `if test -f 'test/fuzz/pow.cpp'; then $(CYGPATH_W) 'test/fuzz/pow.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/pow.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-pow.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-pow.Po
#	$(AM_V_CXX)source='test/fuzz/pow.cpp' object='test/fuzz/test_fuzz_fuzz-pow.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-pow.obj `if test -f 'test/fuzz/pow.cpp'; then $(CYGPATH_W) 'test/fuzz/pow.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/pow.cpp'; fi`

test/fuzz/test_fuzz_fuzz-prevector.o: test/fuzz/prevector.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-prevector.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-prevector.Tpo -c -o test/fuzz/test_fuzz_fuzz-prevector.o `test -f 'test/fuzz/prevector.cpp' || echo '$(srcdir)/'`test/fuzz/prevector.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-prevector.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-prevector.Po
#	$(AM_V_CXX)source='test/fuzz/prevector.cpp' object='test/fuzz/test_fuzz_fuzz-prevector.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-prevector.o `test -f 'test/fuzz/prevector.cpp' || echo '$(srcdir)/'`test/fuzz/prevector.cpp

test/fuzz/test_fuzz_fuzz-prevector.obj: test/fuzz/prevector.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-prevector.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-prevector.Tpo -c -o test/fuzz/test_fuzz_fuzz-prevector.obj `if test -f 'test/fuzz/prevector.cpp'; then $(CYGPATH_W) 'test/fuzz/prevector.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/prevector.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-prevector.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-prevector.Po
#	$(AM_V_CXX)source='test/fuzz/prevector.cpp' object='test/fuzz/test_fuzz_fuzz-prevector.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-prevector.obj `if test -f 'test/fuzz/prevector.cpp'; then $(CYGPATH_W) 'test/fuzz/prevector.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/prevector.cpp'; fi`

test/fuzz/test_fuzz_fuzz-primitives_transaction.o: test/fuzz/primitives_transaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-primitives_transaction.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-primitives_transaction.Tpo -c -o test/fuzz/test_fuzz_fuzz-primitives_transaction.o `test -f 'test/fuzz/primitives_transaction.cpp' || echo '$(srcdir)/'`test/fuzz/primitives_transaction.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-primitives_transaction.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-primitives_transaction.Po
#	$(AM_V_CXX)source='test/fuzz/primitives_transaction.cpp' object='test/fuzz/test_fuzz_fuzz-primitives_transaction.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-primitives_transaction.o `test -f 'test/fuzz/primitives_transaction.cpp' || echo '$(srcdir)/'`test/fuzz/primitives_transaction.cpp

test/fuzz/test_fuzz_fuzz-primitives_transaction.obj: test/fuzz/primitives_transaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-primitives_transaction.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-primitives_transaction.Tpo -c -o test/fuzz/test_fuzz_fuzz-primitives_transaction.obj `if test -f 'test/fuzz/primitives_transaction.cpp'; then $(CYGPATH_W) 'test/fuzz/primitives_transaction.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/primitives_transaction.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-primitives_transaction.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-primitives_transaction.Po
#	$(AM_V_CXX)source='test/fuzz/primitives_transaction.cpp' object='test/fuzz/test_fuzz_fuzz-primitives_transaction.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-primitives_transaction.obj `if test -f 'test/fuzz/primitives_transaction.cpp'; then $(CYGPATH_W) 'test/fuzz/primitives_transaction.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/primitives_transaction.cpp'; fi`

test/fuzz/test_fuzz_fuzz-process_message.o: test/fuzz/process_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-process_message.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-process_message.Tpo -c -o test/fuzz/test_fuzz_fuzz-process_message.o `test -f 'test/fuzz/process_message.cpp' || echo '$(srcdir)/'`test/fuzz/process_message.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-process_message.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-process_message.Po
#	$(AM_V_CXX)source='test/fuzz/process_message.cpp' object='test/fuzz/test_fuzz_fuzz-process_message.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-process_message.o `test -f 'test/fuzz/process_message.cpp' || echo '$(srcdir)/'`test/fuzz/process_message.cpp

test/fuzz/test_fuzz_fuzz-process_message.obj: test/fuzz/process_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-process_message.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-process_message.Tpo -c -o test/fuzz/test_fuzz_fuzz-process_message.obj `if test -f 'test/fuzz/process_message.cpp'; then $(CYGPATH_W) 'test/fuzz/process_message.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/process_message.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-process_message.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-process_message.Po
#	$(AM_V_CXX)source='test/fuzz/process_message.cpp' object='test/fuzz/test_fuzz_fuzz-process_message.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-process_message.obj `if test -f 'test/fuzz/process_message.cpp'; then $(CYGPATH_W) 'test/fuzz/process_message.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/process_message.cpp'; fi`

test/fuzz/test_fuzz_fuzz-process_messages.o: test/fuzz/process_messages.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-process_messages.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-process_messages.Tpo -c -o test/fuzz/test_fuzz_fuzz-process_messages.o `test -f 'test/fuzz/process_messages.cpp' || echo '$(srcdir)/'`test/fuzz/process_messages.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-process_messages.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-process_messages.Po
#	$(AM_V_CXX)source='test/fuzz/process_messages.cpp' object='test/fuzz/test_fuzz_fuzz-process_messages.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-process_messages.o `test -f 'test/fuzz/process_messages.cpp' || echo '$(srcdir)/'`test/fuzz/process_messages.cpp

test/fuzz/test_fuzz_fuzz-process_messages.obj: test/fuzz/process_messages.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-process_messages.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-process_messages.Tpo -c -o test/fuzz/test_fuzz_fuzz-process_messages.obj `if test -f 'test/fuzz/process_messages.cpp'; then $(CYGPATH_W) 'test/fuzz/process_messages.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/process_messages.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-process_messages.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-process_messages.Po
#	$(AM_V_CXX)source='test/fuzz/process_messages.cpp' object='test/fuzz/test_fuzz_fuzz-process_messages.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-process_messages.obj `if test -f 'test/fuzz/process_messages.cpp'; then $(CYGPATH_W) 'test/fuzz/process_messages.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/process_messages.cpp'; fi`

test/fuzz/test_fuzz_fuzz-protocol.o: test/fuzz/protocol.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-protocol.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-protocol.Tpo -c -o test/fuzz/test_fuzz_fuzz-protocol.o `test -f 'test/fuzz/protocol.cpp' || echo '$(srcdir)/'`test/fuzz/protocol.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-protocol.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-protocol.Po
#	$(AM_V_CXX)source='test/fuzz/protocol.cpp' object='test/fuzz/test_fuzz_fuzz-protocol.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-protocol.o `test -f 'test/fuzz/protocol.cpp' || echo '$(srcdir)/'`test/fuzz/protocol.cpp

test/fuzz/test_fuzz_fuzz-protocol.obj: test/fuzz/protocol.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-protocol.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-protocol.Tpo -c -o test/fuzz/test_fuzz_fuzz-protocol.obj `if test -f 'test/fuzz/protocol.cpp'; then $(CYGPATH_W) 'test/fuzz/protocol.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/protocol.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-protocol.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-protocol.Po
#	$(AM_V_CXX)source='test/fuzz/protocol.cpp' object='test/fuzz/test_fuzz_fuzz-protocol.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-protocol.obj `if test -f 'test/fuzz/protocol.cpp'; then $(CYGPATH_W) 'test/fuzz/protocol.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/protocol.cpp'; fi`

test/fuzz/test_fuzz_fuzz-psbt.o: test/fuzz/psbt.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-psbt.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-psbt.Tpo -c -o test/fuzz/test_fuzz_fuzz-psbt.o `test -f 'test/fuzz/psbt.cpp' || echo '$(srcdir)/'`test/fuzz/psbt.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-psbt.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-psbt.Po
#	$(AM_V_CXX)source='test/fuzz/psbt.cpp' object='test/fuzz/test_fuzz_fuzz-psbt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-psbt.o `test -f 'test/fuzz/psbt.cpp' || echo '$(srcdir)/'`test/fuzz/psbt.cpp

test/fuzz/test_fuzz_fuzz-psbt.obj: test/fuzz/psbt.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-psbt.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-psbt.Tpo -c -o test/fuzz/test_fuzz_fuzz-psbt.obj `if test -f 'test/fuzz/psbt.cpp'; then $(CYGPATH_W) 'test/fuzz/psbt.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/psbt.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-psbt.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-psbt.Po
#	$(AM_V_CXX)source='test/fuzz/psbt.cpp' object='test/fuzz/test_fuzz_fuzz-psbt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-psbt.obj `if test -f 'test/fuzz/psbt.cpp'; then $(CYGPATH_W) 'test/fuzz/psbt.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/psbt.cpp'; fi`

test/fuzz/test_fuzz_fuzz-random.o: test/fuzz/random.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-random.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-random.Tpo -c -o test/fuzz/test_fuzz_fuzz-random.o `test -f 'test/fuzz/random.cpp' || echo '$(srcdir)/'`test/fuzz/random.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-random.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-random.Po
#	$(AM_V_CXX)source='test/fuzz/random.cpp' object='test/fuzz/test_fuzz_fuzz-random.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-random.o `test -f 'test/fuzz/random.cpp' || echo '$(srcdir)/'`test/fuzz/random.cpp

test/fuzz/test_fuzz_fuzz-random.obj: test/fuzz/random.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-random.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-random.Tpo -c -o test/fuzz/test_fuzz_fuzz-random.obj `if test -f 'test/fuzz/random.cpp'; then $(CYGPATH_W) 'test/fuzz/random.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/random.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-random.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-random.Po
#	$(AM_V_CXX)source='test/fuzz/random.cpp' object='test/fuzz/test_fuzz_fuzz-random.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-random.obj `if test -f 'test/fuzz/random.cpp'; then $(CYGPATH_W) 'test/fuzz/random.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/random.cpp'; fi`

test/fuzz/test_fuzz_fuzz-rbf.o: test/fuzz/rbf.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-rbf.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-rbf.Tpo -c -o test/fuzz/test_fuzz_fuzz-rbf.o `test -f 'test/fuzz/rbf.cpp' || echo '$(srcdir)/'`test/fuzz/rbf.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-rbf.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-rbf.Po
#	$(AM_V_CXX)source='test/fuzz/rbf.cpp' object='test/fuzz/test_fuzz_fuzz-rbf.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-rbf.o `test -f 'test/fuzz/rbf.cpp' || echo '$(srcdir)/'`test/fuzz/rbf.cpp

test/fuzz/test_fuzz_fuzz-rbf.obj: test/fuzz/rbf.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-rbf.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-rbf.Tpo -c -o test/fuzz/test_fuzz_fuzz-rbf.obj `if test -f 'test/fuzz/rbf.cpp'; then $(CYGPATH_W) 'test/fuzz/rbf.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/rbf.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-rbf.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-rbf.Po
#	$(AM_V_CXX)source='test/fuzz/rbf.cpp' object='test/fuzz/test_fuzz_fuzz-rbf.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-rbf.obj `if test -f 'test/fuzz/rbf.cpp'; then $(CYGPATH_W) 'test/fuzz/rbf.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/rbf.cpp'; fi`

test/fuzz/test_fuzz_fuzz-rolling_bloom_filter.o: test/fuzz/rolling_bloom_filter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-rolling_bloom_filter.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-rolling_bloom_filter.Tpo -c -o test/fuzz/test_fuzz_fuzz-rolling_bloom_filter.o `test -f 'test/fuzz/rolling_bloom_filter.cpp' || echo '$(srcdir)/'`test/fuzz/rolling_bloom_filter.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-rolling_bloom_filter.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-rolling_bloom_filter.Po
#	$(AM_V_CXX)source='test/fuzz/rolling_bloom_filter.cpp' object='test/fuzz/test_fuzz_fuzz-rolling_bloom_filter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-rolling_bloom_filter.o `test -f 'test/fuzz/rolling_bloom_filter.cpp' || echo '$(srcdir)/'`test/fuzz/rolling_bloom_filter.cpp

test/fuzz/test_fuzz_fuzz-rolling_bloom_filter.obj: test/fuzz/rolling_bloom_filter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-rolling_bloom_filter.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-rolling_bloom_filter.Tpo -c -o test/fuzz/test_fuzz_fuzz-rolling_bloom_filter.obj `if test -f 'test/fuzz/rolling_bloom_filter.cpp'; then $(CYGPATH_W) 'test/fuzz/rolling_bloom_filter.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/rolling_bloom_filter.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-rolling_bloom_filter.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-rolling_bloom_filter.Po
#	$(AM_V_CXX)source='test/fuzz/rolling_bloom_filter.cpp' object='test/fuzz/test_fuzz_fuzz-rolling_bloom_filter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-rolling_bloom_filter.obj `if test -f 'test/fuzz/rolling_bloom_filter.cpp'; then $(CYGPATH_W) 'test/fuzz/rolling_bloom_filter.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/rolling_bloom_filter.cpp'; fi`

test/fuzz/test_fuzz_fuzz-rpc.o: test/fuzz/rpc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-rpc.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-rpc.Tpo -c -o test/fuzz/test_fuzz_fuzz-rpc.o `test -f 'test/fuzz/rpc.cpp' || echo '$(srcdir)/'`test/fuzz/rpc.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-rpc.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-rpc.Po
#	$(AM_V_CXX)source='test/fuzz/rpc.cpp' object='test/fuzz/test_fuzz_fuzz-rpc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-rpc.o `test -f 'test/fuzz/rpc.cpp' || echo '$(srcdir)/'`test/fuzz/rpc.cpp

test/fuzz/test_fuzz_fuzz-rpc.obj: test/fuzz/rpc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-rpc.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-rpc.Tpo -c -o test/fuzz/test_fuzz_fuzz-rpc.obj `if test -f 'test/fuzz/rpc.cpp'; then $(CYGPATH_W) 'test/fuzz/rpc.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/rpc.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-rpc.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-rpc.Po
#	$(AM_V_CXX)source='test/fuzz/rpc.cpp' object='test/fuzz/test_fuzz_fuzz-rpc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-rpc.obj `if test -f 'test/fuzz/rpc.cpp'; then $(CYGPATH_W) 'test/fuzz/rpc.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/rpc.cpp'; fi`

test/fuzz/test_fuzz_fuzz-script.o: test/fuzz/script.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-script.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script.Tpo -c -o test/fuzz/test_fuzz_fuzz-script.o `test -f 'test/fuzz/script.cpp' || echo '$(srcdir)/'`test/fuzz/script.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script.Po
#	$(AM_V_CXX)source='test/fuzz/script.cpp' object='test/fuzz/test_fuzz_fuzz-script.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-script.o `test -f 'test/fuzz/script.cpp' || echo '$(srcdir)/'`test/fuzz/script.cpp

test/fuzz/test_fuzz_fuzz-script.obj: test/fuzz/script.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-script.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script.Tpo -c -o test/fuzz/test_fuzz_fuzz-script.obj `if test -f 'test/fuzz/script.cpp'; then $(CYGPATH_W) 'test/fuzz/script.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/script.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script.Po
#	$(AM_V_CXX)source='test/fuzz/script.cpp' object='test/fuzz/test_fuzz_fuzz-script.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-script.obj `if test -f 'test/fuzz/script.cpp'; then $(CYGPATH_W) 'test/fuzz/script.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/script.cpp'; fi`

test/fuzz/test_fuzz_fuzz-script_assets_test_minimizer.o: test/fuzz/script_assets_test_minimizer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-script_assets_test_minimizer.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_assets_test_minimizer.Tpo -c -o test/fuzz/test_fuzz_fuzz-script_assets_test_minimizer.o `test -f 'test/fuzz/script_assets_test_minimizer.cpp' || echo '$(srcdir)/'`test/fuzz/script_assets_test_minimizer.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_assets_test_minimizer.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_assets_test_minimizer.Po
#	$(AM_V_CXX)source='test/fuzz/script_assets_test_minimizer.cpp' object='test/fuzz/test_fuzz_fuzz-script_assets_test_minimizer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-script_assets_test_minimizer.o `test -f 'test/fuzz/script_assets_test_minimizer.cpp' || echo '$(srcdir)/'`test/fuzz/script_assets_test_minimizer.cpp

test/fuzz/test_fuzz_fuzz-script_assets_test_minimizer.obj: test/fuzz/script_assets_test_minimizer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-script_assets_test_minimizer.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_assets_test_minimizer.Tpo -c -o test/fuzz/test_fuzz_fuzz-script_assets_test_minimizer.obj `if test -f 'test/fuzz/script_assets_test_minimizer.cpp'; then $(CYGPATH_W) 'test/fuzz/script_assets_test_minimizer.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/script_assets_test_minimizer.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_assets_test_minimizer.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_assets_test_minimizer.Po
#	$(AM_V_CXX)source='test/fuzz/script_assets_test_minimizer.cpp' object='test/fuzz/test_fuzz_fuzz-script_assets_test_minimizer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-script_assets_test_minimizer.obj `if test -f 'test/fuzz/script_assets_test_minimizer.cpp'; then $(CYGPATH_W) 'test/fuzz/script_assets_test_minimizer.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/script_assets_test_minimizer.cpp'; fi`

test/fuzz/test_fuzz_fuzz-script_bitcoin_consensus.o: test/fuzz/script_bitcoin_consensus.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-script_bitcoin_consensus.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_bitcoin_consensus.Tpo -c -o test/fuzz/test_fuzz_fuzz-script_bitcoin_consensus.o `test -f 'test/fuzz/script_bitcoin_consensus.cpp' || echo '$(srcdir)/'`test/fuzz/script_bitcoin_consensus.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_bitcoin_consensus.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_bitcoin_consensus.Po
#	$(AM_V_CXX)source='test/fuzz/script_bitcoin_consensus.cpp' object='test/fuzz/test_fuzz_fuzz-script_bitcoin_consensus.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-script_bitcoin_consensus.o `test -f 'test/fuzz/script_bitcoin_consensus.cpp' || echo '$(srcdir)/'`test/fuzz/script_bitcoin_consensus.cpp

test/fuzz/test_fuzz_fuzz-script_bitcoin_consensus.obj: test/fuzz/script_bitcoin_consensus.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-script_bitcoin_consensus.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_bitcoin_consensus.Tpo -c -o test/fuzz/test_fuzz_fuzz-script_bitcoin_consensus.obj `if test -f 'test/fuzz/script_bitcoin_consensus.cpp'; then $(CYGPATH_W) 'test/fuzz/script_bitcoin_consensus.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/script_bitcoin_consensus.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_bitcoin_consensus.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_bitcoin_consensus.Po
#	$(AM_V_CXX)source='test/fuzz/script_bitcoin_consensus.cpp' object='test/fuzz/test_fuzz_fuzz-script_bitcoin_consensus.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-script_bitcoin_consensus.obj `if test -f 'test/fuzz/script_bitcoin_consensus.cpp'; then $(CYGPATH_W) 'test/fuzz/script_bitcoin_consensus.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/script_bitcoin_consensus.cpp'; fi`

test/fuzz/test_fuzz_fuzz-script_descriptor_cache.o: test/fuzz/script_descriptor_cache.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-script_descriptor_cache.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_descriptor_cache.Tpo -c -o test/fuzz/test_fuzz_fuzz-script_descriptor_cache.o `test -f 'test/fuzz/script_descriptor_cache.cpp' || echo '$(srcdir)/'`test/fuzz/script_descriptor_cache.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_descriptor_cache.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_descriptor_cache.Po
#	$(AM_V_CXX)source='test/fuzz/script_descriptor_cache.cpp' object='test/fuzz/test_fuzz_fuzz-script_descriptor_cache.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-script_descriptor_cache.o `test -f 'test/fuzz/script_descriptor_cache.cpp' || echo '$(srcdir)/'`test/fuzz/script_descriptor_cache.cpp

test/fuzz/test_fuzz_fuzz-script_descriptor_cache.obj: test/fuzz/script_descriptor_cache.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-script_descriptor_cache.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_descriptor_cache.Tpo -c -o test/fuzz/test_fuzz_fuzz-script_descriptor_cache.obj `if test -f 'test/fuzz/script_descriptor_cache.cpp'; then $(CYGPATH_W) 'test/fuzz/script_descriptor_cache.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/script_descriptor_cache.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_descriptor_cache.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_descriptor_cache.Po
#	$(AM_V_CXX)source='test/fuzz/script_descriptor_cache.cpp' object='test/fuzz/test_fuzz_fuzz-script_descriptor_cache.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-script_descriptor_cache.obj `if test -f 'test/fuzz/script_descriptor_cache.cpp'; then $(CYGPATH_W) 'test/fuzz/script_descriptor_cache.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/script_descriptor_cache.cpp'; fi`

test/fuzz/test_fuzz_fuzz-script_flags.o: test/fuzz/script_flags.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-script_flags.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_flags.Tpo -c -o test/fuzz/test_fuzz_fuzz-script_flags.o `test -f 'test/fuzz/script_flags.cpp' || echo '$(srcdir)/'`test/fuzz/script_flags.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_flags.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_flags.Po
#	$(AM_V_CXX)source='test/fuzz/script_flags.cpp' object='test/fuzz/test_fuzz_fuzz-script_flags.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-script_flags.o `test -f 'test/fuzz/script_flags.cpp' || echo '$(srcdir)/'`test/fuzz/script_flags.cpp

test/fuzz/test_fuzz_fuzz-script_flags.obj: test/fuzz/script_flags.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-script_flags.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_flags.Tpo -c -o test/fuzz/test_fuzz_fuzz-script_flags.obj `if test -f 'test/fuzz/script_flags.cpp'; then $(CYGPATH_W) 'test/fuzz/script_flags.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/script_flags.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_flags.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_flags.Po
#	$(AM_V_CXX)source='test/fuzz/script_flags.cpp' object='test/fuzz/test_fuzz_fuzz-script_flags.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-script_flags.obj `if test -f 'test/fuzz/script_flags.cpp'; then $(CYGPATH_W) 'test/fuzz/script_flags.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/script_flags.cpp'; fi`

test/fuzz/test_fuzz_fuzz-script_format.o: test/fuzz/script_format.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-script_format.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_format.Tpo -c -o test/fuzz/test_fuzz_fuzz-script_format.o `test -f 'test/fuzz/script_format.cpp' || echo '$(srcdir)/'`test/fuzz/script_format.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_format.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_format.Po
#	$(AM_V_CXX)source='test/fuzz/script_format.cpp' object='test/fuzz/test_fuzz_fuzz-script_format.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-script_format.o `test -f 'test/fuzz/script_format.cpp' || echo '$(srcdir)/'`test/fuzz/script_format.cpp

test/fuzz/test_fuzz_fuzz-script_format.obj: test/fuzz/script_format.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-script_format.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_format.Tpo -c -o test/fuzz/test_fuzz_fuzz-script_format.obj `if test -f 'test/fuzz/script_format.cpp'; then $(CYGPATH_W) 'test/fuzz/script_format.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/script_format.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_format.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_format.Po
#	$(AM_V_CXX)source='test/fuzz/script_format.cpp' object='test/fuzz/test_fuzz_fuzz-script_format.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-script_format.obj `if test -f 'test/fuzz/script_format.cpp'; then $(CYGPATH_W) 'test/fuzz/script_format.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/script_format.cpp'; fi`

test/fuzz/test_fuzz_fuzz-script_interpreter.o: test/fuzz/script_interpreter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-script_interpreter.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_interpreter.Tpo -c -o test/fuzz/test_fuzz_fuzz-script_interpreter.o `test -f 'test/fuzz/script_interpreter.cpp' || echo '$(srcdir)/'`test/fuzz/script_interpreter.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_interpreter.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_interpreter.Po
#	$(AM_V_CXX)source='test/fuzz/script_interpreter.cpp' object='test/fuzz/test_fuzz_fuzz-script_interpreter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-script_interpreter.o `test -f 'test/fuzz/script_interpreter.cpp' || echo '$(srcdir)/'`test/fuzz/script_interpreter.cpp

test/fuzz/test_fuzz_fuzz-script_interpreter.obj: test/fuzz/script_interpreter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-script_interpreter.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_interpreter.Tpo -c -o test/fuzz/test_fuzz_fuzz-script_interpreter.obj `if test -f 'test/fuzz/script_interpreter.cpp'; then $(CYGPATH_W) 'test/fuzz/script_interpreter.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/script_interpreter.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_interpreter.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_interpreter.Po
#	$(AM_V_CXX)source='test/fuzz/script_interpreter.cpp' object='test/fuzz/test_fuzz_fuzz-script_interpreter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-script_interpreter.obj `if test -f 'test/fuzz/script_interpreter.cpp'; then $(CYGPATH_W) 'test/fuzz/script_interpreter.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/script_interpreter.cpp'; fi`

test/fuzz/test_fuzz_fuzz-script_ops.o: test/fuzz/script_ops.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-script_ops.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_ops.Tpo -c -o test/fuzz/test_fuzz_fuzz-script_ops.o `test -f 'test/fuzz/script_ops.cpp' || echo '$(srcdir)/'`test/fuzz/script_ops.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_ops.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_ops.Po
#	$(AM_V_CXX)source='test/fuzz/script_ops.cpp' object='test/fuzz/test_fuzz_fuzz-script_ops.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-script_ops.o `test -f 'test/fuzz/script_ops.cpp' || echo '$(srcdir)/'`test/fuzz/script_ops.cpp

test/fuzz/test_fuzz_fuzz-script_ops.obj: test/fuzz/script_ops.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-script_ops.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_ops.Tpo -c -o test/fuzz/test_fuzz_fuzz-script_ops.obj `if test -f 'test/fuzz/script_ops.cpp'; then $(CYGPATH_W) 'test/fuzz/script_ops.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/script_ops.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_ops.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_ops.Po
#	$(AM_V_CXX)source='test/fuzz/script_ops.cpp' object='test/fuzz/test_fuzz_fuzz-script_ops.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-script_ops.obj `if test -f 'test/fuzz/script_ops.cpp'; then $(CYGPATH_W) 'test/fuzz/script_ops.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/script_ops.cpp'; fi`

test/fuzz/test_fuzz_fuzz-script_sigcache.o: test/fuzz/script_sigcache.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-script_sigcache.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_sigcache.Tpo -c -o test/fuzz/test_fuzz_fuzz-script_sigcache.o `test -f 'test/fuzz/script_sigcache.cpp' || echo '$(srcdir)/'`test/fuzz/script_sigcache.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_sigcache.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_sigcache.Po
#	$(AM_V_CXX)source='test/fuzz/script_sigcache.cpp' object='test/fuzz/test_fuzz_fuzz-script_sigcache.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-script_sigcache.o `test -f 'test/fuzz/script_sigcache.cpp' || echo '$(srcdir)/'`test/fuzz/script_sigcache.cpp

test/fuzz/test_fuzz_fuzz-script_sigcache.obj: test/fuzz/script_sigcache.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-script_sigcache.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_sigcache.Tpo -c -o test/fuzz/test_fuzz_fuzz-script_sigcache.obj `if test -f 'test/fuzz/script_sigcache.cpp'; then $(CYGPATH_W) 'test/fuzz/script_sigcache.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/script_sigcache.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_sigcache.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_sigcache.Po
#	$(AM_V_CXX)source='test/fuzz/script_sigcache.cpp' object='test/fuzz/test_fuzz_fuzz-script_sigcache.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-script_sigcache.obj `if test -f 'test/fuzz/script_sigcache.cpp'; then $(CYGPATH_W) 'test/fuzz/script_sigcache.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/script_sigcache.cpp'; fi`

test/fuzz/test_fuzz_fuzz-script_sign.o: test/fuzz/script_sign.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-script_sign.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_sign.Tpo -c -o test/fuzz/test_fuzz_fuzz-script_sign.o `test -f 'test/fuzz/script_sign.cpp' || echo '$(srcdir)/'`test/fuzz/script_sign.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_sign.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_sign.Po
#	$(AM_V_CXX)source='test/fuzz/script_sign.cpp' object='test/fuzz/test_fuzz_fuzz-script_sign.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-script_sign.o `test -f 'test/fuzz/script_sign.cpp' || echo '$(srcdir)/'`test/fuzz/script_sign.cpp

test/fuzz/test_fuzz_fuzz-script_sign.obj: test/fuzz/script_sign.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-script_sign.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_sign.Tpo -c -o test/fuzz/test_fuzz_fuzz-script_sign.obj `if test -f 'test/fuzz/script_sign.cpp'; then $(CYGPATH_W) 'test/fuzz/script_sign.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/script_sign.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_sign.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-script_sign.Po
#	$(AM_V_CXX)source='test/fuzz/script_sign.cpp' object='test/fuzz/test_fuzz_fuzz-script_sign.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-script_sign.obj `if test -f 'test/fuzz/script_sign.cpp'; then $(CYGPATH_W) 'test/fuzz/script_sign.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/script_sign.cpp'; fi`

test/fuzz/test_fuzz_fuzz-scriptnum_ops.o: test/fuzz/scriptnum_ops.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-scriptnum_ops.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-scriptnum_ops.Tpo -c -o test/fuzz/test_fuzz_fuzz-scriptnum_ops.o `test -f 'test/fuzz/scriptnum_ops.cpp' || echo '$(srcdir)/'`test/fuzz/scriptnum_ops.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-scriptnum_ops.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-scriptnum_ops.Po
#	$(AM_V_CXX)source='test/fuzz/scriptnum_ops.cpp' object='test/fuzz/test_fuzz_fuzz-scriptnum_ops.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-scriptnum_ops.o `test -f 'test/fuzz/scriptnum_ops.cpp' || echo '$(srcdir)/'`test/fuzz/scriptnum_ops.cpp

test/fuzz/test_fuzz_fuzz-scriptnum_ops.obj: test/fuzz/scriptnum_ops.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-scriptnum_ops.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-scriptnum_ops.Tpo -c -o test/fuzz/test_fuzz_fuzz-scriptnum_ops.obj `if test -f 'test/fuzz/scriptnum_ops.cpp'; then $(CYGPATH_W) 'test/fuzz/scriptnum_ops.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/scriptnum_ops.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-scriptnum_ops.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-scriptnum_ops.Po
#	$(AM_V_CXX)source='test/fuzz/scriptnum_ops.cpp' object='test/fuzz/test_fuzz_fuzz-scriptnum_ops.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-scriptnum_ops.obj `if test -f 'test/fuzz/scriptnum_ops.cpp'; then $(CYGPATH_W) 'test/fuzz/scriptnum_ops.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/scriptnum_ops.cpp'; fi`

test/fuzz/test_fuzz_fuzz-secp256k1_ec_seckey_import_export_der.o: test/fuzz/secp256k1_ec_seckey_import_export_der.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-secp256k1_ec_seckey_import_export_der.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-secp256k1_ec_seckey_import_export_der.Tpo -c -o test/fuzz/test_fuzz_fuzz-secp256k1_ec_seckey_import_export_der.o `test -f 'test/fuzz/secp256k1_ec_seckey_import_export_der.cpp' || echo '$(srcdir)/'`test/fuzz/secp256k1_ec_seckey_import_export_der.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-secp256k1_ec_seckey_import_export_der.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-secp256k1_ec_seckey_import_export_der.Po
#	$(AM_V_CXX)source='test/fuzz/secp256k1_ec_seckey_import_export_der.cpp' object='test/fuzz/test_fuzz_fuzz-secp256k1_ec_seckey_import_export_der.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-secp256k1_ec_seckey_import_export_der.o `test -f 'test/fuzz/secp256k1_ec_seckey_import_export_der.cpp' || echo '$(srcdir)/'`test/fuzz/secp256k1_ec_seckey_import_export_der.cpp

test/fuzz/test_fuzz_fuzz-secp256k1_ec_seckey_import_export_der.obj: test/fuzz/secp256k1_ec_seckey_import_export_der.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-secp256k1_ec_seckey_import_export_der.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-secp256k1_ec_seckey_import_export_der.Tpo -c -o test/fuzz/test_fuzz_fuzz-secp256k1_ec_seckey_import_export_der.obj `if test -f 'test/fuzz/secp256k1_ec_seckey_import_export_der.cpp'; then $(CYGPATH_W) 'test/fuzz/secp256k1_ec_seckey_import_export_der.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/secp256k1_ec_seckey_import_export_der.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-secp256k1_ec_seckey_import_export_der.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-secp256k1_ec_seckey_import_export_der.Po
#	$(AM_V_CXX)source='test/fuzz/secp256k1_ec_seckey_import_export_der.cpp' object='test/fuzz/test_fuzz_fuzz-secp256k1_ec_seckey_import_export_der.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-secp256k1_ec_seckey_import_export_der.obj `if test -f 'test/fuzz/secp256k1_ec_seckey_import_export_der.cpp'; then $(CYGPATH_W) 'test/fuzz/secp256k1_ec_seckey_import_export_der.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/secp256k1_ec_seckey_import_export_der.cpp'; fi`

test/fuzz/test_fuzz_fuzz-secp256k1_ecdsa_signature_parse_der_lax.o: test/fuzz/secp256k1_ecdsa_signature_parse_der_lax.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-secp256k1_ecdsa_signature_parse_der_lax.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-secp256k1_ecdsa_signature_parse_der_lax.Tpo -c -o test/fuzz/test_fuzz_fuzz-secp256k1_ecdsa_signature_parse_der_lax.o `test -f 'test/fuzz/secp256k1_ecdsa_signature_parse_der_lax.cpp' || echo '$(srcdir)/'`test/fuzz/secp256k1_ecdsa_signature_parse_der_lax.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-secp256k1_ecdsa_signature_parse_der_lax.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-secp256k1_ecdsa_signature_parse_der_lax.Po
#	$(AM_V_CXX)source='test/fuzz/secp256k1_ecdsa_signature_parse_der_lax.cpp' object='test/fuzz/test_fuzz_fuzz-secp256k1_ecdsa_signature_parse_der_lax.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-secp256k1_ecdsa_signature_parse_der_lax.o `test -f 'test/fuzz/secp256k1_ecdsa_signature_parse_der_lax.cpp' || echo '$(srcdir)/'`test/fuzz/secp256k1_ecdsa_signature_parse_der_lax.cpp

test/fuzz/test_fuzz_fuzz-secp256k1_ecdsa_signature_parse_der_lax.obj: test/fuzz/secp256k1_ecdsa_signature_parse_der_lax.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-secp256k1_ecdsa_signature_parse_der_lax.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-secp256k1_ecdsa_signature_parse_der_lax.Tpo -c -o test/fuzz/test_fuzz_fuzz-secp256k1_ecdsa_signature_parse_der_lax.obj `if test -f 'test/fuzz/secp256k1_ecdsa_signature_parse_der_lax.cpp'; then $(CYGPATH_W) 'test/fuzz/secp256k1_ecdsa_signature_parse_der_lax.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/secp256k1_ecdsa_signature_parse_der_lax.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-secp256k1_ecdsa_signature_parse_der_lax.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-secp256k1_ecdsa_signature_parse_der_lax.Po
#	$(AM_V_CXX)source='test/fuzz/secp256k1_ecdsa_signature_parse_der_lax.cpp' object='test/fuzz/test_fuzz_fuzz-secp256k1_ecdsa_signature_parse_der_lax.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-secp256k1_ecdsa_signature_parse_der_lax.obj `if test -f 'test/fuzz/secp256k1_ecdsa_signature_parse_der_lax.cpp'; then $(CYGPATH_W) 'test/fuzz/secp256k1_ecdsa_signature_parse_der_lax.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/secp256k1_ecdsa_signature_parse_der_lax.cpp'; fi`

test/fuzz/test_fuzz_fuzz-signature_checker.o: test/fuzz/signature_checker.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-signature_checker.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-signature_checker.Tpo -c -o test/fuzz/test_fuzz_fuzz-signature_checker.o `test -f 'test/fuzz/signature_checker.cpp' || echo '$(srcdir)/'`test/fuzz/signature_checker.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-signature_checker.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-signature_checker.Po
#	$(AM_V_CXX)source='test/fuzz/signature_checker.cpp' object='test/fuzz/test_fuzz_fuzz-signature_checker.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-signature_checker.o `test -f 'test/fuzz/signature_checker.cpp' || echo '$(srcdir)/'`test/fuzz/signature_checker.cpp

test/fuzz/test_fuzz_fuzz-signature_checker.obj: test/fuzz/signature_checker.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-signature_checker.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-signature_checker.Tpo -c -o test/fuzz/test_fuzz_fuzz-signature_checker.obj `if test -f 'test/fuzz/signature_checker.cpp'; then $(CYGPATH_W) 'test/fuzz/signature_checker.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/signature_checker.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-signature_checker.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-signature_checker.Po
#	$(AM_V_CXX)source='test/fuzz/signature_checker.cpp' object='test/fuzz/test_fuzz_fuzz-signature_checker.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-signature_checker.obj `if test -f 'test/fuzz/signature_checker.cpp'; then $(CYGPATH_W) 'test/fuzz/signature_checker.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/signature_checker.cpp'; fi`

test/fuzz/test_fuzz_fuzz-signet.o: test/fuzz/signet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-signet.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-signet.Tpo -c -o test/fuzz/test_fuzz_fuzz-signet.o `test -f 'test/fuzz/signet.cpp' || echo '$(srcdir)/'`test/fuzz/signet.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-signet.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-signet.Po
#	$(AM_V_CXX)source='test/fuzz/signet.cpp' object='test/fuzz/test_fuzz_fuzz-signet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-signet.o `test -f 'test/fuzz/signet.cpp' || echo '$(srcdir)/'`test/fuzz/signet.cpp

test/fuzz/test_fuzz_fuzz-signet.obj: test/fuzz/signet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-signet.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-signet.Tpo -c -o test/fuzz/test_fuzz_fuzz-signet.obj `if test -f 'test/fuzz/signet.cpp'; then $(CYGPATH_W) 'test/fuzz/signet.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/signet.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-signet.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-signet.Po
#	$(AM_V_CXX)source='test/fuzz/signet.cpp' object='test/fuzz/test_fuzz_fuzz-signet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-signet.obj `if test -f 'test/fuzz/signet.cpp'; then $(CYGPATH_W) 'test/fuzz/signet.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/signet.cpp'; fi`

test/fuzz/test_fuzz_fuzz-socks5.o: test/fuzz/socks5.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-socks5.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-socks5.Tpo -c -o test/fuzz/test_fuzz_fuzz-socks5.o `test -f 'test/fuzz/socks5.cpp' || echo '$(srcdir)/'`test/fuzz/socks5.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-socks5.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-socks5.Po
#	$(AM_V_CXX)source='test/fuzz/socks5.cpp' object='test/fuzz/test_fuzz_fuzz-socks5.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-socks5.o `test -f 'test/fuzz/socks5.cpp' || echo '$(srcdir)/'`test/fuzz/socks5.cpp

test/fuzz/test_fuzz_fuzz-socks5.obj: test/fuzz/socks5.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-socks5.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-socks5.Tpo -c -o test/fuzz/test_fuzz_fuzz-socks5.obj `if test -f 'test/fuzz/socks5.cpp'; then $(CYGPATH_W) 'test/fuzz/socks5.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/socks5.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-socks5.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-socks5.Po
#	$(AM_V_CXX)source='test/fuzz/socks5.cpp' object='test/fuzz/test_fuzz_fuzz-socks5.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-socks5.obj `if test -f 'test/fuzz/socks5.cpp'; then $(CYGPATH_W) 'test/fuzz/socks5.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/socks5.cpp'; fi`

test/fuzz/test_fuzz_fuzz-span.o: test/fuzz/span.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-span.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-span.Tpo -c -o test/fuzz/test_fuzz_fuzz-span.o `test -f 'test/fuzz/span.cpp' || echo '$(srcdir)/'`test/fuzz/span.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-span.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-span.Po
#	$(AM_V_CXX)source='test/fuzz/span.cpp' object='test/fuzz/test_fuzz_fuzz-span.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-span.o `test -f 'test/fuzz/span.cpp' || echo '$(srcdir)/'`test/fuzz/span.cpp

test/fuzz/test_fuzz_fuzz-span.obj: test/fuzz/span.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-span.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-span.Tpo -c -o test/fuzz/test_fuzz_fuzz-span.obj `if test -f 'test/fuzz/span.cpp'; then $(CYGPATH_W) 'test/fuzz/span.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/span.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-span.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-span.Po
#	$(AM_V_CXX)source='test/fuzz/span.cpp' object='test/fuzz/test_fuzz_fuzz-span.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-span.obj `if test -f 'test/fuzz/span.cpp'; then $(CYGPATH_W) 'test/fuzz/span.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/span.cpp'; fi`

test/fuzz/test_fuzz_fuzz-spanparsing.o: test/fuzz/spanparsing.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-spanparsing.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-spanparsing.Tpo -c -o test/fuzz/test_fuzz_fuzz-spanparsing.o `test -f 'test/fuzz/spanparsing.cpp' || echo '$(srcdir)/'`test/fuzz/spanparsing.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-spanparsing.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-spanparsing.Po
#	$(AM_V_CXX)source='test/fuzz/spanparsing.cpp' object='test/fuzz/test_fuzz_fuzz-spanparsing.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-spanparsing.o `test -f 'test/fuzz/spanparsing.cpp' || echo '$(srcdir)/'`test/fuzz/spanparsing.cpp

test/fuzz/test_fuzz_fuzz-spanparsing.obj: test/fuzz/spanparsing.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-spanparsing.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-spanparsing.Tpo -c -o test/fuzz/test_fuzz_fuzz-spanparsing.obj `if test -f 'test/fuzz/spanparsing.cpp'; then $(CYGPATH_W) 'test/fuzz/spanparsing.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/spanparsing.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-spanparsing.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-spanparsing.Po
#	$(AM_V_CXX)source='test/fuzz/spanparsing.cpp' object='test/fuzz/test_fuzz_fuzz-spanparsing.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-spanparsing.obj `if test -f 'test/fuzz/spanparsing.cpp'; then $(CYGPATH_W) 'test/fuzz/spanparsing.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/spanparsing.cpp'; fi`

test/fuzz/test_fuzz_fuzz-string.o: test/fuzz/string.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-string.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-string.Tpo -c -o test/fuzz/test_fuzz_fuzz-string.o `test -f 'test/fuzz/string.cpp' || echo '$(srcdir)/'`test/fuzz/string.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-string.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-string.Po
#	$(AM_V_CXX)source='test/fuzz/string.cpp' object='test/fuzz/test_fuzz_fuzz-string.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-string.o `test -f 'test/fuzz/string.cpp' || echo '$(srcdir)/'`test/fuzz/string.cpp

test/fuzz/test_fuzz_fuzz-string.obj: test/fuzz/string.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-string.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-string.Tpo -c -o test/fuzz/test_fuzz_fuzz-string.obj `if test -f 'test/fuzz/string.cpp'; then $(CYGPATH_W) 'test/fuzz/string.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/string.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-string.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-string.Po
#	$(AM_V_CXX)source='test/fuzz/string.cpp' object='test/fuzz/test_fuzz_fuzz-string.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-string.obj `if test -f 'test/fuzz/string.cpp'; then $(CYGPATH_W) 'test/fuzz/string.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/string.cpp'; fi`

test/fuzz/test_fuzz_fuzz-strprintf.o: test/fuzz/strprintf.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-strprintf.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-strprintf.Tpo -c -o test/fuzz/test_fuzz_fuzz-strprintf.o `test -f 'test/fuzz/strprintf.cpp' || echo '$(srcdir)/'`test/fuzz/strprintf.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-strprintf.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-strprintf.Po
#	$(AM_V_CXX)source='test/fuzz/strprintf.cpp' object='test/fuzz/test_fuzz_fuzz-strprintf.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-strprintf.o `test -f 'test/fuzz/strprintf.cpp' || echo '$(srcdir)/'`test/fuzz/strprintf.cpp

test/fuzz/test_fuzz_fuzz-strprintf.obj: test/fuzz/strprintf.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-strprintf.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-strprintf.Tpo -c -o test/fuzz/test_fuzz_fuzz-strprintf.obj `if test -f 'test/fuzz/strprintf.cpp'; then $(CYGPATH_W) 'test/fuzz/strprintf.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/strprintf.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-strprintf.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-strprintf.Po
#	$(AM_V_CXX)source='test/fuzz/strprintf.cpp' object='test/fuzz/test_fuzz_fuzz-strprintf.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-strprintf.obj `if test -f 'test/fuzz/strprintf.cpp'; then $(CYGPATH_W) 'test/fuzz/strprintf.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/strprintf.cpp'; fi`

test/fuzz/test_fuzz_fuzz-system.o: test/fuzz/system.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-system.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-system.Tpo -c -o test/fuzz/test_fuzz_fuzz-system.o `test -f 'test/fuzz/system.cpp' || echo '$(srcdir)/'`test/fuzz/system.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-system.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-system.Po
#	$(AM_V_CXX)source='test/fuzz/system.cpp' object='test/fuzz/test_fuzz_fuzz-system.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-system.o `test -f 'test/fuzz/system.cpp' || echo '$(srcdir)/'`test/fuzz/system.cpp

test/fuzz/test_fuzz_fuzz-system.obj: test/fuzz/system.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-system.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-system.Tpo -c -o test/fuzz/test_fuzz_fuzz-system.obj `if test -f 'test/fuzz/system.cpp'; then $(CYGPATH_W) 'test/fuzz/system.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/system.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-system.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-system.Po
#	$(AM_V_CXX)source='test/fuzz/system.cpp' object='test/fuzz/test_fuzz_fuzz-system.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-system.obj `if test -f 'test/fuzz/system.cpp'; then $(CYGPATH_W) 'test/fuzz/system.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/system.cpp'; fi`

test/fuzz/test_fuzz_fuzz-timedata.o: test/fuzz/timedata.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-timedata.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-timedata.Tpo -c -o test/fuzz/test_fuzz_fuzz-timedata.o `test -f 'test/fuzz/timedata.cpp' || echo '$(srcdir)/'`test/fuzz/timedata.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-timedata.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-timedata.Po
#	$(AM_V_CXX)source='test/fuzz/timedata.cpp' object='test/fuzz/test_fuzz_fuzz-timedata.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-timedata.o `test -f 'test/fuzz/timedata.cpp' || echo '$(srcdir)/'`test/fuzz/timedata.cpp

test/fuzz/test_fuzz_fuzz-timedata.obj: test/fuzz/timedata.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-timedata.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-timedata.Tpo -c -o test/fuzz/test_fuzz_fuzz-timedata.obj `if test -f 'test/fuzz/timedata.cpp'; then $(CYGPATH_W) 'test/fuzz/timedata.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/timedata.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-timedata.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-timedata.Po
#	$(AM_V_CXX)source='test/fuzz/timedata.cpp' object='test/fuzz/test_fuzz_fuzz-timedata.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-timedata.obj `if test -f 'test/fuzz/timedata.cpp'; then $(CYGPATH_W) 'test/fuzz/timedata.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/timedata.cpp'; fi`

test/fuzz/test_fuzz_fuzz-torcontrol.o: test/fuzz/torcontrol.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-torcontrol.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-torcontrol.Tpo -c -o test/fuzz/test_fuzz_fuzz-torcontrol.o `test -f 'test/fuzz/torcontrol.cpp' || echo '$(srcdir)/'`test/fuzz/torcontrol.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-torcontrol.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-torcontrol.Po
#	$(AM_V_CXX)source='test/fuzz/torcontrol.cpp' object='test/fuzz/test_fuzz_fuzz-torcontrol.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-torcontrol.o `test -f 'test/fuzz/torcontrol.cpp' || echo '$(srcdir)/'`test/fuzz/torcontrol.cpp

test/fuzz/test_fuzz_fuzz-torcontrol.obj: test/fuzz/torcontrol.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-torcontrol.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-torcontrol.Tpo -c -o test/fuzz/test_fuzz_fuzz-torcontrol.obj `if test -f 'test/fuzz/torcontrol.cpp'; then $(CYGPATH_W) 'test/fuzz/torcontrol.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/torcontrol.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-torcontrol.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-torcontrol.Po
#	$(AM_V_CXX)source='test/fuzz/torcontrol.cpp' object='test/fuzz/test_fuzz_fuzz-torcontrol.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-torcontrol.obj `if test -f 'test/fuzz/torcontrol.cpp'; then $(CYGPATH_W) 'test/fuzz/torcontrol.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/torcontrol.cpp'; fi`

test/fuzz/test_fuzz_fuzz-transaction.o: test/fuzz/transaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-transaction.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-transaction.Tpo -c -o test/fuzz/test_fuzz_fuzz-transaction.o `test -f 'test/fuzz/transaction.cpp' || echo '$(srcdir)/'`test/fuzz/transaction.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-transaction.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-transaction.Po
#	$(AM_V_CXX)source='test/fuzz/transaction.cpp' object='test/fuzz/test_fuzz_fuzz-transaction.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-transaction.o `test -f 'test/fuzz/transaction.cpp' || echo '$(srcdir)/'`test/fuzz/transaction.cpp

test/fuzz/test_fuzz_fuzz-transaction.obj: test/fuzz/transaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-transaction.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-transaction.Tpo -c -o test/fuzz/test_fuzz_fuzz-transaction.obj `if test -f 'test/fuzz/transaction.cpp'; then $(CYGPATH_W) 'test/fuzz/transaction.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/transaction.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-transaction.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-transaction.Po
#	$(AM_V_CXX)source='test/fuzz/transaction.cpp' object='test/fuzz/test_fuzz_fuzz-transaction.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-transaction.obj `if test -f 'test/fuzz/transaction.cpp'; then $(CYGPATH_W) 'test/fuzz/transaction.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/transaction.cpp'; fi`

test/fuzz/test_fuzz_fuzz-tx_in.o: test/fuzz/tx_in.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-tx_in.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-tx_in.Tpo -c -o test/fuzz/test_fuzz_fuzz-tx_in.o `test -f 'test/fuzz/tx_in.cpp' || echo '$(srcdir)/'`test/fuzz/tx_in.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-tx_in.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-tx_in.Po
#	$(AM_V_CXX)source='test/fuzz/tx_in.cpp' object='test/fuzz/test_fuzz_fuzz-tx_in.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-tx_in.o `test -f 'test/fuzz/tx_in.cpp' || echo '$(srcdir)/'`test/fuzz/tx_in.cpp

test/fuzz/test_fuzz_fuzz-tx_in.obj: test/fuzz/tx_in.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-tx_in.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-tx_in.Tpo -c -o test/fuzz/test_fuzz_fuzz-tx_in.obj `if test -f 'test/fuzz/tx_in.cpp'; then $(CYGPATH_W) 'test/fuzz/tx_in.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/tx_in.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-tx_in.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-tx_in.Po
#	$(AM_V_CXX)source='test/fuzz/tx_in.cpp' object='test/fuzz/test_fuzz_fuzz-tx_in.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-tx_in.obj `if test -f 'test/fuzz/tx_in.cpp'; then $(CYGPATH_W) 'test/fuzz/tx_in.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/tx_in.cpp'; fi`

test/fuzz/test_fuzz_fuzz-tx_out.o: test/fuzz/tx_out.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-tx_out.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-tx_out.Tpo -c -o test/fuzz/test_fuzz_fuzz-tx_out.o `test -f 'test/fuzz/tx_out.cpp' || echo '$(srcdir)/'`test/fuzz/tx_out.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-tx_out.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-tx_out.Po
#	$(AM_V_CXX)source='test/fuzz/tx_out.cpp' object='test/fuzz/test_fuzz_fuzz-tx_out.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-tx_out.o `test -f 'test/fuzz/tx_out.cpp' || echo '$(srcdir)/'`test/fuzz/tx_out.cpp

test/fuzz/test_fuzz_fuzz-tx_out.obj: test/fuzz/tx_out.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-tx_out.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-tx_out.Tpo -c -o test/fuzz/test_fuzz_fuzz-tx_out.obj `if test -f 'test/fuzz/tx_out.cpp'; then $(CYGPATH_W) 'test/fuzz/tx_out.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/tx_out.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-tx_out.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-tx_out.Po
#	$(AM_V_CXX)source='test/fuzz/tx_out.cpp' object='test/fuzz/test_fuzz_fuzz-tx_out.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-tx_out.obj `if test -f 'test/fuzz/tx_out.cpp'; then $(CYGPATH_W) 'test/fuzz/tx_out.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/tx_out.cpp'; fi`

test/fuzz/test_fuzz_fuzz-tx_pool.o: test/fuzz/tx_pool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-tx_pool.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-tx_pool.Tpo -c -o test/fuzz/test_fuzz_fuzz-tx_pool.o `test -f 'test/fuzz/tx_pool.cpp' || echo '$(srcdir)/'`test/fuzz/tx_pool.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-tx_pool.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-tx_pool.Po
#	$(AM_V_CXX)source='test/fuzz/tx_pool.cpp' object='test/fuzz/test_fuzz_fuzz-tx_pool.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-tx_pool.o `test -f 'test/fuzz/tx_pool.cpp' || echo '$(srcdir)/'`test/fuzz/tx_pool.cpp

test/fuzz/test_fuzz_fuzz-tx_pool.obj: test/fuzz/tx_pool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-tx_pool.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-tx_pool.Tpo -c -o test/fuzz/test_fuzz_fuzz-tx_pool.obj `if test -f 'test/fuzz/tx_pool.cpp'; then $(CYGPATH_W) 'test/fuzz/tx_pool.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/tx_pool.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-tx_pool.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-tx_pool.Po
#	$(AM_V_CXX)source='test/fuzz/tx_pool.cpp' object='test/fuzz/test_fuzz_fuzz-tx_pool.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-tx_pool.obj `if test -f 'test/fuzz/tx_pool.cpp'; then $(CYGPATH_W) 'test/fuzz/tx_pool.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/tx_pool.cpp'; fi`

test/fuzz/test_fuzz_fuzz-txrequest.o: test/fuzz/txrequest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-txrequest.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-txrequest.Tpo -c -o test/fuzz/test_fuzz_fuzz-txrequest.o `test -f 'test/fuzz/txrequest.cpp' || echo '$(srcdir)/'`test/fuzz/txrequest.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-txrequest.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-txrequest.Po
#	$(AM_V_CXX)source='test/fuzz/txrequest.cpp' object='test/fuzz/test_fuzz_fuzz-txrequest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-txrequest.o `test -f 'test/fuzz/txrequest.cpp' || echo '$(srcdir)/'`test/fuzz/txrequest.cpp

test/fuzz/test_fuzz_fuzz-txrequest.obj: test/fuzz/txrequest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-txrequest.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-txrequest.Tpo -c -o test/fuzz/test_fuzz_fuzz-txrequest.obj `if test -f 'test/fuzz/txrequest.cpp'; then $(CYGPATH_W) 'test/fuzz/txrequest.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/txrequest.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-txrequest.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-txrequest.Po
#	$(AM_V_CXX)source='test/fuzz/txrequest.cpp' object='test/fuzz/test_fuzz_fuzz-txrequest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-txrequest.obj `if test -f 'test/fuzz/txrequest.cpp'; then $(CYGPATH_W) 'test/fuzz/txrequest.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/txrequest.cpp'; fi`

test/fuzz/test_fuzz_fuzz-utxo_snapshot.o: test/fuzz/utxo_snapshot.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-utxo_snapshot.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-utxo_snapshot.Tpo -c -o test/fuzz/test_fuzz_fuzz-utxo_snapshot.o `test -f 'test/fuzz/utxo_snapshot.cpp' || echo '$(srcdir)/'`test/fuzz/utxo_snapshot.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-utxo_snapshot.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-utxo_snapshot.Po
#	$(AM_V_CXX)source='test/fuzz/utxo_snapshot.cpp' object='test/fuzz/test_fuzz_fuzz-utxo_snapshot.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-utxo_snapshot.o `test -f 'test/fuzz/utxo_snapshot.cpp' || echo '$(srcdir)/'`test/fuzz/utxo_snapshot.cpp

test/fuzz/test_fuzz_fuzz-utxo_snapshot.obj: test/fuzz/utxo_snapshot.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-utxo_snapshot.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-utxo_snapshot.Tpo -c -o test/fuzz/test_fuzz_fuzz-utxo_snapshot.obj `if test -f 'test/fuzz/utxo_snapshot.cpp'; then $(CYGPATH_W) 'test/fuzz/utxo_snapshot.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/utxo_snapshot.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-utxo_snapshot.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-utxo_snapshot.Po
#	$(AM_V_CXX)source='test/fuzz/utxo_snapshot.cpp' object='test/fuzz/test_fuzz_fuzz-utxo_snapshot.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-utxo_snapshot.obj `if test -f 'test/fuzz/utxo_snapshot.cpp'; then $(CYGPATH_W) 'test/fuzz/utxo_snapshot.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/utxo_snapshot.cpp'; fi`

test/fuzz/test_fuzz_fuzz-validation_load_mempool.o: test/fuzz/validation_load_mempool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-validation_load_mempool.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-validation_load_mempool.Tpo -c -o test/fuzz/test_fuzz_fuzz-validation_load_mempool.o `test -f 'test/fuzz/validation_load_mempool.cpp' || echo '$(srcdir)/'`test/fuzz/validation_load_mempool.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-validation_load_mempool.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-validation_load_mempool.Po
#	$(AM_V_CXX)source='test/fuzz/validation_load_mempool.cpp' object='test/fuzz/test_fuzz_fuzz-validation_load_mempool.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-validation_load_mempool.o `test -f 'test/fuzz/validation_load_mempool.cpp' || echo '$(srcdir)/'`test/fuzz/validation_load_mempool.cpp

test/fuzz/test_fuzz_fuzz-validation_load_mempool.obj: test/fuzz/validation_load_mempool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-validation_load_mempool.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-validation_load_mempool.Tpo -c -o test/fuzz/test_fuzz_fuzz-validation_load_mempool.obj `if test -f 'test/fuzz/validation_load_mempool.cpp'; then $(CYGPATH_W) 'test/fuzz/validation_load_mempool.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/validation_load_mempool.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-validation_load_mempool.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-validation_load_mempool.Po
#	$(AM_V_CXX)source='test/fuzz/validation_load_mempool.cpp' object='test/fuzz/test_fuzz_fuzz-validation_load_mempool.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-validation_load_mempool.obj `if test -f 'test/fuzz/validation_load_mempool.cpp'; then $(CYGPATH_W) 'test/fuzz/validation_load_mempool.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/validation_load_mempool.cpp'; fi`

test/fuzz/test_fuzz_fuzz-versionbits.o: test/fuzz/versionbits.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-versionbits.o -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-versionbits.Tpo -c -o test/fuzz/test_fuzz_fuzz-versionbits.o `test -f 'test/fuzz/versionbits.cpp' || echo '$(srcdir)/'`test/fuzz/versionbits.cpp
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-versionbits.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-versionbits.Po
#	$(AM_V_CXX)source='test/fuzz/versionbits.cpp' object='test/fuzz/test_fuzz_fuzz-versionbits.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-versionbits.o `test -f 'test/fuzz/versionbits.cpp' || echo '$(srcdir)/'`test/fuzz/versionbits.cpp

test/fuzz/test_fuzz_fuzz-versionbits.obj: test/fuzz/versionbits.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -MT test/fuzz/test_fuzz_fuzz-versionbits.obj -MD -MP -MF test/fuzz/$(DEPDIR)/test_fuzz_fuzz-versionbits.Tpo -c -o test/fuzz/test_fuzz_fuzz-versionbits.obj `if test -f 'test/fuzz/versionbits.cpp'; then $(CYGPATH_W) 'test/fuzz/versionbits.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/versionbits.cpp'; fi`
	$(AM_V_at)$(am__mv) test/fuzz/$(DEPDIR)/test_fuzz_fuzz-versionbits.Tpo test/fuzz/$(DEPDIR)/test_fuzz_fuzz-versionbits.Po
#	$(AM_V_CXX)source='test/fuzz/versionbits.cpp' object='test/fuzz/test_fuzz_fuzz-versionbits.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_fuzz_fuzz_CPPFLAGS) $(CPPFLAGS) $(test_fuzz_fuzz_CXXFLAGS) $(CXXFLAGS) -c -o test/fuzz/test_fuzz_fuzz-versionbits.obj `if test -f 'test/fuzz/versionbits.cpp'; then $(CYGPATH_W) 'test/fuzz/versionbits.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fuzz/versionbits.cpp'; fi`

test/test_test_bitcoin-main.o: test/main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-main.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-main.Tpo -c -o test/test_test_bitcoin-main.o `test -f 'test/main.cpp' || echo '$(srcdir)/'`test/main.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-main.Tpo test/$(DEPDIR)/test_test_bitcoin-main.Po
#	$(AM_V_CXX)source='test/main.cpp' object='test/test_test_bitcoin-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-main.o `test -f 'test/main.cpp' || echo '$(srcdir)/'`test/main.cpp

test/test_test_bitcoin-main.obj: test/main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-main.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-main.Tpo -c -o test/test_test_bitcoin-main.obj `if test -f 'test/main.cpp'; then $(CYGPATH_W) 'test/main.cpp'; else $(CYGPATH_W) '$(srcdir)/test/main.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-main.Tpo test/$(DEPDIR)/test_test_bitcoin-main.Po
#	$(AM_V_CXX)source='test/main.cpp' object='test/test_test_bitcoin-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-main.obj `if test -f 'test/main.cpp'; then $(CYGPATH_W) 'test/main.cpp'; else $(CYGPATH_W) '$(srcdir)/test/main.cpp'; fi`

wallet/test/test_test_bitcoin-util.o: wallet/test/util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitcoin-util.o -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitcoin-util.Tpo -c -o wallet/test/test_test_bitcoin-util.o `test -f 'wallet/test/util.cpp' || echo '$(srcdir)/'`wallet/test/util.cpp
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitcoin-util.Tpo wallet/test/$(DEPDIR)/test_test_bitcoin-util.Po
#	$(AM_V_CXX)source='wallet/test/util.cpp' object='wallet/test/test_test_bitcoin-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitcoin-util.o `test -f 'wallet/test/util.cpp' || echo '$(srcdir)/'`wallet/test/util.cpp

wallet/test/test_test_bitcoin-util.obj: wallet/test/util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitcoin-util.obj -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitcoin-util.Tpo -c -o wallet/test/test_test_bitcoin-util.obj `if test -f 'wallet/test/util.cpp'; then $(CYGPATH_W) 'wallet/test/util.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/util.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitcoin-util.Tpo wallet/test/$(DEPDIR)/test_test_bitcoin-util.Po
#	$(AM_V_CXX)source='wallet/test/util.cpp' object='wallet/test/test_test_bitcoin-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitcoin-util.obj `if test -f 'wallet/test/util.cpp'; then $(CYGPATH_W) 'wallet/test/util.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/util.cpp'; fi`

wallet/test/test_test_bitcoin-wallet_test_fixture.o: wallet/test/wallet_test_fixture.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitcoin-wallet_test_fixture.o -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitcoin-wallet_test_fixture.Tpo -c -o wallet/test/test_test_bitcoin-wallet_test_fixture.o `test -f 'wallet/test/wallet_test_fixture.cpp' || echo '$(srcdir)/'`wallet/test/wallet_test_fixture.cpp
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitcoin-wallet_test_fixture.Tpo wallet/test/$(DEPDIR)/test_test_bitcoin-wallet_test_fixture.Po
#	$(AM_V_CXX)source='wallet/test/wallet_test_fixture.cpp' object='wallet/test/test_test_bitcoin-wallet_test_fixture.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitcoin-wallet_test_fixture.o `test -f 'wallet/test/wallet_test_fixture.cpp' || echo '$(srcdir)/'`wallet/test/wallet_test_fixture.cpp

wallet/test/test_test_bitcoin-wallet_test_fixture.obj: wallet/test/wallet_test_fixture.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitcoin-wallet_test_fixture.obj -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitcoin-wallet_test_fixture.Tpo -c -o wallet/test/test_test_bitcoin-wallet_test_fixture.obj `if test -f 'wallet/test/wallet_test_fixture.cpp'; then $(CYGPATH_W) 'wallet/test/wallet_test_fixture.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/wallet_test_fixture.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitcoin-wallet_test_fixture.Tpo wallet/test/$(DEPDIR)/test_test_bitcoin-wallet_test_fixture.Po
#	$(AM_V_CXX)source='wallet/test/wallet_test_fixture.cpp' object='wallet/test/test_test_bitcoin-wallet_test_fixture.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitcoin-wallet_test_fixture.obj `if test -f 'wallet/test/wallet_test_fixture.cpp'; then $(CYGPATH_W) 'wallet/test/wallet_test_fixture.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/wallet_test_fixture.cpp'; fi`

wallet/test/test_test_bitcoin-init_test_fixture.o: wallet/test/init_test_fixture.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitcoin-init_test_fixture.o -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitcoin-init_test_fixture.Tpo -c -o wallet/test/test_test_bitcoin-init_test_fixture.o `test -f 'wallet/test/init_test_fixture.cpp' || echo '$(srcdir)/'`wallet/test/init_test_fixture.cpp
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitcoin-init_test_fixture.Tpo wallet/test/$(DEPDIR)/test_test_bitcoin-init_test_fixture.Po
#	$(AM_V_CXX)source='wallet/test/init_test_fixture.cpp' object='wallet/test/test_test_bitcoin-init_test_fixture.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitcoin-init_test_fixture.o `test -f 'wallet/test/init_test_fixture.cpp' || echo '$(srcdir)/'`wallet/test/init_test_fixture.cpp

wallet/test/test_test_bitcoin-init_test_fixture.obj: wallet/test/init_test_fixture.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitcoin-init_test_fixture.obj -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitcoin-init_test_fixture.Tpo -c -o wallet/test/test_test_bitcoin-init_test_fixture.obj `if test -f 'wallet/test/init_test_fixture.cpp'; then $(CYGPATH_W) 'wallet/test/init_test_fixture.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/init_test_fixture.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitcoin-init_test_fixture.Tpo wallet/test/$(DEPDIR)/test_test_bitcoin-init_test_fixture.Po
#	$(AM_V_CXX)source='wallet/test/init_test_fixture.cpp' object='wallet/test/test_test_bitcoin-init_test_fixture.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitcoin-init_test_fixture.obj `if test -f 'wallet/test/init_test_fixture.cpp'; then $(CYGPATH_W) 'wallet/test/init_test_fixture.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/init_test_fixture.cpp'; fi`

test/test_test_bitcoin-addrman_tests.o: test/addrman_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-addrman_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-addrman_tests.Tpo -c -o test/test_test_bitcoin-addrman_tests.o `test -f 'test/addrman_tests.cpp' || echo '$(srcdir)/'`test/addrman_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-addrman_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-addrman_tests.Po
#	$(AM_V_CXX)source='test/addrman_tests.cpp' object='test/test_test_bitcoin-addrman_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-addrman_tests.o `test -f 'test/addrman_tests.cpp' || echo '$(srcdir)/'`test/addrman_tests.cpp

test/test_test_bitcoin-addrman_tests.obj: test/addrman_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-addrman_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-addrman_tests.Tpo -c -o test/test_test_bitcoin-addrman_tests.obj `if test -f 'test/addrman_tests.cpp'; then $(CYGPATH_W) 'test/addrman_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/addrman_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-addrman_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-addrman_tests.Po
#	$(AM_V_CXX)source='test/addrman_tests.cpp' object='test/test_test_bitcoin-addrman_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-addrman_tests.obj `if test -f 'test/addrman_tests.cpp'; then $(CYGPATH_W) 'test/addrman_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/addrman_tests.cpp'; fi`

test/test_test_bitcoin-allocator_tests.o: test/allocator_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-allocator_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-allocator_tests.Tpo -c -o test/test_test_bitcoin-allocator_tests.o `test -f 'test/allocator_tests.cpp' || echo '$(srcdir)/'`test/allocator_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-allocator_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-allocator_tests.Po
#	$(AM_V_CXX)source='test/allocator_tests.cpp' object='test/test_test_bitcoin-allocator_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-allocator_tests.o `test -f 'test/allocator_tests.cpp' || echo '$(srcdir)/'`test/allocator_tests.cpp

test/test_test_bitcoin-allocator_tests.obj: test/allocator_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-allocator_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-allocator_tests.Tpo -c -o test/test_test_bitcoin-allocator_tests.obj `if test -f 'test/allocator_tests.cpp'; then $(CYGPATH_W) 'test/allocator_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/allocator_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-allocator_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-allocator_tests.Po
#	$(AM_V_CXX)source='test/allocator_tests.cpp' object='test/test_test_bitcoin-allocator_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-allocator_tests.obj `if test -f 'test/allocator_tests.cpp'; then $(CYGPATH_W) 'test/allocator_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/allocator_tests.cpp'; fi`

test/test_test_bitcoin-amount_tests.o: test/amount_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-amount_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-amount_tests.Tpo -c -o test/test_test_bitcoin-amount_tests.o `test -f 'test/amount_tests.cpp' || echo '$(srcdir)/'`test/amount_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-amount_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-amount_tests.Po
#	$(AM_V_CXX)source='test/amount_tests.cpp' object='test/test_test_bitcoin-amount_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-amount_tests.o `test -f 'test/amount_tests.cpp' || echo '$(srcdir)/'`test/amount_tests.cpp

test/test_test_bitcoin-amount_tests.obj: test/amount_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-amount_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-amount_tests.Tpo -c -o test/test_test_bitcoin-amount_tests.obj `if test -f 'test/amount_tests.cpp'; then $(CYGPATH_W) 'test/amount_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/amount_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-amount_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-amount_tests.Po
#	$(AM_V_CXX)source='test/amount_tests.cpp' object='test/test_test_bitcoin-amount_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-amount_tests.obj `if test -f 'test/amount_tests.cpp'; then $(CYGPATH_W) 'test/amount_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/amount_tests.cpp'; fi`

test/test_test_bitcoin-arith_uint256_tests.o: test/arith_uint256_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-arith_uint256_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-arith_uint256_tests.Tpo -c -o test/test_test_bitcoin-arith_uint256_tests.o `test -f 'test/arith_uint256_tests.cpp' || echo '$(srcdir)/'`test/arith_uint256_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-arith_uint256_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-arith_uint256_tests.Po
#	$(AM_V_CXX)source='test/arith_uint256_tests.cpp' object='test/test_test_bitcoin-arith_uint256_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-arith_uint256_tests.o `test -f 'test/arith_uint256_tests.cpp' || echo '$(srcdir)/'`test/arith_uint256_tests.cpp

test/test_test_bitcoin-arith_uint256_tests.obj: test/arith_uint256_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-arith_uint256_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-arith_uint256_tests.Tpo -c -o test/test_test_bitcoin-arith_uint256_tests.obj `if test -f 'test/arith_uint256_tests.cpp'; then $(CYGPATH_W) 'test/arith_uint256_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/arith_uint256_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-arith_uint256_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-arith_uint256_tests.Po
#	$(AM_V_CXX)source='test/arith_uint256_tests.cpp' object='test/test_test_bitcoin-arith_uint256_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-arith_uint256_tests.obj `if test -f 'test/arith_uint256_tests.cpp'; then $(CYGPATH_W) 'test/arith_uint256_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/arith_uint256_tests.cpp'; fi`

test/test_test_bitcoin-banman_tests.o: test/banman_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-banman_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-banman_tests.Tpo -c -o test/test_test_bitcoin-banman_tests.o `test -f 'test/banman_tests.cpp' || echo '$(srcdir)/'`test/banman_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-banman_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-banman_tests.Po
#	$(AM_V_CXX)source='test/banman_tests.cpp' object='test/test_test_bitcoin-banman_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-banman_tests.o `test -f 'test/banman_tests.cpp' || echo '$(srcdir)/'`test/banman_tests.cpp

test/test_test_bitcoin-banman_tests.obj: test/banman_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-banman_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-banman_tests.Tpo -c -o test/test_test_bitcoin-banman_tests.obj `if test -f 'test/banman_tests.cpp'; then $(CYGPATH_W) 'test/banman_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/banman_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-banman_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-banman_tests.Po
#	$(AM_V_CXX)source='test/banman_tests.cpp' object='test/test_test_bitcoin-banman_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-banman_tests.obj `if test -f 'test/banman_tests.cpp'; then $(CYGPATH_W) 'test/banman_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/banman_tests.cpp'; fi`

test/test_test_bitcoin-base32_tests.o: test/base32_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-base32_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-base32_tests.Tpo -c -o test/test_test_bitcoin-base32_tests.o `test -f 'test/base32_tests.cpp' || echo '$(srcdir)/'`test/base32_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-base32_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-base32_tests.Po
#	$(AM_V_CXX)source='test/base32_tests.cpp' object='test/test_test_bitcoin-base32_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-base32_tests.o `test -f 'test/base32_tests.cpp' || echo '$(srcdir)/'`test/base32_tests.cpp

test/test_test_bitcoin-base32_tests.obj: test/base32_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-base32_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-base32_tests.Tpo -c -o test/test_test_bitcoin-base32_tests.obj `if test -f 'test/base32_tests.cpp'; then $(CYGPATH_W) 'test/base32_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/base32_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-base32_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-base32_tests.Po
#	$(AM_V_CXX)source='test/base32_tests.cpp' object='test/test_test_bitcoin-base32_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-base32_tests.obj `if test -f 'test/base32_tests.cpp'; then $(CYGPATH_W) 'test/base32_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/base32_tests.cpp'; fi`

test/test_test_bitcoin-base58_tests.o: test/base58_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-base58_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-base58_tests.Tpo -c -o test/test_test_bitcoin-base58_tests.o `test -f 'test/base58_tests.cpp' || echo '$(srcdir)/'`test/base58_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-base58_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-base58_tests.Po
#	$(AM_V_CXX)source='test/base58_tests.cpp' object='test/test_test_bitcoin-base58_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-base58_tests.o `test -f 'test/base58_tests.cpp' || echo '$(srcdir)/'`test/base58_tests.cpp

test/test_test_bitcoin-base58_tests.obj: test/base58_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-base58_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-base58_tests.Tpo -c -o test/test_test_bitcoin-base58_tests.obj `if test -f 'test/base58_tests.cpp'; then $(CYGPATH_W) 'test/base58_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/base58_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-base58_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-base58_tests.Po
#	$(AM_V_CXX)source='test/base58_tests.cpp' object='test/test_test_bitcoin-base58_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-base58_tests.obj `if test -f 'test/base58_tests.cpp'; then $(CYGPATH_W) 'test/base58_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/base58_tests.cpp'; fi`

test/test_test_bitcoin-base64_tests.o: test/base64_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-base64_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-base64_tests.Tpo -c -o test/test_test_bitcoin-base64_tests.o `test -f 'test/base64_tests.cpp' || echo '$(srcdir)/'`test/base64_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-base64_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-base64_tests.Po
#	$(AM_V_CXX)source='test/base64_tests.cpp' object='test/test_test_bitcoin-base64_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-base64_tests.o `test -f 'test/base64_tests.cpp' || echo '$(srcdir)/'`test/base64_tests.cpp

test/test_test_bitcoin-base64_tests.obj: test/base64_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-base64_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-base64_tests.Tpo -c -o test/test_test_bitcoin-base64_tests.obj `if test -f 'test/base64_tests.cpp'; then $(CYGPATH_W) 'test/base64_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/base64_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-base64_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-base64_tests.Po
#	$(AM_V_CXX)source='test/base64_tests.cpp' object='test/test_test_bitcoin-base64_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-base64_tests.obj `if test -f 'test/base64_tests.cpp'; then $(CYGPATH_W) 'test/base64_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/base64_tests.cpp'; fi`

test/test_test_bitcoin-bech32_tests.o: test/bech32_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-bech32_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-bech32_tests.Tpo -c -o test/test_test_bitcoin-bech32_tests.o `test -f 'test/bech32_tests.cpp' || echo '$(srcdir)/'`test/bech32_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-bech32_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-bech32_tests.Po
#	$(AM_V_CXX)source='test/bech32_tests.cpp' object='test/test_test_bitcoin-bech32_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-bech32_tests.o `test -f 'test/bech32_tests.cpp' || echo '$(srcdir)/'`test/bech32_tests.cpp

test/test_test_bitcoin-bech32_tests.obj: test/bech32_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-bech32_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-bech32_tests.Tpo -c -o test/test_test_bitcoin-bech32_tests.obj `if test -f 'test/bech32_tests.cpp'; then $(CYGPATH_W) 'test/bech32_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/bech32_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-bech32_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-bech32_tests.Po
#	$(AM_V_CXX)source='test/bech32_tests.cpp' object='test/test_test_bitcoin-bech32_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-bech32_tests.obj `if test -f 'test/bech32_tests.cpp'; then $(CYGPATH_W) 'test/bech32_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/bech32_tests.cpp'; fi`

test/test_test_bitcoin-bip32_tests.o: test/bip32_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-bip32_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-bip32_tests.Tpo -c -o test/test_test_bitcoin-bip32_tests.o `test -f 'test/bip32_tests.cpp' || echo '$(srcdir)/'`test/bip32_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-bip32_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-bip32_tests.Po
#	$(AM_V_CXX)source='test/bip32_tests.cpp' object='test/test_test_bitcoin-bip32_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-bip32_tests.o `test -f 'test/bip32_tests.cpp' || echo '$(srcdir)/'`test/bip32_tests.cpp

test/test_test_bitcoin-bip32_tests.obj: test/bip32_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-bip32_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-bip32_tests.Tpo -c -o test/test_test_bitcoin-bip32_tests.obj `if test -f 'test/bip32_tests.cpp'; then $(CYGPATH_W) 'test/bip32_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/bip32_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-bip32_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-bip32_tests.Po
#	$(AM_V_CXX)source='test/bip32_tests.cpp' object='test/test_test_bitcoin-bip32_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-bip32_tests.obj `if test -f 'test/bip32_tests.cpp'; then $(CYGPATH_W) 'test/bip32_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/bip32_tests.cpp'; fi`

test/test_test_bitcoin-blockchain_tests.o: test/blockchain_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-blockchain_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-blockchain_tests.Tpo -c -o test/test_test_bitcoin-blockchain_tests.o `test -f 'test/blockchain_tests.cpp' || echo '$(srcdir)/'`test/blockchain_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-blockchain_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-blockchain_tests.Po
#	$(AM_V_CXX)source='test/blockchain_tests.cpp' object='test/test_test_bitcoin-blockchain_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-blockchain_tests.o `test -f 'test/blockchain_tests.cpp' || echo '$(srcdir)/'`test/blockchain_tests.cpp

test/test_test_bitcoin-blockchain_tests.obj: test/blockchain_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-blockchain_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-blockchain_tests.Tpo -c -o test/test_test_bitcoin-blockchain_tests.obj `if test -f 'test/blockchain_tests.cpp'; then $(CYGPATH_W) 'test/blockchain_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/blockchain_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-blockchain_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-blockchain_tests.Po
#	$(AM_V_CXX)source='test/blockchain_tests.cpp' object='test/test_test_bitcoin-blockchain_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-blockchain_tests.obj `if test -f 'test/blockchain_tests.cpp'; then $(CYGPATH_W) 'test/blockchain_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/blockchain_tests.cpp'; fi`

test/test_test_bitcoin-blockencodings_tests.o: test/blockencodings_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-blockencodings_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-blockencodings_tests.Tpo -c -o test/test_test_bitcoin-blockencodings_tests.o `test -f 'test/blockencodings_tests.cpp' || echo '$(srcdir)/'`test/blockencodings_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-blockencodings_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-blockencodings_tests.Po
#	$(AM_V_CXX)source='test/blockencodings_tests.cpp' object='test/test_test_bitcoin-blockencodings_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-blockencodings_tests.o `test -f 'test/blockencodings_tests.cpp' || echo '$(srcdir)/'`test/blockencodings_tests.cpp

test/test_test_bitcoin-blockencodings_tests.obj: test/blockencodings_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-blockencodings_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-blockencodings_tests.Tpo -c -o test/test_test_bitcoin-blockencodings_tests.obj `if test -f 'test/blockencodings_tests.cpp'; then $(CYGPATH_W) 'test/blockencodings_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/blockencodings_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-blockencodings_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-blockencodings_tests.Po
#	$(AM_V_CXX)source='test/blockencodings_tests.cpp' object='test/test_test_bitcoin-blockencodings_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-blockencodings_tests.obj `if test -f 'test/blockencodings_tests.cpp'; then $(CYGPATH_W) 'test/blockencodings_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/blockencodings_tests.cpp'; fi`

test/test_test_bitcoin-blockfilter_index_tests.o: test/blockfilter_index_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-blockfilter_index_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-blockfilter_index_tests.Tpo -c -o test/test_test_bitcoin-blockfilter_index_tests.o `test -f 'test/blockfilter_index_tests.cpp' || echo '$(srcdir)/'`test/blockfilter_index_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-blockfilter_index_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-blockfilter_index_tests.Po
#	$(AM_V_CXX)source='test/blockfilter_index_tests.cpp' object='test/test_test_bitcoin-blockfilter_index_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-blockfilter_index_tests.o `test -f 'test/blockfilter_index_tests.cpp' || echo '$(srcdir)/'`test/blockfilter_index_tests.cpp

test/test_test_bitcoin-blockfilter_index_tests.obj: test/blockfilter_index_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-blockfilter_index_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-blockfilter_index_tests.Tpo -c -o test/test_test_bitcoin-blockfilter_index_tests.obj `if test -f 'test/blockfilter_index_tests.cpp'; then $(CYGPATH_W) 'test/blockfilter_index_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/blockfilter_index_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-blockfilter_index_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-blockfilter_index_tests.Po
#	$(AM_V_CXX)source='test/blockfilter_index_tests.cpp' object='test/test_test_bitcoin-blockfilter_index_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-blockfilter_index_tests.obj `if test -f 'test/blockfilter_index_tests.cpp'; then $(CYGPATH_W) 'test/blockfilter_index_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/blockfilter_index_tests.cpp'; fi`

test/test_test_bitcoin-blockfilter_tests.o: test/blockfilter_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-blockfilter_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-blockfilter_tests.Tpo -c -o test/test_test_bitcoin-blockfilter_tests.o `test -f 'test/blockfilter_tests.cpp' || echo '$(srcdir)/'`test/blockfilter_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-blockfilter_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-blockfilter_tests.Po
#	$(AM_V_CXX)source='test/blockfilter_tests.cpp' object='test/test_test_bitcoin-blockfilter_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-blockfilter_tests.o `test -f 'test/blockfilter_tests.cpp' || echo '$(srcdir)/'`test/blockfilter_tests.cpp

test/test_test_bitcoin-blockfilter_tests.obj: test/blockfilter_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-blockfilter_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-blockfilter_tests.Tpo -c -o test/test_test_bitcoin-blockfilter_tests.obj `if test -f 'test/blockfilter_tests.cpp'; then $(CYGPATH_W) 'test/blockfilter_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/blockfilter_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-blockfilter_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-blockfilter_tests.Po
#	$(AM_V_CXX)source='test/blockfilter_tests.cpp' object='test/test_test_bitcoin-blockfilter_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-blockfilter_tests.obj `if test -f 'test/blockfilter_tests.cpp'; then $(CYGPATH_W) 'test/blockfilter_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/blockfilter_tests.cpp'; fi`

test/test_test_bitcoin-bloom_tests.o: test/bloom_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-bloom_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-bloom_tests.Tpo -c -o test/test_test_bitcoin-bloom_tests.o `test -f 'test/bloom_tests.cpp' || echo '$(srcdir)/'`test/bloom_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-bloom_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-bloom_tests.Po
#	$(AM_V_CXX)source='test/bloom_tests.cpp' object='test/test_test_bitcoin-bloom_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-bloom_tests.o `test -f 'test/bloom_tests.cpp' || echo '$(srcdir)/'`test/bloom_tests.cpp

test/test_test_bitcoin-bloom_tests.obj: test/bloom_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-bloom_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-bloom_tests.Tpo -c -o test/test_test_bitcoin-bloom_tests.obj `if test -f 'test/bloom_tests.cpp'; then $(CYGPATH_W) 'test/bloom_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/bloom_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-bloom_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-bloom_tests.Po
#	$(AM_V_CXX)source='test/bloom_tests.cpp' object='test/test_test_bitcoin-bloom_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-bloom_tests.obj `if test -f 'test/bloom_tests.cpp'; then $(CYGPATH_W) 'test/bloom_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/bloom_tests.cpp'; fi`

test/test_test_bitcoin-bswap_tests.o: test/bswap_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-bswap_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-bswap_tests.Tpo -c -o test/test_test_bitcoin-bswap_tests.o `test -f 'test/bswap_tests.cpp' || echo '$(srcdir)/'`test/bswap_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-bswap_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-bswap_tests.Po
#	$(AM_V_CXX)source='test/bswap_tests.cpp' object='test/test_test_bitcoin-bswap_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-bswap_tests.o `test -f 'test/bswap_tests.cpp' || echo '$(srcdir)/'`test/bswap_tests.cpp

test/test_test_bitcoin-bswap_tests.obj: test/bswap_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-bswap_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-bswap_tests.Tpo -c -o test/test_test_bitcoin-bswap_tests.obj `if test -f 'test/bswap_tests.cpp'; then $(CYGPATH_W) 'test/bswap_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/bswap_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-bswap_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-bswap_tests.Po
#	$(AM_V_CXX)source='test/bswap_tests.cpp' object='test/test_test_bitcoin-bswap_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-bswap_tests.obj `if test -f 'test/bswap_tests.cpp'; then $(CYGPATH_W) 'test/bswap_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/bswap_tests.cpp'; fi`

test/test_test_bitcoin-checkqueue_tests.o: test/checkqueue_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-checkqueue_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-checkqueue_tests.Tpo -c -o test/test_test_bitcoin-checkqueue_tests.o `test -f 'test/checkqueue_tests.cpp' || echo '$(srcdir)/'`test/checkqueue_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-checkqueue_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-checkqueue_tests.Po
#	$(AM_V_CXX)source='test/checkqueue_tests.cpp' object='test/test_test_bitcoin-checkqueue_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-checkqueue_tests.o `test -f 'test/checkqueue_tests.cpp' || echo '$(srcdir)/'`test/checkqueue_tests.cpp

test/test_test_bitcoin-checkqueue_tests.obj: test/checkqueue_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-checkqueue_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-checkqueue_tests.Tpo -c -o test/test_test_bitcoin-checkqueue_tests.obj `if test -f 'test/checkqueue_tests.cpp'; then $(CYGPATH_W) 'test/checkqueue_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/checkqueue_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-checkqueue_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-checkqueue_tests.Po
#	$(AM_V_CXX)source='test/checkqueue_tests.cpp' object='test/test_test_bitcoin-checkqueue_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-checkqueue_tests.obj `if test -f 'test/checkqueue_tests.cpp'; then $(CYGPATH_W) 'test/checkqueue_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/checkqueue_tests.cpp'; fi`

test/test_test_bitcoin-coins_tests.o: test/coins_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-coins_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-coins_tests.Tpo -c -o test/test_test_bitcoin-coins_tests.o `test -f 'test/coins_tests.cpp' || echo '$(srcdir)/'`test/coins_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-coins_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-coins_tests.Po
#	$(AM_V_CXX)source='test/coins_tests.cpp' object='test/test_test_bitcoin-coins_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-coins_tests.o `test -f 'test/coins_tests.cpp' || echo '$(srcdir)/'`test/coins_tests.cpp

test/test_test_bitcoin-coins_tests.obj: test/coins_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-coins_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-coins_tests.Tpo -c -o test/test_test_bitcoin-coins_tests.obj `if test -f 'test/coins_tests.cpp'; then $(CYGPATH_W) 'test/coins_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/coins_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-coins_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-coins_tests.Po
#	$(AM_V_CXX)source='test/coins_tests.cpp' object='test/test_test_bitcoin-coins_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-coins_tests.obj `if test -f 'test/coins_tests.cpp'; then $(CYGPATH_W) 'test/coins_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/coins_tests.cpp'; fi`

test/test_test_bitcoin-coinstatsindex_tests.o: test/coinstatsindex_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-coinstatsindex_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-coinstatsindex_tests.Tpo -c -o test/test_test_bitcoin-coinstatsindex_tests.o `test -f 'test/coinstatsindex_tests.cpp' || echo '$(srcdir)/'`test/coinstatsindex_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-coinstatsindex_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-coinstatsindex_tests.Po
#	$(AM_V_CXX)source='test/coinstatsindex_tests.cpp' object='test/test_test_bitcoin-coinstatsindex_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-coinstatsindex_tests.o `test -f 'test/coinstatsindex_tests.cpp' || echo '$(srcdir)/'`test/coinstatsindex_tests.cpp

test/test_test_bitcoin-coinstatsindex_tests.obj: test/coinstatsindex_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-coinstatsindex_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-coinstatsindex_tests.Tpo -c -o test/test_test_bitcoin-coinstatsindex_tests.obj `if test -f 'test/coinstatsindex_tests.cpp'; then $(CYGPATH_W) 'test/coinstatsindex_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/coinstatsindex_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-coinstatsindex_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-coinstatsindex_tests.Po
#	$(AM_V_CXX)source='test/coinstatsindex_tests.cpp' object='test/test_test_bitcoin-coinstatsindex_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-coinstatsindex_tests.obj `if test -f 'test/coinstatsindex_tests.cpp'; then $(CYGPATH_W) 'test/coinstatsindex_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/coinstatsindex_tests.cpp'; fi`

test/test_test_bitcoin-compilerbug_tests.o: test/compilerbug_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-compilerbug_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-compilerbug_tests.Tpo -c -o test/test_test_bitcoin-compilerbug_tests.o `test -f 'test/compilerbug_tests.cpp' || echo '$(srcdir)/'`test/compilerbug_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-compilerbug_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-compilerbug_tests.Po
#	$(AM_V_CXX)source='test/compilerbug_tests.cpp' object='test/test_test_bitcoin-compilerbug_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-compilerbug_tests.o `test -f 'test/compilerbug_tests.cpp' || echo '$(srcdir)/'`test/compilerbug_tests.cpp

test/test_test_bitcoin-compilerbug_tests.obj: test/compilerbug_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-compilerbug_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-compilerbug_tests.Tpo -c -o test/test_test_bitcoin-compilerbug_tests.obj `if test -f 'test/compilerbug_tests.cpp'; then $(CYGPATH_W) 'test/compilerbug_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/compilerbug_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-compilerbug_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-compilerbug_tests.Po
#	$(AM_V_CXX)source='test/compilerbug_tests.cpp' object='test/test_test_bitcoin-compilerbug_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-compilerbug_tests.obj `if test -f 'test/compilerbug_tests.cpp'; then $(CYGPATH_W) 'test/compilerbug_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/compilerbug_tests.cpp'; fi`

test/test_test_bitcoin-compress_tests.o: test/compress_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-compress_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-compress_tests.Tpo -c -o test/test_test_bitcoin-compress_tests.o `test -f 'test/compress_tests.cpp' || echo '$(srcdir)/'`test/compress_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-compress_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-compress_tests.Po
#	$(AM_V_CXX)source='test/compress_tests.cpp' object='test/test_test_bitcoin-compress_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-compress_tests.o `test -f 'test/compress_tests.cpp' || echo '$(srcdir)/'`test/compress_tests.cpp

test/test_test_bitcoin-compress_tests.obj: test/compress_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-compress_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-compress_tests.Tpo -c -o test/test_test_bitcoin-compress_tests.obj `if test -f 'test/compress_tests.cpp'; then $(CYGPATH_W) 'test/compress_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/compress_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-compress_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-compress_tests.Po
#	$(AM_V_CXX)source='test/compress_tests.cpp' object='test/test_test_bitcoin-compress_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-compress_tests.obj `if test -f 'test/compress_tests.cpp'; then $(CYGPATH_W) 'test/compress_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/compress_tests.cpp'; fi`

test/test_test_bitcoin-crypto_tests.o: test/crypto_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-crypto_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-crypto_tests.Tpo -c -o test/test_test_bitcoin-crypto_tests.o `test -f 'test/crypto_tests.cpp' || echo '$(srcdir)/'`test/crypto_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-crypto_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-crypto_tests.Po
#	$(AM_V_CXX)source='test/crypto_tests.cpp' object='test/test_test_bitcoin-crypto_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-crypto_tests.o `test -f 'test/crypto_tests.cpp' || echo '$(srcdir)/'`test/crypto_tests.cpp

test/test_test_bitcoin-crypto_tests.obj: test/crypto_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-crypto_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-crypto_tests.Tpo -c -o test/test_test_bitcoin-crypto_tests.obj `if test -f 'test/crypto_tests.cpp'; then $(CYGPATH_W) 'test/crypto_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/crypto_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-crypto_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-crypto_tests.Po
#	$(AM_V_CXX)source='test/crypto_tests.cpp' object='test/test_test_bitcoin-crypto_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-crypto_tests.obj `if test -f 'test/crypto_tests.cpp'; then $(CYGPATH_W) 'test/crypto_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/crypto_tests.cpp'; fi`

test/test_test_bitcoin-cuckoocache_tests.o: test/cuckoocache_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-cuckoocache_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-cuckoocache_tests.Tpo -c -o test/test_test_bitcoin-cuckoocache_tests.o `test -f 'test/cuckoocache_tests.cpp' || echo '$(srcdir)/'`test/cuckoocache_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-cuckoocache_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-cuckoocache_tests.Po
#	$(AM_V_CXX)source='test/cuckoocache_tests.cpp' object='test/test_test_bitcoin-cuckoocache_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-cuckoocache_tests.o `test -f 'test/cuckoocache_tests.cpp' || echo '$(srcdir)/'`test/cuckoocache_tests.cpp

test/test_test_bitcoin-cuckoocache_tests.obj: test/cuckoocache_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-cuckoocache_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-cuckoocache_tests.Tpo -c -o test/test_test_bitcoin-cuckoocache_tests.obj `if test -f 'test/cuckoocache_tests.cpp'; then $(CYGPATH_W) 'test/cuckoocache_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/cuckoocache_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-cuckoocache_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-cuckoocache_tests.Po
#	$(AM_V_CXX)source='test/cuckoocache_tests.cpp' object='test/test_test_bitcoin-cuckoocache_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-cuckoocache_tests.obj `if test -f 'test/cuckoocache_tests.cpp'; then $(CYGPATH_W) 'test/cuckoocache_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/cuckoocache_tests.cpp'; fi`

test/test_test_bitcoin-dbwrapper_tests.o: test/dbwrapper_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-dbwrapper_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-dbwrapper_tests.Tpo -c -o test/test_test_bitcoin-dbwrapper_tests.o `test -f 'test/dbwrapper_tests.cpp' || echo '$(srcdir)/'`test/dbwrapper_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-dbwrapper_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-dbwrapper_tests.Po
#	$(AM_V_CXX)source='test/dbwrapper_tests.cpp' object='test/test_test_bitcoin-dbwrapper_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-dbwrapper_tests.o `test -f 'test/dbwrapper_tests.cpp' || echo '$(srcdir)/'`test/dbwrapper_tests.cpp

test/test_test_bitcoin-dbwrapper_tests.obj: test/dbwrapper_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-dbwrapper_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-dbwrapper_tests.Tpo -c -o test/test_test_bitcoin-dbwrapper_tests.obj `if test -f 'test/dbwrapper_tests.cpp'; then $(CYGPATH_W) 'test/dbwrapper_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/dbwrapper_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-dbwrapper_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-dbwrapper_tests.Po
#	$(AM_V_CXX)source='test/dbwrapper_tests.cpp' object='test/test_test_bitcoin-dbwrapper_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-dbwrapper_tests.obj `if test -f 'test/dbwrapper_tests.cpp'; then $(CYGPATH_W) 'test/dbwrapper_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/dbwrapper_tests.cpp'; fi`

test/test_test_bitcoin-denialofservice_tests.o: test/denialofservice_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-denialofservice_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-denialofservice_tests.Tpo -c -o test/test_test_bitcoin-denialofservice_tests.o `test -f 'test/denialofservice_tests.cpp' || echo '$(srcdir)/'`test/denialofservice_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-denialofservice_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-denialofservice_tests.Po
#	$(AM_V_CXX)source='test/denialofservice_tests.cpp' object='test/test_test_bitcoin-denialofservice_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-denialofservice_tests.o `test -f 'test/denialofservice_tests.cpp' || echo '$(srcdir)/'`test/denialofservice_tests.cpp

test/test_test_bitcoin-denialofservice_tests.obj: test/denialofservice_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-denialofservice_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-denialofservice_tests.Tpo -c -o test/test_test_bitcoin-denialofservice_tests.obj `if test -f 'test/denialofservice_tests.cpp'; then $(CYGPATH_W) 'test/denialofservice_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/denialofservice_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-denialofservice_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-denialofservice_tests.Po
#	$(AM_V_CXX)source='test/denialofservice_tests.cpp' object='test/test_test_bitcoin-denialofservice_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-denialofservice_tests.obj `if test -f 'test/denialofservice_tests.cpp'; then $(CYGPATH_W) 'test/denialofservice_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/denialofservice_tests.cpp'; fi`

test/test_test_bitcoin-descriptor_tests.o: test/descriptor_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-descriptor_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-descriptor_tests.Tpo -c -o test/test_test_bitcoin-descriptor_tests.o `test -f 'test/descriptor_tests.cpp' || echo '$(srcdir)/'`test/descriptor_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-descriptor_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-descriptor_tests.Po
#	$(AM_V_CXX)source='test/descriptor_tests.cpp' object='test/test_test_bitcoin-descriptor_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-descriptor_tests.o `test -f 'test/descriptor_tests.cpp' || echo '$(srcdir)/'`test/descriptor_tests.cpp

test/test_test_bitcoin-descriptor_tests.obj: test/descriptor_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-descriptor_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-descriptor_tests.Tpo -c -o test/test_test_bitcoin-descriptor_tests.obj `if test -f 'test/descriptor_tests.cpp'; then $(CYGPATH_W) 'test/descriptor_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/descriptor_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-descriptor_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-descriptor_tests.Po
#	$(AM_V_CXX)source='test/descriptor_tests.cpp' object='test/test_test_bitcoin-descriptor_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-descriptor_tests.obj `if test -f 'test/descriptor_tests.cpp'; then $(CYGPATH_W) 'test/descriptor_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/descriptor_tests.cpp'; fi`

test/test_test_bitcoin-flatfile_tests.o: test/flatfile_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-flatfile_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-flatfile_tests.Tpo -c -o test/test_test_bitcoin-flatfile_tests.o `test -f 'test/flatfile_tests.cpp' || echo '$(srcdir)/'`test/flatfile_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-flatfile_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-flatfile_tests.Po
#	$(AM_V_CXX)source='test/flatfile_tests.cpp' object='test/test_test_bitcoin-flatfile_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-flatfile_tests.o `test -f 'test/flatfile_tests.cpp' || echo '$(srcdir)/'`test/flatfile_tests.cpp

test/test_test_bitcoin-flatfile_tests.obj: test/flatfile_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-flatfile_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-flatfile_tests.Tpo -c -o test/test_test_bitcoin-flatfile_tests.obj `if test -f 'test/flatfile_tests.cpp'; then $(CYGPATH_W) 'test/flatfile_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/flatfile_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-flatfile_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-flatfile_tests.Po
#	$(AM_V_CXX)source='test/flatfile_tests.cpp' object='test/test_test_bitcoin-flatfile_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-flatfile_tests.obj `if test -f 'test/flatfile_tests.cpp'; then $(CYGPATH_W) 'test/flatfile_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/flatfile_tests.cpp'; fi`

test/test_test_bitcoin-fs_tests.o: test/fs_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-fs_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-fs_tests.Tpo -c -o test/test_test_bitcoin-fs_tests.o `test -f 'test/fs_tests.cpp' || echo '$(srcdir)/'`test/fs_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-fs_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-fs_tests.Po
#	$(AM_V_CXX)source='test/fs_tests.cpp' object='test/test_test_bitcoin-fs_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-fs_tests.o `test -f 'test/fs_tests.cpp' || echo '$(srcdir)/'`test/fs_tests.cpp

test/test_test_bitcoin-fs_tests.obj: test/fs_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-fs_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-fs_tests.Tpo -c -o test/test_test_bitcoin-fs_tests.obj `if test -f 'test/fs_tests.cpp'; then $(CYGPATH_W) 'test/fs_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fs_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-fs_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-fs_tests.Po
#	$(AM_V_CXX)source='test/fs_tests.cpp' object='test/test_test_bitcoin-fs_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-fs_tests.obj `if test -f 'test/fs_tests.cpp'; then $(CYGPATH_W) 'test/fs_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fs_tests.cpp'; fi`

test/test_test_bitcoin-getarg_tests.o: test/getarg_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-getarg_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-getarg_tests.Tpo -c -o test/test_test_bitcoin-getarg_tests.o `test -f 'test/getarg_tests.cpp' || echo '$(srcdir)/'`test/getarg_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-getarg_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-getarg_tests.Po
#	$(AM_V_CXX)source='test/getarg_tests.cpp' object='test/test_test_bitcoin-getarg_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-getarg_tests.o `test -f 'test/getarg_tests.cpp' || echo '$(srcdir)/'`test/getarg_tests.cpp

test/test_test_bitcoin-getarg_tests.obj: test/getarg_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-getarg_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-getarg_tests.Tpo -c -o test/test_test_bitcoin-getarg_tests.obj `if test -f 'test/getarg_tests.cpp'; then $(CYGPATH_W) 'test/getarg_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/getarg_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-getarg_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-getarg_tests.Po
#	$(AM_V_CXX)source='test/getarg_tests.cpp' object='test/test_test_bitcoin-getarg_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-getarg_tests.obj `if test -f 'test/getarg_tests.cpp'; then $(CYGPATH_W) 'test/getarg_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/getarg_tests.cpp'; fi`

test/test_test_bitcoin-hash_tests.o: test/hash_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-hash_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-hash_tests.Tpo -c -o test/test_test_bitcoin-hash_tests.o `test -f 'test/hash_tests.cpp' || echo '$(srcdir)/'`test/hash_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-hash_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-hash_tests.Po
#	$(AM_V_CXX)source='test/hash_tests.cpp' object='test/test_test_bitcoin-hash_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-hash_tests.o `test -f 'test/hash_tests.cpp' || echo '$(srcdir)/'`test/hash_tests.cpp

test/test_test_bitcoin-hash_tests.obj: test/hash_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-hash_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-hash_tests.Tpo -c -o test/test_test_bitcoin-hash_tests.obj `if test -f 'test/hash_tests.cpp'; then $(CYGPATH_W) 'test/hash_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/hash_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-hash_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-hash_tests.Po
#	$(AM_V_CXX)source='test/hash_tests.cpp' object='test/test_test_bitcoin-hash_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-hash_tests.obj `if test -f 'test/hash_tests.cpp'; then $(CYGPATH_W) 'test/hash_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/hash_tests.cpp'; fi`

test/test_test_bitcoin-httpserver_tests.o: test/httpserver_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-httpserver_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-httpserver_tests.Tpo -c -o test/test_test_bitcoin-httpserver_tests.o `test -f 'test/httpserver_tests.cpp' || echo '$(srcdir)/'`test/httpserver_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-httpserver_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-httpserver_tests.Po
#	$(AM_V_CXX)source='test/httpserver_tests.cpp' object='test/test_test_bitcoin-httpserver_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-httpserver_tests.o `test -f 'test/httpserver_tests.cpp' || echo '$(srcdir)/'`test/httpserver_tests.cpp

test/test_test_bitcoin-httpserver_tests.obj: test/httpserver_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-httpserver_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-httpserver_tests.Tpo -c -o test/test_test_bitcoin-httpserver_tests.obj `if test -f 'test/httpserver_tests.cpp'; then $(CYGPATH_W) 'test/httpserver_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/httpserver_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-httpserver_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-httpserver_tests.Po
#	$(AM_V_CXX)source='test/httpserver_tests.cpp' object='test/test_test_bitcoin-httpserver_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-httpserver_tests.obj `if test -f 'test/httpserver_tests.cpp'; then $(CYGPATH_W) 'test/httpserver_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/httpserver_tests.cpp'; fi`

test/test_test_bitcoin-i2p_tests.o: test/i2p_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-i2p_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-i2p_tests.Tpo -c -o test/test_test_bitcoin-i2p_tests.o `test -f 'test/i2p_tests.cpp' || echo '$(srcdir)/'`test/i2p_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-i2p_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-i2p_tests.Po
#	$(AM_V_CXX)source='test/i2p_tests.cpp' object='test/test_test_bitcoin-i2p_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-i2p_tests.o `test -f 'test/i2p_tests.cpp' || echo '$(srcdir)/'`test/i2p_tests.cpp

test/test_test_bitcoin-i2p_tests.obj: test/i2p_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-i2p_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-i2p_tests.Tpo -c -o test/test_test_bitcoin-i2p_tests.obj `if test -f 'test/i2p_tests.cpp'; then $(CYGPATH_W) 'test/i2p_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/i2p_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-i2p_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-i2p_tests.Po
#	$(AM_V_CXX)source='test/i2p_tests.cpp' object='test/test_test_bitcoin-i2p_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-i2p_tests.obj `if test -f 'test/i2p_tests.cpp'; then $(CYGPATH_W) 'test/i2p_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/i2p_tests.cpp'; fi`

test/test_test_bitcoin-interfaces_tests.o: test/interfaces_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-interfaces_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-interfaces_tests.Tpo -c -o test/test_test_bitcoin-interfaces_tests.o `test -f 'test/interfaces_tests.cpp' || echo '$(srcdir)/'`test/interfaces_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-interfaces_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-interfaces_tests.Po
#	$(AM_V_CXX)source='test/interfaces_tests.cpp' object='test/test_test_bitcoin-interfaces_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-interfaces_tests.o `test -f 'test/interfaces_tests.cpp' || echo '$(srcdir)/'`test/interfaces_tests.cpp

test/test_test_bitcoin-interfaces_tests.obj: test/interfaces_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-interfaces_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-interfaces_tests.Tpo -c -o test/test_test_bitcoin-interfaces_tests.obj `if test -f 'test/interfaces_tests.cpp'; then $(CYGPATH_W) 'test/interfaces_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/interfaces_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-interfaces_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-interfaces_tests.Po
#	$(AM_V_CXX)source='test/interfaces_tests.cpp' object='test/test_test_bitcoin-interfaces_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-interfaces_tests.obj `if test -f 'test/interfaces_tests.cpp'; then $(CYGPATH_W) 'test/interfaces_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/interfaces_tests.cpp'; fi`

test/test_test_bitcoin-key_io_tests.o: test/key_io_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-key_io_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-key_io_tests.Tpo -c -o test/test_test_bitcoin-key_io_tests.o `test -f 'test/key_io_tests.cpp' || echo '$(srcdir)/'`test/key_io_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-key_io_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-key_io_tests.Po
#	$(AM_V_CXX)source='test/key_io_tests.cpp' object='test/test_test_bitcoin-key_io_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-key_io_tests.o `test -f 'test/key_io_tests.cpp' || echo '$(srcdir)/'`test/key_io_tests.cpp

test/test_test_bitcoin-key_io_tests.obj: test/key_io_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-key_io_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-key_io_tests.Tpo -c -o test/test_test_bitcoin-key_io_tests.obj `if test -f 'test/key_io_tests.cpp'; then $(CYGPATH_W) 'test/key_io_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/key_io_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-key_io_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-key_io_tests.Po
#	$(AM_V_CXX)source='test/key_io_tests.cpp' object='test/test_test_bitcoin-key_io_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-key_io_tests.obj `if test -f 'test/key_io_tests.cpp'; then $(CYGPATH_W) 'test/key_io_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/key_io_tests.cpp'; fi`

test/test_test_bitcoin-key_tests.o: test/key_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-key_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-key_tests.Tpo -c -o test/test_test_bitcoin-key_tests.o `test -f 'test/key_tests.cpp' || echo '$(srcdir)/'`test/key_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-key_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-key_tests.Po
#	$(AM_V_CXX)source='test/key_tests.cpp' object='test/test_test_bitcoin-key_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-key_tests.o `test -f 'test/key_tests.cpp' || echo '$(srcdir)/'`test/key_tests.cpp

test/test_test_bitcoin-key_tests.obj: test/key_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-key_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-key_tests.Tpo -c -o test/test_test_bitcoin-key_tests.obj `if test -f 'test/key_tests.cpp'; then $(CYGPATH_W) 'test/key_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/key_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-key_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-key_tests.Po
#	$(AM_V_CXX)source='test/key_tests.cpp' object='test/test_test_bitcoin-key_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-key_tests.obj `if test -f 'test/key_tests.cpp'; then $(CYGPATH_W) 'test/key_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/key_tests.cpp'; fi`

test/test_test_bitcoin-logging_tests.o: test/logging_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-logging_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-logging_tests.Tpo -c -o test/test_test_bitcoin-logging_tests.o `test -f 'test/logging_tests.cpp' || echo '$(srcdir)/'`test/logging_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-logging_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-logging_tests.Po
#	$(AM_V_CXX)source='test/logging_tests.cpp' object='test/test_test_bitcoin-logging_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-logging_tests.o `test -f 'test/logging_tests.cpp' || echo '$(srcdir)/'`test/logging_tests.cpp

test/test_test_bitcoin-logging_tests.obj: test/logging_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-logging_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-logging_tests.Tpo -c -o test/test_test_bitcoin-logging_tests.obj `if test -f 'test/logging_tests.cpp'; then $(CYGPATH_W) 'test/logging_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/logging_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-logging_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-logging_tests.Po
#	$(AM_V_CXX)source='test/logging_tests.cpp' object='test/test_test_bitcoin-logging_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-logging_tests.obj `if test -f 'test/logging_tests.cpp'; then $(CYGPATH_W) 'test/logging_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/logging_tests.cpp'; fi`

test/test_test_bitcoin-mempool_tests.o: test/mempool_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-mempool_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-mempool_tests.Tpo -c -o test/test_test_bitcoin-mempool_tests.o `test -f 'test/mempool_tests.cpp' || echo '$(srcdir)/'`test/mempool_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-mempool_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-mempool_tests.Po
#	$(AM_V_CXX)source='test/mempool_tests.cpp' object='test/test_test_bitcoin-mempool_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-mempool_tests.o `test -f 'test/mempool_tests.cpp' || echo '$(srcdir)/'`test/mempool_tests.cpp

test/test_test_bitcoin-mempool_tests.obj: test/mempool_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-mempool_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-mempool_tests.Tpo -c -o test/test_test_bitcoin-mempool_tests.obj `if test -f 'test/mempool_tests.cpp'; then $(CYGPATH_W) 'test/mempool_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/mempool_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-mempool_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-mempool_tests.Po
#	$(AM_V_CXX)source='test/mempool_tests.cpp' object='test/test_test_bitcoin-mempool_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-mempool_tests.obj `if test -f 'test/mempool_tests.cpp'; then $(CYGPATH_W) 'test/mempool_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/mempool_tests.cpp'; fi`

test/test_test_bitcoin-merkle_tests.o: test/merkle_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-merkle_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-merkle_tests.Tpo -c -o test/test_test_bitcoin-merkle_tests.o `test -f 'test/merkle_tests.cpp' || echo '$(srcdir)/'`test/merkle_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-merkle_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-merkle_tests.Po
#	$(AM_V_CXX)source='test/merkle_tests.cpp' object='test/test_test_bitcoin-merkle_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-merkle_tests.o `test -f 'test/merkle_tests.cpp' || echo '$(srcdir)/'`test/merkle_tests.cpp

test/test_test_bitcoin-merkle_tests.obj: test/merkle_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-merkle_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-merkle_tests.Tpo -c -o test/test_test_bitcoin-merkle_tests.obj `if test -f 'test/merkle_tests.cpp'; then $(CYGPATH_W) 'test/merkle_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/merkle_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-merkle_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-merkle_tests.Po
#	$(AM_V_CXX)source='test/merkle_tests.cpp' object='test/test_test_bitcoin-merkle_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-merkle_tests.obj `if test -f 'test/merkle_tests.cpp'; then $(CYGPATH_W) 'test/merkle_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/merkle_tests.cpp'; fi`

test/test_test_bitcoin-merkleblock_tests.o: test/merkleblock_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-merkleblock_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-merkleblock_tests.Tpo -c -o test/test_test_bitcoin-merkleblock_tests.o `test -f 'test/merkleblock_tests.cpp' || echo '$(srcdir)/'`test/merkleblock_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-merkleblock_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-merkleblock_tests.Po
#	$(AM_V_CXX)source='test/merkleblock_tests.cpp' object='test/test_test_bitcoin-merkleblock_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-merkleblock_tests.o `test -f 'test/merkleblock_tests.cpp' || echo '$(srcdir)/'`test/merkleblock_tests.cpp

test/test_test_bitcoin-merkleblock_tests.obj: test/merkleblock_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-merkleblock_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-merkleblock_tests.Tpo -c -o test/test_test_bitcoin-merkleblock_tests.obj `if test -f 'test/merkleblock_tests.cpp'; then $(CYGPATH_W) 'test/merkleblock_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/merkleblock_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-merkleblock_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-merkleblock_tests.Po
#	$(AM_V_CXX)source='test/merkleblock_tests.cpp' object='test/test_test_bitcoin-merkleblock_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-merkleblock_tests.obj `if test -f 'test/merkleblock_tests.cpp'; then $(CYGPATH_W) 'test/merkleblock_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/merkleblock_tests.cpp'; fi`

test/test_test_bitcoin-miner_tests.o: test/miner_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-miner_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-miner_tests.Tpo -c -o test/test_test_bitcoin-miner_tests.o `test -f 'test/miner_tests.cpp' || echo '$(srcdir)/'`test/miner_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-miner_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-miner_tests.Po
#	$(AM_V_CXX)source='test/miner_tests.cpp' object='test/test_test_bitcoin-miner_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-miner_tests.o `test -f 'test/miner_tests.cpp' || echo '$(srcdir)/'`test/miner_tests.cpp

test/test_test_bitcoin-miner_tests.obj: test/miner_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-miner_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-miner_tests.Tpo -c -o test/test_test_bitcoin-miner_tests.obj `if test -f 'test/miner_tests.cpp'; then $(CYGPATH_W) 'test/miner_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/miner_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-miner_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-miner_tests.Po
#	$(AM_V_CXX)source='test/miner_tests.cpp' object='test/test_test_bitcoin-miner_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-miner_tests.obj `if test -f 'test/miner_tests.cpp'; then $(CYGPATH_W) 'test/miner_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/miner_tests.cpp'; fi`

test/test_test_bitcoin-miniscript_tests.o: test/miniscript_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-miniscript_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-miniscript_tests.Tpo -c -o test/test_test_bitcoin-miniscript_tests.o `test -f 'test/miniscript_tests.cpp' || echo '$(srcdir)/'`test/miniscript_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-miniscript_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-miniscript_tests.Po
#	$(AM_V_CXX)source='test/miniscript_tests.cpp' object='test/test_test_bitcoin-miniscript_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-miniscript_tests.o `test -f 'test/miniscript_tests.cpp' || echo '$(srcdir)/'`test/miniscript_tests.cpp

test/test_test_bitcoin-miniscript_tests.obj: test/miniscript_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-miniscript_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-miniscript_tests.Tpo -c -o test/test_test_bitcoin-miniscript_tests.obj `if test -f 'test/miniscript_tests.cpp'; then $(CYGPATH_W) 'test/miniscript_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/miniscript_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-miniscript_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-miniscript_tests.Po
#	$(AM_V_CXX)source='test/miniscript_tests.cpp' object='test/test_test_bitcoin-miniscript_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-miniscript_tests.obj `if test -f 'test/miniscript_tests.cpp'; then $(CYGPATH_W) 'test/miniscript_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/miniscript_tests.cpp'; fi`

test/test_test_bitcoin-minisketch_tests.o: test/minisketch_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-minisketch_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-minisketch_tests.Tpo -c -o test/test_test_bitcoin-minisketch_tests.o `test -f 'test/minisketch_tests.cpp' || echo '$(srcdir)/'`test/minisketch_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-minisketch_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-minisketch_tests.Po
#	$(AM_V_CXX)source='test/minisketch_tests.cpp' object='test/test_test_bitcoin-minisketch_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-minisketch_tests.o `test -f 'test/minisketch_tests.cpp' || echo '$(srcdir)/'`test/minisketch_tests.cpp

test/test_test_bitcoin-minisketch_tests.obj: test/minisketch_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-minisketch_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-minisketch_tests.Tpo -c -o test/test_test_bitcoin-minisketch_tests.obj `if test -f 'test/minisketch_tests.cpp'; then $(CYGPATH_W) 'test/minisketch_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/minisketch_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-minisketch_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-minisketch_tests.Po
#	$(AM_V_CXX)source='test/minisketch_tests.cpp' object='test/test_test_bitcoin-minisketch_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-minisketch_tests.obj `if test -f 'test/minisketch_tests.cpp'; then $(CYGPATH_W) 'test/minisketch_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/minisketch_tests.cpp'; fi`

test/test_test_bitcoin-multisig_tests.o: test/multisig_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-multisig_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-multisig_tests.Tpo -c -o test/test_test_bitcoin-multisig_tests.o `test -f 'test/multisig_tests.cpp' || echo '$(srcdir)/'`test/multisig_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-multisig_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-multisig_tests.Po
#	$(AM_V_CXX)source='test/multisig_tests.cpp' object='test/test_test_bitcoin-multisig_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-multisig_tests.o `test -f 'test/multisig_tests.cpp' || echo '$(srcdir)/'`test/multisig_tests.cpp

test/test_test_bitcoin-multisig_tests.obj: test/multisig_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-multisig_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-multisig_tests.Tpo -c -o test/test_test_bitcoin-multisig_tests.obj `if test -f 'test/multisig_tests.cpp'; then $(CYGPATH_W) 'test/multisig_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/multisig_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-multisig_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-multisig_tests.Po
#	$(AM_V_CXX)source='test/multisig_tests.cpp' object='test/test_test_bitcoin-multisig_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-multisig_tests.obj `if test -f 'test/multisig_tests.cpp'; then $(CYGPATH_W) 'test/multisig_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/multisig_tests.cpp'; fi`

test/test_test_bitcoin-net_peer_eviction_tests.o: test/net_peer_eviction_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-net_peer_eviction_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-net_peer_eviction_tests.Tpo -c -o test/test_test_bitcoin-net_peer_eviction_tests.o `test -f 'test/net_peer_eviction_tests.cpp' || echo '$(srcdir)/'`test/net_peer_eviction_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-net_peer_eviction_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-net_peer_eviction_tests.Po
#	$(AM_V_CXX)source='test/net_peer_eviction_tests.cpp' object='test/test_test_bitcoin-net_peer_eviction_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-net_peer_eviction_tests.o `test -f 'test/net_peer_eviction_tests.cpp' || echo '$(srcdir)/'`test/net_peer_eviction_tests.cpp

test/test_test_bitcoin-net_peer_eviction_tests.obj: test/net_peer_eviction_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-net_peer_eviction_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-net_peer_eviction_tests.Tpo -c -o test/test_test_bitcoin-net_peer_eviction_tests.obj `if test -f 'test/net_peer_eviction_tests.cpp'; then $(CYGPATH_W) 'test/net_peer_eviction_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/net_peer_eviction_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-net_peer_eviction_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-net_peer_eviction_tests.Po
#	$(AM_V_CXX)source='test/net_peer_eviction_tests.cpp' object='test/test_test_bitcoin-net_peer_eviction_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-net_peer_eviction_tests.obj `if test -f 'test/net_peer_eviction_tests.cpp'; then $(CYGPATH_W) 'test/net_peer_eviction_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/net_peer_eviction_tests.cpp'; fi`

test/test_test_bitcoin-net_tests.o: test/net_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-net_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-net_tests.Tpo -c -o test/test_test_bitcoin-net_tests.o `test -f 'test/net_tests.cpp' || echo '$(srcdir)/'`test/net_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-net_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-net_tests.Po
#	$(AM_V_CXX)source='test/net_tests.cpp' object='test/test_test_bitcoin-net_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-net_tests.o `test -f 'test/net_tests.cpp' || echo '$(srcdir)/'`test/net_tests.cpp

test/test_test_bitcoin-net_tests.obj: test/net_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-net_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-net_tests.Tpo -c -o test/test_test_bitcoin-net_tests.obj `if test -f 'test/net_tests.cpp'; then $(CYGPATH_W) 'test/net_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/net_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-net_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-net_tests.Po
#	$(AM_V_CXX)source='test/net_tests.cpp' object='test/test_test_bitcoin-net_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-net_tests.obj `if test -f 'test/net_tests.cpp'; then $(CYGPATH_W) 'test/net_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/net_tests.cpp'; fi`

test/test_test_bitcoin-netbase_tests.o: test/netbase_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-netbase_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-netbase_tests.Tpo -c -o test/test_test_bitcoin-netbase_tests.o `test -f 'test/netbase_tests.cpp' || echo '$(srcdir)/'`test/netbase_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-netbase_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-netbase_tests.Po
#	$(AM_V_CXX)source='test/netbase_tests.cpp' object='test/test_test_bitcoin-netbase_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-netbase_tests.o `test -f 'test/netbase_tests.cpp' || echo '$(srcdir)/'`test/netbase_tests.cpp

test/test_test_bitcoin-netbase_tests.obj: test/netbase_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-netbase_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-netbase_tests.Tpo -c -o test/test_test_bitcoin-netbase_tests.obj `if test -f 'test/netbase_tests.cpp'; then $(CYGPATH_W) 'test/netbase_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/netbase_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-netbase_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-netbase_tests.Po
#	$(AM_V_CXX)source='test/netbase_tests.cpp' object='test/test_test_bitcoin-netbase_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-netbase_tests.obj `if test -f 'test/netbase_tests.cpp'; then $(CYGPATH_W) 'test/netbase_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/netbase_tests.cpp'; fi`

test/test_test_bitcoin-orphanage_tests.o: test/orphanage_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-orphanage_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-orphanage_tests.Tpo -c -o test/test_test_bitcoin-orphanage_tests.o `test -f 'test/orphanage_tests.cpp' || echo '$(srcdir)/'`test/orphanage_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-orphanage_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-orphanage_tests.Po
#	$(AM_V_CXX)source='test/orphanage_tests.cpp' object='test/test_test_bitcoin-orphanage_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-orphanage_tests.o `test -f 'test/orphanage_tests.cpp' || echo '$(srcdir)/'`test/orphanage_tests.cpp

test/test_test_bitcoin-orphanage_tests.obj: test/orphanage_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-orphanage_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-orphanage_tests.Tpo -c -o test/test_test_bitcoin-orphanage_tests.obj `if test -f 'test/orphanage_tests.cpp'; then $(CYGPATH_W) 'test/orphanage_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/orphanage_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-orphanage_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-orphanage_tests.Po
#	$(AM_V_CXX)source='test/orphanage_tests.cpp' object='test/test_test_bitcoin-orphanage_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-orphanage_tests.obj `if test -f 'test/orphanage_tests.cpp'; then $(CYGPATH_W) 'test/orphanage_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/orphanage_tests.cpp'; fi`

test/test_test_bitcoin-pmt_tests.o: test/pmt_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-pmt_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-pmt_tests.Tpo -c -o test/test_test_bitcoin-pmt_tests.o `test -f 'test/pmt_tests.cpp' || echo '$(srcdir)/'`test/pmt_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-pmt_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-pmt_tests.Po
#	$(AM_V_CXX)source='test/pmt_tests.cpp' object='test/test_test_bitcoin-pmt_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-pmt_tests.o `test -f 'test/pmt_tests.cpp' || echo '$(srcdir)/'`test/pmt_tests.cpp

test/test_test_bitcoin-pmt_tests.obj: test/pmt_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-pmt_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-pmt_tests.Tpo -c -o test/test_test_bitcoin-pmt_tests.obj `if test -f 'test/pmt_tests.cpp'; then $(CYGPATH_W) 'test/pmt_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/pmt_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-pmt_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-pmt_tests.Po
#	$(AM_V_CXX)source='test/pmt_tests.cpp' object='test/test_test_bitcoin-pmt_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-pmt_tests.obj `if test -f 'test/pmt_tests.cpp'; then $(CYGPATH_W) 'test/pmt_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/pmt_tests.cpp'; fi`

test/test_test_bitcoin-policy_fee_tests.o: test/policy_fee_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-policy_fee_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-policy_fee_tests.Tpo -c -o test/test_test_bitcoin-policy_fee_tests.o `test -f 'test/policy_fee_tests.cpp' || echo '$(srcdir)/'`test/policy_fee_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-policy_fee_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-policy_fee_tests.Po
#	$(AM_V_CXX)source='test/policy_fee_tests.cpp' object='test/test_test_bitcoin-policy_fee_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-policy_fee_tests.o `test -f 'test/policy_fee_tests.cpp' || echo '$(srcdir)/'`test/policy_fee_tests.cpp

test/test_test_bitcoin-policy_fee_tests.obj: test/policy_fee_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-policy_fee_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-policy_fee_tests.Tpo -c -o test/test_test_bitcoin-policy_fee_tests.obj `if test -f 'test/policy_fee_tests.cpp'; then $(CYGPATH_W) 'test/policy_fee_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/policy_fee_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-policy_fee_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-policy_fee_tests.Po
#	$(AM_V_CXX)source='test/policy_fee_tests.cpp' object='test/test_test_bitcoin-policy_fee_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-policy_fee_tests.obj `if test -f 'test/policy_fee_tests.cpp'; then $(CYGPATH_W) 'test/policy_fee_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/policy_fee_tests.cpp'; fi`

test/test_test_bitcoin-policyestimator_tests.o: test/policyestimator_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-policyestimator_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-policyestimator_tests.Tpo -c -o test/test_test_bitcoin-policyestimator_tests.o `test -f 'test/policyestimator_tests.cpp' || echo '$(srcdir)/'`test/policyestimator_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-policyestimator_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-policyestimator_tests.Po
#	$(AM_V_CXX)source='test/policyestimator_tests.cpp' object='test/test_test_bitcoin-policyestimator_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-policyestimator_tests.o `test -f 'test/policyestimator_tests.cpp' || echo '$(srcdir)/'`test/policyestimator_tests.cpp

test/test_test_bitcoin-policyestimator_tests.obj: test/policyestimator_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-policyestimator_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-policyestimator_tests.Tpo -c -o test/test_test_bitcoin-policyestimator_tests.obj `if test -f 'test/policyestimator_tests.cpp'; then $(CYGPATH_W) 'test/policyestimator_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/policyestimator_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-policyestimator_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-policyestimator_tests.Po
#	$(AM_V_CXX)source='test/policyestimator_tests.cpp' object='test/test_test_bitcoin-policyestimator_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-policyestimator_tests.obj `if test -f 'test/policyestimator_tests.cpp'; then $(CYGPATH_W) 'test/policyestimator_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/policyestimator_tests.cpp'; fi`

test/test_test_bitcoin-pow_tests.o: test/pow_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-pow_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-pow_tests.Tpo -c -o test/test_test_bitcoin-pow_tests.o `test -f 'test/pow_tests.cpp' || echo '$(srcdir)/'`test/pow_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-pow_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-pow_tests.Po
#	$(AM_V_CXX)source='test/pow_tests.cpp' object='test/test_test_bitcoin-pow_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-pow_tests.o `test -f 'test/pow_tests.cpp' || echo '$(srcdir)/'`test/pow_tests.cpp

test/test_test_bitcoin-pow_tests.obj: test/pow_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-pow_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-pow_tests.Tpo -c -o test/test_test_bitcoin-pow_tests.obj `if test -f 'test/pow_tests.cpp'; then $(CYGPATH_W) 'test/pow_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/pow_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-pow_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-pow_tests.Po
#	$(AM_V_CXX)source='test/pow_tests.cpp' object='test/test_test_bitcoin-pow_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-pow_tests.obj `if test -f 'test/pow_tests.cpp'; then $(CYGPATH_W) 'test/pow_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/pow_tests.cpp'; fi`

test/test_test_bitcoin-prevector_tests.o: test/prevector_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-prevector_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-prevector_tests.Tpo -c -o test/test_test_bitcoin-prevector_tests.o `test -f 'test/prevector_tests.cpp' || echo '$(srcdir)/'`test/prevector_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-prevector_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-prevector_tests.Po
#	$(AM_V_CXX)source='test/prevector_tests.cpp' object='test/test_test_bitcoin-prevector_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-prevector_tests.o `test -f 'test/prevector_tests.cpp' || echo '$(srcdir)/'`test/prevector_tests.cpp

test/test_test_bitcoin-prevector_tests.obj: test/prevector_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-prevector_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-prevector_tests.Tpo -c -o test/test_test_bitcoin-prevector_tests.obj `if test -f 'test/prevector_tests.cpp'; then $(CYGPATH_W) 'test/prevector_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/prevector_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-prevector_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-prevector_tests.Po
#	$(AM_V_CXX)source='test/prevector_tests.cpp' object='test/test_test_bitcoin-prevector_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-prevector_tests.obj `if test -f 'test/prevector_tests.cpp'; then $(CYGPATH_W) 'test/prevector_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/prevector_tests.cpp'; fi`

test/test_test_bitcoin-raii_event_tests.o: test/raii_event_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-raii_event_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-raii_event_tests.Tpo -c -o test/test_test_bitcoin-raii_event_tests.o `test -f 'test/raii_event_tests.cpp' || echo '$(srcdir)/'`test/raii_event_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-raii_event_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-raii_event_tests.Po
#	$(AM_V_CXX)source='test/raii_event_tests.cpp' object='test/test_test_bitcoin-raii_event_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-raii_event_tests.o `test -f 'test/raii_event_tests.cpp' || echo '$(srcdir)/'`test/raii_event_tests.cpp

test/test_test_bitcoin-raii_event_tests.obj: test/raii_event_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-raii_event_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-raii_event_tests.Tpo -c -o test/test_test_bitcoin-raii_event_tests.obj `if test -f 'test/raii_event_tests.cpp'; then $(CYGPATH_W) 'test/raii_event_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/raii_event_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-raii_event_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-raii_event_tests.Po
#	$(AM_V_CXX)source='test/raii_event_tests.cpp' object='test/test_test_bitcoin-raii_event_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-raii_event_tests.obj `if test -f 'test/raii_event_tests.cpp'; then $(CYGPATH_W) 'test/raii_event_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/raii_event_tests.cpp'; fi`

test/test_test_bitcoin-random_tests.o: test/random_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-random_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-random_tests.Tpo -c -o test/test_test_bitcoin-random_tests.o `test -f 'test/random_tests.cpp' || echo '$(srcdir)/'`test/random_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-random_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-random_tests.Po
#	$(AM_V_CXX)source='test/random_tests.cpp' object='test/test_test_bitcoin-random_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-random_tests.o `test -f 'test/random_tests.cpp' || echo '$(srcdir)/'`test/random_tests.cpp

test/test_test_bitcoin-random_tests.obj: test/random_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-random_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-random_tests.Tpo -c -o test/test_test_bitcoin-random_tests.obj `if test -f 'test/random_tests.cpp'; then $(CYGPATH_W) 'test/random_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/random_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-random_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-random_tests.Po
#	$(AM_V_CXX)source='test/random_tests.cpp' object='test/test_test_bitcoin-random_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-random_tests.obj `if test -f 'test/random_tests.cpp'; then $(CYGPATH_W) 'test/random_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/random_tests.cpp'; fi`

test/test_test_bitcoin-rest_tests.o: test/rest_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-rest_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-rest_tests.Tpo -c -o test/test_test_bitcoin-rest_tests.o `test -f 'test/rest_tests.cpp' || echo '$(srcdir)/'`test/rest_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-rest_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-rest_tests.Po
#	$(AM_V_CXX)source='test/rest_tests.cpp' object='test/test_test_bitcoin-rest_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-rest_tests.o `test -f 'test/rest_tests.cpp' || echo '$(srcdir)/'`test/rest_tests.cpp

test/test_test_bitcoin-rest_tests.obj: test/rest_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-rest_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-rest_tests.Tpo -c -o test/test_test_bitcoin-rest_tests.obj `if test -f 'test/rest_tests.cpp'; then $(CYGPATH_W) 'test/rest_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/rest_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-rest_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-rest_tests.Po
#	$(AM_V_CXX)source='test/rest_tests.cpp' object='test/test_test_bitcoin-rest_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-rest_tests.obj `if test -f 'test/rest_tests.cpp'; then $(CYGPATH_W) 'test/rest_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/rest_tests.cpp'; fi`

test/test_test_bitcoin-reverselock_tests.o: test/reverselock_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-reverselock_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-reverselock_tests.Tpo -c -o test/test_test_bitcoin-reverselock_tests.o `test -f 'test/reverselock_tests.cpp' || echo '$(srcdir)/'`test/reverselock_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-reverselock_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-reverselock_tests.Po
#	$(AM_V_CXX)source='test/reverselock_tests.cpp' object='test/test_test_bitcoin-reverselock_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-reverselock_tests.o `test -f 'test/reverselock_tests.cpp' || echo '$(srcdir)/'`test/reverselock_tests.cpp

test/test_test_bitcoin-reverselock_tests.obj: test/reverselock_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-reverselock_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-reverselock_tests.Tpo -c -o test/test_test_bitcoin-reverselock_tests.obj `if test -f 'test/reverselock_tests.cpp'; then $(CYGPATH_W) 'test/reverselock_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/reverselock_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-reverselock_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-reverselock_tests.Po
#	$(AM_V_CXX)source='test/reverselock_tests.cpp' object='test/test_test_bitcoin-reverselock_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-reverselock_tests.obj `if test -f 'test/reverselock_tests.cpp'; then $(CYGPATH_W) 'test/reverselock_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/reverselock_tests.cpp'; fi`

test/test_test_bitcoin-rpc_tests.o: test/rpc_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-rpc_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-rpc_tests.Tpo -c -o test/test_test_bitcoin-rpc_tests.o `test -f 'test/rpc_tests.cpp' || echo '$(srcdir)/'`test/rpc_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-rpc_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-rpc_tests.Po
#	$(AM_V_CXX)source='test/rpc_tests.cpp' object='test/test_test_bitcoin-rpc_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-rpc_tests.o `test -f 'test/rpc_tests.cpp' || echo '$(srcdir)/'`test/rpc_tests.cpp

test/test_test_bitcoin-rpc_tests.obj: test/rpc_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-rpc_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-rpc_tests.Tpo -c -o test/test_test_bitcoin-rpc_tests.obj `if test -f 'test/rpc_tests.cpp'; then $(CYGPATH_W) 'test/rpc_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/rpc_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-rpc_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-rpc_tests.Po
#	$(AM_V_CXX)source='test/rpc_tests.cpp' object='test/test_test_bitcoin-rpc_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-rpc_tests.obj `if test -f 'test/rpc_tests.cpp'; then $(CYGPATH_W) 'test/rpc_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/rpc_tests.cpp'; fi`

test/test_test_bitcoin-sanity_tests.o: test/sanity_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-sanity_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-sanity_tests.Tpo -c -o test/test_test_bitcoin-sanity_tests.o `test -f 'test/sanity_tests.cpp' || echo '$(srcdir)/'`test/sanity_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-sanity_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-sanity_tests.Po
#	$(AM_V_CXX)source='test/sanity_tests.cpp' object='test/test_test_bitcoin-sanity_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-sanity_tests.o `test -f 'test/sanity_tests.cpp' || echo '$(srcdir)/'`test/sanity_tests.cpp

test/test_test_bitcoin-sanity_tests.obj: test/sanity_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-sanity_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-sanity_tests.Tpo -c -o test/test_test_bitcoin-sanity_tests.obj `if test -f 'test/sanity_tests.cpp'; then $(CYGPATH_W) 'test/sanity_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sanity_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-sanity_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-sanity_tests.Po
#	$(AM_V_CXX)source='test/sanity_tests.cpp' object='test/test_test_bitcoin-sanity_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-sanity_tests.obj `if test -f 'test/sanity_tests.cpp'; then $(CYGPATH_W) 'test/sanity_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sanity_tests.cpp'; fi`

test/test_test_bitcoin-scheduler_tests.o: test/scheduler_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-scheduler_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-scheduler_tests.Tpo -c -o test/test_test_bitcoin-scheduler_tests.o `test -f 'test/scheduler_tests.cpp' || echo '$(srcdir)/'`test/scheduler_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-scheduler_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-scheduler_tests.Po
#	$(AM_V_CXX)source='test/scheduler_tests.cpp' object='test/test_test_bitcoin-scheduler_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-scheduler_tests.o `test -f 'test/scheduler_tests.cpp' || echo '$(srcdir)/'`test/scheduler_tests.cpp

test/test_test_bitcoin-scheduler_tests.obj: test/scheduler_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-scheduler_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-scheduler_tests.Tpo -c -o test/test_test_bitcoin-scheduler_tests.obj `if test -f 'test/scheduler_tests.cpp'; then $(CYGPATH_W) 'test/scheduler_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/scheduler_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-scheduler_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-scheduler_tests.Po
#	$(AM_V_CXX)source='test/scheduler_tests.cpp' object='test/test_test_bitcoin-scheduler_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-scheduler_tests.obj `if test -f 'test/scheduler_tests.cpp'; then $(CYGPATH_W) 'test/scheduler_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/scheduler_tests.cpp'; fi`

test/test_test_bitcoin-script_p2sh_tests.o: test/script_p2sh_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-script_p2sh_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-script_p2sh_tests.Tpo -c -o test/test_test_bitcoin-script_p2sh_tests.o `test -f 'test/script_p2sh_tests.cpp' || echo '$(srcdir)/'`test/script_p2sh_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-script_p2sh_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-script_p2sh_tests.Po
#	$(AM_V_CXX)source='test/script_p2sh_tests.cpp' object='test/test_test_bitcoin-script_p2sh_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-script_p2sh_tests.o `test -f 'test/script_p2sh_tests.cpp' || echo '$(srcdir)/'`test/script_p2sh_tests.cpp

test/test_test_bitcoin-script_p2sh_tests.obj: test/script_p2sh_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-script_p2sh_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-script_p2sh_tests.Tpo -c -o test/test_test_bitcoin-script_p2sh_tests.obj `if test -f 'test/script_p2sh_tests.cpp'; then $(CYGPATH_W) 'test/script_p2sh_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/script_p2sh_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-script_p2sh_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-script_p2sh_tests.Po
#	$(AM_V_CXX)source='test/script_p2sh_tests.cpp' object='test/test_test_bitcoin-script_p2sh_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-script_p2sh_tests.obj `if test -f 'test/script_p2sh_tests.cpp'; then $(CYGPATH_W) 'test/script_p2sh_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/script_p2sh_tests.cpp'; fi`

test/test_test_bitcoin-script_parse_tests.o: test/script_parse_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-script_parse_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-script_parse_tests.Tpo -c -o test/test_test_bitcoin-script_parse_tests.o `test -f 'test/script_parse_tests.cpp' || echo '$(srcdir)/'`test/script_parse_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-script_parse_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-script_parse_tests.Po
#	$(AM_V_CXX)source='test/script_parse_tests.cpp' object='test/test_test_bitcoin-script_parse_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-script_parse_tests.o `test -f 'test/script_parse_tests.cpp' || echo '$(srcdir)/'`test/script_parse_tests.cpp

test/test_test_bitcoin-script_parse_tests.obj: test/script_parse_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-script_parse_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-script_parse_tests.Tpo -c -o test/test_test_bitcoin-script_parse_tests.obj `if test -f 'test/script_parse_tests.cpp'; then $(CYGPATH_W) 'test/script_parse_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/script_parse_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-script_parse_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-script_parse_tests.Po
#	$(AM_V_CXX)source='test/script_parse_tests.cpp' object='test/test_test_bitcoin-script_parse_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-script_parse_tests.obj `if test -f 'test/script_parse_tests.cpp'; then $(CYGPATH_W) 'test/script_parse_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/script_parse_tests.cpp'; fi`

test/test_test_bitcoin-script_segwit_tests.o: test/script_segwit_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-script_segwit_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-script_segwit_tests.Tpo -c -o test/test_test_bitcoin-script_segwit_tests.o `test -f 'test/script_segwit_tests.cpp' || echo '$(srcdir)/'`test/script_segwit_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-script_segwit_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-script_segwit_tests.Po
#	$(AM_V_CXX)source='test/script_segwit_tests.cpp' object='test/test_test_bitcoin-script_segwit_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-script_segwit_tests.o `test -f 'test/script_segwit_tests.cpp' || echo '$(srcdir)/'`test/script_segwit_tests.cpp

test/test_test_bitcoin-script_segwit_tests.obj: test/script_segwit_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-script_segwit_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-script_segwit_tests.Tpo -c -o test/test_test_bitcoin-script_segwit_tests.obj `if test -f 'test/script_segwit_tests.cpp'; then $(CYGPATH_W) 'test/script_segwit_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/script_segwit_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-script_segwit_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-script_segwit_tests.Po
#	$(AM_V_CXX)source='test/script_segwit_tests.cpp' object='test/test_test_bitcoin-script_segwit_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-script_segwit_tests.obj `if test -f 'test/script_segwit_tests.cpp'; then $(CYGPATH_W) 'test/script_segwit_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/script_segwit_tests.cpp'; fi`

test/test_test_bitcoin-script_standard_tests.o: test/script_standard_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-script_standard_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-script_standard_tests.Tpo -c -o test/test_test_bitcoin-script_standard_tests.o `test -f 'test/script_standard_tests.cpp' || echo '$(srcdir)/'`test/script_standard_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-script_standard_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-script_standard_tests.Po
#	$(AM_V_CXX)source='test/script_standard_tests.cpp' object='test/test_test_bitcoin-script_standard_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-script_standard_tests.o `test -f 'test/script_standard_tests.cpp' || echo '$(srcdir)/'`test/script_standard_tests.cpp

test/test_test_bitcoin-script_standard_tests.obj: test/script_standard_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-script_standard_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-script_standard_tests.Tpo -c -o test/test_test_bitcoin-script_standard_tests.obj `if test -f 'test/script_standard_tests.cpp'; then $(CYGPATH_W) 'test/script_standard_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/script_standard_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-script_standard_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-script_standard_tests.Po
#	$(AM_V_CXX)source='test/script_standard_tests.cpp' object='test/test_test_bitcoin-script_standard_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-script_standard_tests.obj `if test -f 'test/script_standard_tests.cpp'; then $(CYGPATH_W) 'test/script_standard_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/script_standard_tests.cpp'; fi`

test/test_test_bitcoin-script_tests.o: test/script_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-script_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-script_tests.Tpo -c -o test/test_test_bitcoin-script_tests.o `test -f 'test/script_tests.cpp' || echo '$(srcdir)/'`test/script_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-script_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-script_tests.Po
#	$(AM_V_CXX)source='test/script_tests.cpp' object='test/test_test_bitcoin-script_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-script_tests.o `test -f 'test/script_tests.cpp' || echo '$(srcdir)/'`test/script_tests.cpp

test/test_test_bitcoin-script_tests.obj: test/script_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-script_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-script_tests.Tpo -c -o test/test_test_bitcoin-script_tests.obj `if test -f 'test/script_tests.cpp'; then $(CYGPATH_W) 'test/script_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/script_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-script_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-script_tests.Po
#	$(AM_V_CXX)source='test/script_tests.cpp' object='test/test_test_bitcoin-script_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-script_tests.obj `if test -f 'test/script_tests.cpp'; then $(CYGPATH_W) 'test/script_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/script_tests.cpp'; fi`

test/test_test_bitcoin-scriptnum_tests.o: test/scriptnum_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-scriptnum_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-scriptnum_tests.Tpo -c -o test/test_test_bitcoin-scriptnum_tests.o `test -f 'test/scriptnum_tests.cpp' || echo '$(srcdir)/'`test/scriptnum_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-scriptnum_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-scriptnum_tests.Po
#	$(AM_V_CXX)source='test/scriptnum_tests.cpp' object='test/test_test_bitcoin-scriptnum_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-scriptnum_tests.o `test -f 'test/scriptnum_tests.cpp' || echo '$(srcdir)/'`test/scriptnum_tests.cpp

test/test_test_bitcoin-scriptnum_tests.obj: test/scriptnum_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-scriptnum_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-scriptnum_tests.Tpo -c -o test/test_test_bitcoin-scriptnum_tests.obj `if test -f 'test/scriptnum_tests.cpp'; then $(CYGPATH_W) 'test/scriptnum_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/scriptnum_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-scriptnum_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-scriptnum_tests.Po
#	$(AM_V_CXX)source='test/scriptnum_tests.cpp' object='test/test_test_bitcoin-scriptnum_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-scriptnum_tests.obj `if test -f 'test/scriptnum_tests.cpp'; then $(CYGPATH_W) 'test/scriptnum_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/scriptnum_tests.cpp'; fi`

test/test_test_bitcoin-serfloat_tests.o: test/serfloat_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-serfloat_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-serfloat_tests.Tpo -c -o test/test_test_bitcoin-serfloat_tests.o `test -f 'test/serfloat_tests.cpp' || echo '$(srcdir)/'`test/serfloat_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-serfloat_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-serfloat_tests.Po
#	$(AM_V_CXX)source='test/serfloat_tests.cpp' object='test/test_test_bitcoin-serfloat_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-serfloat_tests.o `test -f 'test/serfloat_tests.cpp' || echo '$(srcdir)/'`test/serfloat_tests.cpp

test/test_test_bitcoin-serfloat_tests.obj: test/serfloat_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-serfloat_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-serfloat_tests.Tpo -c -o test/test_test_bitcoin-serfloat_tests.obj `if test -f 'test/serfloat_tests.cpp'; then $(CYGPATH_W) 'test/serfloat_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/serfloat_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-serfloat_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-serfloat_tests.Po
#	$(AM_V_CXX)source='test/serfloat_tests.cpp' object='test/test_test_bitcoin-serfloat_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-serfloat_tests.obj `if test -f 'test/serfloat_tests.cpp'; then $(CYGPATH_W) 'test/serfloat_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/serfloat_tests.cpp'; fi`

test/test_test_bitcoin-serialize_tests.o: test/serialize_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-serialize_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-serialize_tests.Tpo -c -o test/test_test_bitcoin-serialize_tests.o `test -f 'test/serialize_tests.cpp' || echo '$(srcdir)/'`test/serialize_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-serialize_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-serialize_tests.Po
#	$(AM_V_CXX)source='test/serialize_tests.cpp' object='test/test_test_bitcoin-serialize_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-serialize_tests.o `test -f 'test/serialize_tests.cpp' || echo '$(srcdir)/'`test/serialize_tests.cpp

test/test_test_bitcoin-serialize_tests.obj: test/serialize_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-serialize_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-serialize_tests.Tpo -c -o test/test_test_bitcoin-serialize_tests.obj `if test -f 'test/serialize_tests.cpp'; then $(CYGPATH_W) 'test/serialize_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/serialize_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-serialize_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-serialize_tests.Po
#	$(AM_V_CXX)source='test/serialize_tests.cpp' object='test/test_test_bitcoin-serialize_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-serialize_tests.obj `if test -f 'test/serialize_tests.cpp'; then $(CYGPATH_W) 'test/serialize_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/serialize_tests.cpp'; fi`

test/test_test_bitcoin-settings_tests.o: test/settings_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-settings_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-settings_tests.Tpo -c -o test/test_test_bitcoin-settings_tests.o `test -f 'test/settings_tests.cpp' || echo '$(srcdir)/'`test/settings_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-settings_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-settings_tests.Po
#	$(AM_V_CXX)source='test/settings_tests.cpp' object='test/test_test_bitcoin-settings_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-settings_tests.o `test -f 'test/settings_tests.cpp' || echo '$(srcdir)/'`test/settings_tests.cpp

test/test_test_bitcoin-settings_tests.obj: test/settings_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-settings_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-settings_tests.Tpo -c -o test/test_test_bitcoin-settings_tests.obj `if test -f 'test/settings_tests.cpp'; then $(CYGPATH_W) 'test/settings_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/settings_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-settings_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-settings_tests.Po
#	$(AM_V_CXX)source='test/settings_tests.cpp' object='test/test_test_bitcoin-settings_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-settings_tests.obj `if test -f 'test/settings_tests.cpp'; then $(CYGPATH_W) 'test/settings_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/settings_tests.cpp'; fi`

test/test_test_bitcoin-sighash_tests.o: test/sighash_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-sighash_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-sighash_tests.Tpo -c -o test/test_test_bitcoin-sighash_tests.o `test -f 'test/sighash_tests.cpp' || echo '$(srcdir)/'`test/sighash_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-sighash_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-sighash_tests.Po
#	$(AM_V_CXX)source='test/sighash_tests.cpp' object='test/test_test_bitcoin-sighash_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-sighash_tests.o `test -f 'test/sighash_tests.cpp' || echo '$(srcdir)/'`test/sighash_tests.cpp

test/test_test_bitcoin-sighash_tests.obj: test/sighash_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-sighash_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-sighash_tests.Tpo -c -o test/test_test_bitcoin-sighash_tests.obj `if test -f 'test/sighash_tests.cpp'; then $(CYGPATH_W) 'test/sighash_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sighash_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-sighash_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-sighash_tests.Po
#	$(AM_V_CXX)source='test/sighash_tests.cpp' object='test/test_test_bitcoin-sighash_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-sighash_tests.obj `if test -f 'test/sighash_tests.cpp'; then $(CYGPATH_W) 'test/sighash_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sighash_tests.cpp'; fi`

test/test_test_bitcoin-sigopcount_tests.o: test/sigopcount_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-sigopcount_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-sigopcount_tests.Tpo -c -o test/test_test_bitcoin-sigopcount_tests.o `test -f 'test/sigopcount_tests.cpp' || echo '$(srcdir)/'`test/sigopcount_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-sigopcount_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-sigopcount_tests.Po
#	$(AM_V_CXX)source='test/sigopcount_tests.cpp' object='test/test_test_bitcoin-sigopcount_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-sigopcount_tests.o `test -f 'test/sigopcount_tests.cpp' || echo '$(srcdir)/'`test/sigopcount_tests.cpp

test/test_test_bitcoin-sigopcount_tests.obj: test/sigopcount_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-sigopcount_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-sigopcount_tests.Tpo -c -o test/test_test_bitcoin-sigopcount_tests.obj `if test -f 'test/sigopcount_tests.cpp'; then $(CYGPATH_W) 'test/sigopcount_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sigopcount_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-sigopcount_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-sigopcount_tests.Po
#	$(AM_V_CXX)source='test/sigopcount_tests.cpp' object='test/test_test_bitcoin-sigopcount_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-sigopcount_tests.obj `if test -f 'test/sigopcount_tests.cpp'; then $(CYGPATH_W) 'test/sigopcount_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sigopcount_tests.cpp'; fi`

test/test_test_bitcoin-skiplist_tests.o: test/skiplist_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-skiplist_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-skiplist_tests.Tpo -c -o test/test_test_bitcoin-skiplist_tests.o `test -f 'test/skiplist_tests.cpp' || echo '$(srcdir)/'`test/skiplist_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-skiplist_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-skiplist_tests.Po
#	$(AM_V_CXX)source='test/skiplist_tests.cpp' object='test/test_test_bitcoin-skiplist_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-skiplist_tests.o `test -f 'test/skiplist_tests.cpp' || echo '$(srcdir)/'`test/skiplist_tests.cpp

test/test_test_bitcoin-skiplist_tests.obj: test/skiplist_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-skiplist_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-skiplist_tests.Tpo -c -o test/test_test_bitcoin-skiplist_tests.obj `if test -f 'test/skiplist_tests.cpp'; then $(CYGPATH_W) 'test/skiplist_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/skiplist_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-skiplist_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-skiplist_tests.Po
#	$(AM_V_CXX)source='test/skiplist_tests.cpp' object='test/test_test_bitcoin-skiplist_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-skiplist_tests.obj `if test -f 'test/skiplist_tests.cpp'; then $(CYGPATH_W) 'test/skiplist_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/skiplist_tests.cpp'; fi`

test/test_test_bitcoin-sock_tests.o: test/sock_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-sock_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-sock_tests.Tpo -c -o test/test_test_bitcoin-sock_tests.o `test -f 'test/sock_tests.cpp' || echo '$(srcdir)/'`test/sock_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-sock_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-sock_tests.Po
#	$(AM_V_CXX)source='test/sock_tests.cpp' object='test/test_test_bitcoin-sock_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-sock_tests.o `test -f 'test/sock_tests.cpp' || echo '$(srcdir)/'`test/sock_tests.cpp

test/test_test_bitcoin-sock_tests.obj: test/sock_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-sock_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-sock_tests.Tpo -c -o test/test_test_bitcoin-sock_tests.obj `if test -f 'test/sock_tests.cpp'; then $(CYGPATH_W) 'test/sock_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sock_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-sock_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-sock_tests.Po
#	$(AM_V_CXX)source='test/sock_tests.cpp' object='test/test_test_bitcoin-sock_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-sock_tests.obj `if test -f 'test/sock_tests.cpp'; then $(CYGPATH_W) 'test/sock_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sock_tests.cpp'; fi`

test/test_test_bitcoin-streams_tests.o: test/streams_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-streams_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-streams_tests.Tpo -c -o test/test_test_bitcoin-streams_tests.o `test -f 'test/streams_tests.cpp' || echo '$(srcdir)/'`test/streams_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-streams_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-streams_tests.Po
#	$(AM_V_CXX)source='test/streams_tests.cpp' object='test/test_test_bitcoin-streams_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-streams_tests.o `test -f 'test/streams_tests.cpp' || echo '$(srcdir)/'`test/streams_tests.cpp

test/test_test_bitcoin-streams_tests.obj: test/streams_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-streams_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-streams_tests.Tpo -c -o test/test_test_bitcoin-streams_tests.obj `if test -f 'test/streams_tests.cpp'; then $(CYGPATH_W) 'test/streams_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/streams_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-streams_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-streams_tests.Po
#	$(AM_V_CXX)source='test/streams_tests.cpp' object='test/test_test_bitcoin-streams_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-streams_tests.obj `if test -f 'test/streams_tests.cpp'; then $(CYGPATH_W) 'test/streams_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/streams_tests.cpp'; fi`

test/test_test_bitcoin-sync_tests.o: test/sync_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-sync_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-sync_tests.Tpo -c -o test/test_test_bitcoin-sync_tests.o `test -f 'test/sync_tests.cpp' || echo '$(srcdir)/'`test/sync_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-sync_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-sync_tests.Po
#	$(AM_V_CXX)source='test/sync_tests.cpp' object='test/test_test_bitcoin-sync_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-sync_tests.o `test -f 'test/sync_tests.cpp' || echo '$(srcdir)/'`test/sync_tests.cpp

test/test_test_bitcoin-sync_tests.obj: test/sync_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-sync_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-sync_tests.Tpo -c -o test/test_test_bitcoin-sync_tests.obj `if test -f 'test/sync_tests.cpp'; then $(CYGPATH_W) 'test/sync_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sync_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-sync_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-sync_tests.Po
#	$(AM_V_CXX)source='test/sync_tests.cpp' object='test/test_test_bitcoin-sync_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-sync_tests.obj `if test -f 'test/sync_tests.cpp'; then $(CYGPATH_W) 'test/sync_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sync_tests.cpp'; fi`

test/test_test_bitcoin-system_tests.o: test/system_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-system_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-system_tests.Tpo -c -o test/test_test_bitcoin-system_tests.o `test -f 'test/system_tests.cpp' || echo '$(srcdir)/'`test/system_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-system_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-system_tests.Po
#	$(AM_V_CXX)source='test/system_tests.cpp' object='test/test_test_bitcoin-system_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-system_tests.o `test -f 'test/system_tests.cpp' || echo '$(srcdir)/'`test/system_tests.cpp

test/test_test_bitcoin-system_tests.obj: test/system_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-system_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-system_tests.Tpo -c -o test/test_test_bitcoin-system_tests.obj `if test -f 'test/system_tests.cpp'; then $(CYGPATH_W) 'test/system_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/system_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-system_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-system_tests.Po
#	$(AM_V_CXX)source='test/system_tests.cpp' object='test/test_test_bitcoin-system_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-system_tests.obj `if test -f 'test/system_tests.cpp'; then $(CYGPATH_W) 'test/system_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/system_tests.cpp'; fi`

test/test_test_bitcoin-timedata_tests.o: test/timedata_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-timedata_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-timedata_tests.Tpo -c -o test/test_test_bitcoin-timedata_tests.o `test -f 'test/timedata_tests.cpp' || echo '$(srcdir)/'`test/timedata_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-timedata_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-timedata_tests.Po
#	$(AM_V_CXX)source='test/timedata_tests.cpp' object='test/test_test_bitcoin-timedata_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-timedata_tests.o `test -f 'test/timedata_tests.cpp' || echo '$(srcdir)/'`test/timedata_tests.cpp

test/test_test_bitcoin-timedata_tests.obj: test/timedata_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-timedata_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-timedata_tests.Tpo -c -o test/test_test_bitcoin-timedata_tests.obj `if test -f 'test/timedata_tests.cpp'; then $(CYGPATH_W) 'test/timedata_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/timedata_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-timedata_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-timedata_tests.Po
#	$(AM_V_CXX)source='test/timedata_tests.cpp' object='test/test_test_bitcoin-timedata_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-timedata_tests.obj `if test -f 'test/timedata_tests.cpp'; then $(CYGPATH_W) 'test/timedata_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/timedata_tests.cpp'; fi`

test/test_test_bitcoin-torcontrol_tests.o: test/torcontrol_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-torcontrol_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-torcontrol_tests.Tpo -c -o test/test_test_bitcoin-torcontrol_tests.o `test -f 'test/torcontrol_tests.cpp' || echo '$(srcdir)/'`test/torcontrol_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-torcontrol_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-torcontrol_tests.Po
#	$(AM_V_CXX)source='test/torcontrol_tests.cpp' object='test/test_test_bitcoin-torcontrol_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-torcontrol_tests.o `test -f 'test/torcontrol_tests.cpp' || echo '$(srcdir)/'`test/torcontrol_tests.cpp

test/test_test_bitcoin-torcontrol_tests.obj: test/torcontrol_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-torcontrol_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-torcontrol_tests.Tpo -c -o test/test_test_bitcoin-torcontrol_tests.obj `if test -f 'test/torcontrol_tests.cpp'; then $(CYGPATH_W) 'test/torcontrol_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/torcontrol_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-torcontrol_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-torcontrol_tests.Po
#	$(AM_V_CXX)source='test/torcontrol_tests.cpp' object='test/test_test_bitcoin-torcontrol_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-torcontrol_tests.obj `if test -f 'test/torcontrol_tests.cpp'; then $(CYGPATH_W) 'test/torcontrol_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/torcontrol_tests.cpp'; fi`

test/test_test_bitcoin-transaction_tests.o: test/transaction_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-transaction_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-transaction_tests.Tpo -c -o test/test_test_bitcoin-transaction_tests.o `test -f 'test/transaction_tests.cpp' || echo '$(srcdir)/'`test/transaction_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-transaction_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-transaction_tests.Po
#	$(AM_V_CXX)source='test/transaction_tests.cpp' object='test/test_test_bitcoin-transaction_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-transaction_tests.o `test -f 'test/transaction_tests.cpp' || echo '$(srcdir)/'`test/transaction_tests.cpp

test/test_test_bitcoin-transaction_tests.obj: test/transaction_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-transaction_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-transaction_tests.Tpo -c -o test/test_test_bitcoin-transaction_tests.obj `if test -f 'test/transaction_tests.cpp'; then $(CYGPATH_W) 'test/transaction_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/transaction_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-transaction_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-transaction_tests.Po
#	$(AM_V_CXX)source='test/transaction_tests.cpp' object='test/test_test_bitcoin-transaction_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-transaction_tests.obj `if test -f 'test/transaction_tests.cpp'; then $(CYGPATH_W) 'test/transaction_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/transaction_tests.cpp'; fi`

test/test_test_bitcoin-txindex_tests.o: test/txindex_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-txindex_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-txindex_tests.Tpo -c -o test/test_test_bitcoin-txindex_tests.o `test -f 'test/txindex_tests.cpp' || echo '$(srcdir)/'`test/txindex_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-txindex_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-txindex_tests.Po
#	$(AM_V_CXX)source='test/txindex_tests.cpp' object='test/test_test_bitcoin-txindex_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-txindex_tests.o `test -f 'test/txindex_tests.cpp' || echo '$(srcdir)/'`test/txindex_tests.cpp

test/test_test_bitcoin-txindex_tests.obj: test/txindex_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-txindex_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-txindex_tests.Tpo -c -o test/test_test_bitcoin-txindex_tests.obj `if test -f 'test/txindex_tests.cpp'; then $(CYGPATH_W) 'test/txindex_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/txindex_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-txindex_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-txindex_tests.Po
#	$(AM_V_CXX)source='test/txindex_tests.cpp' object='test/test_test_bitcoin-txindex_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-txindex_tests.obj `if test -f 'test/txindex_tests.cpp'; then $(CYGPATH_W) 'test/txindex_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/txindex_tests.cpp'; fi`

test/test_test_bitcoin-txpackage_tests.o: test/txpackage_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-txpackage_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-txpackage_tests.Tpo -c -o test/test_test_bitcoin-txpackage_tests.o `test -f 'test/txpackage_tests.cpp' || echo '$(srcdir)/'`test/txpackage_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-txpackage_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-txpackage_tests.Po
#	$(AM_V_CXX)source='test/txpackage_tests.cpp' object='test/test_test_bitcoin-txpackage_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-txpackage_tests.o `test -f 'test/txpackage_tests.cpp' || echo '$(srcdir)/'`test/txpackage_tests.cpp

test/test_test_bitcoin-txpackage_tests.obj: test/txpackage_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-txpackage_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-txpackage_tests.Tpo -c -o test/test_test_bitcoin-txpackage_tests.obj `if test -f 'test/txpackage_tests.cpp'; then $(CYGPATH_W) 'test/txpackage_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/txpackage_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-txpackage_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-txpackage_tests.Po
#	$(AM_V_CXX)source='test/txpackage_tests.cpp' object='test/test_test_bitcoin-txpackage_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-txpackage_tests.obj `if test -f 'test/txpackage_tests.cpp'; then $(CYGPATH_W) 'test/txpackage_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/txpackage_tests.cpp'; fi`

test/test_test_bitcoin-txrequest_tests.o: test/txrequest_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-txrequest_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-txrequest_tests.Tpo -c -o test/test_test_bitcoin-txrequest_tests.o `test -f 'test/txrequest_tests.cpp' || echo '$(srcdir)/'`test/txrequest_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-txrequest_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-txrequest_tests.Po
#	$(AM_V_CXX)source='test/txrequest_tests.cpp' object='test/test_test_bitcoin-txrequest_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-txrequest_tests.o `test -f 'test/txrequest_tests.cpp' || echo '$(srcdir)/'`test/txrequest_tests.cpp

test/test_test_bitcoin-txrequest_tests.obj: test/txrequest_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-txrequest_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-txrequest_tests.Tpo -c -o test/test_test_bitcoin-txrequest_tests.obj `if test -f 'test/txrequest_tests.cpp'; then $(CYGPATH_W) 'test/txrequest_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/txrequest_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-txrequest_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-txrequest_tests.Po
#	$(AM_V_CXX)source='test/txrequest_tests.cpp' object='test/test_test_bitcoin-txrequest_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-txrequest_tests.obj `if test -f 'test/txrequest_tests.cpp'; then $(CYGPATH_W) 'test/txrequest_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/txrequest_tests.cpp'; fi`

test/test_test_bitcoin-txvalidation_tests.o: test/txvalidation_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-txvalidation_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-txvalidation_tests.Tpo -c -o test/test_test_bitcoin-txvalidation_tests.o `test -f 'test/txvalidation_tests.cpp' || echo '$(srcdir)/'`test/txvalidation_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-txvalidation_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-txvalidation_tests.Po
#	$(AM_V_CXX)source='test/txvalidation_tests.cpp' object='test/test_test_bitcoin-txvalidation_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-txvalidation_tests.o `test -f 'test/txvalidation_tests.cpp' || echo '$(srcdir)/'`test/txvalidation_tests.cpp

test/test_test_bitcoin-txvalidation_tests.obj: test/txvalidation_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-txvalidation_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-txvalidation_tests.Tpo -c -o test/test_test_bitcoin-txvalidation_tests.obj `if test -f 'test/txvalidation_tests.cpp'; then $(CYGPATH_W) 'test/txvalidation_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/txvalidation_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-txvalidation_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-txvalidation_tests.Po
#	$(AM_V_CXX)source='test/txvalidation_tests.cpp' object='test/test_test_bitcoin-txvalidation_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-txvalidation_tests.obj `if test -f 'test/txvalidation_tests.cpp'; then $(CYGPATH_W) 'test/txvalidation_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/txvalidation_tests.cpp'; fi`

test/test_test_bitcoin-txvalidationcache_tests.o: test/txvalidationcache_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-txvalidationcache_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-txvalidationcache_tests.Tpo -c -o test/test_test_bitcoin-txvalidationcache_tests.o `test -f 'test/txvalidationcache_tests.cpp' || echo '$(srcdir)/'`test/txvalidationcache_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-txvalidationcache_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-txvalidationcache_tests.Po
#	$(AM_V_CXX)source='test/txvalidationcache_tests.cpp' object='test/test_test_bitcoin-txvalidationcache_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-txvalidationcache_tests.o `test -f 'test/txvalidationcache_tests.cpp' || echo '$(srcdir)/'`test/txvalidationcache_tests.cpp

test/test_test_bitcoin-txvalidationcache_tests.obj: test/txvalidationcache_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-txvalidationcache_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-txvalidationcache_tests.Tpo -c -o test/test_test_bitcoin-txvalidationcache_tests.obj `if test -f 'test/txvalidationcache_tests.cpp'; then $(CYGPATH_W) 'test/txvalidationcache_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/txvalidationcache_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-txvalidationcache_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-txvalidationcache_tests.Po
#	$(AM_V_CXX)source='test/txvalidationcache_tests.cpp' object='test/test_test_bitcoin-txvalidationcache_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-txvalidationcache_tests.obj `if test -f 'test/txvalidationcache_tests.cpp'; then $(CYGPATH_W) 'test/txvalidationcache_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/txvalidationcache_tests.cpp'; fi`

test/test_test_bitcoin-uint256_tests.o: test/uint256_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-uint256_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-uint256_tests.Tpo -c -o test/test_test_bitcoin-uint256_tests.o `test -f 'test/uint256_tests.cpp' || echo '$(srcdir)/'`test/uint256_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-uint256_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-uint256_tests.Po
#	$(AM_V_CXX)source='test/uint256_tests.cpp' object='test/test_test_bitcoin-uint256_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-uint256_tests.o `test -f 'test/uint256_tests.cpp' || echo '$(srcdir)/'`test/uint256_tests.cpp

test/test_test_bitcoin-uint256_tests.obj: test/uint256_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-uint256_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-uint256_tests.Tpo -c -o test/test_test_bitcoin-uint256_tests.obj `if test -f 'test/uint256_tests.cpp'; then $(CYGPATH_W) 'test/uint256_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/uint256_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-uint256_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-uint256_tests.Po
#	$(AM_V_CXX)source='test/uint256_tests.cpp' object='test/test_test_bitcoin-uint256_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-uint256_tests.obj `if test -f 'test/uint256_tests.cpp'; then $(CYGPATH_W) 'test/uint256_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/uint256_tests.cpp'; fi`

test/test_test_bitcoin-util_tests.o: test/util_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-util_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-util_tests.Tpo -c -o test/test_test_bitcoin-util_tests.o `test -f 'test/util_tests.cpp' || echo '$(srcdir)/'`test/util_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-util_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-util_tests.Po
#	$(AM_V_CXX)source='test/util_tests.cpp' object='test/test_test_bitcoin-util_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-util_tests.o `test -f 'test/util_tests.cpp' || echo '$(srcdir)/'`test/util_tests.cpp

test/test_test_bitcoin-util_tests.obj: test/util_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-util_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-util_tests.Tpo -c -o test/test_test_bitcoin-util_tests.obj `if test -f 'test/util_tests.cpp'; then $(CYGPATH_W) 'test/util_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/util_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-util_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-util_tests.Po
#	$(AM_V_CXX)source='test/util_tests.cpp' object='test/test_test_bitcoin-util_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-util_tests.obj `if test -f 'test/util_tests.cpp'; then $(CYGPATH_W) 'test/util_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/util_tests.cpp'; fi`

test/test_test_bitcoin-util_threadnames_tests.o: test/util_threadnames_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-util_threadnames_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-util_threadnames_tests.Tpo -c -o test/test_test_bitcoin-util_threadnames_tests.o `test -f 'test/util_threadnames_tests.cpp' || echo '$(srcdir)/'`test/util_threadnames_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-util_threadnames_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-util_threadnames_tests.Po
#	$(AM_V_CXX)source='test/util_threadnames_tests.cpp' object='test/test_test_bitcoin-util_threadnames_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-util_threadnames_tests.o `test -f 'test/util_threadnames_tests.cpp' || echo '$(srcdir)/'`test/util_threadnames_tests.cpp

test/test_test_bitcoin-util_threadnames_tests.obj: test/util_threadnames_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-util_threadnames_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-util_threadnames_tests.Tpo -c -o test/test_test_bitcoin-util_threadnames_tests.obj `if test -f 'test/util_threadnames_tests.cpp'; then $(CYGPATH_W) 'test/util_threadnames_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/util_threadnames_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-util_threadnames_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-util_threadnames_tests.Po
#	$(AM_V_CXX)source='test/util_threadnames_tests.cpp' object='test/test_test_bitcoin-util_threadnames_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-util_threadnames_tests.obj `if test -f 'test/util_threadnames_tests.cpp'; then $(CYGPATH_W) 'test/util_threadnames_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/util_threadnames_tests.cpp'; fi`

test/test_test_bitcoin-validation_block_tests.o: test/validation_block_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-validation_block_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-validation_block_tests.Tpo -c -o test/test_test_bitcoin-validation_block_tests.o `test -f 'test/validation_block_tests.cpp' || echo '$(srcdir)/'`test/validation_block_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-validation_block_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-validation_block_tests.Po
#	$(AM_V_CXX)source='test/validation_block_tests.cpp' object='test/test_test_bitcoin-validation_block_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-validation_block_tests.o `test -f 'test/validation_block_tests.cpp' || echo '$(srcdir)/'`test/validation_block_tests.cpp

test/test_test_bitcoin-validation_block_tests.obj: test/validation_block_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-validation_block_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-validation_block_tests.Tpo -c -o test/test_test_bitcoin-validation_block_tests.obj `if test -f 'test/validation_block_tests.cpp'; then $(CYGPATH_W) 'test/validation_block_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/validation_block_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-validation_block_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-validation_block_tests.Po
#	$(AM_V_CXX)source='test/validation_block_tests.cpp' object='test/test_test_bitcoin-validation_block_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-validation_block_tests.obj `if test -f 'test/validation_block_tests.cpp'; then $(CYGPATH_W) 'test/validation_block_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/validation_block_tests.cpp'; fi`

test/test_test_bitcoin-validation_chainstate_tests.o: test/validation_chainstate_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-validation_chainstate_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-validation_chainstate_tests.Tpo -c -o test/test_test_bitcoin-validation_chainstate_tests.o `test -f 'test/validation_chainstate_tests.cpp' || echo '$(srcdir)/'`test/validation_chainstate_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-validation_chainstate_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-validation_chainstate_tests.Po
#	$(AM_V_CXX)source='test/validation_chainstate_tests.cpp' object='test/test_test_bitcoin-validation_chainstate_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-validation_chainstate_tests.o `test -f 'test/validation_chainstate_tests.cpp' || echo '$(srcdir)/'`test/validation_chainstate_tests.cpp

test/test_test_bitcoin-validation_chainstate_tests.obj: test/validation_chainstate_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-validation_chainstate_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-validation_chainstate_tests.Tpo -c -o test/test_test_bitcoin-validation_chainstate_tests.obj `if test -f 'test/validation_chainstate_tests.cpp'; then $(CYGPATH_W) 'test/validation_chainstate_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/validation_chainstate_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-validation_chainstate_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-validation_chainstate_tests.Po
#	$(AM_V_CXX)source='test/validation_chainstate_tests.cpp' object='test/test_test_bitcoin-validation_chainstate_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-validation_chainstate_tests.obj `if test -f 'test/validation_chainstate_tests.cpp'; then $(CYGPATH_W) 'test/validation_chainstate_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/validation_chainstate_tests.cpp'; fi`

test/test_test_bitcoin-validation_chainstatemanager_tests.o: test/validation_chainstatemanager_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-validation_chainstatemanager_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-validation_chainstatemanager_tests.Tpo -c -o test/test_test_bitcoin-validation_chainstatemanager_tests.o `test -f 'test/validation_chainstatemanager_tests.cpp' || echo '$(srcdir)/'`test/validation_chainstatemanager_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-validation_chainstatemanager_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-validation_chainstatemanager_tests.Po
#	$(AM_V_CXX)source='test/validation_chainstatemanager_tests.cpp' object='test/test_test_bitcoin-validation_chainstatemanager_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-validation_chainstatemanager_tests.o `test -f 'test/validation_chainstatemanager_tests.cpp' || echo '$(srcdir)/'`test/validation_chainstatemanager_tests.cpp

test/test_test_bitcoin-validation_chainstatemanager_tests.obj: test/validation_chainstatemanager_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-validation_chainstatemanager_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-validation_chainstatemanager_tests.Tpo -c -o test/test_test_bitcoin-validation_chainstatemanager_tests.obj `if test -f 'test/validation_chainstatemanager_tests.cpp'; then $(CYGPATH_W) 'test/validation_chainstatemanager_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/validation_chainstatemanager_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-validation_chainstatemanager_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-validation_chainstatemanager_tests.Po
#	$(AM_V_CXX)source='test/validation_chainstatemanager_tests.cpp' object='test/test_test_bitcoin-validation_chainstatemanager_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-validation_chainstatemanager_tests.obj `if test -f 'test/validation_chainstatemanager_tests.cpp'; then $(CYGPATH_W) 'test/validation_chainstatemanager_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/validation_chainstatemanager_tests.cpp'; fi`

test/test_test_bitcoin-validation_flush_tests.o: test/validation_flush_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-validation_flush_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-validation_flush_tests.Tpo -c -o test/test_test_bitcoin-validation_flush_tests.o `test -f 'test/validation_flush_tests.cpp' || echo '$(srcdir)/'`test/validation_flush_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-validation_flush_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-validation_flush_tests.Po
#	$(AM_V_CXX)source='test/validation_flush_tests.cpp' object='test/test_test_bitcoin-validation_flush_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-validation_flush_tests.o `test -f 'test/validation_flush_tests.cpp' || echo '$(srcdir)/'`test/validation_flush_tests.cpp

test/test_test_bitcoin-validation_flush_tests.obj: test/validation_flush_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-validation_flush_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-validation_flush_tests.Tpo -c -o test/test_test_bitcoin-validation_flush_tests.obj `if test -f 'test/validation_flush_tests.cpp'; then $(CYGPATH_W) 'test/validation_flush_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/validation_flush_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-validation_flush_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-validation_flush_tests.Po
#	$(AM_V_CXX)source='test/validation_flush_tests.cpp' object='test/test_test_bitcoin-validation_flush_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-validation_flush_tests.obj `if test -f 'test/validation_flush_tests.cpp'; then $(CYGPATH_W) 'test/validation_flush_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/validation_flush_tests.cpp'; fi`

test/test_test_bitcoin-validation_tests.o: test/validation_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-validation_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-validation_tests.Tpo -c -o test/test_test_bitcoin-validation_tests.o `test -f 'test/validation_tests.cpp' || echo '$(srcdir)/'`test/validation_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-validation_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-validation_tests.Po
#	$(AM_V_CXX)source='test/validation_tests.cpp' object='test/test_test_bitcoin-validation_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-validation_tests.o `test -f 'test/validation_tests.cpp' || echo '$(srcdir)/'`test/validation_tests.cpp

test/test_test_bitcoin-validation_tests.obj: test/validation_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-validation_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-validation_tests.Tpo -c -o test/test_test_bitcoin-validation_tests.obj `if test -f 'test/validation_tests.cpp'; then $(CYGPATH_W) 'test/validation_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/validation_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-validation_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-validation_tests.Po
#	$(AM_V_CXX)source='test/validation_tests.cpp' object='test/test_test_bitcoin-validation_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-validation_tests.obj `if test -f 'test/validation_tests.cpp'; then $(CYGPATH_W) 'test/validation_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/validation_tests.cpp'; fi`

test/test_test_bitcoin-validationinterface_tests.o: test/validationinterface_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-validationinterface_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-validationinterface_tests.Tpo -c -o test/test_test_bitcoin-validationinterface_tests.o `test -f 'test/validationinterface_tests.cpp' || echo '$(srcdir)/'`test/validationinterface_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-validationinterface_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-validationinterface_tests.Po
#	$(AM_V_CXX)source='test/validationinterface_tests.cpp' object='test/test_test_bitcoin-validationinterface_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-validationinterface_tests.o `test -f 'test/validationinterface_tests.cpp' || echo '$(srcdir)/'`test/validationinterface_tests.cpp

test/test_test_bitcoin-validationinterface_tests.obj: test/validationinterface_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-validationinterface_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-validationinterface_tests.Tpo -c -o test/test_test_bitcoin-validationinterface_tests.obj `if test -f 'test/validationinterface_tests.cpp'; then $(CYGPATH_W) 'test/validationinterface_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/validationinterface_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-validationinterface_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-validationinterface_tests.Po
#	$(AM_V_CXX)source='test/validationinterface_tests.cpp' object='test/test_test_bitcoin-validationinterface_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-validationinterface_tests.obj `if test -f 'test/validationinterface_tests.cpp'; then $(CYGPATH_W) 'test/validationinterface_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/validationinterface_tests.cpp'; fi`

test/test_test_bitcoin-versionbits_tests.o: test/versionbits_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-versionbits_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-versionbits_tests.Tpo -c -o test/test_test_bitcoin-versionbits_tests.o `test -f 'test/versionbits_tests.cpp' || echo '$(srcdir)/'`test/versionbits_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-versionbits_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-versionbits_tests.Po
#	$(AM_V_CXX)source='test/versionbits_tests.cpp' object='test/test_test_bitcoin-versionbits_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-versionbits_tests.o `test -f 'test/versionbits_tests.cpp' || echo '$(srcdir)/'`test/versionbits_tests.cpp

test/test_test_bitcoin-versionbits_tests.obj: test/versionbits_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-versionbits_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-versionbits_tests.Tpo -c -o test/test_test_bitcoin-versionbits_tests.obj `if test -f 'test/versionbits_tests.cpp'; then $(CYGPATH_W) 'test/versionbits_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/versionbits_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-versionbits_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-versionbits_tests.Po
#	$(AM_V_CXX)source='test/versionbits_tests.cpp' object='test/test_test_bitcoin-versionbits_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-versionbits_tests.obj `if test -f 'test/versionbits_tests.cpp'; then $(CYGPATH_W) 'test/versionbits_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/versionbits_tests.cpp'; fi`

wallet/test/test_test_bitcoin-psbt_wallet_tests.o: wallet/test/psbt_wallet_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitcoin-psbt_wallet_tests.o -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitcoin-psbt_wallet_tests.Tpo -c -o wallet/test/test_test_bitcoin-psbt_wallet_tests.o `test -f 'wallet/test/psbt_wallet_tests.cpp' || echo '$(srcdir)/'`wallet/test/psbt_wallet_tests.cpp
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitcoin-psbt_wallet_tests.Tpo wallet/test/$(DEPDIR)/test_test_bitcoin-psbt_wallet_tests.Po
#	$(AM_V_CXX)source='wallet/test/psbt_wallet_tests.cpp' object='wallet/test/test_test_bitcoin-psbt_wallet_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitcoin-psbt_wallet_tests.o `test -f 'wallet/test/psbt_wallet_tests.cpp' || echo '$(srcdir)/'`wallet/test/psbt_wallet_tests.cpp

wallet/test/test_test_bitcoin-psbt_wallet_tests.obj: wallet/test/psbt_wallet_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitcoin-psbt_wallet_tests.obj -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitcoin-psbt_wallet_tests.Tpo -c -o wallet/test/test_test_bitcoin-psbt_wallet_tests.obj `if test -f 'wallet/test/psbt_wallet_tests.cpp'; then $(CYGPATH_W) 'wallet/test/psbt_wallet_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/psbt_wallet_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitcoin-psbt_wallet_tests.Tpo wallet/test/$(DEPDIR)/test_test_bitcoin-psbt_wallet_tests.Po
#	$(AM_V_CXX)source='wallet/test/psbt_wallet_tests.cpp' object='wallet/test/test_test_bitcoin-psbt_wallet_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitcoin-psbt_wallet_tests.obj `if test -f 'wallet/test/psbt_wallet_tests.cpp'; then $(CYGPATH_W) 'wallet/test/psbt_wallet_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/psbt_wallet_tests.cpp'; fi`

wallet/test/test_test_bitcoin-spend_tests.o: wallet/test/spend_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitcoin-spend_tests.o -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitcoin-spend_tests.Tpo -c -o wallet/test/test_test_bitcoin-spend_tests.o `test -f 'wallet/test/spend_tests.cpp' || echo '$(srcdir)/'`wallet/test/spend_tests.cpp
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitcoin-spend_tests.Tpo wallet/test/$(DEPDIR)/test_test_bitcoin-spend_tests.Po
#	$(AM_V_CXX)source='wallet/test/spend_tests.cpp' object='wallet/test/test_test_bitcoin-spend_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitcoin-spend_tests.o `test -f 'wallet/test/spend_tests.cpp' || echo '$(srcdir)/'`wallet/test/spend_tests.cpp

wallet/test/test_test_bitcoin-spend_tests.obj: wallet/test/spend_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitcoin-spend_tests.obj -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitcoin-spend_tests.Tpo -c -o wallet/test/test_test_bitcoin-spend_tests.obj `if test -f 'wallet/test/spend_tests.cpp'; then $(CYGPATH_W) 'wallet/test/spend_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/spend_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitcoin-spend_tests.Tpo wallet/test/$(DEPDIR)/test_test_bitcoin-spend_tests.Po
#	$(AM_V_CXX)source='wallet/test/spend_tests.cpp' object='wallet/test/test_test_bitcoin-spend_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitcoin-spend_tests.obj `if test -f 'wallet/test/spend_tests.cpp'; then $(CYGPATH_W) 'wallet/test/spend_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/spend_tests.cpp'; fi`

wallet/test/test_test_bitcoin-wallet_tests.o: wallet/test/wallet_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitcoin-wallet_tests.o -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitcoin-wallet_tests.Tpo -c -o wallet/test/test_test_bitcoin-wallet_tests.o `test -f 'wallet/test/wallet_tests.cpp' || echo '$(srcdir)/'`wallet/test/wallet_tests.cpp
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitcoin-wallet_tests.Tpo wallet/test/$(DEPDIR)/test_test_bitcoin-wallet_tests.Po
#	$(AM_V_CXX)source='wallet/test/wallet_tests.cpp' object='wallet/test/test_test_bitcoin-wallet_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitcoin-wallet_tests.o `test -f 'wallet/test/wallet_tests.cpp' || echo '$(srcdir)/'`wallet/test/wallet_tests.cpp

wallet/test/test_test_bitcoin-wallet_tests.obj: wallet/test/wallet_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitcoin-wallet_tests.obj -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitcoin-wallet_tests.Tpo -c -o wallet/test/test_test_bitcoin-wallet_tests.obj `if test -f 'wallet/test/wallet_tests.cpp'; then $(CYGPATH_W) 'wallet/test/wallet_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/wallet_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitcoin-wallet_tests.Tpo wallet/test/$(DEPDIR)/test_test_bitcoin-wallet_tests.Po
#	$(AM_V_CXX)source='wallet/test/wallet_tests.cpp' object='wallet/test/test_test_bitcoin-wallet_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitcoin-wallet_tests.obj `if test -f 'wallet/test/wallet_tests.cpp'; then $(CYGPATH_W) 'wallet/test/wallet_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/wallet_tests.cpp'; fi`

wallet/test/test_test_bitcoin-walletdb_tests.o: wallet/test/walletdb_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitcoin-walletdb_tests.o -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitcoin-walletdb_tests.Tpo -c -o wallet/test/test_test_bitcoin-walletdb_tests.o `test -f 'wallet/test/walletdb_tests.cpp' || echo '$(srcdir)/'`wallet/test/walletdb_tests.cpp
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitcoin-walletdb_tests.Tpo wallet/test/$(DEPDIR)/test_test_bitcoin-walletdb_tests.Po
#	$(AM_V_CXX)source='wallet/test/walletdb_tests.cpp' object='wallet/test/test_test_bitcoin-walletdb_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitcoin-walletdb_tests.o `test -f 'wallet/test/walletdb_tests.cpp' || echo '$(srcdir)/'`wallet/test/walletdb_tests.cpp

wallet/test/test_test_bitcoin-walletdb_tests.obj: wallet/test/walletdb_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitcoin-walletdb_tests.obj -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitcoin-walletdb_tests.Tpo -c -o wallet/test/test_test_bitcoin-walletdb_tests.obj `if test -f 'wallet/test/walletdb_tests.cpp'; then $(CYGPATH_W) 'wallet/test/walletdb_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/walletdb_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitcoin-walletdb_tests.Tpo wallet/test/$(DEPDIR)/test_test_bitcoin-walletdb_tests.Po
#	$(AM_V_CXX)source='wallet/test/walletdb_tests.cpp' object='wallet/test/test_test_bitcoin-walletdb_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitcoin-walletdb_tests.obj `if test -f 'wallet/test/walletdb_tests.cpp'; then $(CYGPATH_W) 'wallet/test/walletdb_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/walletdb_tests.cpp'; fi`

wallet/test/test_test_bitcoin-wallet_crypto_tests.o: wallet/test/wallet_crypto_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitcoin-wallet_crypto_tests.o -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitcoin-wallet_crypto_tests.Tpo -c -o wallet/test/test_test_bitcoin-wallet_crypto_tests.o `test -f 'wallet/test/wallet_crypto_tests.cpp' || echo '$(srcdir)/'`wallet/test/wallet_crypto_tests.cpp
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitcoin-wallet_crypto_tests.Tpo wallet/test/$(DEPDIR)/test_test_bitcoin-wallet_crypto_tests.Po
#	$(AM_V_CXX)source='wallet/test/wallet_crypto_tests.cpp' object='wallet/test/test_test_bitcoin-wallet_crypto_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitcoin-wallet_crypto_tests.o `test -f 'wallet/test/wallet_crypto_tests.cpp' || echo '$(srcdir)/'`wallet/test/wallet_crypto_tests.cpp

wallet/test/test_test_bitcoin-wallet_crypto_tests.obj: wallet/test/wallet_crypto_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitcoin-wallet_crypto_tests.obj -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitcoin-wallet_crypto_tests.Tpo -c -o wallet/test/test_test_bitcoin-wallet_crypto_tests.obj `if test -f 'wallet/test/wallet_crypto_tests.cpp'; then $(CYGPATH_W) 'wallet/test/wallet_crypto_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/wallet_crypto_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitcoin-wallet_crypto_tests.Tpo wallet/test/$(DEPDIR)/test_test_bitcoin-wallet_crypto_tests.Po
#	$(AM_V_CXX)source='wallet/test/wallet_crypto_tests.cpp' object='wallet/test/test_test_bitcoin-wallet_crypto_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitcoin-wallet_crypto_tests.obj `if test -f 'wallet/test/wallet_crypto_tests.cpp'; then $(CYGPATH_W) 'wallet/test/wallet_crypto_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/wallet_crypto_tests.cpp'; fi`

wallet/test/test_test_bitcoin-wallet_transaction_tests.o: wallet/test/wallet_transaction_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitcoin-wallet_transaction_tests.o -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitcoin-wallet_transaction_tests.Tpo -c -o wallet/test/test_test_bitcoin-wallet_transaction_tests.o `test -f 'wallet/test/wallet_transaction_tests.cpp' || echo '$(srcdir)/'`wallet/test/wallet_transaction_tests.cpp
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitcoin-wallet_transaction_tests.Tpo wallet/test/$(DEPDIR)/test_test_bitcoin-wallet_transaction_tests.Po
#	$(AM_V_CXX)source='wallet/test/wallet_transaction_tests.cpp' object='wallet/test/test_test_bitcoin-wallet_transaction_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitcoin-wallet_transaction_tests.o `test -f 'wallet/test/wallet_transaction_tests.cpp' || echo '$(srcdir)/'`wallet/test/wallet_transaction_tests.cpp

wallet/test/test_test_bitcoin-wallet_transaction_tests.obj: wallet/test/wallet_transaction_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitcoin-wallet_transaction_tests.obj -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitcoin-wallet_transaction_tests.Tpo -c -o wallet/test/test_test_bitcoin-wallet_transaction_tests.obj `if test -f 'wallet/test/wallet_transaction_tests.cpp'; then $(CYGPATH_W) 'wallet/test/wallet_transaction_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/wallet_transaction_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitcoin-wallet_transaction_tests.Tpo wallet/test/$(DEPDIR)/test_test_bitcoin-wallet_transaction_tests.Po
#	$(AM_V_CXX)source='wallet/test/wallet_transaction_tests.cpp' object='wallet/test/test_test_bitcoin-wallet_transaction_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitcoin-wallet_transaction_tests.obj `if test -f 'wallet/test/wallet_transaction_tests.cpp'; then $(CYGPATH_W) 'wallet/test/wallet_transaction_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/wallet_transaction_tests.cpp'; fi`

wallet/test/test_test_bitcoin-coinselector_tests.o: wallet/test/coinselector_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitcoin-coinselector_tests.o -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitcoin-coinselector_tests.Tpo -c -o wallet/test/test_test_bitcoin-coinselector_tests.o `test -f 'wallet/test/coinselector_tests.cpp' || echo '$(srcdir)/'`wallet/test/coinselector_tests.cpp
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitcoin-coinselector_tests.Tpo wallet/test/$(DEPDIR)/test_test_bitcoin-coinselector_tests.Po
#	$(AM_V_CXX)source='wallet/test/coinselector_tests.cpp' object='wallet/test/test_test_bitcoin-coinselector_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitcoin-coinselector_tests.o `test -f 'wallet/test/coinselector_tests.cpp' || echo '$(srcdir)/'`wallet/test/coinselector_tests.cpp

wallet/test/test_test_bitcoin-coinselector_tests.obj: wallet/test/coinselector_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitcoin-coinselector_tests.obj -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitcoin-coinselector_tests.Tpo -c -o wallet/test/test_test_bitcoin-coinselector_tests.obj `if test -f 'wallet/test/coinselector_tests.cpp'; then $(CYGPATH_W) 'wallet/test/coinselector_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/coinselector_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitcoin-coinselector_tests.Tpo wallet/test/$(DEPDIR)/test_test_bitcoin-coinselector_tests.Po
#	$(AM_V_CXX)source='wallet/test/coinselector_tests.cpp' object='wallet/test/test_test_bitcoin-coinselector_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitcoin-coinselector_tests.obj `if test -f 'wallet/test/coinselector_tests.cpp'; then $(CYGPATH_W) 'wallet/test/coinselector_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/coinselector_tests.cpp'; fi`

wallet/test/test_test_bitcoin-init_tests.o: wallet/test/init_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitcoin-init_tests.o -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitcoin-init_tests.Tpo -c -o wallet/test/test_test_bitcoin-init_tests.o `test -f 'wallet/test/init_tests.cpp' || echo '$(srcdir)/'`wallet/test/init_tests.cpp
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitcoin-init_tests.Tpo wallet/test/$(DEPDIR)/test_test_bitcoin-init_tests.Po
#	$(AM_V_CXX)source='wallet/test/init_tests.cpp' object='wallet/test/test_test_bitcoin-init_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitcoin-init_tests.o `test -f 'wallet/test/init_tests.cpp' || echo '$(srcdir)/'`wallet/test/init_tests.cpp

wallet/test/test_test_bitcoin-init_tests.obj: wallet/test/init_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitcoin-init_tests.obj -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitcoin-init_tests.Tpo -c -o wallet/test/test_test_bitcoin-init_tests.obj `if test -f 'wallet/test/init_tests.cpp'; then $(CYGPATH_W) 'wallet/test/init_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/init_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitcoin-init_tests.Tpo wallet/test/$(DEPDIR)/test_test_bitcoin-init_tests.Po
#	$(AM_V_CXX)source='wallet/test/init_tests.cpp' object='wallet/test/test_test_bitcoin-init_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitcoin-init_tests.obj `if test -f 'wallet/test/init_tests.cpp'; then $(CYGPATH_W) 'wallet/test/init_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/init_tests.cpp'; fi`

wallet/test/test_test_bitcoin-ismine_tests.o: wallet/test/ismine_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitcoin-ismine_tests.o -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitcoin-ismine_tests.Tpo -c -o wallet/test/test_test_bitcoin-ismine_tests.o `test -f 'wallet/test/ismine_tests.cpp' || echo '$(srcdir)/'`wallet/test/ismine_tests.cpp
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitcoin-ismine_tests.Tpo wallet/test/$(DEPDIR)/test_test_bitcoin-ismine_tests.Po
#	$(AM_V_CXX)source='wallet/test/ismine_tests.cpp' object='wallet/test/test_test_bitcoin-ismine_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitcoin-ismine_tests.o `test -f 'wallet/test/ismine_tests.cpp' || echo '$(srcdir)/'`wallet/test/ismine_tests.cpp

wallet/test/test_test_bitcoin-ismine_tests.obj: wallet/test/ismine_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitcoin-ismine_tests.obj -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitcoin-ismine_tests.Tpo -c -o wallet/test/test_test_bitcoin-ismine_tests.obj `if test -f 'wallet/test/ismine_tests.cpp'; then $(CYGPATH_W) 'wallet/test/ismine_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/ismine_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitcoin-ismine_tests.Tpo wallet/test/$(DEPDIR)/test_test_bitcoin-ismine_tests.Po
#	$(AM_V_CXX)source='wallet/test/ismine_tests.cpp' object='wallet/test/test_test_bitcoin-ismine_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitcoin-ismine_tests.obj `if test -f 'wallet/test/ismine_tests.cpp'; then $(CYGPATH_W) 'wallet/test/ismine_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/ismine_tests.cpp'; fi`

wallet/test/test_test_bitcoin-scriptpubkeyman_tests.o: wallet/test/scriptpubkeyman_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitcoin-scriptpubkeyman_tests.o -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitcoin-scriptpubkeyman_tests.Tpo -c -o wallet/test/test_test_bitcoin-scriptpubkeyman_tests.o `test -f 'wallet/test/scriptpubkeyman_tests.cpp' || echo '$(srcdir)/'`wallet/test/scriptpubkeyman_tests.cpp
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitcoin-scriptpubkeyman_tests.Tpo wallet/test/$(DEPDIR)/test_test_bitcoin-scriptpubkeyman_tests.Po
#	$(AM_V_CXX)source='wallet/test/scriptpubkeyman_tests.cpp' object='wallet/test/test_test_bitcoin-scriptpubkeyman_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitcoin-scriptpubkeyman_tests.o `test -f 'wallet/test/scriptpubkeyman_tests.cpp' || echo '$(srcdir)/'`wallet/test/scriptpubkeyman_tests.cpp

wallet/test/test_test_bitcoin-scriptpubkeyman_tests.obj: wallet/test/scriptpubkeyman_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitcoin-scriptpubkeyman_tests.obj -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitcoin-scriptpubkeyman_tests.Tpo -c -o wallet/test/test_test_bitcoin-scriptpubkeyman_tests.obj `if test -f 'wallet/test/scriptpubkeyman_tests.cpp'; then $(CYGPATH_W) 'wallet/test/scriptpubkeyman_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/scriptpubkeyman_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitcoin-scriptpubkeyman_tests.Tpo wallet/test/$(DEPDIR)/test_test_bitcoin-scriptpubkeyman_tests.Po
#	$(AM_V_CXX)source='wallet/test/scriptpubkeyman_tests.cpp' object='wallet/test/test_test_bitcoin-scriptpubkeyman_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitcoin-scriptpubkeyman_tests.obj `if test -f 'wallet/test/scriptpubkeyman_tests.cpp'; then $(CYGPATH_W) 'wallet/test/scriptpubkeyman_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/scriptpubkeyman_tests.cpp'; fi`

wallet/test/test_test_bitcoin-db_tests.o: wallet/test/db_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitcoin-db_tests.o -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitcoin-db_tests.Tpo -c -o wallet/test/test_test_bitcoin-db_tests.o `test -f 'wallet/test/db_tests.cpp' || echo '$(srcdir)/'`wallet/test/db_tests.cpp
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitcoin-db_tests.Tpo wallet/test/$(DEPDIR)/test_test_bitcoin-db_tests.Po
#	$(AM_V_CXX)source='wallet/test/db_tests.cpp' object='wallet/test/test_test_bitcoin-db_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitcoin-db_tests.o `test -f 'wallet/test/db_tests.cpp' || echo '$(srcdir)/'`wallet/test/db_tests.cpp

wallet/test/test_test_bitcoin-db_tests.obj: wallet/test/db_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitcoin-db_tests.obj -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitcoin-db_tests.Tpo -c -o wallet/test/test_test_bitcoin-db_tests.obj `if test -f 'wallet/test/db_tests.cpp'; then $(CYGPATH_W) 'wallet/test/db_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/db_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitcoin-db_tests.Tpo wallet/test/$(DEPDIR)/test_test_bitcoin-db_tests.Po
#	$(AM_V_CXX)source='wallet/test/db_tests.cpp' object='wallet/test/test_test_bitcoin-db_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitcoin-db_tests.obj `if test -f 'wallet/test/db_tests.cpp'; then $(CYGPATH_W) 'wallet/test/db_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/db_tests.cpp'; fi`

univalue/test/univalue_test_no_nul-no_nul.o: univalue/test/no_nul.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(univalue_test_no_nul_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT univalue/test/univalue_test_no_nul-no_nul.o -MD -MP -MF univalue/test/$(DEPDIR)/univalue_test_no_nul-no_nul.Tpo -c -o univalue/test/univalue_test_no_nul-no_nul.o `test -f 'univalue/test/no_nul.cpp' || echo '$(srcdir)/'`univalue/test/no_nul.cpp
	$(AM_V_at)$(am__mv) univalue/test/$(DEPDIR)/univalue_test_no_nul-no_nul.Tpo univalue/test/$(DEPDIR)/univalue_test_no_nul-no_nul.Po
#	$(AM_V_CXX)source='univalue/test/no_nul.cpp' object='univalue/test/univalue_test_no_nul-no_nul.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(univalue_test_no_nul_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o univalue/test/univalue_test_no_nul-no_nul.o `test -f 'univalue/test/no_nul.cpp' || echo '$(srcdir)/'`univalue/test/no_nul.cpp

univalue/test/univalue_test_no_nul-no_nul.obj: univalue/test/no_nul.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(univalue_test_no_nul_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT univalue/test/univalue_test_no_nul-no_nul.obj -MD -MP -MF univalue/test/$(DEPDIR)/univalue_test_no_nul-no_nul.Tpo -c -o univalue/test/univalue_test_no_nul-no_nul.obj `if test -f 'univalue/test/no_nul.cpp'; then $(CYGPATH_W) 'univalue/test/no_nul.cpp'; else $(CYGPATH_W) '$(srcdir)/univalue/test/no_nul.cpp'; fi`
	$(AM_V_at)$(am__mv) univalue/test/$(DEPDIR)/univalue_test_no_nul-no_nul.Tpo univalue/test/$(DEPDIR)/univalue_test_no_nul-no_nul.Po
#	$(AM_V_CXX)source='univalue/test/no_nul.cpp' object='univalue/test/univalue_test_no_nul-no_nul.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(univalue_test_no_nul_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o univalue/test/univalue_test_no_nul-no_nul.obj `if test -f 'univalue/test/no_nul.cpp'; then $(CYGPATH_W) 'univalue/test/no_nul.cpp'; else $(CYGPATH_W) '$(srcdir)/univalue/test/no_nul.cpp'; fi`

univalue/test/univalue_test_object-object.o: univalue/test/object.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(univalue_test_object_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT univalue/test/univalue_test_object-object.o -MD -MP -MF univalue/test/$(DEPDIR)/univalue_test_object-object.Tpo -c -o univalue/test/univalue_test_object-object.o `test -f 'univalue/test/object.cpp' || echo '$(srcdir)/'`univalue/test/object.cpp
	$(AM_V_at)$(am__mv) univalue/test/$(DEPDIR)/univalue_test_object-object.Tpo univalue/test/$(DEPDIR)/univalue_test_object-object.Po
#	$(AM_V_CXX)source='univalue/test/object.cpp' object='univalue/test/univalue_test_object-object.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(univalue_test_object_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o univalue/test/univalue_test_object-object.o `test -f 'univalue/test/object.cpp' || echo '$(srcdir)/'`univalue/test/object.cpp

univalue/test/univalue_test_object-object.obj: univalue/test/object.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(univalue_test_object_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT univalue/test/univalue_test_object-object.obj -MD -MP -MF univalue/test/$(DEPDIR)/univalue_test_object-object.Tpo -c -o univalue/test/univalue_test_object-object.obj `if test -f 'univalue/test/object.cpp'; then $(CYGPATH_W) 'univalue/test/object.cpp'; else $(CYGPATH_W) '$(srcdir)/univalue/test/object.cpp'; fi`
	$(AM_V_at)$(am__mv) univalue/test/$(DEPDIR)/univalue_test_object-object.Tpo univalue/test/$(DEPDIR)/univalue_test_object-object.Po
#	$(AM_V_CXX)source='univalue/test/object.cpp' object='univalue/test/univalue_test_object-object.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(univalue_test_object_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o univalue/test/univalue_test_object-object.obj `if test -f 'univalue/test/object.cpp'; then $(CYGPATH_W) 'univalue/test/object.cpp'; else $(CYGPATH_W) '$(srcdir)/univalue/test/object.cpp'; fi`

univalue/test/univalue_test_unitester-unitester.o: univalue/test/unitester.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(univalue_test_unitester_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT univalue/test/univalue_test_unitester-unitester.o -MD -MP -MF univalue/test/$(DEPDIR)/univalue_test_unitester-unitester.Tpo -c -o univalue/test/univalue_test_unitester-unitester.o `test -f 'univalue/test/unitester.cpp' || echo '$(srcdir)/'`univalue/test/unitester.cpp
	$(AM_V_at)$(am__mv) univalue/test/$(DEPDIR)/univalue_test_unitester-unitester.Tpo univalue/test/$(DEPDIR)/univalue_test_unitester-unitester.Po
#	$(AM_V_CXX)source='univalue/test/unitester.cpp' object='univalue/test/univalue_test_unitester-unitester.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(univalue_test_unitester_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o univalue/test/univalue_test_unitester-unitester.o `test -f 'univalue/test/unitester.cpp' || echo '$(srcdir)/'`univalue/test/unitester.cpp

univalue/test/univalue_test_unitester-unitester.obj: univalue/test/unitester.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(univalue_test_unitester_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT univalue/test/univalue_test_unitester-unitester.obj -MD -MP -MF univalue/test/$(DEPDIR)/univalue_test_unitester-unitester.Tpo -c -o univalue/test/univalue_test_unitester-unitester.obj `if test -f 'univalue/test/unitester.cpp'; then $(CYGPATH_W) 'univalue/test/unitester.cpp'; else $(CYGPATH_W) '$(srcdir)/univalue/test/unitester.cpp'; fi`
	$(AM_V_at)$(am__mv) univalue/test/$(DEPDIR)/univalue_test_unitester-unitester.Tpo univalue/test/$(DEPDIR)/univalue_test_unitester-unitester.Po
#	$(AM_V_CXX)source='univalue/test/unitester.cpp' object='univalue/test/univalue_test_unitester-unitester.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(univalue_test_unitester_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o univalue/test/univalue_test_unitester-unitester.obj `if test -f 'univalue/test/unitester.cpp'; then $(CYGPATH_W) 'univalue/test/unitester.cpp'; else $(CYGPATH_W) '$(srcdir)/univalue/test/unitester.cpp'; fi`

.cc.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

.cpp.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

.mm.o:
	$(AM_V_OBJCXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(OBJCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_OBJCXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) \
#	$(AM_V_OBJCXX_no)$(OBJCXXCOMPILE) -c -o $@ $<

.mm.obj:
	$(AM_V_OBJCXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(OBJCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_OBJCXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) \
#	$(AM_V_OBJCXX_no)$(OBJCXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.mm.lo:
	$(AM_V_OBJCXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTOBJCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_OBJCXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) \
#	$(AM_V_OBJCXX_no)$(LTOBJCXXCOMPILE) -c -o $@ $<

qt/qt_libbitcoinqt_a-macdockiconhandler.o: qt/macdockiconhandler.mm
	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT qt/qt_libbitcoinqt_a-macdockiconhandler.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-macdockiconhandler.Tpo -c -o qt/qt_libbitcoinqt_a-macdockiconhandler.o `test -f 'qt/macdockiconhandler.mm' || echo '$(srcdir)/'`qt/macdockiconhandler.mm
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-macdockiconhandler.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-macdockiconhandler.Po
#	$(AM_V_OBJCXX)source='qt/macdockiconhandler.mm' object='qt/qt_libbitcoinqt_a-macdockiconhandler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) \
#	$(AM_V_OBJCXX_no)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o qt/qt_libbitcoinqt_a-macdockiconhandler.o `test -f 'qt/macdockiconhandler.mm' || echo '$(srcdir)/'`qt/macdockiconhandler.mm

qt/qt_libbitcoinqt_a-macdockiconhandler.obj: qt/macdockiconhandler.mm
	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT qt/qt_libbitcoinqt_a-macdockiconhandler.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-macdockiconhandler.Tpo -c -o qt/qt_libbitcoinqt_a-macdockiconhandler.obj `if test -f 'qt/macdockiconhandler.mm'; then $(CYGPATH_W) 'qt/macdockiconhandler.mm'; else $(CYGPATH_W) '$(srcdir)/qt/macdockiconhandler.mm'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-macdockiconhandler.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-macdockiconhandler.Po
#	$(AM_V_OBJCXX)source='qt/macdockiconhandler.mm' object='qt/qt_libbitcoinqt_a-macdockiconhandler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) \
#	$(AM_V_OBJCXX_no)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o qt/qt_libbitcoinqt_a-macdockiconhandler.obj `if test -f 'qt/macdockiconhandler.mm'; then $(CYGPATH_W) 'qt/macdockiconhandler.mm'; else $(CYGPATH_W) '$(srcdir)/qt/macdockiconhandler.mm'; fi`

qt/qt_libbitcoinqt_a-macnotificationhandler.o: qt/macnotificationhandler.mm
	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT qt/qt_libbitcoinqt_a-macnotificationhandler.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-macnotificationhandler.Tpo -c -o qt/qt_libbitcoinqt_a-macnotificationhandler.o `test -f 'qt/macnotificationhandler.mm' || echo '$(srcdir)/'`qt/macnotificationhandler.mm
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-macnotificationhandler.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-macnotificationhandler.Po
#	$(AM_V_OBJCXX)source='qt/macnotificationhandler.mm' object='qt/qt_libbitcoinqt_a-macnotificationhandler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) \
#	$(AM_V_OBJCXX_no)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o qt/qt_libbitcoinqt_a-macnotificationhandler.o `test -f 'qt/macnotificationhandler.mm' || echo '$(srcdir)/'`qt/macnotificationhandler.mm

qt/qt_libbitcoinqt_a-macnotificationhandler.obj: qt/macnotificationhandler.mm
	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT qt/qt_libbitcoinqt_a-macnotificationhandler.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-macnotificationhandler.Tpo -c -o qt/qt_libbitcoinqt_a-macnotificationhandler.obj `if test -f 'qt/macnotificationhandler.mm'; then $(CYGPATH_W) 'qt/macnotificationhandler.mm'; else $(CYGPATH_W) '$(srcdir)/qt/macnotificationhandler.mm'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-macnotificationhandler.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-macnotificationhandler.Po
#	$(AM_V_OBJCXX)source='qt/macnotificationhandler.mm' object='qt/qt_libbitcoinqt_a-macnotificationhandler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) \
#	$(AM_V_OBJCXX_no)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o qt/qt_libbitcoinqt_a-macnotificationhandler.obj `if test -f 'qt/macnotificationhandler.mm'; then $(CYGPATH_W) 'qt/macnotificationhandler.mm'; else $(CYGPATH_W) '$(srcdir)/qt/macnotificationhandler.mm'; fi`

qt/qt_libbitcoinqt_a-macos_appnap.o: qt/macos_appnap.mm
	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT qt/qt_libbitcoinqt_a-macos_appnap.o -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-macos_appnap.Tpo -c -o qt/qt_libbitcoinqt_a-macos_appnap.o `test -f 'qt/macos_appnap.mm' || echo '$(srcdir)/'`qt/macos_appnap.mm
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-macos_appnap.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-macos_appnap.Po
#	$(AM_V_OBJCXX)source='qt/macos_appnap.mm' object='qt/qt_libbitcoinqt_a-macos_appnap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) \
#	$(AM_V_OBJCXX_no)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o qt/qt_libbitcoinqt_a-macos_appnap.o `test -f 'qt/macos_appnap.mm' || echo '$(srcdir)/'`qt/macos_appnap.mm

qt/qt_libbitcoinqt_a-macos_appnap.obj: qt/macos_appnap.mm
	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT qt/qt_libbitcoinqt_a-macos_appnap.obj -MD -MP -MF qt/$(DEPDIR)/qt_libbitcoinqt_a-macos_appnap.Tpo -c -o qt/qt_libbitcoinqt_a-macos_appnap.obj `if test -f 'qt/macos_appnap.mm'; then $(CYGPATH_W) 'qt/macos_appnap.mm'; else $(CYGPATH_W) '$(srcdir)/qt/macos_appnap.mm'; fi`
	$(AM_V_at)$(am__mv) qt/$(DEPDIR)/qt_libbitcoinqt_a-macos_appnap.Tpo qt/$(DEPDIR)/qt_libbitcoinqt_a-macos_appnap.Po
#	$(AM_V_OBJCXX)source='qt/macos_appnap.mm' object='qt/qt_libbitcoinqt_a-macos_appnap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) \
#	$(AM_V_OBJCXX_no)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qt_libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(qt_libbitcoinqt_a_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o qt/qt_libbitcoinqt_a-macos_appnap.obj `if test -f 'qt/macos_appnap.mm'; then $(CYGPATH_W) 'qt/macos_appnap.mm'; else $(CYGPATH_W) '$(srcdir)/qt/macos_appnap.mm'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf bench/.libs bench/_libs
	-rm -rf consensus/.libs consensus/_libs
	-rm -rf crc32c/.libs crc32c/_libs
	-rm -rf crc32c/src/.libs crc32c/src/_libs
	-rm -rf crypto/.libs crypto/_libs
	-rm -rf kernel/.libs kernel/_libs
	-rm -rf leveldb/.libs leveldb/_libs
	-rm -rf leveldb/db/.libs leveldb/db/_libs
	-rm -rf leveldb/helpers/memenv/.libs leveldb/helpers/memenv/_libs
	-rm -rf leveldb/table/.libs leveldb/table/_libs
	-rm -rf leveldb/util/.libs leveldb/util/_libs
	-rm -rf minisketch/.libs minisketch/_libs
	-rm -rf node/.libs node/_libs
	-rm -rf policy/.libs policy/_libs
	-rm -rf primitives/.libs primitives/_libs
	-rm -rf qt/.libs qt/_libs
	-rm -rf qt/test/.libs qt/test/_libs
	-rm -rf script/.libs script/_libs
	-rm -rf support/.libs support/_libs
	-rm -rf test/.libs test/_libs
	-rm -rf test/fuzz/.libs test/fuzz/_libs
	-rm -rf univalue/lib/.libs univalue/lib/_libs
	-rm -rf univalue/test/.libs univalue/test/_libs
	-rm -rf util/.libs util/_libs
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all 
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
minisketch/test.log: minisketch/test$(EXEEXT)
	@p='minisketch/test$(EXEEXT)'; \
	b='minisketch/test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
univalue/test/object.log: univalue/test/object$(EXEEXT)
	@p='univalue/test/object$(EXEEXT)'; \
	b='univalue/test/object'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
univalue/test/unitester.log: univalue/test/unitester$(EXEEXT)
	@p='univalue/test/unitester$(EXEEXT)'; \
	b='univalue/test/unitester'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
univalue/test/no_nul.log: univalue/test/no_nul$(EXEEXT)
	@p='univalue/test/no_nul$(EXEEXT)'; \
	b='univalue/test/no_nul'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
qt/test/test_bitcoin-qt.log: qt/test/test_bitcoin-qt$(EXEEXT)
	@p='qt/test/test_bitcoin-qt$(EXEEXT)'; \
	b='qt/test/test_bitcoin-qt'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.test$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
#check-local:
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS check-local
check: check-recursive
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(HEADERS)
install-binPROGRAMS: install-libLTLIBRARIES

installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f bench/$(DEPDIR)/$(am__dirstamp)
	-rm -f bench/$(am__dirstamp)
	-rm -f common/$(DEPDIR)/$(am__dirstamp)
	-rm -f common/$(am__dirstamp)
	-rm -f compat/$(DEPDIR)/$(am__dirstamp)
	-rm -f compat/$(am__dirstamp)
	-rm -f consensus/$(DEPDIR)/$(am__dirstamp)
	-rm -f consensus/$(am__dirstamp)
	-rm -f crc32c/$(am__dirstamp)
	-rm -f crc32c/src/$(DEPDIR)/$(am__dirstamp)
	-rm -f crc32c/src/$(am__dirstamp)
	-rm -f crypto/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto/$(am__dirstamp)
	-rm -f index/$(DEPDIR)/$(am__dirstamp)
	-rm -f index/$(am__dirstamp)
	-rm -f init/$(DEPDIR)/$(am__dirstamp)
	-rm -f init/$(am__dirstamp)
	-rm -f interfaces/$(DEPDIR)/$(am__dirstamp)
	-rm -f interfaces/$(am__dirstamp)
	-rm -f ipc/$(DEPDIR)/$(am__dirstamp)
	-rm -f ipc/$(am__dirstamp)
	-rm -f ipc/capnp/$(DEPDIR)/$(am__dirstamp)
	-rm -f ipc/capnp/$(am__dirstamp)
	-rm -f kernel/$(DEPDIR)/$(am__dirstamp)
	-rm -f kernel/$(am__dirstamp)
	-rm -f leveldb/$(am__dirstamp)
	-rm -f leveldb/db/$(DEPDIR)/$(am__dirstamp)
	-rm -f leveldb/db/$(am__dirstamp)
	-rm -f leveldb/helpers/memenv/$(DEPDIR)/$(am__dirstamp)
	-rm -f leveldb/helpers/memenv/$(am__dirstamp)
	-rm -f leveldb/table/$(DEPDIR)/$(am__dirstamp)
	-rm -f leveldb/table/$(am__dirstamp)
	-rm -f leveldb/util/$(DEPDIR)/$(am__dirstamp)
	-rm -f leveldb/util/$(am__dirstamp)
	-rm -f minisketch/$(am__dirstamp)
	-rm -f minisketch/src/$(DEPDIR)/$(am__dirstamp)
	-rm -f minisketch/src/$(am__dirstamp)
	-rm -f minisketch/src/fields/$(DEPDIR)/$(am__dirstamp)
	-rm -f minisketch/src/fields/$(am__dirstamp)
	-rm -f node/$(DEPDIR)/$(am__dirstamp)
	-rm -f node/$(am__dirstamp)
	-rm -f policy/$(DEPDIR)/$(am__dirstamp)
	-rm -f policy/$(am__dirstamp)
	-rm -f primitives/$(DEPDIR)/$(am__dirstamp)
	-rm -f primitives/$(am__dirstamp)
	-rm -f qt/$(DEPDIR)/$(am__dirstamp)
	-rm -f qt/$(am__dirstamp)
	-rm -f qt/res/$(DEPDIR)/$(am__dirstamp)
	-rm -f qt/res/$(am__dirstamp)
	-rm -f qt/test/$(DEPDIR)/$(am__dirstamp)
	-rm -f qt/test/$(am__dirstamp)
	-rm -f rpc/$(DEPDIR)/$(am__dirstamp)
	-rm -f rpc/$(am__dirstamp)
	-rm -f script/$(DEPDIR)/$(am__dirstamp)
	-rm -f script/$(am__dirstamp)
	-rm -f support/$(DEPDIR)/$(am__dirstamp)
	-rm -f support/$(am__dirstamp)
	-rm -f test/$(DEPDIR)/$(am__dirstamp)
	-rm -f test/$(am__dirstamp)
	-rm -f test/fuzz/$(DEPDIR)/$(am__dirstamp)
	-rm -f test/fuzz/$(am__dirstamp)
	-rm -f test/util/$(DEPDIR)/$(am__dirstamp)
	-rm -f test/util/$(am__dirstamp)
	-rm -f univalue/lib/$(DEPDIR)/$(am__dirstamp)
	-rm -f univalue/lib/$(am__dirstamp)
	-rm -f univalue/test/$(DEPDIR)/$(am__dirstamp)
	-rm -f univalue/test/$(am__dirstamp)
	-rm -f util/$(DEPDIR)/$(am__dirstamp)
	-rm -f util/$(am__dirstamp)
	-rm -f wallet/$(DEPDIR)/$(am__dirstamp)
	-rm -f wallet/$(am__dirstamp)
	-rm -f wallet/rpc/$(DEPDIR)/$(am__dirstamp)
	-rm -f wallet/rpc/$(am__dirstamp)
	-rm -f wallet/test/$(DEPDIR)/$(am__dirstamp)
	-rm -f wallet/test/$(am__dirstamp)
	-rm -f wallet/test/fuzz/$(DEPDIR)/$(am__dirstamp)
	-rm -f wallet/test/fuzz/$(am__dirstamp)
	-rm -f zmq/$(DEPDIR)/$(am__dirstamp)
	-rm -f zmq/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool clean-local clean-noinstLTLIBRARIES \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR) bench/$(DEPDIR) common/$(DEPDIR) compat/$(DEPDIR) consensus/$(DEPDIR) crc32c/src/$(DEPDIR) crypto/$(DEPDIR) index/$(DEPDIR) init/$(DEPDIR) interfaces/$(DEPDIR) ipc/$(DEPDIR) ipc/capnp/$(DEPDIR) kernel/$(DEPDIR) leveldb/db/$(DEPDIR) leveldb/helpers/memenv/$(DEPDIR) leveldb/table/$(DEPDIR) leveldb/util/$(DEPDIR) minisketch/src/$(DEPDIR) minisketch/src/fields/$(DEPDIR) node/$(DEPDIR) policy/$(DEPDIR) primitives/$(DEPDIR) qt/$(DEPDIR) qt/test/$(DEPDIR) rpc/$(DEPDIR) script/$(DEPDIR) support/$(DEPDIR) test/$(DEPDIR) test/fuzz/$(DEPDIR) test/util/$(DEPDIR) univalue/lib/$(DEPDIR) univalue/test/$(DEPDIR) util/$(DEPDIR) wallet/$(DEPDIR) wallet/rpc/$(DEPDIR) wallet/test/$(DEPDIR) wallet/test/fuzz/$(DEPDIR) zmq/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-includeHEADERS

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR) bench/$(DEPDIR) common/$(DEPDIR) compat/$(DEPDIR) consensus/$(DEPDIR) crc32c/src/$(DEPDIR) crypto/$(DEPDIR) index/$(DEPDIR) init/$(DEPDIR) interfaces/$(DEPDIR) ipc/$(DEPDIR) ipc/capnp/$(DEPDIR) kernel/$(DEPDIR) leveldb/db/$(DEPDIR) leveldb/helpers/memenv/$(DEPDIR) leveldb/table/$(DEPDIR) leveldb/util/$(DEPDIR) minisketch/src/$(DEPDIR) minisketch/src/fields/$(DEPDIR) node/$(DEPDIR) policy/$(DEPDIR) primitives/$(DEPDIR) qt/$(DEPDIR) qt/test/$(DEPDIR) rpc/$(DEPDIR) script/$(DEPDIR) support/$(DEPDIR) test/$(DEPDIR) test/fuzz/$(DEPDIR) test/util/$(DEPDIR) univalue/lib/$(DEPDIR) univalue/test/$(DEPDIR) util/$(DEPDIR) wallet/$(DEPDIR) wallet/rpc/$(DEPDIR) wallet/test/$(DEPDIR) wallet/test/fuzz/$(DEPDIR) zmq/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-includeHEADERS \
	uninstall-libLTLIBRARIES

.MAKE: $(am__recursive_targets) check-am install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am check \
	check-TESTS check-am check-local clean clean-binPROGRAMS \
	clean-generic clean-libLTLIBRARIES clean-libtool clean-local \
	clean-noinstLTLIBRARIES clean-noinstPROGRAMS cscopelist-am \
	ctags ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-includeHEADERS install-info install-info-am \
	install-libLTLIBRARIES install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	recheck tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-includeHEADERS \
	uninstall-libLTLIBRARIES

.PRECIOUS: Makefile


# Pattern rule to print variables, e.g. make print-top_srcdir
print-%: FORCE
	@echo '$*'='$($*)'

$(LIBSECP256K1): $(wildcard secp256k1/src/*.h) $(wildcard secp256k1/src/*.c) $(wildcard secp256k1/include/*)
	$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C $(@D) $(@F)

.PHONY: FORCE check-symbols check-security

obj/build.h: FORCE
	@$(MKDIR_P) $(builddir)/obj
	@$(top_srcdir)/share/genbuild.sh "$(abs_top_builddir)/src/obj/build.h" \
	  "$(abs_top_srcdir)"
libbitcoin_util_a-clientversion.$(OBJEXT): obj/build.h

# Required for obj/build.h to be generated first.
# More details: https://www.gnu.org/software/automake/manual/html_node/Built-Sources-Example.html
#libbitcoinkernel_la-clientversion.l$(OBJEXT): obj/build.h

config/bitcoin-config.h: config/stamp-h1
	@$(MAKE) -C $(top_builddir) $(subdir)/$(@)
config/stamp-h1: $(top_srcdir)/$(subdir)/config/bitcoin-config.h.in $(top_builddir)/config.status
	$(AM_V_at)$(MAKE) -C $(top_builddir) $(subdir)/$(@)
$(top_srcdir)/$(subdir)/config/bitcoin-config.h.in:  $(am__configure_deps)
	$(AM_V_at)$(MAKE) -C $(top_srcdir) $(subdir)/config/bitcoin-config.h.in

clean-local:
	-$(MAKE) -C secp256k1 clean
	-rm -f leveldb/*/*.gcda leveldb/*/*.gcno leveldb/helpers/memenv/*.gcda leveldb/helpers/memenv/*.gcno
	-rm -f config.h
	-rm -rf test/__pycache__

.rc.o:
	@test -f $(WINDRES)
	$(AM_V_GEN) $(WINDRES) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(CPPFLAGS) -DWINDRES_PREPROC -i $< -o $@

check-symbols: $(bin_PROGRAMS)
	@echo "Running symbol and dynamic library checks..."
	$(AM_V_at) $(PYTHON) $(top_srcdir)/contrib/devtools/symbol-check.py $(bin_PROGRAMS)

check-security: $(bin_PROGRAMS)
	@echo "Checking binary security..."
	$(AM_V_at) $(PYTHON) $(top_srcdir)/contrib/devtools/security-check.py $(bin_PROGRAMS)
%.capnp:

# Explicitly list dependencies on generated headers as described in
# https://www.gnu.org/software/automake/manual/html_node/Built-Sources-Example.html#Recording-Dependencies-manually
ipc/capnp/libbitcoin_ipc_a-protocol.$(OBJEXT): $(libbitcoin_ipc_mpgen_input:=.h)

#include $(MPGEN_PREFIX)/include/mpgen.mk

$(BITCOIN_TESTS): $(GENERATED_TEST_FILES)

#bitcoin_test: $(TEST_BINARY)
bitcoin_test: $(TEST_BINARY) $(BENCH_BINARY)
#bitcoin_test: $(TEST_BINARY)

bitcoin_test_check: $(TEST_BINARY) FORCE
	$(MAKE) check-TESTS TESTS=$^

bitcoin_test_clean : FORCE
	rm -f $(CLEAN_BITCOIN_TEST) $(test_test_bitcoin_OBJECTS) $(TEST_BINARY)

check-local: $(BITCOIN_TESTS:.cpp=.cpp.test)
	@echo "Running test/util/test_runner.py..."
	$(PYTHON) $(top_builddir)/test/util/test_runner.py
	@echo "Running test/util/rpcauth-test.py..."
	$(PYTHON) $(top_builddir)/test/util/rpcauth-test.py
	@echo "Running bench/bench_bitcoin (one iteration sanity check)..."
	$(BENCH_BINARY) --sanity-check > /dev/null
	$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C secp256k1 check

%.cpp.test: %.cpp
	@echo Running tests: $$(\
	  cat $< | \
	  grep -E "(BOOST_FIXTURE_TEST_SUITE\\(|BOOST_AUTO_TEST_SUITE\\()" | \
	  cut -d '(' -f 2 | cut -d ',' -f 1 | cut -d ')' -f 1\
	) from $<
	$(AM_V_at)export TEST_LOGFILE=$(abs_builddir)/$$(\
	  echo $< | grep -E -o "(wallet/test/.*\.cpp|test/.*\.cpp)" | $(SED) -e s/\.cpp/.log/ \
	) && \
	$(TEST_BINARY) --catch_system_errors=no -l test_suite -t "$$(\
	  cat $< | \
	  grep -E "(BOOST_FIXTURE_TEST_SUITE\\(|BOOST_AUTO_TEST_SUITE\\()" | \
	  cut -d '(' -f 2 | cut -d ',' -f 1 | cut -d ')' -f 1\
	)" -- DEBUG_LOG_OUT > "$$TEST_LOGFILE" 2>&1 || (cat "$$TEST_LOGFILE" && false)

%.json.h: %.json
	@$(MKDIR_P) $(@D)
	@{ \
	 echo "namespace json_tests{" && \
	 echo "static unsigned const char $(*F)[] = {" && \
	 $(HEXDUMP) -v -e '8/1 "0x%02x, "' -e '"\n"' $< | $(SED) -e 's/0x  ,//g' && \
	 echo "};};"; \
	} > "$@.new" && mv -f "$@.new" "$@"
	@echo "Generated $@"

%.raw.h: %.raw
	@$(MKDIR_P) $(@D)
	@{ \
	 echo "static unsigned const char $(*F)_raw[] = {" && \
	 $(HEXDUMP) -v -e '8/1 "0x%02x, "' -e '"\n"' $< | $(SED) -e 's/0x  ,//g' && \
	 echo "};"; \
	} > "$@.new" && mv -f "$@.new" "$@"
	@echo "Generated $@"

bench/data.cpp: bench/data/block413567.raw.h

bitcoin_bench: $(BENCH_BINARY)

bench: $(BENCH_BINARY) FORCE
	$(BENCH_BINARY)

bitcoin_bench_clean : FORCE
	rm -f $(CLEAN_BITCOIN_BENCH) $(bench_bench_bitcoin_OBJECTS) $(BENCH_BINARY)

%.raw.h: %.raw
	@$(MKDIR_P) $(@D)
	@{ \
	 echo "static unsigned const char $(*F)_raw[] = {" && \
	 $(HEXDUMP) -v -e '8/1 "0x%02x, "' -e '"\n"' $< | $(SED) -e 's/0x  ,//g' && \
	 echo "};"; \
	} > "$@.new" && mv -f "$@.new" "$@"
	@echo "Generated $@"

# Most files will depend on the forms and moc files as includes. Generate them
# before anything else.
#$(QT_MOC): $(QT_FORMS_H)
#$(qt_libbitcoinqt_a_OBJECTS) $(qt_bitcoin_qt_OBJECTS) $(bitcoin_gui_OBJECTS) : | $(QT_MOC)

#SECONDARY: $(QT_QM)

#$(srcdir)/qt/bitcoinstrings.cpp: FORCE
#	@test -n $(XGETTEXT) || echo "xgettext is required for updating translations"
#	$(AM_V_GEN) cd $(srcdir); XGETTEXT=$(XGETTEXT) COPYRIGHT_HOLDERS="$(COPYRIGHT_HOLDERS)" $(PYTHON) ../share/qt/extract_strings_qt.py $(libbitcoin_node_a_SOURCES) $(libbitcoin_wallet_a_SOURCES) $(libbitcoin_common_a_SOURCES) $(libbitcoin_zmq_a_SOURCES) $(libbitcoin_consensus_a_SOURCES) $(libbitcoin_util_a_SOURCES)

# The resulted bitcoin_en.xlf source file should follow Transifex requirements.
# See: https://docs.transifex.com/formats/xliff#how-to-distinguish-between-a-source-file-and-a-translation-file
#translate: $(srcdir)/qt/bitcoinstrings.cpp $(QT_FORMS_UI) $(QT_FORMS_UI) $(BITCOIN_QT_BASE_CPP) qt/bitcoin.cpp $(BITCOIN_QT_WINDOWS_CPP) $(BITCOIN_QT_WALLET_CPP) $(BITCOIN_QT_H) $(BITCOIN_MM)
#	@test -n $(LUPDATE) || echo "lupdate is required for updating translations"
#	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(LUPDATE) -no-obsolete -I $(srcdir) -locations relative $^ -ts $(srcdir)/qt/locale/bitcoin_en.ts
#	@test -n $(LCONVERT) || echo "lconvert is required for updating translations"
#	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(LCONVERT) -drop-translations -o $(srcdir)/qt/locale/bitcoin_en.xlf -i $(srcdir)/qt/locale/bitcoin_en.ts
#	@$(SED) -i.old -e 's|source-language="en" target-language="en"|source-language="en"|' -e '/<target xml:space="preserve"><\/target>/d' $(srcdir)/qt/locale/bitcoin_en.xlf
#	@rm -f $(srcdir)/qt/locale/bitcoin_en.xlf.old

#$(QT_QRC_LOCALE_CPP): $(QT_QRC_LOCALE) $(QT_QM)
#	@test -f $(RCC)
#	@cp -f $< $(@D)/temp_$(<F)
#	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(RCC) -name bitcoin_locale --format-version 1 $(@D)/temp_$(<F) > $@
#	@rm $(@D)/temp_$(<F)

#$(QT_QRC_CPP): $(QT_QRC) $(QT_FORMS_H) $(QT_RES_FONTS) $(QT_RES_ICONS) $(QT_RES_ANIMATION)
#	@test -f $(RCC)
#	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(RCC) -name bitcoin --format-version 1 $< > $@

#bitcoin_qt_clean: FORCE
#	rm -f $(CLEAN_QT) $(qt_libbitcoinqt_a_OBJECTS) $(qt_bitcoin_qt_OBJECTS) qt/bitcoin-qt$(EXEEXT) $(LIBBITCOINQT)

#bitcoin_qt : qt/bitcoin-qt$(EXEEXT)

#bitcoin_qt_apk: FORCE
#	mkdir -p $(APK_LIB_DIR)
#	cp $(dir $(lastword $(CC)))../sysroot/usr/lib/$(host_alias)/libc++_shared.so $(APK_LIB_DIR)
#	tar xf $(QT_BASE_PATH) -C qt/android/src/ $(QT_BASE_TLD)src/android/jar/src --strip-components=5
#	tar xf $(QT_BASE_PATH) -C qt/android/src/ $(QT_BASE_TLD)src/android/java/src --strip-components=5
#	cp qt/bitcoin-qt $(APK_LIB_DIR)/libbitcoin-qt_$(ANDROID_ARCH).so
#	cd qt/android && gradle wrapper --gradle-version=6.6.1
#	cd qt/android && ./gradlew build

#ui_%.h: %.ui
#	@test -f $(UIC)
#	@$(MKDIR_P) $(@D)
#	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(UIC) -o $@ $< || (echo "Error creating $@"; false)

#%.moc: %.cpp
#	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(MOC) $(DEFAULT_INCLUDES) $(QT_INCLUDES_UNSUPPRESSED) $(MOC_DEFS) $< > $@

#moc_%.cpp: %.h
#	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(MOC) $(DEFAULT_INCLUDES) $(QT_INCLUDES_UNSUPPRESSED) $(MOC_DEFS) $< > $@

#%.qm: %.ts
#	@test -f $(LRELEASE)
#	@$(MKDIR_P) $(@D)
#	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(LRELEASE) -silent $< -qm $@

#test_bitcoin_qt : qt/test/test_bitcoin-qt$(EXEEXT)

#test_bitcoin_qt_check : qt/test/test_bitcoin-qt$(EXEEXT) FORCE
#	$(MAKE) check-TESTS TESTS=$^

#test_bitcoin_qt_clean: FORCE
#	rm -f $(CLEAN_BITCOIN_QT_TEST) $(qt_test_test_bitcoin_qt_OBJECTS)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
